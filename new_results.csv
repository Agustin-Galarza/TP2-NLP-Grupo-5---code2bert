,Unnamed: 0,method_str,masked_method,method_name,prediction,prediction_scores,prediction_weighted_score,c2v_pred,c2v_prediction_scores,c2v_prediction_weighted_score
0,0,"protected static long getCPtr(SWIGTYPE_p_p_btSoftBody obj) {return (obj == null) ? 0 : obj.swigCPtr;}protected static long getCPtr(SWIGTYPE_p_PHY_ScalarType obj) {return (obj == null) ? 0 : obj.swigCPtr;}public MeasuredDimension calcMeasures(int widthMeasureSpec, int heightMeasureSpec) {return new MeasuredDimension(width, height);}public boolean isDone() {return future.isDone();}
","protected static long [MASK](SWIGTYPE_p_p_btSoftBody obj) {return (obj == null) ? 0 : obj.swigCPtr;}protected static long [MASK](SWIGTYPE_p_PHY_ScalarType obj) {return (obj == null) ? 0 : obj.swigCPtr;}public MeasuredDimension calcMeasures(int widthMeasureSpec, int heightMeasureSpec) {return new MeasuredDimension(width, height);}public boolean isDone() {return future.isDone();}
",getCPtr,"[{'value': ['get'], 'probability': 0.2620081305503845}, {'value': ['read'], 'probability': 0.04808776453137398}, {'value': ['compare'], 'probability': 0.03511582687497139}, {'value': ['evaluate'], 'probability': 0.027507711201906204}, {'value': ['from'], 'probability': 0.023317234590649605}]","[1.0, 0.5726487, 0.46117607, 0.40115592, 0.61345124]",0.3310789732307799,"[{'value': ['get', 'C', 'Ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'Flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'Type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'Id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'Base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'First'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'Count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'Top'], 'probability': 3.1842023462402835e-10}]","[1.0, 0.43109724, 1.0, 1.0, 1.0, 1.0, 1.0, 0.30686238, 1.0, 1.0]",1.0000000235594908
1,1,"public T get() {try {return future.get();} catch (InterruptedException ex) {return null;} catch (ExecutionException ex) {throw new GdxRuntimeException(ex.getCause());}}protected void begin() {value = start;}
","public T [MASK]() {try {return future.[MASK]();} catch (InterruptedException ex) {return null;} catch (ExecutionException ex) {throw new GdxRuntimeException(ex.[MASK]Cause());}}protected void begin() {value = start;}
",get,"[{'value': ['execute'], 'probability': 0.12403872609138489}, {'value': ['get'], 'probability': 0.08103445917367935}, {'value': ['value'], 'probability': 0.06842997670173645}, {'value': ['create'], 'probability': 0.06592228263616562}, {'value': ['jump'], 'probability': 0.03748412802815437}]","[0.37713256, 1.0, 0.46303764, 0.62328804, 0.526757]",0.2203327539153274,"[{'value': ['poll'], 'probability': 0.7497926354408264}, {'value': ['wrap'], 'probability': 0.12406522035598755}, {'value': ['get', 'next'], 'probability': 0.03468378260731697}, {'value': ['unwrap'], 'probability': 0.02656671591103077}, {'value': ['get', 'result'], 'probability': 0.013429784215986729}, {'value': ['get', 'first'], 'probability': 0.011927759274840355}, {'value': ['try', 'get'], 'probability': 0.011188051663339138}, {'value': ['get', 'value'], 'probability': 0.009943156503140926}, {'value': ['get', 'work'], 'probability': 0.00938088446855545}, {'value': ['close', 'result', 'set'], 'probability': 0.009022068232297897}]","[0.29275376, 0.40682167, 0.926832, 0.10443802, 0.90688056, 0.8991456, 0.9404054, 0.8500731, 0.91827714, 0.7149607]",0.36184004074057274
2,2,"protected void update(float percent) {value = (int) (start + (end - start) * percent);}
","protected void [MASK](float percent) {value = (int) (start + (end - start) * percent);}
",update,"[{'value': ['value'], 'probability': 0.47595396637916565}, {'value': ['write'], 'probability': 0.049470122903585434}, {'value': ['evaluate'], 'probability': 0.04757155105471611}, {'value': ['count'], 'probability': 0.029781414195895195}, {'value': ['set'], 'probability': 0.02490827813744545}]","[0.21691036, 0.33396447, 0.4158154, 0.19306125, 0.41854778]",0.1557165361148914,"[{'value': ['interpolate'], 'probability': 0.7209624648094177}, {'value': ['put'], 'probability': 0.1216229796409607}, {'value': ['progress'], 'probability': 0.044738754630088806}, {'value': ['start'], 'probability': 0.0425480455160141}, {'value': ['record'], 'probability': 0.013403168879449368}, {'value': ['characters'], 'probability': 0.013374438509345055}, {'value': ['loop'], 'probability': 0.012487015686929226}, {'value': ['insert'], 'probability': 0.011477814987301826}, {'value': ['percent'], 'probability': 0.010257472284138203}, {'value': ['value', 'at'], 'probability': 0.009127848781645298}]","[-0.039974824, 0.37657535, 0.37319824, 0.46057966, 0.31287798, 0.2183198, 0.05837605, 0.41835332, 0.20990627, 0.2989479]",0.07079910208517645
3,3,"public int getValue() {return value;}
","public int [MASK]() {return value;}
",getValue,"[{'value': ['value'], 'probability': 0.908780038356781}, {'value': ['get'], 'probability': 0.016908731311559677}, {'value': ['size'], 'probability': 0.00411969842389226}, {'value': ['id'], 'probability': 0.0030949863139539957}, {'value': ['bar'], 'probability': 0.0022595126647502184}]","[0.46303764, 1.0, 0.43109724, 0.2945777, 0.45318797]",0.4414197839135742,"[{'value': ['get', 'value'], 'probability': 0.4773022532463074}, {'value': ['value'], 'probability': 0.29334428906440735}, {'value': ['int', 'value'], 'probability': 0.13668601214885712}, {'value': ['get', 'number'], 'probability': 0.04621019586920738}, {'value': ['hash', 'code'], 'probability': 0.018621953204274178}, {'value': ['get'], 'probability': 0.017651773989200592}, {'value': ['get', 'rgb'], 'probability': 0.005849177949130535}, {'value': ['long', 'value'], 'probability': 0.0022144033573567867}, {'value': ['get', 'int', 'value'], 'probability': 0.0014023067196831107}, {'value': ['to', 'integer'], 'probability': 0.0007176483049988747}]","[0.8500731, 0.46303764, 0.33695218, 0.87729096, 0.33598104, 1.0, 0.6617862, 0.65947056, 0.733044, 0.56183666]",0.6588384801524667
4,4,"public void setValue(int value) {this.value = value;}
","public void [MASK](int value) {this.value = value;}
",setValue,"[{'value': ['set'], 'probability': 0.2497398555278778}, {'value': ['put'], 'probability': 0.24624180793762207}, {'value': ['value'], 'probability': 0.08183981478214264}, {'value': ['evaluate'], 'probability': 0.055905312299728394}, {'value': ['convert'], 'probability': 0.011845052242279053}]","[1.0, 0.7944568, 0.47274652, 0.31490386, 0.43720448]",0.5068413253739323,"[{'value': ['set', 'value'], 'probability': 0.9680300951004028}, {'value': ['set'], 'probability': 0.029266733676195145}, {'value': ['set', 'max', 'mortgage', 'day', 'lates', 'x'], 'probability': 0.0005482255364768207}, {'value': ['set', 'result'], 'probability': 0.0005215473938733339}, {'value': ['update', 'value'], 'probability': 0.0004220196860842407}, {'value': ['set', 'int'], 'probability': 0.0003667882119771093}, {'value': ['set', 'int', 'value'], 'probability': 0.0003417368570808321}, {'value': ['set', 'id'], 'probability': 0.00024248605768661946}, {'value': ['set', 'integer', 'value'], 'probability': 0.00014445077977143228}, {'value': ['set', 'property'], 'probability': 0.00011588012421270832}]","[0.8399167, 1.0, 0.7749108, 0.903226, 0.5728249, 0.67937934, 0.72021157, 0.7939222, 0.69468284, 0.84050834]",0.8443545930184198
5,5,"public int getStart() {return start;}
","public int [MASK]() {return start;}
",getStart,"[{'value': ['start'], 'probability': 0.9470076560974121}, {'value': ['end'], 'probability': 0.019167937338352203}, {'value': ['finish'], 'probability': 0.0064689782448112965}, {'value': ['stop'], 'probability': 0.0051628039218485355}, {'value': ['get'], 'probability': 0.0017052257899194956}]","[0.7199945, 0.66437757, 0.52801555, 0.6723754, 1.0]",0.703167326810116,"[{'value': ['get', 'start'], 'probability': 0.9463371634483337}, {'value': ['start'], 'probability': 0.02626008167862892}, {'value': ['get', 'start', 'index'], 'probability': 0.00754346139729023}, {'value': ['set', 'caps'], 'probability': 0.006745459046214819}, {'value': ['get', 'begin', 'index'], 'probability': 0.006602548994123936}, {'value': ['get', 'offset'], 'probability': 0.001981828361749649}, {'value': ['start', 'offset'], 'probability': 0.0018902948359027505}, {'value': ['get', 'start', 'position'], 'probability': 0.0012661124346777797}, {'value': ['get', 'start', 'offset'], 'probability': 0.0009183806832879782}, {'value': ['get', 'range', 'start'], 'probability': 0.00045466001029126346}]","[0.93239695, 0.7199945, 0.7894199, 0.5602151, 0.77575195, 0.8314387, 0.63700384, 0.88125086, 0.8619249, 0.85775924]",0.9212740266035533
6,6,"public void setStart(int start) {this.start = start;}
","public void [MASK](int start) {this.start = start;}
",setStart,"[{'value': ['start'], 'probability': 0.4886297583580017}, {'value': ['run'], 'probability': 0.06630699336528778}, {'value': ['apply'], 'probability': 0.03216356411576271}, {'value': ['update'], 'probability': 0.020519880577921867}, {'value': ['execute'], 'probability': 0.0204013604670763}]","[0.71166486, 0.67632943, 0.5010617, 0.41854778, 0.35167885]",0.4244652044568286,"[{'value': ['set', 'start'], 'probability': 0.9984354376792908}, {'value': ['set', 'start', 'index'], 'probability': 0.0005864756531082094}, {'value': ['start'], 'probability': 0.0004442514618858695}, {'value': ['set', 'caps'], 'probability': 0.00012471828085836023}, {'value': ['set', 'begin'], 'probability': 0.00011986298341071233}, {'value': ['set', 'int'], 'probability': 9.761375986272469e-05}, {'value': ['set', 'offset'], 'probability': 5.8515521232038736e-05}, {'value': ['set', 'selection'], 'probability': 5.819912985316478e-05}, {'value': ['set', 'start', 'time'], 'probability': 4.531437298282981e-05}, {'value': ['get', 'text', 'range'], 'probability': 2.9703782274737023e-05}]","[0.9239763, 0.8127695, 0.71166486, 0.8324062, 0.9044586, 0.67937934, 0.8107425, 0.866252, 0.8990876, 0.70852184]",0.9237616968236451
7,7,"public int getEnd() {return end;}
","public int [MASK]() {return end;}
",getEnd,"[{'value': ['start'], 'probability': 0.5210567116737366}, {'value': ['end'], 'probability': 0.4609813392162323}, {'value': ['begin'], 'probability': 0.005176663398742676}, {'value': ['finish'], 'probability': 0.0014217575080692768}, {'value': ['close'], 'probability': 0.0008854892803356051}]","[0.7199945, 0.66437757, 0.6044154, 0.52801555, 0.6033417]",0.6858374388585448,"[{'value': ['get', 'end'], 'probability': 0.9914856553077698}, {'value': ['end'], 'probability': 0.004507347941398621}, {'value': ['get', 'end', 'index'], 'probability': 0.003587448736652732}, {'value': ['get', 'end', 'position'], 'probability': 0.00012621015775948763}, {'value': ['get', 'length'], 'probability': 0.00010971919255098328}, {'value': ['get', 'end', 'offset'], 'probability': 6.44179672235623e-05}, {'value': ['get', 'range', 'end'], 'probability': 3.523338818922639e-05}, {'value': ['set', 'end'], 'probability': 3.412157093407586e-05}, {'value': ['get', 'buffer', 'end'], 'probability': 2.7486777980811894e-05}, {'value': ['length'], 'probability': 2.238972592749633e-05}]","[0.9180042, 0.66437757, 0.7698885, 0.8603206, 0.8075286, 0.8421542, 0.8346342, 0.70954156, 0.80727166, 0.3304365]",0.9162791500006756
8,8,"public void setEnd(int end) {this.end = end;}public Dependency getDependency(ProjectDependency gdx) {return gdxDependencies.get(gdx);}
","public void [MASK](int end) {this.end = end;}public Dependency getDependency(ProjectDependency gdx) {return gdxDependencies.get(gdx);}
",setEnd,"[{'value': ['start'], 'probability': 0.3936963677406311}, {'value': ['end'], 'probability': 0.0641915574669838}, {'value': ['visit'], 'probability': 0.051939357072114944}, {'value': ['set'], 'probability': 0.04554720222949982}, {'value': ['add'], 'probability': 0.04418507590889931}]","[0.71166486, 0.7168061, 0.46053246, 1.0, 0.5084879]",0.4181273070175056,"[{'value': ['set', 'end'], 'probability': 0.9997044205665588}, {'value': ['set', 'end', 'index'], 'probability': 0.00016934075392782688}, {'value': ['set', 'end', 'time'], 'probability': 5.726951712858863e-05}, {'value': ['end'], 'probability': 4.766782876686193e-05}, {'value': ['get', 'end'], 'probability': 5.911368134547956e-06}, {'value': ['set', 'source', 'range', 'end'], 'probability': 4.8927945499599446e-06}, {'value': ['set', 'end', 'offset'], 'probability': 3.615842388171586e-06}, {'value': ['update', 'end'], 'probability': 2.515608684916515e-06}, {'value': ['set', 'last', 'token'], 'probability': 2.480502871549106e-06}, {'value': ['m', 'end'], 'probability': 1.7597185433260165e-06}]","[0.92506, 0.80852246, 0.90195376, 0.7168061, 0.7480624, 0.83574903, 0.8427696, 0.6851584, 0.86777383, 0.6452853]",0.9250258803079694
9,9,"public String[] getDependencies(ProjectType type) {switch(type) {case CORE:return coreDependencies;case DESKTOP:return desktopDependencies;case ANDROID:return androidDependencies;case IOS:return iosDependencies;case HTML:return gwtDependencies;}return null;}
","public String[] [MASK](ProjectType type) {switch(type) {case CORE:return coreDependencies;case DESKTOP:return desktopDependencies;case ANDROID:return androidDependencies;case IOS:return iosDependencies;case HTML:return gwtDependencies;}return null;}
",getDependencies,"[{'value': ['get'], 'probability': 0.23822756111621857}, {'value': ['evaluate'], 'probability': 0.11208432167768478}, {'value': ['matches'], 'probability': 0.07375098019838333}, {'value': ['select'], 'probability': 0.06681642681360245}, {'value': ['replace'], 'probability': 0.03622547164559364}]","[1.0, 0.40115592, 0.38072872, 0.4448134, 0.4901826]",0.3587479047762695,"[{'value': ['get', 'keywords'], 'probability': 0.610404908657074}, {'value': ['get', 'attributes'], 'probability': 0.059787943959236145}, {'value': ['get', 'elements'], 'probability': 0.05681983381509781}, {'value': ['get', 'fields'], 'probability': 0.05319683626294136}, {'value': ['get', 'create', 'sql'], 'probability': 0.047900743782520294}, {'value': ['values'], 'probability': 0.03585277497768402}, {'value': ['get', 'scope'], 'probability': 0.035604484379291534}, {'value': ['get', 'classes'], 'probability': 0.03425111249089241}, {'value': ['get', 'resources'], 'probability': 0.03354842588305473}, {'value': ['get', 'code', 'table'], 'probability': 0.03263289853930473}]","[0.7609473, 0.84504366, 0.82784235, 0.84604967, 0.7477256, 0.37543342, 0.82109416, 0.8408351, 0.8492868, 0.8151707]",0.7694591527641431
10,10,"public String[] getGwtInherits() {return gwtInherits;}
","public String[] [MASK]() {return gwtInherits;}
",getGwtInherits,"[{'value': ['names'], 'probability': 0.16594038903713226}, {'value': ['flags'], 'probability': 0.13050635159015656}, {'value': ['values'], 'probability': 0.07195830345153809}, {'value': ['types'], 'probability': 0.048959024250507355}, {'value': ['strings'], 'probability': 0.04149312898516655}]","[0.4415013, 0.19713469, 0.37543342, 0.4178858, 0.2876249]",0.1583995147439274,"[{'value': ['get', 'class', 'names'], 'probability': 0.2933572828769684}, {'value': ['get', 'identifier', 'column', 'readers'], 'probability': 0.21585021913051605}, {'value': ['get', 'provided', 'tool', 'class', 'names'], 'probability': 0.18412955105304718}, {'value': ['get', 'auth', 'that', 'can', 'continue'], 'probability': 0.0645977184176445}, {'value': ['get', 'tetherable', 'wifi', 'regexs'], 'probability': 0.05891232565045357}, {'value': ['get', 'suffixed', 'key', 'aliases'], 'probability': 0.049033571034669876}, {'value': ['get', 'style', 'names'], 'probability': 0.03596755489706993}, {'value': ['get', 'constraint', 'ordered', 'table', 'name', 'closure'], 'probability': 0.035246796905994415}, {'value': ['get', 'tetherable', 'usb', 'regexs'], 'probability': 0.03196391835808754}, {'value': ['get', 'event', 'types'], 'probability': 0.030941074714064598}]","[0.80750656, 0.68522584, 0.7884136, 0.88200706, 0.7894057, 0.6525525, 0.78496, 0.7558509, 0.71972233, 0.8123146]",0.7684561165945714
11,11,"public String getDescription() {return description;}
","public String [MASK]() {return description;}
",getDescription,"[{'value': ['description'], 'probability': 0.9681587815284729}, {'value': ['name'], 'probability': 0.026765519753098488}, {'value': ['title'], 'probability': 0.0007583313272334635}, {'value': ['list'], 'probability': 0.00042854223283939064}, {'value': ['map'], 'probability': 0.00035257512354291975}]","[0.23564427, 0.47842693, 0.42729196, 0.48067126, 0.3094913]",0.2415855467351792,"[{'value': ['get', 'description'], 'probability': 0.9821972846984863}, {'value': ['to', 'string'], 'probability': 0.011252562515437603}, {'value': ['description'], 'probability': 0.005457733757793903}, {'value': ['get', 'error', 'description'], 'probability': 0.00034481342299841344}, {'value': ['get', 'html'], 'probability': 0.00019622176478151232}, {'value': ['get', 'description', 'text'], 'probability': 0.00012711473391391337}, {'value': ['get', 'display', 'string'], 'probability': 0.00011145376629428938}, {'value': ['get', 'description', 'key'], 'probability': 0.00010922147339442745}, {'value': ['get', 'short', 'description'], 'probability': 0.0001031573410728015}, {'value': ['get', 'intro'], 'probability': 0.00010033799480879679}]","[0.83459765, 0.68798715, 0.23564427, 0.7316991, 0.73298925, 0.699536, 0.7612885, 0.79745066, 0.80362916, 0.7628684]",0.8295836893356391
12,12,"public String getName() {return name;}
","public String [MASK]() {return name;}
",getName,"[{'value': ['name'], 'probability': 0.9740855097770691}, {'value': ['list'], 'probability': 0.0036524059250950813}, {'value': ['surname'], 'probability': 0.002260396024212241}, {'value': ['prefix'], 'probability': 0.0016791254747658968}, {'value': ['get'], 'probability': 0.001421497785486281}]","[0.47842693, 0.48067126, 0.06407201, 0.0271194, 1.0]",0.469396212533847,"[{'value': ['get', 'name'], 'probability': 0.9179965853691101}, {'value': ['to', 'string'], 'probability': 0.06141401827335358}, {'value': ['name'], 'probability': 0.012421664781868458}, {'value': ['get', 'column', 'name'], 'probability': 0.0030693248845636845}, {'value': ['get', 'local', 'name'], 'probability': 0.0022374193649739027}, {'value': ['get', 'file', 'name'], 'probability': 0.0010244277073070407}, {'value': ['get', 'display', 'name'], 'probability': 0.0006261257803998888}, {'value': ['get', 'type', 'name'], 'probability': 0.00041565782157704234}, {'value': ['get', 'key'], 'probability': 0.0004122335813008249}, {'value': ['get', 'schema', 'name'], 'probability': 0.0003825368476100266}]","[0.8655689, 0.68798715, 0.47842693, 0.79067624, 0.8137634, 0.80497193, 0.7985469, 0.7920693, 0.8779331, 0.70018774]",0.8493153984656109
13,13,"public String[] getPlugins() {return plugins;}public void addBody(Body argBody) {bodies.add(argBody);if (bodies.size() == 1) {bodyA = argBody;}if (bodies.size() == 2) {bodyB = argBody;}}
","public String[] [MASK]() {return plugins;}public void addBody(Body argBody) {bodies.add(argBody);if (bodies.size() == 1) {bodyA = argBody;}if (bodies.size() == 2) {bodyB = argBody;}}
",getPlugins,"[{'value': ['modules'], 'probability': 0.13222113251686096}, {'value': ['names'], 'probability': 0.1309189647436142}, {'value': ['extensions'], 'probability': 0.0456995889544487}, {'value': ['components'], 'probability': 0.044739581644535065}, {'value': ['children'], 'probability': 0.03564617410302162}]","[0.10614328, 0.4415013, 0.24971965, 0.27293554, 0.60009927]",0.1168496266637342,"[{'value': ['get', 'plugins'], 'probability': 0.9511842727661133}, {'value': ['get', 'plugins', 'path'], 'probability': 0.01896878331899643}, {'value': ['get', 'plugin'], 'probability': 0.016613202169537544}, {'value': ['get', 'all', 'plugins'], 'probability': 0.007828878238797188}, {'value': ['set', 'plugins'], 'probability': 0.002907403977587819}, {'value': ['get', 'plugin', 'list'], 'probability': 0.0008215739508159459}, {'value': ['get', 'commands'], 'probability': 0.0004895167658105493}, {'value': ['get', 'plugin', 'directory'], 'probability': 0.00044052163138985634}, {'value': ['get', 'importers'], 'probability': 0.00037469249218702316}, {'value': ['plugins'], 'probability': 0.0003712019824888557}]","[0.7242961, 0.7369785, 0.727987, 0.83072674, 0.43290964, 0.7530709, 0.8306749, 0.6091109, 0.78265435, -0.030613348]",0.7243506917631963
14,14,"public void addBodyAndJoint(Body argBody, DistanceJoint argJoint) {addBody(argBody);if (joints == null) {joints = new ArrayList<DistanceJoint>();}joints.add(argJoint);}public Vector2 getLocalAnchorA() {Vec2 localAnchor = joint.getLocalAnchorA();localAnchorA.set(localAnchor.x, localAnchor.y);return localAnchorA;}
","public void [MASK](Body argBody, DistanceJoint argJoint) {addBody(argBody);if (joints == null) {joints = new ArrayList<DistanceJoint>();}joints.add(argJoint);}public Vector2 getLocalAnchorA() {Vec2 localAnchor = joint.getLocalAnchorA();localAnchorA.set(localAnchor.x, localAnchor.y);return localAnchorA;}
",addBodyAndJoint,"[{'value': ['add'], 'probability': 0.7511451244354248}, {'value': ['apply'], 'probability': 0.033758796751499176}, {'value': ['insert'], 'probability': 0.02153845876455307}, {'value': ['fill'], 'probability': 0.01756146550178528}, {'value': ['remove'], 'probability': 0.017009668052196503}]","[1.0, 0.46110356, 0.4981244, 0.6158088, 0.67838424]",0.7997938529439177,"[{'value': ['add'], 'probability': 0.28143101930618286}, {'value': ['add', 'status'], 'probability': 0.26780474185943604}, {'value': ['get', 'joints'], 'probability': 0.22511239349842072}, {'value': ['add', 'body'], 'probability': 0.06735175848007202}, {'value': ['push'], 'probability': 0.06298863887786865}, {'value': ['child', 'added'], 'probability': 0.035162393003702164}, {'value': ['create', 'body'], 'probability': 0.02754179947078228}, {'value': ['add', 'line', 'break'], 'probability': 0.015103698708117008}, {'value': ['register', 'synchronization'], 'probability': 0.00976964645087719}, {'value': ['enqueue'], 'probability': 0.007733852602541447}]","[1.0, 0.8214655, 0.46990728, 0.81503284, 0.50270826, 0.45829713, 0.5471143, 0.7909654, 0.30203083, 0.0]",0.7398447056985533
15,15,"public Vector2 getLocalAnchorB() {Vec2 localAnchor = joint.getLocalAnchorB();localAnchorB.set(localAnchor.x, localAnchor.y);return localAnchorB;}
","public Vector2 [MASK]() {Vec2 localAnchor = joint.[MASK]();localAnchorB.set(localAnchor.x, localAnchor.y);return localAnchorB;}
",getLocalAnchorB,"[{'value': ['clone'], 'probability': 0.15176868438720703}, {'value': ['update'], 'probability': 0.05575792118906975}, {'value': ['build'], 'probability': 0.05081670731306076}, {'value': ['target'], 'probability': 0.033426832407712936}, {'value': ['run'], 'probability': 0.031303711235523224}]","[0.166604, 0.36048478, 0.5626448, 0.48396432, 0.65114945]",0.1105376952302437,"[{'value': ['initialize'], 'probability': 1.0}, {'value': ['get', 'regions'], 'probability': 1.574388264202753e-08}, {'value': ['on', 'pre', 'execute'], 'probability': 1.2605306132229543e-08}, {'value': ['create', 'target', 'product'], 'probability': 9.424512725786371e-09}, {'value': ['create', 'record', 'reader'], 'probability': 5.4491549050794674e-09}, {'value': ['get', 'cache', 'map'], 'probability': 3.0629492275835446e-09}, {'value': ['prepare', 'data'], 'probability': 2.0732384697907946e-09}, {'value': ['create', 'menu', 'bar'], 'probability': 2.011622202147123e-09}, {'value': ['create', 'contents'], 'probability': 1.5334732372807025e-09}, {'value': ['create', 'bindings'], 'probability': 1.3360402784101666e-09}]","[-0.20395917, 0.80844915, 0.6772745, 0.6319752, 0.699378, 0.6948717, 0.60046375, 0.6298946, 0.5758447, 0.47819006]",-0.2039591328052468
16,16,"public void setMaxForce(float force) {joint.setMaxForce(force);}
","public void [MASK](float force) {joint.[MASK](force);}
",setMaxForce,"[{'value': ['apply'], 'probability': 0.07302249222993851}, {'value': ['execute'], 'probability': 0.0663420557975769}, {'value': ['float'], 'probability': 0.05187857151031494}, {'value': ['deploy'], 'probability': 0.050141554325819016}, {'value': ['perform'], 'probability': 0.04472459852695465}]","[0.5010617, 0.35167885, 0.37543058, 0.35591206, 0.498045]",0.1195175190832934,"[{'value': ['set', 'max', 'force'], 'probability': 0.33144503831863403}, {'value': ['set', 'max', 'motor', 'force'], 'probability': 0.21479153633117676}, {'value': ['join'], 'probability': 0.12562155723571777}, {'value': ['apply', 'force'], 'probability': 0.11521241068840027}, {'value': ['set', 'force'], 'probability': 0.08087071776390076}, {'value': ['set', 'absolute', 'screen', 'loc'], 'probability': 0.03215440735220909}, {'value': ['unexport', 'object'], 'probability': 0.031586721539497375}, {'value': ['set', 'joint'], 'probability': 0.03025372512638569}, {'value': ['init', 'savable'], 'probability': 0.0218028724193573}, {'value': ['add'], 'probability': 0.016260970383882523}]","[0.82835144, 0.75901145, 0.5397009, 0.6442502, 0.8712765, 0.732296, 0.4070152, 0.84405774, -0.2256778, 0.5084879]",0.7153534451934472
17,17,"public float getMaxForce() {return joint.getMaxForce();}
","public float [MASK]() {return joint.[MASK]();}
",getMaxForce,"[{'value': ['join'], 'probability': 0.07535883784294128}, {'value': ['float'], 'probability': 0.06009545922279358}, {'value': ['get'], 'probability': 0.050975020974874496}, {'value': ['build'], 'probability': 0.027638176456093788}, {'value': ['double'], 'probability': 0.024401575326919556}]","[0.54880774, 0.2808844, 1.0, 0.5626448, 0.5437231]",0.1380305866284353,"[{'value': ['get', 'joint'], 'probability': 0.6266558170318604}, {'value': ['init', 'savable'], 'probability': 0.12937423586845398}, {'value': ['get', 'center', 'y'], 'probability': 0.07895435392856598}, {'value': ['contains', 'point'], 'probability': 0.042064517736434937}, {'value': ['get', 'size'], 'probability': 0.03272809088230133}, {'value': ['get', 'max', 'y'], 'probability': 0.03071032464504242}, {'value': ['belongs'], 'probability': 0.02808329090476036}, {'value': ['get', 'descent'], 'probability': 0.014588328078389168}, {'value': ['set', 'joint'], 'probability': 0.008472525514662266}, {'value': ['arc', 'to'], 'probability': 0.008368508890271187}]","[0.82185113, -0.25371662, 0.7283063, 0.49673918, 0.83762157, 0.6849645, 0.21717028, 0.7917117, 0.57660127, 0.61803114]",0.6367465562020659
18,18,"public void setMaxTorque(float torque) {joint.setMaxTorque(torque);}
","public void [MASK](float torque) {joint.[MASK](torque);}
",setMaxTorque,"[{'value': ['apply'], 'probability': 0.1242024376988411}, {'value': ['torque'], 'probability': 0.07698795199394226}, {'value': ['execute'], 'probability': 0.06459041684865952}, {'value': ['handle'], 'probability': 0.05073464661836624}, {'value': ['start'], 'probability': 0.03134763613343239}]","[0.5010617, 0.11900913, 0.35167885, 0.5003014, 0.71166486]",0.141802061127382,"[{'value': ['apply', 'torque'], 'probability': 0.4925067126750946}, {'value': ['set', 'max', 'torque'], 'probability': 0.2976500689983368}, {'value': ['close', 'transaction'], 'probability': 0.1707419455051422}, {'value': ['set', 'max', 'motor', 'torque'], 'probability': 0.014066691510379314}, {'value': ['set', 'strength'], 'probability': 0.008692575618624687}, {'value': ['set', 'proxy', 'password'], 'probability': 0.006460895296186209}, {'value': ['remove', 'incident'], 'probability': 0.00328569277189672}, {'value': ['set', 'joint'], 'probability': 0.0024006797466427088}, {'value': ['arc', 'to'], 'probability': 0.002337757498025894}, {'value': ['rotate', 'z'], 'probability': 0.0018569546518847346}]","[0.38148886, 0.65921605, 0.5868236, 0.6130537, 0.8347292, 0.64974225, 0.5430366, 0.84405774, 0.72340363, 0.31964985]",0.5104697121654148
19,19,"public float getMaxTorque() {return joint.getMaxTorque();}public Shader getShader(Renderable renderable) {Shader suggestedShader = renderable.shader;if (suggestedShader != null && suggestedShader.canRender(renderable))return suggestedShader;for (Shader shader : shaders) {if (shader.canRender(renderable))return shader;}final Shader shader = createShader(renderable);shader.init();shaders.add(shader);return shader;}
","public float [MASK]() {return joint.[MASK]();}public Shader getShader(Renderable renderable) {Shader suggestedShader = renderable.shader;if (suggestedShader != null && suggestedShader.canRender(renderable))return suggestedShader;for (Shader shader : shaders) {if (shader.canRender(renderable))return shader;}final Shader shader = createShader(renderable);shader.init();shaders.add(shader);return shader;}
",getMaxTorque,"[{'value': ['get'], 'probability': 0.10998113453388214}, {'value': ['float'], 'probability': 0.07459736615419388}, {'value': ['bar'], 'probability': 0.04970777407288551}, {'value': ['next'], 'probability': 0.042464714497327805}, {'value': ['extend'], 'probability': 0.039575956761837006}]","[1.0, 0.2808844, 0.45318797, 0.6966621, 0.5252367]",0.2038316395125367,"[{'value': ['get', 'joint'], 'probability': 0.6266558170318604}, {'value': ['init', 'savable'], 'probability': 0.12937423586845398}, {'value': ['get', 'center', 'y'], 'probability': 0.07895435392856598}, {'value': ['contains', 'point'], 'probability': 0.042064517736434937}, {'value': ['get', 'size'], 'probability': 0.03272809088230133}, {'value': ['get', 'max', 'y'], 'probability': 0.03071032464504242}, {'value': ['belongs'], 'probability': 0.02808329090476036}, {'value': ['get', 'descent'], 'probability': 0.014588328078389168}, {'value': ['set', 'joint'], 'probability': 0.008472525514662266}, {'value': ['arc', 'to'], 'probability': 0.008368508890271187}]","[0.82185113, -0.25371662, 0.7283063, 0.49673918, 0.83762157, 0.6849645, 0.21717028, 0.7917117, 0.57660127, 0.61803114]",0.6367465562020659
20,20,"public void dispose() {for (Shader shader : shaders) {shader.dispose();}shaders.clear();}public static FloatAttribute createShininess(float value) {return new FloatAttribute(Shininess, value);}
","public void dispose() [MASK] (Shader shader : shaders) {shader.dispose();}shaders.clear();}public static FloatAttribute createShininess(float value) {return new FloatAttribute(Shininess, value);}
",{for,"[{'value': ['{'], 'probability': 0.7530796527862549}, {'value': ['for'], 'probability': 0.24232201278209686}, {'value': ['For'], 'probability': 0.0024160181637853384}, {'value': ['try'], 'probability': 0.000515726744197309}, {'value': [';'], 'probability': 0.00025000827736221254}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['dispose'], 'probability': 0.9730755686759949}, {'value': ['clear'], 'probability': 0.011669035069644451}, {'value': ['close'], 'probability': 0.0033868851605802774}, {'value': ['on', 'dispose'], 'probability': 0.0028051608242094517}, {'value': ['dispose', 'resources'], 'probability': 0.0021895880345255136}, {'value': ['flush'], 'probability': 0.002151837572455406}, {'value': ['release'], 'probability': 0.0017167009646072984}, {'value': ['force'], 'probability': 0.0016447057714685798}, {'value': ['clear', 'editor'], 'probability': 0.0008677907753735781}, {'value': ['set', 'shaders'], 'probability': 0.0004926439141854644}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
21,21,"public static FloatAttribute createAlphaTest(float value) {return new FloatAttribute(AlphaTest, value);}
","public static FloatAttribute [MASK](float value) {return new FloatAttribute(AlphaTest, value);}
",createAlphaTest,"[{'value': ['compare'], 'probability': 0.0806005522608757}, {'value': ['get'], 'probability': 0.08051174134016037}, {'value': ['resolve'], 'probability': 0.06456763297319412}, {'value': ['evaluate'], 'probability': 0.04817245528101921}, {'value': ['transform'], 'probability': 0.045900244265794754}]","[0.38677526, 0.62328804, 0.5211596, 0.42133904, 0.6399563]",0.1646774314437269,"[{'value': ['create', 'attribute'], 'probability': 0.8593409657478333}, {'value': ['create', 'entry'], 'probability': 0.05224326252937317}, {'value': ['value', 'of'], 'probability': 0.03212309256196022}, {'value': ['put'], 'probability': 0.01467300858348608}, {'value': ['create', 'node'], 'probability': 0.011646969243884087}, {'value': ['get'], 'probability': 0.008985252119600773}, {'value': ['get', 'float', 'attribute'], 'probability': 0.00805512722581625}, {'value': ['add', 'attribute'], 'probability': 0.004607131239026785}, {'value': ['constant'], 'probability': 0.00423407182097435}, {'value': ['of'], 'probability': 0.004091095644980669}]","[0.8446564, 0.8503544, 0.58165234, 0.67969376, 0.7295665, 0.62328804, 0.6270564, 0.5843687, 0.35672864, 0.546527]",0.8245179890485831
22,22,"public Attribute copy() {return new FloatAttribute(type, value);}
","public Attribute [MASK]() {return new FloatAttribute(type, value);}
",copy,"[{'value': ['value'], 'probability': 0.7221003770828247}, {'value': ['type'], 'probability': 0.04234130680561066}, {'value': ['attribute'], 'probability': 0.03279674053192139}, {'value': ['evaluate'], 'probability': 0.02728993631899357}, {'value': ['get'], 'probability': 0.025577960535883904}]","[0.35649675, 0.43312305, 0.18065262, 0.23840243, 0.4466728]",0.2996212178451508,"[{'value': ['create', 'attribute'], 'probability': 0.40670883655548096}, {'value': ['get'], 'probability': 0.2654644250869751}, {'value': ['build'], 'probability': 0.14492885768413544}, {'value': ['get', 'value'], 'probability': 0.05563800036907196}, {'value': ['make', 'attribute'], 'probability': 0.04902217909693718}, {'value': ['clone'], 'probability': 0.028584161773324013}, {'value': ['map'], 'probability': 0.021267646923661232}, {'value': ['copy'], 'probability': 0.011794768273830414}, {'value': ['get', 'instance'], 'probability': 0.011055775918066502}, {'value': ['create', 'reference'], 'probability': 0.005535334348678589}]","[0.3785461, 0.4466728, 0.28695282, 0.46863905, 0.4180006, 0.31505513, 0.4765969, 1.0, 0.5255188, 0.5764198]",0.4006241103752413
23,23,"public int hashCode() {int result = super.hashCode();result = 977 * result + NumberUtils.floatToRawIntBits(value);return result;}
","public int [MASK]() {int result = super.[MASK]();result = 977 * result + NumberUtils.floatToRawIntBits(value);return result;}
",hashCode,"[{'value': ['value'], 'probability': 0.28487592935562134}, {'value': ['count'], 'probability': 0.06576667726039886}, {'value': ['next'], 'probability': 0.06471588462591171}, {'value': ['size'], 'probability': 0.06348159909248352}, {'value': ['start'], 'probability': 0.05533933266997337}]","[0.24375387, 0.0950139, 0.060188204, 0.17934217, 0.08084206]",0.0954421636641991,"[{'value': ['hash', 'code'], 'probability': 0.9980661273002625}, {'value': ['generate', 'hash', 'code'], 'probability': 0.0013377581490203738}, {'value': ['do', 'hash', 'code'], 'probability': 0.00023620920546818525}, {'value': ['compute', 'hash'], 'probability': 0.00020907627185806632}, {'value': ['calc', 'hash', 'code'], 'probability': 5.278925527818501e-05}, {'value': ['calculate', 'hash', 'code'], 'probability': 3.761250263778493e-05}, {'value': ['to', 'string'], 'probability': 2.9527349397540092e-05}, {'value': ['float', 'to', 'int', 'bits'], 'probability': 1.1221188287890982e-05}, {'value': ['sxhash'], 'probability': 1.0576817658147775e-05}, {'value': ['to', 'file', 'string'], 'probability': 9.190314813167788e-06}]","[0.75676125, 0.62317514, 0.59647787, 0.84505117, 0.70661014, 0.72110593, 0.16550866, 0.31470966, 0.0, 0.21283336]",0.7565237998878336
24,24,"public int compareTo(Attribute o) {if (type != o.type)return (int) (type - o.type);final float v = ((FloatAttribute) o).value;return MathUtils.isEqual(value, v) ? 0 : value < v ? -1 : 1;}protected static long getCPtr(SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t obj) {return (obj == null) ? 0 : obj.swigCPtr;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public int compareTo(Attribute [MASK] {if (type != o.type)return (int) (type - o.type);final float v = ((FloatAttribute) [MASK].value;return MathUtils.isEqual(value, v) ? 0 : value < v ? -1 : 1;}protected static long getCPtr(SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t obj) {return (obj == null) ? 0 : obj.swigCPtr;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",o),"[{'value': [')'], 'probability': 0.9999880790710449}, {'value': ['value'], 'probability': 2.125294486177154e-06}, {'value': ['object'], 'probability': 1.1283005960649461e-06}, {'value': ['other'], 'probability': 1.1006457043549744e-06}, {'value': ['result'], 'probability': 8.222154974646401e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['compare', 'to'], 'probability': 0.9852862358093262}, {'value': ['compare'], 'probability': 0.010967735201120377}, {'value': ['sign'], 'probability': 0.001532958704046905}, {'value': ['encode'], 'probability': 0.0004909209674224257}, {'value': ['compare', 'value'], 'probability': 0.00039615650894120336}, {'value': ['same', 'value'], 'probability': 0.00035200631828047335}, {'value': ['diff'], 'probability': 0.0003101140318904072}, {'value': ['size', 'of'], 'probability': 0.0002659694291651249}, {'value': ['get', 'int', 'value'], 'probability': 0.00021256804757285863}, {'value': ['get', 'integer', 'value'], 'probability': 0.00018528795044403523}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
25,25,"public static long getCPtr(btShortIntIndexData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btShortIntIndexData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08974681794643402}, {'value': ['read'], 'probability': 0.039208490401506424}, {'value': ['update'], 'probability': 0.03762051835656166}, {'value': ['execute'], 'probability': 0.03627392649650574}, {'value': ['process'], 'probability': 0.027298996224999428}]","[1.0, 0.5726487, 0.36048478, 0.37713256, 0.52250975]",0.1537052041321208,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
26,26,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
27,27,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btShortIntIndexData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btShortIntIndexData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8323751091957092}, {'value': ['start'], 'probability': 0.012669963762164116}, {'value': ['clear'], 'probability': 0.012272704392671585}, {'value': ['test'], 'probability': 0.010967877693474293}, {'value': ['execute'], 'probability': 0.010133990086615086}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1252028896293944,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
28,28,"public void setValue(short value) {CollisionJNI.btShortIntIndexData_value_set(swigCPtr, this, value);}
","public void [MASK](short value) {CollisionJNI.btShortIntIndexData_value_set(swigCPtr, this, value);}
",setValue,"[{'value': ['set'], 'probability': 0.5867338180541992}, {'value': ['put'], 'probability': 0.11027819663286209}, {'value': ['add'], 'probability': 0.01855647563934326}, {'value': ['execute'], 'probability': 0.01285016443580389}, {'value': ['get'], 'probability': 0.01244409754872322}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.65028083]",0.6963921111647533,"[{'value': ['set'], 'probability': 0.22896961867809296}, {'value': ['set', 'top'], 'probability': 0.1505623161792755}, {'value': ['set', 'value'], 'probability': 0.10272873193025589}, {'value': ['set', 'reg'], 'probability': 0.10072064399719238}, {'value': ['set', 'indent'], 'probability': 0.08866950869560242}, {'value': ['set', 'graph', 'view'], 'probability': 0.0853496789932251}, {'value': ['set', 'flags'], 'probability': 0.07405400276184082}, {'value': ['set', 'id'], 'probability': 0.05670309439301491}, {'value': ['extend'], 'probability': 0.05667455121874809}, {'value': ['set', 'unused'], 'probability': 0.055567871779203415}]","[1.0, 0.8966336, 0.8399167, 0.7747321, 0.8148728, 0.75325966, 0.7786614, 0.7939222, 0.5463553, 0.8126343]",0.8436304237512692
29,29,"public short getValue() {return CollisionJNI.btShortIntIndexData_value_get(swigCPtr, this);}
","public short [MASK]() {return CollisionJNI.btShortIntIndexData_value_get(swigCPtr, this);}
",getValue,"[{'value': ['run'], 'probability': 0.7129696011543274}, {'value': ['##cut'], 'probability': 0.06312631070613861}, {'value': ['bar'], 'probability': 0.025715796276926994}, {'value': ['get'], 'probability': 0.015793848782777786}, {'value': ['short'], 'probability': 0.012342716567218304}]","[0.65114945, 0.0, 0.45318797, 1.0, 0.5766276]",0.498814854428614,"[{'value': ['get', 'id'], 'probability': 0.283008337020874}, {'value': ['get', 'flag'], 'probability': 0.1749676913022995}, {'value': ['get', 'type'], 'probability': 0.13071909546852112}, {'value': ['get', 'flags'], 'probability': 0.08521464467048645}, {'value': ['get', 'graph', 'view'], 'probability': 0.08145115524530411}, {'value': ['get', 'len'], 'probability': 0.07598666846752167}, {'value': ['get', 'length'], 'probability': 0.06521369516849518}, {'value': ['get', 'x'], 'probability': 0.03748345002532005}, {'value': ['get', 'index'], 'probability': 0.03633987158536911}, {'value': ['size'], 'probability': 0.029615307226777077}]","[0.82231325, 0.7926441, 0.8542828, 0.75727946, 0.70718145, 0.7771981, 0.8075286, 0.7925645, 0.7092336, 0.43109724]",0.7851789399565088
30,30,"public void setPad(String value) {CollisionJNI.btShortIntIndexData_pad_set(swigCPtr, this, value);}
","public void [MASK](String value) {CollisionJNI.btShortIntIndexData_pad_set(swigCPtr, this, value);}
",setPad,"[{'value': ['set'], 'probability': 0.5733055472373962}, {'value': ['put'], 'probability': 0.1259242296218872}, {'value': ['execute'], 'probability': 0.020743096247315407}, {'value': ['read'], 'probability': 0.013286094181239605}, {'value': ['write'], 'probability': 0.013183454982936382}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.46259418]",0.6931447932560678,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
31,31,"public String getPad() {return CollisionJNI.btShortIntIndexData_pad_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btPolyhedralConvexAabbCachingShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public String [MASK]() {return CollisionJNI.btShortIntIndexData_pad_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btPolyhedralConvexAabbCachingShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",getPad,"[{'value': ['destroy'], 'probability': 0.8680689930915833}, {'value': ['destroyed'], 'probability': 0.03333756700158119}, {'value': ['build'], 'probability': 0.017188027501106262}, {'value': ['rebuild'], 'probability': 0.010398336686193943}, {'value': ['save'], 'probability': 0.004727992694824934}]","[0.40928823, 0.32746348, 0.5626448, 0.37552252, 0.62758213]",0.3827500225389455,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
32,32,"public static long getCPtr(btPolyhedralConvexAabbCachingShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btPolyhedralConvexAabbCachingShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08200626820325851}, {'value': ['match'], 'probability': 0.041170936077833176}, {'value': ['update'], 'probability': 0.03450826555490494}, {'value': ['read'], 'probability': 0.033339809626340866}, {'value': ['process'], 'probability': 0.03132714331150055}]","[1.0, 0.4692583, 0.36048478, 0.5726487, 0.52250975]",0.1492265132127623,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
33,33,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
34,34,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btPolyhedralConvexAabbCachingShape(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btPolyhedralConvexAabbCachingShape(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.80697101354599}, {'value': ['start'], 'probability': 0.01607135497033596}, {'value': ['clear'], 'probability': 0.013589788228273392}, {'value': ['test'], 'probability': 0.009825673885643482}, {'value': ['flush'], 'probability': 0.009531884454190731}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.120570555]",0.119994454550584,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
35,35,"public void getNonvirtualAabb(Matrix4 trans, Vector3 aabbMin, Vector3 aabbMax, float margin) {CollisionJNI.btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(swigCPtr, this, trans, aabbMin, aabbMax, margin);}
","public void [MASK](Matrix4 trans, Vector3 aabbMin, Vector3 aabbMax, float margin) {CollisionJNI.btPolyhedralConvexAabbCachingShape_[MASK](swigCPtr, this, trans, aabbMin, aabbMax, margin);}
",getNonvirtualAabb,"[{'value': ['write'], 'probability': 0.20128266513347626}, {'value': ['read'], 'probability': 0.06484604626893997}, {'value': ['translate'], 'probability': 0.055757034569978714}, {'value': ['process'], 'probability': 0.026449164375662804}, {'value': ['add'], 'probability': 0.025978311896324158}]","[0.60768855, 0.5726487, 0.445797, 0.52250975, 0.54842544]",0.2123746064345166,"[{'value': ['get', 'aabb'], 'probability': 0.9971094727516174}, {'value': ['get', 'bounding', 'sphere'], 'probability': 0.0025567160919308662}, {'value': ['process', 'all', 'triangles'], 'probability': 8.321664063259959e-05}, {'value': ['assert', 'values'], 'probability': 5.311449058353901e-05}, {'value': ['map', 'object'], 'probability': 4.570047894958407e-05}, {'value': ['set', 'bounds'], 'probability': 4.279811400920153e-05}, {'value': ['local', 'get', 'supporting', 'vertex'], 'probability': 2.968598528241273e-05}, {'value': ['get', 'extents'], 'probability': 2.7150201276526786e-05}, {'value': ['assert', 'vector', 'equals'], 'probability': 2.6788071409100667e-05}, {'value': ['negated'], 'probability': 2.5343311790493317e-05}]","[0.84482867, 0.66568637, 0.6084425, 0.40375122, 0.40793642, 0.60712725, 0.73909056, 0.8020915, 0.26792502, 0.04301891]",0.8442573301491585
36,36,"public void recalcLocalAabb() {CollisionJNI.btPolyhedralConvexAabbCachingShape_recalcLocalAabb(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK]() {CollisionJNI.btPolyhedralConvexAabbCachingShape_[MASK](swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",recalcLocalAabb,"[{'value': ['destroy'], 'probability': 0.9025274515151978}, {'value': ['run'], 'probability': 0.016691600903868675}, {'value': ['rebuild'], 'probability': 0.015006553381681442}, {'value': ['destroyed'], 'probability': 0.006599851883947849}, {'value': ['build'], 'probability': 0.005425044801086187}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
37,37,"public static long getCPtr(btEigen obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btEigen obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.12319077551364899}, {'value': ['read'], 'probability': 0.04148145765066147}, {'value': ['skip'], 'probability': 0.040238503366708755}, {'value': ['run'], 'probability': 0.03376949951052666}, {'value': ['execute'], 'probability': 0.030351724475622177}]","[1.0, 0.5726487, 0.49507433, 0.65114945, 0.37713256]",0.2003017434334454,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
38,38,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
39,39,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.delete_btEigen(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.[MASK]_btEigen(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7828550338745117}, {'value': ['clear'], 'probability': 0.01598685048520565}, {'value': ['start'], 'probability': 0.015600603073835373}, {'value': ['test'], 'probability': 0.013262377120554447}, {'value': ['flush'], 'probability': 0.011542592197656631}]","[0.13931048, 0.18840031, 0.15163165, 0.14537679, 0.120570555]",0.117757121280767,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
40,40,"public static int system(Matrix3 a, SWIGTYPE_p_btMatrix3x3 vectors, btVector3 values) {return SoftbodyJNI.btEigen_system__SWIG_0(a, SWIGTYPE_p_btMatrix3x3.getCPtr(vectors), btVector3.getCPtr(values), values);}
","public static int [MASK](Matrix3 a, SWIGTYPE_p_btMatrix3x3 vectors, btVector3 values) {return SoftbodyJNI.btEigen_[MASK]__SWIG_0(a, SWIGTYPE_p_btMatrix3x3.getCPtr(vectors), btVector3.getCPtr(values), values);}
",system,"[{'value': ['compare'], 'probability': 0.16069841384887695}, {'value': ['get'], 'probability': 0.12215116620063782}, {'value': ['execute'], 'probability': 0.032833706587553024}, {'value': ['row'], 'probability': 0.03278321027755737}, {'value': ['score'], 'probability': 0.026239575818181038}]","[0.36359456, 0.518636, 0.28793558, 0.29836825, 0.31158635]",0.1491924152592113,"[{'value': ['set'], 'probability': 0.49186840653419495}, {'value': ['sum'], 'probability': 0.2569150924682617}, {'value': ['assign'], 'probability': 0.10261370241641998}, {'value': ['set', 'values'], 'probability': 0.08935866504907608}, {'value': ['product'], 'probability': 0.02825000323355198}, {'value': ['lowercase'], 'probability': 0.00961553119122982}, {'value': ['merge'], 'probability': 0.009445840492844582}, {'value': ['vector'], 'probability': 0.004900437314063311}, {'value': ['are', 'equal'], 'probability': 0.004104015417397022}, {'value': ['merge', 'to'], 'probability': 0.0029283652547746897}]","[0.6016929, 0.22153728, 0.22399193, 0.6366929, 0.5869883, 0.0033403712, 0.34382766, 0.2702598, 0.56975275, 0.5372906]",0.45784699801441203
41,41,"public static int system(Matrix3 a, SWIGTYPE_p_btMatrix3x3 vectors) {return SoftbodyJNI.btEigen_system__SWIG_1(a, SWIGTYPE_p_btMatrix3x3.getCPtr(vectors));}static ReadOnlyIntArrayBuffer copy(IntArrayBuffer other, int markOfOther) {ReadOnlyIntArrayBuffer buf = new ReadOnlyIntArrayBuffer(other.capacity(), other.backingArray, other.offset);buf.limit = other.limit();buf.position = other.position();buf.mark = markOfOther;return buf;}
","public static int [MASK](Matrix3 a, SWIGTYPE_p_btMatrix3x3 vectors) {return SoftbodyJNI.btEigen_[MASK]__SWIG_1(a, SWIGTYPE_p_btMatrix3x3.getCPtr(vectors));}static ReadOnlyIntArrayBuffer copy(IntArrayBuffer other, int markOfOther) {ReadOnlyIntArrayBuffer buf = new ReadOnlyIntArrayBuffer(other.capacity(), other.backingArray, other.offset);buf.limit = other.limit();buf.position = other.position();buf.mark = markOfOther;return buf;}
",system,"[{'value': ['compare'], 'probability': 0.3079851269721985}, {'value': ['get'], 'probability': 0.07413344085216522}, {'value': ['read'], 'probability': 0.06379777193069458}, {'value': ['offset'], 'probability': 0.03820453956723213}, {'value': ['value'], 'probability': 0.029324021190404892}]","[0.36359456, 0.518636, 0.33764148, 0.35363656, 0.47356445]",0.1993680975315905,"[{'value': ['diff'], 'probability': 0.2351604551076889}, {'value': ['set'], 'probability': 0.19576717913150787}, {'value': ['subtract'], 'probability': 0.18253983557224274}, {'value': ['sum'], 'probability': 0.1709287464618683}, {'value': ['get', 'v'], 'probability': 0.05100603401660919}, {'value': ['product'], 'probability': 0.036941900849342346}, {'value': ['get', 'vectors'], 'probability': 0.035019513219594955}, {'value': ['lerp'], 'probability': 0.03416791930794716}, {'value': ['compare'], 'probability': 0.03390548378229141}, {'value': ['from', 'array'], 'probability': 0.024562938138842583}]","[0.048223007, 0.6016929, -0.039991945, 0.22153728, 0.499173, 0.5869883, 0.45833078, 0.0, 0.36359456, 0.63472974]",0.25081332871126266
42,42,"public IntBuffer asReadOnlyBuffer() {return duplicate();}
","public IntBuffer [MASK]() {return duplicate();}
",asReadOnlyBuffer,"[{'value': ['clone'], 'probability': 0.3380948603153229}, {'value': ['copy'], 'probability': 0.17712107300758362}, {'value': ['create'], 'probability': 0.051703307777643204}, {'value': ['build'], 'probability': 0.04172727093100548}, {'value': ['version'], 'probability': 0.034042321145534515}]","[0.18209177, 0.36391696, 0.5990647, 0.5146036, 0.54762787]",0.1971108105519432,"[{'value': ['as', 'read', 'only', 'buffer'], 'probability': 0.9989705085754395}, {'value': ['duplicate'], 'probability': 0.000893828459084034}, {'value': ['as', 'int', 'buffer'], 'probability': 7.237445970531553e-05}, {'value': ['get', 'duplicate'], 'probability': 3.995502629550174e-05}, {'value': ['get', 'buffer'], 'probability': 1.3257873433758505e-05}, {'value': ['get', 'backing', 'buffer'], 'probability': 3.5679611301020486e-06}, {'value': ['compact'], 'probability': 2.2603724119107937e-06}, {'value': ['get', 'contents'], 'probability': 1.9395820345380343e-06}, {'value': ['get', 'data', 'buffer'], 'probability': 1.431959617548273e-06}, {'value': ['get', 'pane'], 'probability': 9.314731528320408e-07}]","[0.8679184, 0.18586844, 0.6550496, 0.54492813, 0.5886663, 0.63552487, 0.3213268, 0.57182497, 0.6388241, 0.4116784]",0.8672734070786398
43,43,"public IntBuffer compact() {throw new ReadOnlyBufferException();}
","public IntBuffer [MASK]() {throw new ReadOnlyBufferException();}
",compact,"[{'value': ['create'], 'probability': 0.05294838175177574}, {'value': ['build'], 'probability': 0.03340157866477966}, {'value': ['get'], 'probability': 0.02715974673628807}, {'value': ['wrap'], 'probability': 0.025438392534852028}, {'value': ['run'], 'probability': 0.02538621425628662}]","[0.37647277, 0.36250606, 0.2476357, 0.20376484, 0.22666916]",0.0497053437723507,"[{'value': ['compact'], 'probability': 0.9998964071273804}, {'value': ['put'], 'probability': 4.823962808586657e-05}, {'value': ['protected', 'array', 'offset'], 'probability': 3.458437277004123e-05}, {'value': ['discard', 'read', 'bytes'], 'probability': 9.405091986991465e-06}, {'value': ['as', 'int', 'buffer'], 'probability': 8.09958055469906e-06}, {'value': ['get', 'data', 'buffer'], 'probability': 1.7027714420692064e-06}, {'value': ['test', 'putint'], 'probability': 5.563705940403452e-07}, {'value': ['get', 'buffer'], 'probability': 4.2898005858660326e-07}, {'value': ['get', 'device', 'configuration'], 'probability': 4.1381215964975127e-07}, {'value': ['poll', 'first'], 'probability': 2.408219756944163e-07}]","[0.99999994, 0.27955118, 0.44672006, 0.24448375, 0.2753469, 0.37713733, 0.20556796, 0.26956633, 0.49258062, 0.19940327]",0.9999309357439471
44,44,"public IntBuffer duplicate() {return copy(this, mark);}
","public IntBuffer [MASK]() {return copy(this, mark);}
",duplicate,"[{'value': ['copy'], 'probability': 0.6994022130966187}, {'value': ['mark'], 'probability': 0.11194736510515213}, {'value': ['create'], 'probability': 0.02820058912038803}, {'value': ['print'], 'probability': 0.017693515866994858}, {'value': ['get'], 'probability': 0.009038886055350304}]","[0.44766894, 0.15882057, 0.38261807, 0.3844189, 0.30536392]",0.3512321182044066,"[{'value': ['duplicate'], 'probability': 0.9534571766853333}, {'value': ['as', 'read', 'only', 'buffer'], 'probability': 0.042706578969955444}, {'value': ['clone'], 'probability': 0.0023308119270950556}, {'value': ['dup'], 'probability': 0.0009810198098421097}, {'value': ['copy'], 'probability': 0.00037853364483453333}, {'value': ['get'], 'probability': 3.9155031117843464e-05}, {'value': ['get', 'content'], 'probability': 3.429935532039963e-05}, {'value': ['to', 'string'], 'probability': 3.2398438634118065e-05}, {'value': ['get', 'source'], 'probability': 2.2679441826767288e-05}, {'value': ['deep', 'copy'], 'probability': 1.749962757457979e-05}]","[1.0, 0.27947068, 0.22142994, -0.21189441, 0.44766894, 0.30536392, 0.2988579, 0.2741214, 0.27656892, 0.29618514]",0.9659126538682647
45,45,"public boolean isReadOnly() {return true;}
","public boolean [MASK]() {return true;}
",isReadOnly,"[{'value': ['equals'], 'probability': 0.1153678447008133}, {'value': ['is'], 'probability': 0.0887511745095253}, {'value': ['exists'], 'probability': 0.04286004230380058}, {'value': ['matches'], 'probability': 0.033196453005075455}, {'value': ['value'], 'probability': 0.028349580243229866}]","[0.3373858, 0.99999994, 0.65599275, 0.3614936, 0.53464335]",0.1829477385559913,"[{'value': ['defined'], 'probability': 0.3214266300201416}, {'value': ['is', 'negatable'], 'probability': 0.24385616183280945}, {'value': ['get', 'support', 'create'], 'probability': 0.08135801553726196}, {'value': ['is', 'default'], 'probability': 0.07048829644918442}, {'value': ['operates', 'on', 'fact', 'handles'], 'probability': 0.058586958795785904}, {'value': ['need', 'credentials'], 'probability': 0.051613688468933105}, {'value': ['is', 'initialized'], 'probability': 0.046987809240818024}, {'value': ['is', 'save', 'as', 'allowed'], 'probability': 0.04515714943408966}, {'value': ['is', 'available'], 'probability': 0.040341027081012726}, {'value': ['is', 'singleton'], 'probability': 0.04018421098589897}]","[0.57788044, 0.99999994, 0.6806554, 0.8370681, 0.76596993, 0.5305004, 0.82793635, 0.8430273, 0.8872678, 0.8811584]",0.7644130921268026
46,46,"protected int[] protectedArray() {throw new ReadOnlyBufferException();}
","protected int[] [MASK]() {throw new ReadOnlyBufferException();}
",protectedArray,"[{'value': ['size'], 'probability': 0.151392862200737}, {'value': ['flags'], 'probability': 0.12482535094022751}, {'value': ['trim'], 'probability': 0.06995026022195816}, {'value': ['values'], 'probability': 0.06690964847803116}, {'value': ['next'], 'probability': 0.042973995208740234}]","[0.3606411, 0.22655708, 0.13875037, 0.3180483, 0.2836602]",0.1260546905169581,"[{'value': ['protected', 'array'], 'probability': 0.7399705052375793}, {'value': ['protected', 'array', 'offset'], 'probability': 0.24033546447753906}, {'value': ['discard', 'read', 'bytes'], 'probability': 0.008106403052806854}, {'value': ['get', 'num', 'nondefault', 'elements'], 'probability': 0.004290939774364233}, {'value': ['compact'], 'probability': 0.0023833077866584063}, {'value': ['get', 'default', 'cipher', 'suites'], 'probability': 0.0023436141200363636}, {'value': ['get', 'value', 'names'], 'probability': 0.001306271180510521}, {'value': ['get', 'property', 'names'], 'probability': 0.00046470583765767515}, {'value': ['delete', 'row'], 'probability': 0.0004171750333625823}, {'value': ['get', 'packet', 'buffer', 'size'], 'probability': 0.0003817006654571742}]","[0.8261062, 0.7159846, 0.22877795, 0.3663809, 0.33619207, 0.3444467, 0.45700192, 0.56401396, 0.26291707, 0.45579705]",0.7895486270623113
47,47,"protected int protectedArrayOffset() {throw new ReadOnlyBufferException();}
","protected int [MASK]() {throw new ReadOnlyBufferException();}
",protectedArrayOffset,"[{'value': ['start'], 'probability': 0.1419827789068222}, {'value': ['size'], 'probability': 0.10140947252511978}, {'value': ['read'], 'probability': 0.09343908727169037}, {'value': ['offset'], 'probability': 0.048165567219257355}, {'value': ['length'], 'probability': 0.036422278732061386}]","[0.19213618, 0.3606411, 0.26721576, 0.21463865, 0.2464916]",0.1081368267094309,"[{'value': ['protected', 'array', 'offset'], 'probability': 0.9990218877792358}, {'value': ['discard', 'read', 'bytes'], 'probability': 0.0005635993438772857}, {'value': ['compact'], 'probability': 0.0002453108027111739}, {'value': ['get', 'packet', 'buffer', 'size'], 'probability': 0.00011559274571482092}, {'value': ['get', 'max', 'inactive', 'interval'], 'probability': 2.731736094574444e-05}, {'value': ['size'], 'probability': 9.776339538802858e-06}, {'value': ['get', 'application', 'buffer', 'size'], 'probability': 5.8208911468682345e-06}, {'value': ['get', 'peer', 'port'], 'probability': 3.816890966845676e-06}, {'value': ['set', 'medium'], 'probability': 3.4530651191744255e-06}, {'value': ['get', 'ref'], 'probability': 3.416502522668452e-06}]","[0.7159846, 0.22877795, 0.33619207, 0.45579705, 0.3285482, 0.3606411, 0.5471818, 0.3903333, 0.3778538, 0.25769207]",0.7155677451187687
48,48,"protected boolean protectedHasArray() {return false;}
","protected boolean [MASK]() {return false;}
",protectedHasArray,"[{'value': ['is'], 'probability': 0.08759550750255585}, {'value': ['equals'], 'probability': 0.06421887874603271}, {'value': ['exists'], 'probability': 0.04425150528550148}, {'value': ['run'], 'probability': 0.04013219103217125}, {'value': ['test'], 'probability': 0.024869168177247047}]","[0.41159242, 0.07587409, 0.42007583, 0.28380114, 0.21206902]",0.0761787258518414,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.37012777, 0.4356073, 0.41754043, 0.42023128, 0.4424343, 0.24420536, 0.4565004, 0.33975843, 0.34859136, 0.4652882]",0.39564346962503827
49,49,"public IntBuffer put(int c) {throw new ReadOnlyBufferException();}
","public IntBuffer [MASK](int c) {throw new ReadOnlyBufferException();}
",put,"[{'value': ['read'], 'probability': 0.10496926307678223}, {'value': ['update'], 'probability': 0.039376016706228256}, {'value': ['generate'], 'probability': 0.03906690329313278}, {'value': ['write'], 'probability': 0.0330839529633522}, {'value': ['create'], 'probability': 0.02986874245107174}]","[0.5763633, 0.37657535, 0.4521689, 0.5574444, 0.67969376]",0.1317373718668989,"[{'value': ['put'], 'probability': 0.9975910186767578}, {'value': ['remove'], 'probability': 0.0015799436951056123}, {'value': ['as', 'int', 'buffer'], 'probability': 0.0003874049580190331}, {'value': ['compact'], 'probability': 0.0001244575687451288}, {'value': ['allocate'], 'probability': 7.805592031218112e-05}, {'value': ['get', 'buffer'], 'probability': 7.629445462953299e-05}, {'value': ['get'], 'probability': 4.8613415856380016e-05}, {'value': ['protected', 'array', 'offset'], 'probability': 3.9976785046746954e-05}, {'value': ['put', 'byte'], 'probability': 3.990445111412555e-05}, {'value': ['put', 'int'], 'probability': 3.440008367761038e-05}]","[1.0, 0.63358456, 0.5029616, 0.27955118, 0.27759516, 0.71191067, 0.8176035, 0.52974224, 0.6823775, 0.63844746]",0.9990077879036302
50,50,"public IntBuffer put(int index, int c) {throw new ReadOnlyBufferException();}
","public IntBuffer [MASK](int index, int c) {throw new ReadOnlyBufferException();}
",put,"[{'value': ['read'], 'probability': 0.0705748125910759}, {'value': ['update'], 'probability': 0.05665402114391327}, {'value': ['generate'], 'probability': 0.04579973965883255}, {'value': ['write'], 'probability': 0.042435504496097565}, {'value': ['process'], 'probability': 0.031480249017477036}]","[0.5763633, 0.37657535, 0.4521689, 0.5574444, 0.5431552]",0.1234745547899704,"[{'value': ['put'], 'probability': 0.996039867401123}, {'value': ['remove'], 'probability': 0.0014734930591657758}, {'value': ['put', 'byte'], 'probability': 0.0007143609691411257}, {'value': ['set', 'int'], 'probability': 0.0006299855886027217}, {'value': ['set', 'bytes'], 'probability': 0.0004926883848384023}, {'value': ['put', 'int'], 'probability': 0.00032621779246255755}, {'value': ['get'], 'probability': 0.00013084606325719506}, {'value': ['as', 'int', 'buffer'], 'probability': 9.999419853556901e-05}, {'value': ['allocate'], 'probability': 4.713941234513186e-05}, {'value': ['protected', 'array', 'offset'], 'probability': 4.5444947318173945e-05}]","[1.0, 0.63358456, 0.6823775, 0.5316909, 0.5534743, 0.63844746, 0.8176035, 0.5029616, 0.27759516, 0.52974224]",0.9984712678116779
51,51,"public IntBuffer put(IntBuffer buf) {throw new ReadOnlyBufferException();}
","public IntBuffer [MASK](IntBuffer buf) {throw new ReadOnlyBufferException();}
",put,"[{'value': ['read'], 'probability': 0.15613983571529388}, {'value': ['write'], 'probability': 0.05067402496933937}, {'value': ['create'], 'probability': 0.03361351415514946}, {'value': ['process'], 'probability': 0.0304661076515913}, {'value': ['wrap'], 'probability': 0.020086387172341347}]","[0.5763633, 0.5574444, 0.67969376, 0.5431552, 0.51777744]",0.1680362245698825,"[{'value': ['put'], 'probability': 0.999107301235199}, {'value': ['compact'], 'probability': 0.0004194013017695397}, {'value': ['as', 'int', 'buffer'], 'probability': 0.00032351011759601533}, {'value': ['get', 'data', 'buffer'], 'probability': 7.682075374759734e-05}, {'value': ['put', 'string'], 'probability': 1.6826330465846695e-05}, {'value': ['set', 'bytes'], 'probability': 1.2965332643943839e-05}, {'value': ['allocate'], 'probability': 1.2808417523046955e-05}, {'value': ['get', 'buffer'], 'probability': 1.1264498425589409e-05}, {'value': ['get', 'int', 'option'], 'probability': 9.887304258882068e-06}, {'value': ['test', 'put', 'int', 'buffer'], 'probability': 9.195752681989688e-06}]","[1.0, 0.27955118, 0.5029616, 0.6946198, 0.83003473, 0.5534743, 0.27759516, 0.71191067, 0.6702915, 0.70266116]",0.9994864259096253
52,52,"public final IntBuffer put(int[] src, int off, int len) {throw new ReadOnlyBufferException();}
","public final [MASK] put(int[] src, int off, int len) {throw new ReadOnlyBufferException();}
",IntBuffer,"[{'value': ['void'], 'probability': 0.985356867313385}, {'value': ['String'], 'probability': 0.004217963665723801}, {'value': ['double'], 'probability': 0.0026940517127513885}, {'value': ['##bject'], 'probability': 0.0013997085625305772}, {'value': ['long'], 'probability': 0.0010058876359835267}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['put'], 'probability': 0.9993595480918884}, {'value': ['set', 'bytes'], 'probability': 0.0005261267069727182}, {'value': ['put', 'byte'], 'probability': 3.0614202842116356e-05}, {'value': ['remove'], 'probability': 2.8534894227050245e-05}, {'value': ['put', 'int'], 'probability': 1.2182797036075499e-05}, {'value': ['get'], 'probability': 1.213900395669043e-05}, {'value': ['new', 'int', 'array'], 'probability': 1.0895164450630546e-05}, {'value': ['put', 'short'], 'probability': 7.746847586531658e-06}, {'value': ['as', 'int', 'buffer'], 'probability': 6.249106263567228e-06}, {'value': ['write', 'sequence'], 'probability': 6.007065167068504e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
53,53,"public Scaling getScaling() {return scaling;}
","public Scaling [MASK]() {return scaling;}
",getScaling,"[{'value': ['up'], 'probability': 0.08145276457071304}, {'value': ['build'], 'probability': 0.03315266966819763}, {'value': ['##s'], 'probability': 0.03268840163946152}, {'value': ['get'], 'probability': 0.03148416429758072}, {'value': ['run'], 'probability': 0.026035742834210396}]","[0.7973712, 0.5626448, 0.0, 1.0, 0.65114945]",0.1320385898259467,"[{'value': ['get', 'scaling'], 'probability': 0.9053719639778137}, {'value': ['set', 'scaling'], 'probability': 0.058175552636384964}, {'value': ['set', 'local', 'scaling'], 'probability': 0.016372278332710266}, {'value': ['set', 'to', 'translation', 'and', 'scaling'], 'probability': 0.011690567247569561}, {'value': ['create', 'index', 'color', 'model'], 'probability': 0.004385660402476788}, {'value': ['get', 'mapper'], 'probability': 0.0023191040381789207}, {'value': ['get', 'scale'], 'probability': 0.0007845258805900812}, {'value': ['get', 'specification'], 'probability': 0.0006286564748734236}, {'value': ['common', 'init'], 'probability': 0.00013811724784318358}, {'value': ['reset', 'zoom'], 'probability': 0.0001335729903075844}]","[0.82488775, 0.5267713, 0.6194061, 0.70384914, 0.54540515, 0.70890534, 0.82746357, 0.7211741, 0.2519486, 0.25867584]",0.8010528134551473
54,54,"public void setScaling(Scaling scaling) {this.scaling = scaling;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK](Scaling scaling) {this.scaling = scaling;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",setScaling,"[{'value': ['set'], 'probability': 0.14699506759643555}, {'value': ['update'], 'probability': 0.1038067638874054}, {'value': ['apply'], 'probability': 0.06690651178359985}, {'value': ['fill'], 'probability': 0.03979108855128288}, {'value': ['process'], 'probability': 0.025557121261954308}]","[1.0, 0.41854778, 0.5010617, 0.48556754, 0.55405426]",0.2574487400530035,"[{'value': ['set', 'scaling'], 'probability': 0.9996962547302246}, {'value': ['set', 'to', 'translation', 'and', 'scaling'], 'probability': 0.00011805524991359562}, {'value': ['set', 'local', 'scaling'], 'probability': 9.802649583434686e-05}, {'value': ['create', 'index', 'color', 'model'], 'probability': 6.0014928749296814e-05}, {'value': ['get', 'default', 'scale'], 'probability': 1.1053956768591888e-05}, {'value': ['common', 'init'], 'probability': 9.370747648063116e-06}, {'value': ['set', 'display', 'properties'], 'probability': 2.3601401153428014e-06}, {'value': ['init', 'node'], 'probability': 2.0413392576301703e-06}, {'value': ['set', 'session'], 'probability': 1.8703107116380124e-06}, {'value': ['init', 'image'], 'probability': 9.82242227109964e-07}]","[0.8355038, 0.85626334, 0.84669876, 0.6280374, 0.69023234, 0.29623833, 0.79431176, -0.016800525, 0.85183275, 0.21901765]",0.8354858510726086
55,55,"public static long getCPtr(GdxCollisionObjectBridge obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](GdxCollisionObjectBridge obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07431139796972275}, {'value': ['read'], 'probability': 0.06543870270252228}, {'value': ['process'], 'probability': 0.035501737147569656}, {'value': ['evaluate'], 'probability': 0.0349428653717041}, {'value': ['update'], 'probability': 0.028947528451681137}]","[1.0, 0.5726487, 0.52250975, 0.40115592, 0.36048478]",0.1547874708582348,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
56,56,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
57,57,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_GdxCollisionObjectBridge(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_GdxCollisionObjectBridge(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7932100296020508}, {'value': ['start'], 'probability': 0.017857270315289497}, {'value': ['clear'], 'probability': 0.013805688358843327}, {'value': ['test'], 'probability': 0.010503184981644154}, {'value': ['flush'], 'probability': 0.009400109760463238}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.120570555]",0.1184714884702552,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
58,58,"public void setUserValue(int value) {CollisionJNI.GdxCollisionObjectBridge_userValue_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.GdxCollisionObjectBridge_userValue_set(swigCPtr, this, value);}
",setUserValue,"[{'value': ['set'], 'probability': 0.6955723762512207}, {'value': ['put'], 'probability': 0.08803686499595642}, {'value': ['get'], 'probability': 0.008742421865463257}, {'value': ['update'], 'probability': 0.007314012851566076}, {'value': ['save'], 'probability': 0.00703809829428792}]","[1.0, 0.7944568, 0.65028083, 0.41854778, 0.5413879]",0.7780704951110131,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
59,59,"public int getUserValue() {return CollisionJNI.GdxCollisionObjectBridge_userValue_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.GdxCollisionObjectBridge_userValue_get(swigCPtr, this);}
",getUserValue,"[{'value': ['get'], 'probability': 0.1263742595911026}, {'value': ['start'], 'probability': 0.05475139990448952}, {'value': ['size'], 'probability': 0.05405106768012047}, {'value': ['build'], 'probability': 0.02685905061662197}, {'value': ['value'], 'probability': 0.02653813175857067}]","[1.0, 0.7199945, 0.43109724, 0.5626448, 0.46303764]",0.2164964901571555,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
60,60,"public void setContactCallbackFlag(int value) {CollisionJNI.GdxCollisionObjectBridge_contactCallbackFlag_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.GdxCollisionObjectBridge_contactCallbackFlag_set(swigCPtr, this, value);}
",setContactCallbackFlag,"[{'value': ['set'], 'probability': 0.7325881719589233}, {'value': ['put'], 'probability': 0.08284193277359009}, {'value': ['get'], 'probability': 0.009520967490971088}, {'value': ['execute'], 'probability': 0.006224526092410088}, {'value': ['read'], 'probability': 0.00610653730109334}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.4820371]",0.809726421470792,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
61,61,"public int getContactCallbackFlag() {return CollisionJNI.GdxCollisionObjectBridge_contactCallbackFlag_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.GdxCollisionObjectBridge_contactCallbackFlag_get(swigCPtr, this);}
",getContactCallbackFlag,"[{'value': ['get'], 'probability': 0.10927589982748032}, {'value': ['start'], 'probability': 0.053465720266103745}, {'value': ['size'], 'probability': 0.03502367064356804}, {'value': ['build'], 'probability': 0.03179776296019554}, {'value': ['trim'], 'probability': 0.025411246344447136}]","[1.0, 0.7199945, 0.43109724, 0.5626448, 0.29039297]",0.1881396238063274,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
62,62,"public void setContactCallbackFilter(int value) {CollisionJNI.GdxCollisionObjectBridge_contactCallbackFilter_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.GdxCollisionObjectBridge_contactCallbackFilter_set(swigCPtr, this, value);}
",setContactCallbackFilter,"[{'value': ['set'], 'probability': 0.7124119997024536}, {'value': ['put'], 'probability': 0.09053002297878265}, {'value': ['get'], 'probability': 0.009682096540927887}, {'value': ['execute'], 'probability': 0.006736996117979288}, {'value': ['accept'], 'probability': 0.006705210544168949}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.44626972]",0.7959918635267311,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
63,63,"public int getContactCallbackFilter() {return CollisionJNI.GdxCollisionObjectBridge_contactCallbackFilter_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public int [MASK]() {return CollisionJNI.GdxCollisionObjectBridge_contactCallbackFilter_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",getContactCallbackFilter,"[{'value': ['destroy'], 'probability': 0.7835800647735596}, {'value': ['build'], 'probability': 0.03168056532740593}, {'value': ['rebuild'], 'probability': 0.016990892589092255}, {'value': ['get'], 'probability': 0.012859617359936237}, {'value': ['save'], 'probability': 0.012077923864126205}]","[0.40928823, 0.5626448, 0.37552252, 1.0, 0.62758213]",0.3653549700105627,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
64,64,"public static long getCPtr(btIntIndexData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btIntIndexData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.1028326004743576}, {'value': ['execute'], 'probability': 0.0490729846060276}, {'value': ['read'], 'probability': 0.04015301540493965}, {'value': ['run'], 'probability': 0.0268729068338871}, {'value': ['update'], 'probability': 0.025984885171055794}]","[1.0, 0.37713256, 0.5726487, 0.65114945, 0.36048478]",0.1711986273922936,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
65,65,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
66,66,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btIntIndexData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btIntIndexData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8249770998954773}, {'value': ['start'], 'probability': 0.012967773713171482}, {'value': ['test'], 'probability': 0.011810479685664177}, {'value': ['clear'], 'probability': 0.011736464686691761}, {'value': ['execute'], 'probability': 0.010431700386106968}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1243392614830749,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
67,67,"public void setValue(int value) {CollisionJNI.btIntIndexData_value_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btIntIndexData_value_set(swigCPtr, this, value);}
",setValue,"[{'value': ['set'], 'probability': 0.597625195980072}, {'value': ['put'], 'probability': 0.12830357253551483}, {'value': ['get'], 'probability': 0.0153481001034379}, {'value': ['execute'], 'probability': 0.014459047466516495}, {'value': ['value'], 'probability': 0.010948069393634796}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.47274652]",0.7197980172777055,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
68,68,"public int getValue() {return CollisionJNI.btIntIndexData_value_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(DynamicsJNI.btFixedConstraint_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public int [MASK]() {return CollisionJNI.btIntIndexData_value_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(DynamicsJNI.btFixedConstraint_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",getValue,"[{'value': ['destroy'], 'probability': 0.8836269378662109}, {'value': ['rebuild'], 'probability': 0.012453188188374043}, {'value': ['destroyed'], 'probability': 0.012123157270252705}, {'value': ['build'], 'probability': 0.011891667731106281}, {'value': ['save'], 'probability': 0.007657727692276239}]","[0.40928823, 0.37552252, 0.32746348, 0.5626448, 0.62758213]",0.3818010849742106,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
69,69,"public static long getCPtr(btFixedConstraint obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btFixedConstraint obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.09051566570997238}, {'value': ['execute'], 'probability': 0.041538387537002563}, {'value': ['run'], 'probability': 0.03681975230574608}, {'value': ['read'], 'probability': 0.030375761911273003}, {'value': ['skip'], 'probability': 0.029758712276816368}]","[1.0, 0.37713256, 0.65114945, 0.5726487, 0.49507433]",0.1622837211531511,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
70,70,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
71,71,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btFixedConstraint(swigCPtr);}swigCPtr = 0;}super.delete();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.ClosestNotMeConvexResultCallback_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btFixedConstraint(swigCPtr);}swigCPtr = 0;}super.[MASK]();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.ClosestNotMeConvexResultCallback_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",delete,"[{'value': ['destroy'], 'probability': 0.8326042890548706}, {'value': ['run'], 'probability': 0.053958237171173096}, {'value': ['kill'], 'probability': 0.015489679761230946}, {'value': ['save'], 'probability': 0.010302352719008923}, {'value': ['rebuild'], 'probability': 0.008275165222585201}]","[0.30363193, 0.13931048, 0.21587177, 0.3240161, 0.15520619]",0.2682884658433156,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
72,72,"public static long getCPtr(ClosestNotMeConvexResultCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](ClosestNotMeConvexResultCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['execute'], 'probability': 0.05849252641201019}, {'value': ['get'], 'probability': 0.04749317094683647}, {'value': ['read'], 'probability': 0.045581184327602386}, {'value': ['update'], 'probability': 0.03841843828558922}, {'value': ['process'], 'probability': 0.03472846373915672}]","[0.37713256, 1.0, 0.5726487, 0.36048478, 0.52250975]",0.1276498368528007,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
73,73,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
74,74,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_ClosestNotMeConvexResultCallback(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_ClosestNotMeConvexResultCallback(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8007189631462097}, {'value': ['clear'], 'probability': 0.015168349258601665}, {'value': ['start'], 'probability': 0.013537857681512833}, {'value': ['test'], 'probability': 0.012133417651057243}, {'value': ['execute'], 'probability': 0.011342576704919338}]","[0.13931048, 0.18840031, 0.15163165, 0.14537679, 0.33713183]",0.1220468928141471,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
75,75,"public void setMe(btCollisionObject value) {CollisionJNI.ClosestNotMeConvexResultCallback_me_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);}
","public void [MASK](btCollisionObject value) {CollisionJNI.ClosestNotMeConvexResultCallback_me_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);}
",setMe,"[{'value': ['set'], 'probability': 0.4147246778011322}, {'value': ['put'], 'probability': 0.098959781229496}, {'value': ['execute'], 'probability': 0.032806094735860825}, {'value': ['save'], 'probability': 0.025118183344602585}, {'value': ['add'], 'probability': 0.02170015498995781}]","[1.0, 0.7944568, 0.35167885, 0.5413879, 0.5084879]",0.5295141032911623,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
76,76,"public btCollisionObject getMe() {return btCollisionObject.getInstance(CollisionJNI.ClosestNotMeConvexResultCallback_me_get(swigCPtr, this), false);}
","public btCollisionObject [MASK]() {return btCollisionObject.getInstance(CollisionJNI.ClosestNotMeConvexResultCallback_me_get(swigCPtr, this), false);}
",getMe,"[{'value': ['create'], 'probability': 0.2967989444732666}, {'value': ['resolve'], 'probability': 0.11400236189365387}, {'value': ['build'], 'probability': 0.10169756412506104}, {'value': ['get'], 'probability': 0.07225383818149567}, {'value': ['update'], 'probability': 0.03917759284377098}]","[0.62328804, 0.427468, 0.5626448, 1.0, 0.36048478]",0.3773199604876256,"[{'value': ['instance'], 'probability': 0.24291475117206573}, {'value': ['get', 'flags'], 'probability': 0.15380139648914337}, {'value': ['stop', 'capture'], 'probability': 0.11797503381967545}, {'value': ['what'], 'probability': 0.09154746681451797}, {'value': ['get', 'options'], 'probability': 0.08183800429105759}, {'value': ['get', 'instance'], 'probability': 0.07271350175142288}, {'value': ['get', 'publisher'], 'probability': 0.06692762672901154}, {'value': ['get', 'c', 'ptr'], 'probability': 0.059888411313295364}, {'value': ['get', 'top'], 'probability': 0.056414585560560226}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05597924441099167}]","[0.56794554, 0.75727946, 0.64470273, 0.76382285, 0.88330656, 0.9335536, 0.7924022, 0.67619735, 0.8810721, 0.7738402]",0.7271421495210391
77,77,"public void setAllowedPenetration(float value) {CollisionJNI.ClosestNotMeConvexResultCallback_allowedPenetration_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.ClosestNotMeConvexResultCallback_allowedPenetration_set(swigCPtr, this, value);}
",setAllowedPenetration,"[{'value': ['set'], 'probability': 0.6933829188346863}, {'value': ['put'], 'probability': 0.09715379029512405}, {'value': ['get'], 'probability': 0.01270865648984909}, {'value': ['add'], 'probability': 0.011600167490541935}, {'value': ['update'], 'probability': 0.007835364900529385}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.41854778]",0.7880096211216551,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
78,78,"public float getAllowedPenetration() {return CollisionJNI.ClosestNotMeConvexResultCallback_allowedPenetration_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.ClosestNotMeConvexResultCallback_allowedPenetration_get(swigCPtr, this);}
",getAllowedPenetration,"[{'value': ['get'], 'probability': 0.07803060859441757}, {'value': ['run'], 'probability': 0.04250992089509964}, {'value': ['float'], 'probability': 0.039939023554325104}, {'value': ['build'], 'probability': 0.035697054117918015}, {'value': ['next'], 'probability': 0.028157053515315056}]","[1.0, 0.65114945, 0.2808844, 0.5626448, 0.6966621]",0.1566298823202369,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
79,79,"public boolean needsCollision(btBroadphaseProxy proxy0) {return CollisionJNI.ClosestNotMeConvexResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btTriangleMeshShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public boolean [MASK](btBroadphaseProxy proxy0) {return CollisionJNI.ClosestNotMeConvexResultCallback_[MASK](swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btTriangleMeshShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",needsCollision,"[{'value': ['destroy'], 'probability': 0.5412460565567017}, {'value': ['destroyed'], 'probability': 0.2723194360733032}, {'value': ['equals'], 'probability': 0.022652925923466682}, {'value': ['execute'], 'probability': 0.006947231944650412}, {'value': ['create'], 'probability': 0.006711440160870552}]","[0.39677185, 0.29200307, 0.2667383, 0.34279618, 0.65305233]",0.3070761173131343,"[{'value': ['ne'], 'probability': 0.45477452874183655}, {'value': ['eq'], 'probability': 0.22312459349632263}, {'value': ['lt'], 'probability': 0.13212497532367706}, {'value': ['add'], 'probability': 0.05902798846364021}, {'value': ['set', 'proxy'], 'probability': 0.03212689235806465}, {'value': ['sub'], 'probability': 0.026076866313815117}, {'value': ['contains'], 'probability': 0.02420847862958908}, {'value': ['update'], 'probability': 0.01841956377029419}, {'value': ['swap'], 'probability': 0.016521427780389786}, {'value': ['has'], 'probability': 0.01359458826482296}]","[-0.02168029, -0.08718264, -0.106946915, 0.5224544, 0.48886395, 0.27184853, 0.3634551, 0.40481132, 0.28432757, 0.6698409]",0.04025032788380184
80,80,"public static long getCPtr(btTriangleMeshShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btTriangleMeshShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.06029642000794411}, {'value': ['read'], 'probability': 0.048766981810331345}, {'value': ['process'], 'probability': 0.034835606813430786}, {'value': ['execute'], 'probability': 0.030644580721855164}, {'value': ['skip'], 'probability': 0.030548201873898506}]","[1.0, 0.5726487, 0.52250975, 0.37713256, 0.49507433]",0.1331054132319121,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
81,81,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
82,82,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btTriangleMeshShape(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btTriangleMeshShape(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8216612339019775}, {'value': ['clear'], 'probability': 0.01536313071846962}, {'value': ['start'], 'probability': 0.012218653224408627}, {'value': ['test'], 'probability': 0.00862592738121748}, {'value': ['flush'], 'probability': 0.008388007991015911}]","[0.13931048, 0.18840031, 0.15163165, 0.14537679, 0.120570555]",0.1214785298207006,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
83,83,"public Vector3 localGetSupportingVertex(Vector3 vec) {return CollisionJNI.btTriangleMeshShape_localGetSupportingVertex(swigCPtr, this, vec);}
","public Vector3 [MASK](Vector3 vec) {return CollisionJNI.btTriangleMeshShape_[MASK](swigCPtr, this, vec);}
",localGetSupportingVertex,"[{'value': ['get'], 'probability': 0.05642901360988617}, {'value': ['create'], 'probability': 0.04026332125067711}, {'value': ['execute'], 'probability': 0.03848579525947571}, {'value': ['read'], 'probability': 0.03796812891960144}, {'value': ['generate'], 'probability': 0.028806420043110847}]","[0.5108234, 0.52390105, 0.17499971, 0.35517946, 0.3873329]",0.0812974347646384,"[{'value': ['vector'], 'probability': 0.5179876685142517}, {'value': ['inverse', 'transform'], 'probability': 0.24110451340675354}, {'value': ['get', 'vector'], 'probability': 0.12368141859769821}, {'value': ['get', 'extent'], 'probability': 0.02665318176150322}, {'value': ['test', 'point'], 'probability': 0.020196503028273582}, {'value': ['y'], 'probability': 0.01781558431684971}, {'value': ['cross'], 'probability': 0.01506078615784645}, {'value': ['get', 'reverse', 'vectors'], 'probability': 0.014057192951440811}, {'value': ['project', 'onto'], 'probability': 0.01200789399445057}, {'value': ['get', 'normal'], 'probability': 0.01143526379019022}]","[0.035835497, 0.13320443, 0.35613993, 0.56836414, 0.42303208, 0.07438364, 0.471054, 0.32455316, 0.48451686, 0.5443734]",0.1434439264853547
84,84,"public Vector3 localGetSupportingVertexWithoutMargin(Vector3 vec) {return CollisionJNI.btTriangleMeshShape_localGetSupportingVertexWithoutMargin(swigCPtr, this, vec);}
","public Vector3 [MASK](Vector3 vec) {return CollisionJNI.btTriangleMeshShape_[MASK](swigCPtr, this, vec);}
",localGetSupportingVertexWithoutMargin,"[{'value': ['get'], 'probability': 0.05642901360988617}, {'value': ['create'], 'probability': 0.04026332125067711}, {'value': ['execute'], 'probability': 0.03848579525947571}, {'value': ['read'], 'probability': 0.03796812891960144}, {'value': ['generate'], 'probability': 0.028806420043110847}]","[0.5108234, 0.52390105, 0.17499971, 0.35517946, 0.3873329]",0.0812974347646384,"[{'value': ['vector'], 'probability': 0.5179876685142517}, {'value': ['inverse', 'transform'], 'probability': 0.24110451340675354}, {'value': ['get', 'vector'], 'probability': 0.12368141859769821}, {'value': ['get', 'extent'], 'probability': 0.02665318176150322}, {'value': ['test', 'point'], 'probability': 0.020196503028273582}, {'value': ['y'], 'probability': 0.01781558431684971}, {'value': ['cross'], 'probability': 0.01506078615784645}, {'value': ['get', 'reverse', 'vectors'], 'probability': 0.014057192951440811}, {'value': ['project', 'onto'], 'probability': 0.01200789399445057}, {'value': ['get', 'normal'], 'probability': 0.01143526379019022}]","[0.035835497, 0.13320443, 0.35613993, 0.56836414, 0.42303208, 0.07438364, 0.471054, 0.32455316, 0.48451686, 0.5443734]",0.1434439264853547
85,85,"public void recalcLocalAabb() {CollisionJNI.btTriangleMeshShape_recalcLocalAabb(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btTriangleMeshShape_[MASK](swigCPtr, this);}
",recalcLocalAabb,"[{'value': ['run'], 'probability': 0.6022307276725769}, {'value': ['test'], 'probability': 0.10984477400779724}, {'value': ['execute'], 'probability': 0.048182111233472824}, {'value': ['setup'], 'probability': 0.0189667996019125}, {'value': ['start'], 'probability': 0.013164544478058815}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
86,86,"public btStridingMeshInterface getMeshInterface() {long cPtr = CollisionJNI.btTriangleMeshShape_getMeshInterface__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btStridingMeshInterface(cPtr, false);}
","public btStridingMeshInterface [MASK]() {long cPtr = CollisionJNI.btTriangleMeshShape_[MASK]__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btStridingMeshInterface(cPtr, false);}
",getMeshInterface,"[{'value': ['create'], 'probability': 0.1739620417356491}, {'value': ['build'], 'probability': 0.12488226592540741}, {'value': ['clone'], 'probability': 0.0886102020740509}, {'value': ['get'], 'probability': 0.07702010124921799}, {'value': ['resolve'], 'probability': 0.044065482914447784}]","[0.62328804, 0.5626448, 0.166604, 1.0, 0.427468]",0.2893123132765227,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
87,87,"public Vector3 getLocalAabbMin() {return CollisionJNI.btTriangleMeshShape_getLocalAabbMin(swigCPtr, this);}
","public Vector3 [MASK]() {return CollisionJNI.btTriangleMeshShape_[MASK](swigCPtr, this);}
",getLocalAabbMin,"[{'value': ['clone'], 'probability': 0.04952303692698479}, {'value': ['get'], 'probability': 0.030693110078573227}, {'value': ['##D'], 'probability': 0.02872302755713463}, {'value': ['build'], 'probability': 0.02849286049604416}, {'value': ['run'], 'probability': 0.028204595670104027}]","[0.166604, 1.0, 0.0, 0.5626448, 0.65114945]",0.0733406122147478,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.855474, 0.7318544, 0.90257215, 0.7609473, 0.6988793, 0.7657608, 0.85035914, 0.82370985, 0.62151444, 0.7876274]",0.8057931458994694
88,88,"public Vector3 getLocalAabbMax() {return CollisionJNI.btTriangleMeshShape_getLocalAabbMax(swigCPtr, this);}protected void stopped() {LwjglAWTFrame.this.dispose();}
","public Vector3 [MASK]() {return CollisionJNI.btTriangleMeshShape_[MASK](swigCPtr, this);}protected void stopped() {LwjglAWTFrame.this.dispose();}
",getLocalAabbMax,"[{'value': ['run'], 'probability': 0.13932301104068756}, {'value': ['##D'], 'probability': 0.04649677127599716}, {'value': ['execute'], 'probability': 0.029036466032266617}, {'value': ['clone'], 'probability': 0.0245448537170887}, {'value': ['get'], 'probability': 0.02250976301729679}]","[0.65114945, 0.0, 0.37713256, 0.166604, 1.0]",0.1282697329207979,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.855474, 0.7318544, 0.90257215, 0.7609473, 0.6988793, 0.7657608, 0.85035914, 0.82370985, 0.62151444, 0.7876274]",0.8057931458994694
89,89,"protected void setTitle(String title) {LwjglAWTFrame.this.setTitle(title);}
","protected void [MASK](String title) {LwjglAWTFrame.this.[MASK](title);}
",setTitle,"[{'value': ['render'], 'probability': 0.06917787343263626}, {'value': ['read'], 'probability': 0.05074220150709152}, {'value': ['perform'], 'probability': 0.04614418372511864}, {'value': ['apply'], 'probability': 0.041234079748392105}, {'value': ['add'], 'probability': 0.04098094254732132}]","[0.23491256, 0.4820371, 0.498045, 0.5010617, 0.5084879]",0.1051913844803666,"[{'value': ['set', 'title'], 'probability': 0.96920245885849}, {'value': ['change', 'title'], 'probability': 0.010976460762321949}, {'value': ['open', 'error', 'dialog'], 'probability': 0.010720718652009964}, {'value': ['update', 'title'], 'probability': 0.0036416458897292614}, {'value': ['set', 'title', 'at'], 'probability': 0.002167478436604142}, {'value': ['set', 'window', 'title'], 'probability': 0.0013093469897285104}, {'value': ['set', 'frame', 'title'], 'probability': 0.0011531695490702987}, {'value': ['title'], 'probability': 0.00044508028076961637}, {'value': ['reset', 'title'], 'probability': 0.00021651675342582166}, {'value': ['set', 'page', 'title'], 'probability': 0.0001672368380241096}]","[0.8680511, 0.7135162, 0.6168642, 0.6119261, 0.8665309, 0.86919355, 0.87920105, 0.5641553, 0.5808363, 0.8208574]",0.8625350524712482
90,90,"protected void setDisplayMode(int width, int height) {LwjglAWTFrame.this.getContentPane().setPreferredSize(new Dimension(width, height));LwjglAWTFrame.this.getContentPane().invalidate();LwjglAWTFrame.this.pack();LwjglAWTFrame.this.setLocationRelativeTo(null);updateSize(width, height);}
","protected void [MASK](int width, int height) {LwjglAWTFrame.this.getContentPane().setPreferredSize(new Dimension(width, height));LwjglAWTFrame.this.getContentPane().invalidate();LwjglAWTFrame.this.pack();LwjglAWTFrame.this.setLocationRelativeTo(null);updateSize(width, height);}
",setDisplayMode,"[{'value': ['update'], 'probability': 0.2334624081850052}, {'value': ['pack'], 'probability': 0.15093445777893066}, {'value': ['set'], 'probability': 0.044839274138212204}, {'value': ['add'], 'probability': 0.04362897947430611}, {'value': ['expand'], 'probability': 0.040051206946372986}]","[0.41854778, 0.459913, 1.0, 0.5084879, 0.45930284]",0.2525516042308162,"[{'value': ['on', 'resize'], 'probability': 0.38561710715293884}, {'value': ['component', 'resized'], 'probability': 0.16354502737522125}, {'value': ['resized'], 'probability': 0.08387570828199387}, {'value': ['show', 'dialog'], 'probability': 0.07776737958192825}, {'value': ['run'], 'probability': 0.07567154616117477}, {'value': ['applet', 'resize'], 'probability': 0.06416736543178558}, {'value': ['layout'], 'probability': 0.056068792939186096}, {'value': ['force', 'size'], 'probability': 0.03570433333516121}, {'value': ['set', 'line', 'width'], 'probability': 0.029736023396253586}, {'value': ['set', 'preferred', 'size'], 'probability': 0.027846766635775566}]","[0.6232094, 0.17609896, -0.24353683, 0.5307525, 0.67632943, -0.111235976, 0.31299853, 0.6097195, 0.7577858, 0.78941536]",0.41784517602082827
91,91,"protected void resize(int width, int height) {updateSize(width, height);}
","protected void [MASK](int width, int height) {updateSize(width, height);}
",resize,"[{'value': ['update'], 'probability': 0.8191725611686707}, {'value': ['expand'], 'probability': 0.05447976663708687}, {'value': ['adjust'], 'probability': 0.01845701038837433}, {'value': ['add'], 'probability': 0.0123676136136055}, {'value': ['fill'], 'probability': 0.006264882627874613}]","[0.08713582, 0.13479394, 0.3951292, 0.18571174, 0.19123738]",0.089510610967311,"[{'value': ['update', 'size'], 'probability': 0.5232377648353577}, {'value': ['set', 'size', 'in', 'layout'], 'probability': 0.20947492122650146}, {'value': ['set', 'fixed', 'width'], 'probability': 0.1565418243408203}, {'value': ['on', 'resize'], 'probability': 0.035787343978881836}, {'value': ['set', 'size'], 'probability': 0.026363281533122063}, {'value': ['force', 'size'], 'probability': 0.014536239206790924}, {'value': ['size', 'changed'], 'probability': 0.013553064316511154}, {'value': ['set', 'width', 'in', 'pixels'], 'probability': 0.008662470616400242}, {'value': ['set', 'fixed', 'size'], 'probability': 0.007857478223741055}, {'value': ['resize', 'width'], 'probability': 0.003985646180808544}]","[0.079015136, -0.09356711, 0.008338735, 0.38686702, -0.043681968, -0.052579317, -0.043202918, 0.021593127, -0.033959817, 0.6340671]",0.03683998500580386
92,92,"protected void start() {LwjglAWTFrame.this.start();}
","protected void [MASK]() {LwjglAWTFrame.this.[MASK]();}
",start,"[{'value': ['run'], 'probability': 0.47358280420303345}, {'value': ['test'], 'probability': 0.04882882162928581}, {'value': ['execute'], 'probability': 0.028980707749724388}, {'value': ['start'], 'probability': 0.02781275101006031}, {'value': ['clear'], 'probability': 0.01817741058766842}]","[0.7167411, 0.5409797, 0.34272963, 0.99999994, 0.59196377]",0.4143573184175331,"[{'value': ['start'], 'probability': 0.7057973742485046}, {'value': ['execute'], 'probability': 0.15840984880924225}, {'value': ['run'], 'probability': 0.08830215036869049}, {'value': ['trigger'], 'probability': 0.02078893966972828}, {'value': ['init'], 'probability': 0.0061367652378976345}, {'value': ['restart'], 'probability': 0.004844152368605137}, {'value': ['clear'], 'probability': 0.004831197205930948}, {'value': ['bar'], 'probability': 0.004723884630948305}, {'value': ['refresh'], 'probability': 0.003411893267184496}, {'value': ['resume'], 'probability': 0.0027538228314369917}]","[0.99999994, 0.34272963, 0.7167411, 0.3944262, -0.10181439, 0.55948484, 0.59196377, 0.36310467, 0.13308483, 0.67066956]",0.8405401171023996
93,93,"public LwjglAWTCanvas getLwjglAWTCanvas() {return lwjglAWTCanvas;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(DynamicsJNI.btSimpleDynamicsWorld_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public LwjglAWTCanvas [MASK]() {return lwjglAWTCanvas;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(DynamicsJNI.btSimpleDynamicsWorld_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",getLwjglAWTCanvas,"[{'value': ['destroy'], 'probability': 0.563678503036499}, {'value': ['build'], 'probability': 0.06343445926904678}, {'value': ['create'], 'probability': 0.05455723777413368}, {'value': ['get'], 'probability': 0.032461345195770264}, {'value': ['rebuild'], 'probability': 0.026392901316285133}]","[0.40928823, 0.5626448, 0.62328804, 1.0, 0.37552252]",0.3427753904456874,"[{'value': ['get', 'return', 'value', 'evaluator', 'builder'], 'probability': 0.4247720241546631}, {'value': ['get', 'instance'], 'probability': 0.16884231567382812}, {'value': ['get', 'practitioners'], 'probability': 0.1482422649860382}, {'value': ['get', 'rule', 'class', 'builder'], 'probability': 0.0768919587135315}, {'value': ['get', 'process', 'class', 'builder'], 'probability': 0.04578394070267677}, {'value': ['get', 'unordered', 'group'], 'probability': 0.038000915199518204}, {'value': ['instance'], 'probability': 0.028320306912064552}, {'value': ['get', 'controller'], 'probability': 0.023908505216240883}, {'value': ['get', 'location', 'director'], 'probability': 0.02313094399869442}, {'value': ['get', 'expression', 'result', 'cache', 'service'], 'probability': 0.02210685983300209}]","[0.7406743, 0.9335536, 0.79009414, 0.7525242, 0.76803493, 0.7201201, 0.56794554, 0.78993636, 0.7773781, 0.7415164]",0.7791030444106595
94,94,"public static long getCPtr(btSimpleDynamicsWorld obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btSimpleDynamicsWorld obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.10595446079969406}, {'value': ['update'], 'probability': 0.04577166959643364}, {'value': ['replace'], 'probability': 0.04098992049694061}, {'value': ['execute'], 'probability': 0.035155829042196274}, {'value': ['read'], 'probability': 0.029633549973368645}]","[1.0, 0.36048478, 0.4901826, 0.37713256, 0.5726487]",0.1727750191015562,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
95,95,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
96,96,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btSimpleDynamicsWorld(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btSimpleDynamicsWorld(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8169853091239929}, {'value': ['start'], 'probability': 0.016808833926916122}, {'value': ['clear'], 'probability': 0.012556619942188263}, {'value': ['test'], 'probability': 0.011044885031878948}, {'value': ['execute'], 'probability': 0.008890367113053799}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1233319329044384,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
97,97,"public int stepSimulation(float timeStep, int maxSubSteps, float fixedTimeStep) {return DynamicsJNI.btSimpleDynamicsWorld_stepSimulation__SWIG_0(swigCPtr, this, timeStep, maxSubSteps, fixedTimeStep);}
","public int [MASK](float timeStep, int maxSubSteps, float fixedTimeStep) {return DynamicsJNI.btSimpleDynamicsWorld_[MASK]__SWIG_0(swigCPtr, this, timeStep, maxSubSteps, fixedTimeStep);}
",stepSimulation,"[{'value': ['compare'], 'probability': 0.10529143363237381}, {'value': ['execute'], 'probability': 0.08621439337730408}, {'value': ['get'], 'probability': 0.07160203158855438}, {'value': ['skip'], 'probability': 0.05183463916182518}, {'value': ['read'], 'probability': 0.041896820068359375}]","[0.28623053, 0.37642893, 0.6377004, 0.37268457, 0.42139557]",0.1452249624865865,"[{'value': ['step', 'simulation'], 'probability': 0.9999837875366211}, {'value': ['get', 'default', 'state'], 'probability': 3.301232027297374e-06}, {'value': ['select', 'rows'], 'probability': 2.261979261675151e-06}, {'value': ['get', 'current', 'result'], 'probability': 2.005505166380317e-06}, {'value': ['find', 'request'], 'probability': 1.8795362848322839e-06}, {'value': ['new', 'queue'], 'probability': 1.772916448317119e-06}, {'value': ['get', 'history'], 'probability': 1.6677292933309218e-06}, {'value': ['read', 'v', 'long'], 'probability': 1.1724903288268251e-06}, {'value': ['get', 'map', 'size'], 'probability': 1.1007008424712694e-06}, {'value': ['base', 'suite'], 'probability': 1.0525722018428496e-06}]","[0.76428145, 0.6414379, 0.34742278, 0.69783366, 0.69522107, 0.5983922, 0.60425174, 0.51869917, 0.63285106, 0.31508124]",0.7642783737385918
98,98,"public int stepSimulation(float timeStep, int maxSubSteps) {return DynamicsJNI.btSimpleDynamicsWorld_stepSimulation__SWIG_1(swigCPtr, this, timeStep, maxSubSteps);}
","public int [MASK](float timeStep, int maxSubSteps) {return DynamicsJNI.btSimpleDynamicsWorld_[MASK]__SWIG_1(swigCPtr, this, timeStep, maxSubSteps);}
",stepSimulation,"[{'value': ['compare'], 'probability': 0.0934542864561081}, {'value': ['execute'], 'probability': 0.06130366399884224}, {'value': ['get'], 'probability': 0.05246957018971443}, {'value': ['update'], 'probability': 0.04526279494166374}, {'value': ['skip'], 'probability': 0.038960739970207214}]","[0.28623053, 0.37642893, 0.6377004, 0.33115402, 0.37268457]",0.1127948308916835,"[{'value': ['step', 'simulation'], 'probability': 0.999996542930603}, {'value': ['get', 'default', 'state'], 'probability': 1.9533713384589646e-06}, {'value': ['next', 'tile'], 'probability': 3.353816282469779e-07}, {'value': ['make', 'unique'], 'probability': 2.193620929347162e-07}, {'value': ['next', 'position'], 'probability': 2.127444531652145e-07}, {'value': ['set', 'time', 'step'], 'probability': 1.8105876620211347e-07}, {'value': ['read', 'entity'], 'probability': 1.5217217708141106e-07}, {'value': ['contains', 'index'], 'probability': 1.1778572428511325e-07}, {'value': ['check', 'ban'], 'probability': 1.0567512020998038e-07}, {'value': ['find', 'request'], 'probability': 9.881900098207552e-08}]","[0.76428145, 0.6414379, 0.5176391, 0.66187257, 0.7505214, 0.85649693, 0.4912942, 0.29405424, 0.5866812, 0.69522107]",0.7642809344296941
99,99,"public int stepSimulation(float timeStep) {return DynamicsJNI.btSimpleDynamicsWorld_stepSimulation__SWIG_2(swigCPtr, this, timeStep);}
","public int [MASK](float timeStep) {return DynamicsJNI.btSimpleDynamicsWorld_[MASK]__SWIG_2(swigCPtr, this, timeStep);}
",stepSimulation,"[{'value': ['get'], 'probability': 0.1275995373725891}, {'value': ['compare'], 'probability': 0.06559579074382782}, {'value': ['update'], 'probability': 0.05074150860309601}, {'value': ['execute'], 'probability': 0.03374161198735237}, {'value': ['value'], 'probability': 0.027423836290836334}]","[0.6377004, 0.28623053, 0.33115402, 0.37642893, 0.43011862]",0.1414458676426203,"[{'value': ['get', 'property'], 'probability': 0.32848310470581055}, {'value': ['equals'], 'probability': 0.17464949190616608}, {'value': ['get', 'properties'], 'probability': 0.15005971491336823}, {'value': ['update'], 'probability': 0.09791746735572815}, {'value': ['contains'], 'probability': 0.07486200332641602}, {'value': ['length'], 'probability': 0.07087326049804688}, {'value': ['get', 'meta', 'data'], 'probability': 0.029423855245113373}, {'value': ['get', 'time', 'step'], 'probability': 0.027872003614902496}, {'value': ['set', 'time', 'step'], 'probability': 0.024103019386529922}, {'value': ['get'], 'probability': 0.02175612561404705}]","[0.58283466, 0.19795486, 0.5594316, 0.33115402, 0.23831482, 0.35610408, 0.5205631, 0.8509742, 0.85649693, 0.6377004]",0.4590303271864985
100,100,"public void addRigidBody(btRigidBody body) {DynamicsJNI.btSimpleDynamicsWorld_addRigidBody__SWIG_0(swigCPtr, this, btRigidBody.getCPtr(body), body);}
","public void [MASK](btRigidBody body) {DynamicsJNI.btSimpleDynamicsWorld_[MASK]__SWIG_0(swigCPtr, this, btRigidBody.getCPtr(body), body);}
",addRigidBody,"[{'value': ['test'], 'probability': 0.12451323121786118}, {'value': ['setup'], 'probability': 0.06955265998840332}, {'value': ['execute'], 'probability': 0.06751536577939987}, {'value': ['run'], 'probability': 0.05087455362081528}, {'value': ['update'], 'probability': 0.047749944031238556}]","[0.30969554, 0.25112122, 0.24202506, 0.41304266, 0.5117927]",0.1178191871558788,"[{'value': ['swap'], 'probability': 0.7760510444641113}, {'value': ['add'], 'probability': 0.0570191964507103}, {'value': ['set', 'body'], 'probability': 0.04621634632349014}, {'value': ['make', 'union'], 'probability': 0.026710525155067444}, {'value': ['assign'], 'probability': 0.020065177232027054}, {'value': ['push'], 'probability': 0.017501475289463997}, {'value': ['add', 'unique'], 'probability': 0.016202528029680252}, {'value': ['sub'], 'probability': 0.013970890082418919}, {'value': ['set', 'operand'], 'probability': 0.013472934253513813}, {'value': ['set', 'previous'], 'probability': 0.012789756990969181}]","[0.30766857, 1.0, 0.4832499, 0.49790868, 0.33602518, 0.50270826, 0.8695815, 0.17964324, 0.36018175, 0.4679695]",0.3743968153997534
101,101,"public void dispose() {ui.dispose();skin.dispose();image2.getTexture().dispose();}
","public void [MASK]() {ui.[MASK]();skin.[MASK]();image2.getTexture().[MASK]();}
",dispose,"[{'value': ['run'], 'probability': 0.3034937083721161}, {'value': ['clear'], 'probability': 0.05316789820790291}, {'value': ['test'], 'probability': 0.04547439143061638}, {'value': ['start'], 'probability': 0.04509822651743889}, {'value': ['close'], 'probability': 0.0408862866461277}]","[0.13288948, 0.20622805, 0.12328751, 0.14684053, 0.17637412]",0.0707357873814532,"[{'value': ['dispose'], 'probability': 0.9948705434799194}, {'value': ['dispose', 'resources'], 'probability': 0.0017387447878718376}, {'value': ['dispose', 'internal'], 'probability': 0.00167408911511302}, {'value': ['hide'], 'probability': 0.0007791424868628383}, {'value': ['dispose', 'icons'], 'probability': 0.0002583368623163551}, {'value': ['on', 'dispose'], 'probability': 0.00015779621026013047}, {'value': ['deinit'], 'probability': 0.00013460198533721268}, {'value': ['dispose', 'images'], 'probability': 0.00013327675696928054}, {'value': ['run'], 'probability': 0.00013318755372893065}, {'value': ['dispose', 'image'], 'probability': 0.00012024313036818057}]","[0.99999994, 0.7428976, 0.6983693, 0.4591369, 0.69316214, 0.66587484, 0.0, 0.68612313, 0.13288948, 0.6833028]",0.9981645064437954
102,102,"public void render() {Gdx.gl.glClearColor(0.2f, 0.2f, 0.2f, 1);Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);ui.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));ui.draw();}
","public void [MASK]() {Gdx.gl.glClearColor(0.2f, 0.2f, 0.2f, 1);Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);ui.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));ui.draw();}
",render,"[{'value': ['draw'], 'probability': 0.7961194515228271}, {'value': ['paint'], 'probability': 0.057167522609233856}, {'value': ['flush'], 'probability': 0.020963674411177635}, {'value': ['fill'], 'probability': 0.017187735065817833}, {'value': ['start'], 'probability': 0.007953430525958538}]","[0.2878108, 0.25964546, 0.1283141, 0.3157022, 0.16855277]",0.2534317794087744,"[{'value': ['render'], 'probability': 0.9991394281387329}, {'value': ['display'], 'probability': 0.00038085514097474515}, {'value': ['save'], 'probability': 0.00029776550945825875}, {'value': ['init'], 'probability': 8.790380525169894e-05}, {'value': ['update'], 'probability': 3.462568565737456e-05}, {'value': ['reset'], 'probability': 1.7848100469564088e-05}, {'value': ['clear'], 'probability': 1.3096023394609801e-05}, {'value': ['validate'], 'probability': 1.2282880561542697e-05}, {'value': ['print'], 'probability': 1.0412153642391786e-05}, {'value': ['refresh'], 'probability': 5.683373728970764e-06}]","[1.0, 0.30272847, 0.30900162, 0.1500768, 0.3001075, 0.13656701, 0.38354138, 0.49237204, 0.24074925, 0.21355183]",0.9993875460960134
103,103,"public void resize(int width, int height) {ui.getViewport().update(width, height, true);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btDbvtProxy_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public void [MASK](int width, int height) {ui.getViewport().update(width, height, true);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btDbvtProxy_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",resize,"[{'value': ['update'], 'probability': 0.9517222046852112}, {'value': ['save'], 'probability': 0.0049324193969368935}, {'value': ['restore'], 'probability': 0.004070381633937359}, {'value': ['expand'], 'probability': 0.002940850332379341}, {'value': ['add'], 'probability': 0.0025753770023584366}]","[0.08713582, 0.039178893, 0.14868471, 0.13479394, 0.18571174]",0.0846022330105891,"[{'value': ['update'], 'probability': 0.9811295866966248}, {'value': ['on', 'update'], 'probability': 0.011266989633440971}, {'value': ['repaint'], 'probability': 0.0013881418853998184}, {'value': ['paint', 'border'], 'probability': 0.0013276207027956843}, {'value': ['redraw'], 'probability': 0.00113501341547817}, {'value': ['refresh'], 'probability': 0.0008440930978395045}, {'value': ['size', 'changed'], 'probability': 0.0007842432823963463}, {'value': ['update', 'width'], 'probability': 0.0007722548325546086}, {'value': ['update', 'height'], 'probability': 0.0006863370654173195}, {'value': ['set', 'height'], 'probability': 0.0006657633348368108}]","[0.08713582, -0.11864722, 0.49847522, -0.030497814, 0.42811495, 0.49163517, -0.043202918, 0.15163319, 0.022267617, -0.10544546]",0.08573540016836768
104,104,"public static long getCPtr(btDbvtProxy obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btDbvtProxy obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.10139515995979309}, {'value': ['execute'], 'probability': 0.05108095705509186}, {'value': ['run'], 'probability': 0.03728071227669716}, {'value': ['read'], 'probability': 0.02929200604557991}, {'value': ['match'], 'probability': 0.027737030759453773}]","[1.0, 0.37713256, 0.65114945, 0.5726487, 0.4692583]",0.1747246291003277,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
105,105,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
106,106,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btDbvtProxy(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btDbvtProxy(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8250593543052673}, {'value': ['test'], 'probability': 0.014047413133084774}, {'value': ['start'], 'probability': 0.012453545816242695}, {'value': ['clear'], 'probability': 0.008764495141804218}, {'value': ['execute'], 'probability': 0.008726579137146473}]","[0.13931048, 0.14537679, 0.15163165, 0.18840031, 0.33713183]",0.1234631747175351,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
107,107,"public void setLeaf(btDbvtNode value) {CollisionJNI.btDbvtProxy_leaf_set(swigCPtr, this, btDbvtNode.getCPtr(value), value);}
","public void [MASK](btDbvtNode value) {CollisionJNI.btDbvtProxy_leaf_set(swigCPtr, this, btDbvtNode.getCPtr(value), value);}
",setLeaf,"[{'value': ['set'], 'probability': 0.3965213894844055}, {'value': ['put'], 'probability': 0.08155795186758041}, {'value': ['execute'], 'probability': 0.040464967489242554}, {'value': ['read'], 'probability': 0.031759560108184814}, {'value': ['add'], 'probability': 0.02481628954410553}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.5084879]",0.5034743990956092,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
108,108,"public btDbvtNode getLeaf() {long cPtr = CollisionJNI.btDbvtProxy_leaf_get(swigCPtr, this);return (cPtr == 0) ? null : new btDbvtNode(cPtr, false);}
","public btDbvtNode [MASK]() {long cPtr = CollisionJNI.btDbvtProxy_leaf_get(swigCPtr, this);return (cPtr == 0) ? null : new btDbvtNode(cPtr, false);}
",getLeaf,"[{'value': ['clone'], 'probability': 0.11682604253292084}, {'value': ['get'], 'probability': 0.09026601165533066}, {'value': ['read'], 'probability': 0.058129023760557175}, {'value': ['resolve'], 'probability': 0.049388397485017776}, {'value': ['create'], 'probability': 0.044871918857097626}]","[0.166604, 1.0, 0.5726487, 0.427468, 0.62328804]",0.1920972971960226,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
109,109,"public void setLinks(SWIGTYPE_p_p_btDbvtProxy value) {CollisionJNI.btDbvtProxy_links_set(swigCPtr, this, SWIGTYPE_p_p_btDbvtProxy.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_p_btDbvtProxy value) {CollisionJNI.btDbvtProxy_links_set(swigCPtr, this, SWIGTYPE_p_p_btDbvtProxy.getCPtr(value));}
",setLinks,"[{'value': ['set'], 'probability': 0.7358684539794922}, {'value': ['put'], 'probability': 0.07146725803613663}, {'value': ['add'], 'probability': 0.025862310081720352}, {'value': ['setup'], 'probability': 0.012305308133363724}, {'value': ['apply'], 'probability': 0.011553705669939518}]","[1.0, 0.7944568, 0.5084879, 0.35182503, 0.5010617]",0.815915207438514,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
110,110,"public SWIGTYPE_p_p_btDbvtProxy getLinks() {long cPtr = CollisionJNI.btDbvtProxy_links_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_p_btDbvtProxy(cPtr, false);}
","public SWIGTYPE_p_p_btDbvtProxy [MASK]() {long cPtr = CollisionJNI.btDbvtProxy_links_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_p_btDbvtProxy(cPtr, false);}
",getLinks,"[{'value': ['get'], 'probability': 0.302581787109375}, {'value': ['bind'], 'probability': 0.039315737783908844}, {'value': ['build'], 'probability': 0.030685458332300186}, {'value': ['>'], 'probability': 0.029266754165291786}, {'value': ['##2'], 'probability': 0.027436107397079468}]","[1.0, 0.28566128, 0.5626448, 0.13650262, 0.0]",0.3350727727643856,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
111,111,"public void setStage(int value) {CollisionJNI.btDbvtProxy_stage_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btDbvtProxy_stage_set(swigCPtr, this, value);}
",setStage,"[{'value': ['set'], 'probability': 0.5770082473754883}, {'value': ['put'], 'probability': 0.09965193271636963}, {'value': ['execute'], 'probability': 0.022355249151587486}, {'value': ['save'], 'probability': 0.011659333482384682}, {'value': ['get'], 'probability': 0.010145862586796284}]","[1.0, 0.7944568, 0.35167885, 0.5413879, 0.65028083]",0.6769491514605211,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
112,112,"public int getStage() {return CollisionJNI.btDbvtProxy_stage_get(swigCPtr, this);}public final int capacity() {return capacity;}
","public int [MASK]() {return CollisionJNI.btDbvtProxy_stage_get(swigCPtr, this);}public final int capacity() {return capacity;}
",getStage,"[{'value': ['capacity'], 'probability': 0.19128884375095367}, {'value': ['size'], 'probability': 0.11202474683523178}, {'value': ['value'], 'probability': 0.0848158597946167}, {'value': ['length'], 'probability': 0.06176867336034775}, {'value': ['position'], 'probability': 0.03834111988544464}]","[0.39120343, 0.43109724, 0.46303764, 0.3304365, 0.5401049]",0.2035181988644825,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
113,113,"public final Buffer clear() {position = 0;mark = UNSET_MARK;limit = capacity;return this;}
","public final [MASK] clear() {position = 0;mark = UNSET_MARK;limit = capacity;return this;}
",Buffer,"[{'value': ['void'], 'probability': 0.9871914386749268}, {'value': ['String'], 'probability': 0.0019074806477874517}, {'value': ['double'], 'probability': 0.0010296220425516367}, {'value': ['long'], 'probability': 0.00078323989873752}, {'value': ['float'], 'probability': 0.0004696301184594631}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clear'], 'probability': 0.9163652062416077}, {'value': ['rewind'], 'probability': 0.06243881583213806}, {'value': ['flip'], 'probability': 0.0075842589139938354}, {'value': ['compact'], 'probability': 0.005667004268616438}, {'value': ['mark'], 'probability': 0.004226609133183956}, {'value': ['reset'], 'probability': 0.003275353228673339}, {'value': ['dup'], 'probability': 0.0002052111376542598}, {'value': ['duplicate'], 'probability': 9.882279846351594e-05}, {'value': ['trim'], 'probability': 7.321005978155881e-05}, {'value': ['truncate'], 'probability': 6.538569141412154e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
114,114,"public final Buffer flip() {limit = position;position = 0;mark = UNSET_MARK;return this;}
","public final [MASK] flip() {limit = position;position = 0;mark = UNSET_MARK;return this;}
",Buffer,"[{'value': ['void'], 'probability': 0.6230610013008118}, {'value': ['Double'], 'probability': 0.07708475738763809}, {'value': ['double'], 'probability': 0.06871213763952255}, {'value': ['float'], 'probability': 0.02787182852625847}, {'value': ['dot'], 'probability': 0.021997498348355293}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['flip'], 'probability': 0.5384737253189087}, {'value': ['rewind'], 'probability': 0.3280755281448364}, {'value': ['clear'], 'probability': 0.10526562482118607}, {'value': ['compact'], 'probability': 0.020153891295194626}, {'value': ['mark'], 'probability': 0.004385637119412422}, {'value': ['duplicate'], 'probability': 0.001348322257399559}, {'value': ['reset'], 'probability': 0.0009854023810476065}, {'value': ['shift'], 'probability': 0.000606354558840394}, {'value': ['next'], 'probability': 0.00037041009636595845}, {'value': ['clone'], 'probability': 0.0003349898033775389}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
115,115,"public final boolean hasRemaining() {return position < limit;}
","public final [MASK] hasRemaining() {return position < limit;}
",boolean,"[{'value': ['position'], 'probability': 0.3589108884334564}, {'value': ['String'], 'probability': 0.16662342846393585}, {'value': ['Point'], 'probability': 0.10239675641059875}, {'value': ['float'], 'probability': 0.06066824495792389}, {'value': ['long'], 'probability': 0.048259831964969635}]","[-0.002468336, 0.0, 0.0, 0.055554304, -0.07843863]",-0.0013009657026844,"[{'value': ['has', 'remaining'], 'probability': 0.9992177486419678}, {'value': ['has', 'next'], 'probability': 0.0006751293549314141}, {'value': ['has', 'more'], 'probability': 3.8213351217564195e-05}, {'value': ['more'], 'probability': 2.479523936926853e-05}, {'value': ['next', 'char'], 'probability': 1.7668317013885826e-05}, {'value': ['has', 'more', 'elements'], 'probability': 1.6385902199544944e-05}, {'value': ['covers'], 'probability': 3.8035752822906943e-06}, {'value': ['more', 'tokens'], 'probability': 2.7407363631937187e-06}, {'value': ['is', 'empty'], 'probability': 2.04207526621758e-06}, {'value': ['has', 'previous'], 'probability': 1.463117882849474e-06}]","[-0.048678428, -0.059487294, -0.051324625, -0.042708423, -0.12796035, 0.045580763, -0.08723728, 0.10420678, 0.08697766, -0.013681004]",-0.04868493367785595
116,116,"public final int limit() {return limit;}
","public final [MASK] limit() {return limit;}
",int,"[{'value': ['limit'], 'probability': 0.6632842421531677}, {'value': ['void'], 'probability': 0.1114555299282074}, {'value': ['Point'], 'probability': 0.024714205414056778}, {'value': ['String'], 'probability': 0.024257486686110497}, {'value': ['Date'], 'probability': 0.019213439896702766}]","[-0.005490243, -0.009351521, 0.0, 0.0, 0.0]",-0.0046838703533906,"[{'value': ['get', 'limit'], 'probability': 0.9285876154899597}, {'value': ['limit'], 'probability': 0.0632292777299881}, {'value': ['size'], 'probability': 0.003927221521735191}, {'value': ['get', 'length'], 'probability': 0.0014017610810697079}, {'value': ['get', 'remaining'], 'probability': 0.0011665801284834743}, {'value': ['get', 'thread', 'pool', 'size'], 'probability': 0.0005199734587222338}, {'value': ['capacity'], 'probability': 0.00034094773582182825}, {'value': ['get', 'count'], 'probability': 0.0003024636534973979}, {'value': ['get', 'recursion', 'limit'], 'probability': 0.0002766083925962448}, {'value': ['length'], 'probability': 0.000247563817538321}]","[0.008078829, -0.005490243, 0.11546131, 0.07423024, -0.00043870672, 0.11083082, 0.039820027, -0.01524472, 0.036229435, 0.10128538]",0.007813430494357761
117,117,"public final Buffer limit(int newLimit) {if (newLimit < 0 || newLimit > capacity) {throw new IllegalArgumentException();}limit = newLimit;if (position > newLimit) {position = newLimit;}if ((mark != UNSET_MARK) && (mark > newLimit)) {mark = UNSET_MARK;}return this;}
","public final [MASK] limit(int newLimit) {if (newLimit < 0 || newLimit > capacity) {throw new IllegalArgumentException();}limit = newLimit;if (position > newLimit) {position = newLimit;}if ((mark != UNSET_MARK) && (mark > newLimit)) {mark = UNSET_MARK;}return this;}
",Buffer,"[{'value': ['void'], 'probability': 0.9019907712936401}, {'value': ['Point'], 'probability': 0.013996963389217854}, {'value': ['String'], 'probability': 0.01162430364638567}, {'value': ['long'], 'probability': 0.00918043963611126}, {'value': ['double'], 'probability': 0.008529783226549625}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['limit'], 'probability': 0.9998952150344849}, {'value': ['set', 'limit'], 'probability': 4.7542620450258255e-05}, {'value': ['truncate'], 'probability': 3.618321716203354e-05}, {'value': ['drop'], 'probability': 4.885167072643526e-06}, {'value': ['scale'], 'probability': 4.765853645949392e-06}, {'value': ['position'], 'probability': 4.674716819863534e-06}, {'value': ['remaining'], 'probability': 3.752895736397477e-06}, {'value': ['skip', 'bytes'], 'probability': 1.3350986591831315e-06}, {'value': ['read'], 'probability': 1.0316183534087031e-06}, {'value': ['union'], 'probability': 6.134198429208482e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
118,118,"public final Buffer mark() {mark = position;return this;}
","public final [MASK] mark() {mark = position;return this;}
",Buffer,"[{'value': ['position'], 'probability': 0.48651835322380066}, {'value': ['String'], 'probability': 0.16531655192375183}, {'value': ['void'], 'probability': 0.07415799051523209}, {'value': ['double'], 'probability': 0.03476235270500183}, {'value': ['Point'], 'probability': 0.031059542670845985}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mark'], 'probability': 0.9910338521003723}, {'value': ['rewind'], 'probability': 0.003466254798695445}, {'value': ['duplicate'], 'probability': 0.002999564865604043}, {'value': ['flip'], 'probability': 0.001170499948784709}, {'value': ['reset'], 'probability': 0.0005303349462337792}, {'value': ['buffer'], 'probability': 0.0003715566999744624}, {'value': ['clear'], 'probability': 0.00027018901892006397}, {'value': ['clone'], 'probability': 7.875473966123536e-05}, {'value': ['end'], 'probability': 4.0487153455615044e-05}, {'value': ['slice'], 'probability': 3.860721699311398e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
119,119,"public final int position() {return position;}
","public final [MASK] position() {return position;}
",int,"[{'value': ['String'], 'probability': 0.5013535618782043}, {'value': ['position'], 'probability': 0.18081152439117432}, {'value': ['Point'], 'probability': 0.06032757833600044}, {'value': ['##bject'], 'probability': 0.05816221609711647}, {'value': ['float'], 'probability': 0.0380413793027401}]","[0.0, -0.07507713, 0.0, 0.0, 0.07377654]",-0.0107682491123963,"[{'value': ['get', 'position'], 'probability': 0.9659690856933594}, {'value': ['position'], 'probability': 0.03078852966427803}, {'value': ['offset'], 'probability': 0.0008340243366546929}, {'value': ['size'], 'probability': 0.0008071577758528292}, {'value': ['get', 'frame', 'position'], 'probability': 0.00041395187145099044}, {'value': ['get', 'absolute', 'position'], 'probability': 0.00032343462225981057}, {'value': ['get', 'offset'], 'probability': 0.000271485565463081}, {'value': ['get', 'argument', 'position'], 'probability': 0.00020106312877032906}, {'value': ['next', 'index'], 'probability': 0.00020095192303415388}, {'value': ['get', 'line'], 'probability': 0.00019032135605812073}]","[-0.030869206, -0.07507713, -0.024291577, 0.11546131, -0.028873822, -0.024657466, -0.0022960296, -0.034068167, 0.16893248, 0.0074699568]",-0.03204930905520129
120,120,"public final Buffer position(int newPosition) {if (newPosition < 0 || newPosition > limit) {throw new IllegalArgumentException();}position = newPosition;if ((mark != UNSET_MARK) && (mark > position)) {mark = UNSET_MARK;}return this;}
","public final [MASK] position(int newPosition) {if (newPosition < 0 || newPosition > limit) {throw new IllegalArgumentException();}position = newPosition;if ((mark != UNSET_MARK) && (mark > position)) {mark = UNSET_MARK;}return this;}
",Buffer,"[{'value': ['Point'], 'probability': 0.23500144481658936}, {'value': ['void'], 'probability': 0.23155806958675385}, {'value': ['double'], 'probability': 0.11880943924188614}, {'value': ['String'], 'probability': 0.07394084334373474}, {'value': ['float'], 'probability': 0.04444121569395065}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['position'], 'probability': 0.9703867435455322}, {'value': ['truncate'], 'probability': 0.00957238208502531}, {'value': ['flip'], 'probability': 0.006415748503059149}, {'value': ['get', 'bit'], 'probability': 0.005771627649664879}, {'value': ['rewind'], 'probability': 0.0037501363549381495}, {'value': ['limit'], 'probability': 0.0015355796786025167}, {'value': ['del'], 'probability': 0.0014140529092401266}, {'value': ['remaining'], 'probability': 0.00045216019498184323}, {'value': ['freq'], 'probability': 0.00042238470632582903}, {'value': ['start', 'search'], 'probability': 0.0002792194427456707}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
121,121,"public final int remaining() {return limit - position;}
","public final [MASK] remaining() {return limit - position;}
",int,"[{'value': ['void'], 'probability': 0.1894478052854538}, {'value': ['limit'], 'probability': 0.1849122941493988}, {'value': ['float'], 'probability': 0.0838586837053299}, {'value': ['Point'], 'probability': 0.05256557837128639}, {'value': ['position'], 'probability': 0.04638272151350975}]","[-0.009351521, -0.005490243, 0.07377654, 0.0, -0.07507713]",-8.231639558917148e-05,"[{'value': ['remaining'], 'probability': 0.9615734219551086}, {'value': ['available'], 'probability': 0.03515468165278435}, {'value': ['count', 'tokens'], 'probability': 0.0012129561509937048}, {'value': ['get', 'length'], 'probability': 0.0007771615637466311}, {'value': ['size'], 'probability': 0.0005645678611472249}, {'value': ['length'], 'probability': 0.00022146695118863136}, {'value': ['check', 'position'], 'probability': 0.00016878423048183322}, {'value': ['get', 'message', 'size'], 'probability': 0.00013533614401239902}, {'value': ['space', 'left'], 'probability': 0.00010997085337294266}, {'value': ['get', 'width'], 'probability': 8.170010551111773e-05}]","[-0.020217452, 0.04503587, -0.01888845, 0.07423024, 0.11546131, 0.10128538, -0.037286546, 0.082788944, -0.021928612, 0.1284057]",-0.01772195748658379
122,122,"public final Buffer reset() {if (mark == UNSET_MARK) {throw new InvalidMarkException();}position = mark;return this;}
","public final [MASK] reset() {if (mark == UNSET_MARK) {throw new InvalidMarkException();}position = mark;return this;}
",Buffer,"[{'value': ['void'], 'probability': 0.9813416004180908}, {'value': ['String'], 'probability': 0.004662045743316412}, {'value': ['float'], 'probability': 0.0015222589718177915}, {'value': ['Value'], 'probability': 0.0010055109160020947}, {'value': ['Date'], 'probability': 0.0008006432908587158}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['reset'], 'probability': 0.9989655017852783}, {'value': ['rewind'], 'probability': 0.0007628108724020422}, {'value': ['clear'], 'probability': 0.0001194458527606912}, {'value': ['mark'], 'probability': 0.0001017683680402115}, {'value': ['truncate'], 'probability': 1.4301040209829807e-05}, {'value': ['flip'], 'probability': 1.0412049050501082e-05}, {'value': ['unset'], 'probability': 7.755249498586636e-06}, {'value': ['m'], 'probability': 6.932058113306994e-06}, {'value': ['sample'], 'probability': 5.778599643235793e-06}, {'value': ['cleanup'], 'probability': 5.241302005742909e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
123,123,"public final Buffer rewind() {position = 0;mark = UNSET_MARK;return this;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public final [MASK] rewind() {position = 0;mark = UNSET_MARK;return this;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",Buffer,"[{'value': ['void'], 'probability': 0.917007565498352}, {'value': ['String'], 'probability': 0.04558950662612915}, {'value': ['long'], 'probability': 0.004415583796799183}, {'value': ['Date'], 'probability': 0.0034874689299613237}, {'value': ['Long'], 'probability': 0.0021190729457885027}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['rewind'], 'probability': 0.9036102294921875}, {'value': ['clear'], 'probability': 0.07187172770500183}, {'value': ['flip'], 'probability': 0.020555296912789345}, {'value': ['compact'], 'probability': 0.0025933715514838696}, {'value': ['reset'], 'probability': 0.00043559118057601154}, {'value': ['mark'], 'probability': 0.0004119526711292565}, {'value': ['shift'], 'probability': 0.0001888944098027423}, {'value': ['trim'], 'probability': 0.00017906723951455206}, {'value': ['truncate'], 'probability': 9.013620001496747e-05}, {'value': ['duplicate'], 'probability': 6.369707989506423e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
124,124,"public static long getCPtr(btMultiSphereShapeData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btMultiSphereShapeData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.06732054799795151}, {'value': ['read'], 'probability': 0.0472680889070034}, {'value': ['execute'], 'probability': 0.038183923810720444}, {'value': ['update'], 'probability': 0.03703903406858444}, {'value': ['process'], 'probability': 0.03195188194513321}]","[1.0, 0.5726487, 0.37713256, 0.36048478, 0.52250975]",0.138836136945495,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
125,125,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
126,126,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btMultiSphereShapeData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btMultiSphereShapeData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.836005449295044}, {'value': ['test'], 'probability': 0.012765881605446339}, {'value': ['clear'], 'probability': 0.011630120687186718}, {'value': ['start'], 'probability': 0.011541187763214111}, {'value': ['execute'], 'probability': 0.009491684846580029}]","[0.13931048, 0.14537679, 0.18840031, 0.15163165, 0.33713183]",0.1254612593970637,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
127,127,"public void setConvexInternalShapeData(btConvexInternalShapeData value) {CollisionJNI.btMultiSphereShapeData_convexInternalShapeData_set(swigCPtr, this, btConvexInternalShapeData.getCPtr(value), value);}
","public void [MASK](btConvexInternalShapeData value) {CollisionJNI.btMultiSphereShapeData_convexInternalShapeData_set(swigCPtr, this, btConvexInternalShapeData.getCPtr(value), value);}
",setConvexInternalShapeData,"[{'value': ['set'], 'probability': 0.6339126825332642}, {'value': ['put'], 'probability': 0.03631157800555229}, {'value': ['add'], 'probability': 0.02522154338657856}, {'value': ['apply'], 'probability': 0.024292083457112312}, {'value': ['update'], 'probability': 0.01703394576907158}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.41854778]",0.6948868632757086,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
128,128,"public btConvexInternalShapeData getConvexInternalShapeData() {long cPtr = CollisionJNI.btMultiSphereShapeData_convexInternalShapeData_get(swigCPtr, this);return (cPtr == 0) ? null : new btConvexInternalShapeData(cPtr, false);}
","public btConvexInternalShapeData [MASK]() {long cPtr = CollisionJNI.btMultiSphereShapeData_convexInternalShapeData_get(swigCPtr, this);return (cPtr == 0) ? null : new btConvexInternalShapeData(cPtr, false);}
",getConvexInternalShapeData,"[{'value': ['get'], 'probability': 0.5704529881477356}, {'value': ['build'], 'probability': 0.12005873024463654}, {'value': ['create'], 'probability': 0.07945878058671951}, {'value': ['clone'], 'probability': 0.025680044665932655}, {'value': ['resolve'], 'probability': 0.010674024000763893}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.6963703150264394,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
129,129,"public void setLocalPositionArrayPtr(btPositionAndRadius value) {CollisionJNI.btMultiSphereShapeData_localPositionArrayPtr_set(swigCPtr, this, btPositionAndRadius.getCPtr(value), value);}
","public void [MASK](btPositionAndRadius value) {CollisionJNI.btMultiSphereShapeData_localPositionArrayPtr_set(swigCPtr, this, btPositionAndRadius.getCPtr(value), value);}
",setLocalPositionArrayPtr,"[{'value': ['set'], 'probability': 0.5281055569648743}, {'value': ['put'], 'probability': 0.04434412717819214}, {'value': ['execute'], 'probability': 0.02343752607703209}, {'value': ['update'], 'probability': 0.02332238480448723}, {'value': ['apply'], 'probability': 0.02163028158247471}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.5010617]",0.5921771691821215,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
130,130,"public btPositionAndRadius getLocalPositionArrayPtr() {long cPtr = CollisionJNI.btMultiSphereShapeData_localPositionArrayPtr_get(swigCPtr, this);return (cPtr == 0) ? null : new btPositionAndRadius(cPtr, false);}
","public btPositionAndRadius [MASK]() {long cPtr = CollisionJNI.btMultiSphereShapeData_localPositionArrayPtr_get(swigCPtr, this);return (cPtr == 0) ? null : new btPositionAndRadius(cPtr, false);}
",getLocalPositionArrayPtr,"[{'value': ['get'], 'probability': 0.17447538673877716}, {'value': ['build'], 'probability': 0.08102469146251678}, {'value': ['create'], 'probability': 0.07888687402009964}, {'value': ['update'], 'probability': 0.05766282230615616}, {'value': ['resolve'], 'probability': 0.04914442449808121}]","[1.0, 0.5626448, 0.62328804, 0.36048478, 0.427468]",0.3110269898323716,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
131,131,"public void setLocalPositionArraySize(int value) {CollisionJNI.btMultiSphereShapeData_localPositionArraySize_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btMultiSphereShapeData_localPositionArraySize_set(swigCPtr, this, value);}
",setLocalPositionArraySize,"[{'value': ['set'], 'probability': 0.654998242855072}, {'value': ['put'], 'probability': 0.10392872989177704}, {'value': ['execute'], 'probability': 0.014475654810667038}, {'value': ['get'], 'probability': 0.011647487990558147}, {'value': ['read'], 'probability': 0.008912750519812107}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.4820371]",0.7545263231460962,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
132,132,"public int getLocalPositionArraySize() {return CollisionJNI.btMultiSphereShapeData_localPositionArraySize_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btMultiSphereShapeData_localPositionArraySize_get(swigCPtr, this);}
",getLocalPositionArraySize,"[{'value': ['get'], 'probability': 0.10481888055801392}, {'value': ['run'], 'probability': 0.0624493807554245}, {'value': ['start'], 'probability': 0.04382074251770973}, {'value': ['execute'], 'probability': 0.03881525620818138}, {'value': ['state'], 'probability': 0.03203738480806351}]","[1.0, 0.65114945, 0.7199945, 0.37713256, 0.49234587]",0.2074454247635385,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
133,133,"public void setPadding(String value) {CollisionJNI.btMultiSphereShapeData_padding_set(swigCPtr, this, value);}
","public void [MASK](String value) {CollisionJNI.btMultiSphereShapeData_padding_set(swigCPtr, this, value);}
",setPadding,"[{'value': ['set'], 'probability': 0.6259840130805969}, {'value': ['put'], 'probability': 0.14075060188770294}, {'value': ['execute'], 'probability': 0.01415463350713253}, {'value': ['read'], 'probability': 0.010424687527120113}, {'value': ['add'], 'probability': 0.010379154235124588}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.5084879]",0.753084928493261,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
134,134,"public String getPadding() {return CollisionJNI.btMultiSphereShapeData_padding_get(swigCPtr, this);}public void init() {spawnShapeValue.init();}
","public String [MASK]() {return CollisionJNI.btMultiSphereShapeData_padding_get(swigCPtr, this);}public void init() {spawnShapeValue.init();}
",getPadding,"[{'value': ['name'], 'probability': 0.11389436572790146}, {'value': ['get'], 'probability': 0.0773339495062828}, {'value': ['build'], 'probability': 0.03892134502530098}, {'value': ['format'], 'probability': 0.03599032014608383}, {'value': ['string'], 'probability': 0.035066962242126465}]","[0.47842693, 1.0, 0.5626448, 0.29473126, 0.31986862]",0.1755472665655706,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
135,135,"public void allocateChannels() {positionChannel = controller.particles.addChannel(ParticleChannels.Position);}
","public void [MASK]() {positionChannel = controller.particles.addChannel(ParticleChannels.Position);}
",allocateChannels,"[{'value': ['run'], 'probability': 0.3347327709197998}, {'value': ['execute'], 'probability': 0.21633952856063843}, {'value': ['close'], 'probability': 0.08562039583921432}, {'value': ['start'], 'probability': 0.043922919780015945}, {'value': ['setup'], 'probability': 0.021713169291615486}]","[0.20610183, 0.37620628, 0.14622721, 0.15805367, 0.07926496]",0.1715606309398912,"[{'value': ['add', 'channel'], 'probability': 0.3195716440677643}, {'value': ['setup'], 'probability': 0.3193254768848419}, {'value': ['init', 'cache'], 'probability': 0.14426961541175842}, {'value': ['prepare'], 'probability': 0.06296760588884354}, {'value': ['after', 'properties', 'set'], 'probability': 0.04184318706393242}, {'value': ['initialise'], 'probability': 0.04010722041130066}, {'value': ['acquire'], 'probability': 0.022942349314689636}, {'value': ['init', 'controller'], 'probability': 0.020427504554390907}, {'value': ['register'], 'probability': 0.018380187451839447}, {'value': ['set', 'up'], 'probability': 0.01016519870609045}]","[0.30468175, 0.07926496, 0.11005337, 0.38110676, 0.16213371, 0.0, 0.3889209, 0.14314203, 0.24239188, 0.28115574]",0.18849790347301776
136,136,"public void start() {spawnShapeValue.start();}
","public void [MASK]() {spawnShapeValue.[MASK]();}
",start,"[{'value': ['run'], 'probability': 0.22300595045089722}, {'value': ['test'], 'probability': 0.07858426868915558}, {'value': ['clear'], 'probability': 0.03284379094839096}, {'value': ['execute'], 'probability': 0.03198026120662689}, {'value': ['close'], 'probability': 0.02154005691409111}]","[0.7167411, 0.5409797, 0.59196377, 0.34272963, 0.6072239]",0.2458325749379615,"[{'value': ['load'], 'probability': 0.8561552166938782}, {'value': ['initialize'], 'probability': 0.14278918504714966}, {'value': ['start'], 'probability': 0.0005216661375015974}, {'value': ['set', 'up'], 'probability': 0.00024964212207123637}, {'value': ['rollback'], 'probability': 0.00014706666115671396}, {'value': ['action', 'performed'], 'probability': 5.256430813460611e-05}, {'value': ['run'], 'probability': 3.739594103535637e-05}, {'value': ['install', 'listeners'], 'probability': 2.8010457754135132e-05}, {'value': ['build', 'ui'], 'probability': 1.0070300049846992e-05}, {'value': ['recover'], 'probability': 9.121023140323814e-06}]","[0.34393936, -0.19079572, 0.99999994, 0.76362723, -0.005798743, 0.58285064, 0.7167411, 0.40660584, 0.32216597, 0.48104012]",0.26800982019797215
137,137,"public void activateParticles(int startIndex, int count) {for (int i = startIndex * positionChannel.strideSize, c = i + count * positionChannel.strideSize; i < c; i += positionChannel.strideSize) {spawnShapeValue.spawn(TMP_V1, controller.emitter.percent);TMP_V1.mul(controller.transform);positionChannel.data[i + ParticleChannels.XOffset] = TMP_V1.x;positionChannel.data[i + ParticleChannels.YOffset] = TMP_V1.y;positionChannel.data[i + ParticleChannels.ZOffset] = TMP_V1.z;}}
","public void [MASK](int startIndex, int count) {for (int i = startIndex * positionChannel.strideSize, c = i + count * positionChannel.strideSize; i < c; i += positionChannel.strideSize) {spawnShapeValue.spawn(TMP_V1, controller.emitter.percent);TMP_V1.mul(controller.transform);positionChannel.data[i + ParticleChannels.XOffset] = TMP_V1.x;positionChannel.data[i + ParticleChannels.YOffset] = TMP_V1.y;positionChannel.data[i + ParticleChannels.ZOffset] = TMP_V1.z;}}
",activateParticles,"[{'value': ['transform'], 'probability': 0.16912388801574707}, {'value': ['min'], 'probability': 0.05836816504597664}, {'value': ['run'], 'probability': 0.048585616052150726}, {'value': ['count'], 'probability': 0.04280932620167732}, {'value': ['update'], 'probability': 0.038857150822877884}]","[0.3888219, -0.13417916, 0.15743385, 0.07831817, 0.33291045]",0.081865000451596,"[{'value': ['load'], 'probability': 0.22501079738140106}, {'value': ['preload'], 'probability': 0.1412847340106964}, {'value': ['build', 'map'], 'probability': 0.11258605867624283}, {'value': ['get', 'neighbors'], 'probability': 0.10939076542854309}, {'value': ['partition'], 'probability': 0.09686051309108734}, {'value': ['populate'], 'probability': 0.09663372486829758}, {'value': ['subset'], 'probability': 0.08223471790552139}, {'value': ['build', 'index'], 'probability': 0.056934356689453125}, {'value': ['add', 'statements'], 'probability': 0.040944699198007584}, {'value': ['translate'], 'probability': 0.03811969235539436}]","[0.2633741, 0.12478144, 0.39292988, 0.2620585, 0.11940131, 0.17347959, 0.22259642, 0.22545618, 0.26711422, 0.2791253]",0.23084462468799657
138,138,"public SpawnInfluencer copy() {return new SpawnInfluencer(this);}
","public SpawnInfluencer [MASK]() {return new SpawnInfluencer(this);}
",copy,"[{'value': ['create'], 'probability': 0.15548913180828094}, {'value': ['upgrade'], 'probability': 0.13149383664131165}, {'value': ['clone'], 'probability': 0.11642467230558395}, {'value': ['restore'], 'probability': 0.09157495945692062}, {'value': ['update'], 'probability': 0.055834218859672546}]","[0.3987844, 0.30665663, 0.31505513, 0.2724586, 0.44024163]",0.1885412213567874,"[{'value': ['make', 'call', 'expression'], 'probability': 0.43498697876930237}, {'value': ['deep', 'copy'], 'probability': 0.1247619017958641}, {'value': ['clone'], 'probability': 0.1043202355504036}, {'value': ['build'], 'probability': 0.07441891729831696}, {'value': ['symlink'], 'probability': 0.06859873235225677}, {'value': ['parallel', 'box'], 'probability': 0.055855534970760345}, {'value': ['exact', 'copy'], 'probability': 0.040032483637332916}, {'value': ['copy'], 'probability': 0.035783011466264725}, {'value': ['create', 'proxy'], 'probability': 0.033318910747766495}, {'value': ['get', 'label', 'provider'], 'probability': 0.027923278510570526}]","[0.5545153, 0.7110269, 0.31505513, 0.28695282, 0.0, 0.5197196, 0.8403682, 1.0, 0.393264, 0.54624665]",0.510947726288048
139,139,"public void write(Json json) {json.writeValue(""spawnShape"", spawnShapeValue, SpawnShapeValue.class);}
","public void [MASK](Json json) {json.[MASK]Value(""spawnShape"", spawnShapeValue, SpawnShapeValue.class);}
",write,"[{'value': ['evaluate'], 'probability': 0.25400498509407043}, {'value': ['execute'], 'probability': 0.08693981170654297}, {'value': ['test'], 'probability': 0.07425711303949356}, {'value': ['run'], 'probability': 0.03224119544029236}, {'value': ['visit'], 'probability': 0.02786722220480442}]","[0.37596357, 0.35316944, 0.26831806, 0.43416244, 0.32283083]",0.1691199440520794,"[{'value': ['load'], 'probability': 0.9614076614379883}, {'value': ['save'], 'probability': 0.03748408704996109}, {'value': ['saved'], 'probability': 0.0005771472351625562}, {'value': ['json'], 'probability': 0.00024034216767176986}, {'value': ['load', 'objects'], 'probability': 0.00015333302144426852}, {'value': ['to', 'json'], 'probability': 4.076959521626122e-05}, {'value': ['store'], 'probability': 4.059209823026322e-05}, {'value': ['save', 'message'], 'probability': 2.177000897063408e-05}, {'value': ['set', 'json'], 'probability': 1.99928163056029e-05}, {'value': ['context', 'for', 'array'], 'probability': 1.4249751075112727e-05}]","[0.36211276, 0.48002282, 0.37870547, 0.041499805, 0.39762646, 0.54155207, 0.3394317, 0.5775384, 0.39602485, 0.5003707]",0.36648418910360336
140,140,"public void read(Json json, JsonValue jsonData) {spawnShapeValue = json.readValue(""spawnShape"", SpawnShapeValue.class, jsonData);}
","public void [MASK](Json json, JsonValue jsonData) {spawnShapeValue = json.[MASK]Value(""spawnShape"", SpawnShapeValue.class, jsonData);}
",read,"[{'value': ['evaluate'], 'probability': 0.31361669301986694}, {'value': ['execute'], 'probability': 0.059691645205020905}, {'value': ['test'], 'probability': 0.05727037787437439}, {'value': ['perform'], 'probability': 0.031024344265460968}, {'value': ['add'], 'probability': 0.026589246466755867}]","[0.30015728, 0.33326143, 0.38063776, 0.4033493, 0.36516917]",0.1580497456971148,"[{'value': ['load'], 'probability': 0.9999988079071045}, {'value': ['save'], 'probability': 1.1124566299258731e-06}, {'value': ['init'], 'probability': 2.685871081098412e-08}, {'value': ['parse'], 'probability': 2.008044219792282e-08}, {'value': ['deserialize'], 'probability': 1.4594390584932171e-08}, {'value': ['parse', 'configuration'], 'probability': 1.0397368299663867e-08}, {'value': ['read', 'external'], 'probability': 9.112978816006034e-09}, {'value': ['initialize'], 'probability': 6.790725759486804e-09}, {'value': ['compile'], 'probability': 6.633912086329019e-09}, {'value': ['populate'], 'probability': 5.782670342568963e-09}]","[0.32439876, 0.38445935, -0.21396053, 0.21184428, 0.0, 0.18930583, 0.7258706, -0.11918663, 0.35831746, 0.10189295]",0.3243988102281405
141,141,"public void save(AssetManager manager, ResourceData data) {spawnShapeValue.save(manager, data);}
","public void [MASK](AssetManager manager, ResourceData data) {spawnShapeValue.[MASK](manager, data);}
",save,"[{'value': ['execute'], 'probability': 0.18254609405994415}, {'value': ['run'], 'probability': 0.11723575741052628}, {'value': ['update'], 'probability': 0.09872899949550629}, {'value': ['apply'], 'probability': 0.052565254271030426}, {'value': ['setup'], 'probability': 0.04997819662094116}]","[0.3275365, 0.6025672, 0.33824563, 0.33435267, 0.28898972]",0.1958461002277829,"[{'value': ['load'], 'probability': 0.9887513518333435}, {'value': ['save'], 'probability': 0.0048947627656161785}, {'value': ['initialize'], 'probability': 0.0026426021941006184}, {'value': ['store'], 'probability': 0.0023032003082334995}, {'value': ['add', 'content'], 'probability': 0.00039217539597302675}, {'value': ['prepare'], 'probability': 0.0002421233948552981}, {'value': ['create', 'data'], 'probability': 0.00023894385958556086}, {'value': ['update', 'layers'], 'probability': 0.00019704553415067494}, {'value': ['test', 'data'], 'probability': 0.0001740964944474399}, {'value': ['save', 'document'], 'probability': 0.0001637426612433046}]","[0.33704314, 1.0, -0.06569217, 0.37267593, 0.41758642, 0.42258298, 0.5089981, 0.32112223, 0.39433035, 0.8088294]",0.33948344553829396
142,142,"public void load(AssetManager manager, ResourceData data) {spawnShapeValue.load(manager, data);}public void initialize(Body bodyA, Body bodyB, Vector2 anchor) {this.bodyA = bodyA;this.bodyB = bodyB;localAnchorA.set(bodyA.getLocalPoint(anchor));localAnchorB.set(bodyB.getLocalPoint(anchor));}
","public void [MASK](AssetManager manager, ResourceData data) {spawnShapeValue.[MASK](manager, data);}public void initialize(Body bodyA, Body bodyB, Vector2 anchor) {this.bodyA = bodyA;this.bodyB = bodyB;localAnchorA.set(bodyA.getLocalPoint(anchor));localAnchorB.set(bodyB.getLocalPoint(anchor));}
",load,"[{'value': ['execute'], 'probability': 0.19512008130550385}, {'value': ['update'], 'probability': 0.15856313705444336}, {'value': ['run'], 'probability': 0.043945226818323135}, {'value': ['setup'], 'probability': 0.040155015885829926}, {'value': ['set'], 'probability': 0.03436871990561485}]","[0.27546293, 0.18016984, 0.36636344, 0.402809, 0.3492521]",0.1265947163688036,"[{'value': ['load'], 'probability': 0.9998874664306641}, {'value': ['initialize'], 'probability': 9.373671491630375e-05}, {'value': ['preload'], 'probability': 4.948467903886922e-06}, {'value': ['load', 'image'], 'probability': 4.439074473339133e-06}, {'value': ['store'], 'probability': 2.3198754206532612e-06}, {'value': ['prepare'], 'probability': 1.7515061472295201e-06}, {'value': ['update', 'document'], 'probability': 1.5660205008316552e-06}, {'value': ['opened'], 'probability': 1.509148546574579e-06}, {'value': ['initialise'], 'probability': 1.4230616898203152e-06}, {'value': ['on', 'load'], 'probability': 8.279725989268627e-07}]","[0.99999994, 0.008884094, 0.11397924, 0.7848741, 0.35917443, 0.27055275, 0.22212543, 0.14273484, 0.0, 0.7905883]",0.999894812301635
143,143,"public static long getCPtr(btSoftRigidCollisionAlgorithm obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btSoftRigidCollisionAlgorithm obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07103540748357773}, {'value': ['update'], 'probability': 0.03477024286985397}, {'value': ['read'], 'probability': 0.03383379429578781}, {'value': ['match'], 'probability': 0.03194426745176315}, {'value': ['process'], 'probability': 0.030261879786849022}]","[1.0, 0.36048478, 0.5726487, 0.4692583, 0.52250975]",0.1337466695146824,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
144,144,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
145,145,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.delete_btSoftRigidCollisionAlgorithm(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.[MASK]_btSoftRigidCollisionAlgorithm(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8147397637367249}, {'value': ['start'], 'probability': 0.013343666680157185}, {'value': ['clear'], 'probability': 0.011892235837876797}, {'value': ['test'], 'probability': 0.011281849816441536}, {'value': ['close'], 'probability': 0.010043896734714508}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.10496158]",0.120459952436421,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
146,146,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(SoftbodyJNI.btSoftRigidCollisionAlgorithm_CreateFunc_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](SoftbodyJNI.btSoftRigidCollisionAlgorithm_CreateFunc_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.923493504524231}, {'value': ['destroyed'], 'probability': 0.05325697734951973}, {'value': ['save'], 'probability': 0.003301250282675028}, {'value': ['rebuild'], 'probability': 0.002711717039346695}, {'value': ['run'], 'probability': 0.0024975149426609278}]","[0.0852853, -0.009507184, 0.15556529, 0.19255844, 0.1346719]",0.0796261643755555,"[{'value': ['reset'], 'probability': 0.9985418319702148}, {'value': ['destroy'], 'probability': 0.00038971612229943275}, {'value': ['reinit'], 'probability': 0.00034774377127178013}, {'value': ['stop'], 'probability': 0.0002485333534423262}, {'value': ['clear'], 'probability': 0.00011762959911720827}, {'value': ['start'], 'probability': 0.00011339568300172687}, {'value': ['restart'], 'probability': 9.017132833832875e-05}, {'value': ['shutdown'], 'probability': 6.212670268723741e-05}, {'value': ['update'], 'probability': 4.8486774176126346e-05}, {'value': ['unset'], 'probability': 4.041389547637664e-05}]","[1.0, 0.0852853, 0.0, 0.1610944, 0.10589813, 0.23268494, 0.38693747, 0.25621086, 0.31137508, 0.15494414]",0.9987261162513923
147,147,"public static long getCPtr(CreateFunc obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](CreateFunc obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07242303341627121}, {'value': ['read'], 'probability': 0.06310340762138367}, {'value': ['run'], 'probability': 0.05769554153084755}, {'value': ['execute'], 'probability': 0.042253896594047546}, {'value': ['update'], 'probability': 0.030559107661247253}]","[1.0, 0.5726487, 0.65114945, 0.37713256, 0.36048478]",0.1730789518098092,"[{'value': ['get', 'c', 'ptr'], 'probability': 0.9999998807907104}, {'value': ['size'], 'probability': 4.349570659201163e-08}, {'value': ['get', 'flags'], 'probability': 1.6287295068195817e-08}, {'value': ['get', 'type'], 'probability': 1.2781068647882421e-08}, {'value': ['get', 'id'], 'probability': 9.43618516657807e-09}, {'value': ['get', 'base'], 'probability': 5.62780400059637e-09}, {'value': ['get', 'first'], 'probability': 5.3158428769961574e-09}, {'value': ['height'], 'probability': 2.826428424640426e-09}, {'value': ['get', 'count'], 'probability': 2.2416666300983934e-09}, {'value': ['get', 'length'], 'probability': 1.938225357989154e-09}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8075286]",0.676197332980573
148,148,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
149,149,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.delete_btSoftRigidCollisionAlgorithm_CreateFunc(swigCPtr);}swigCPtr = 0;}super.delete();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.[MASK]_btSoftRigidCollisionAlgorithm_CreateFunc(swigCPtr);}swigCPtr = 0;}super.[MASK]();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",delete,"[{'value': ['destroy'], 'probability': 0.8691995143890381}, {'value': ['run'], 'probability': 0.03547390550374985}, {'value': ['kill'], 'probability': 0.014745757915079594}, {'value': ['save'], 'probability': 0.007516019511967897}, {'value': ['consume'], 'probability': 0.006760770920664072}]","[0.30363193, 0.13931048, 0.21587177, 0.3240161, 0.14161864]",0.2754345694934556,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
150,150,"public static long getCPtr(btTriangleCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btTriangleCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08090189844369888}, {'value': ['read'], 'probability': 0.039654843509197235}, {'value': ['execute'], 'probability': 0.036168940365314484}, {'value': ['replace'], 'probability': 0.030867353081703186}, {'value': ['process'], 'probability': 0.030829081311821938}]","[1.0, 0.5726487, 0.37713256, 0.4901826, 0.52250975]",0.1484898137641891,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
151,151,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
152,152,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btTriangleCallback(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btTriangleCallback(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8064848184585571}, {'value': ['clear'], 'probability': 0.014249013736844063}, {'value': ['start'], 'probability': 0.014001945964992046}, {'value': ['test'], 'probability': 0.013737437315285206}, {'value': ['execute'], 'probability': 0.012084484100341797}]","[0.13931048, 0.18840031, 0.15163165, 0.14537679, 0.33713183]",0.1232306120748071,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
153,153,"protected void swigDirectorDisconnect() {swigCMemOwn = false;delete();}
","protected void [MASK]() {swigCMemOwn = false;delete();}
",swigDirectorDisconnect,"[{'value': ['run'], 'probability': 0.2597951889038086}, {'value': ['destroy'], 'probability': 0.042744945734739304}, {'value': ['clear'], 'probability': 0.0412781797349453}, {'value': ['remove'], 'probability': 0.0399308055639267}, {'value': ['hide'], 'probability': 0.03766871616244316}]","[-0.087563194, -0.15696473, -0.13124146, -0.053591672, -0.11020877]",-0.0411667356580585,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 1.374898084272047e-09}, {'value': ['delete', 'file'], 'probability': 7.658385037245807e-11}, {'value': ['delete', 'user'], 'probability': 7.463477058600176e-11}, {'value': ['abort'], 'probability': 4.3323098580794195e-11}, {'value': ['add', 'delete'], 'probability': 4.195608097057324e-11}, {'value': ['test', 'delete'], 'probability': 3.981910634553998e-11}, {'value': ['remove'], 'probability': 3.698968908949496e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.1723352283675723e-11}, {'value': ['delete', 'group'], 'probability': 1.1743549709064549e-11}]","[-0.05036918, -0.07227076, -0.12502779, -0.030638134, 0.05407105, -0.042249326, -0.13754319, -0.053591672, -0.22770803, -0.192311]",-0.05036918012532099
154,154,"public void swigReleaseOwnership() {swigCMemOwn = false;CollisionJNI.btTriangleCallback_change_ownership(this, swigCPtr, false);}
","public void [MASK]() {swigCMemOwn = false;CollisionJNI.btTriangleCallback_change_ownership(this, swigCPtr, false);}
",swigReleaseOwnership,"[{'value': ['run'], 'probability': 0.6785182356834412}, {'value': ['test'], 'probability': 0.03771611303091049}, {'value': ['clear'], 'probability': 0.037460241466760635}, {'value': ['start'], 'probability': 0.01131716463714838}, {'value': ['close'], 'probability': 0.009961670264601707}]","[-0.087563194, -0.15072986, -0.13124146, -0.03608878, -0.20058393]",-0.0724210790485645,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['destroy'], 'probability': 1.9466124545619579e-10}, {'value': ['update'], 'probability': 1.1577001857165925e-10}, {'value': ['move'], 'probability': 1.0214466078517503e-10}, {'value': ['abort'], 'probability': 5.741962114114152e-11}, {'value': ['do', 'delete'], 'probability': 5.2279860995874117e-11}, {'value': ['remove'], 'probability': 2.945415439326027e-11}, {'value': ['delete', 'file'], 'probability': 2.5761028726867252e-11}, {'value': ['finish'], 'probability': 1.7399859331135303e-11}, {'value': ['save'], 'probability': 1.5620383458925247e-11}]","[-0.05036918, -0.15696473, -0.20058964, -0.16200402, 0.05407105, -0.07227076, -0.053591672, -0.12502779, -0.015956704, -0.017662918]",-0.050369180076351515
155,155,"public void swigTakeOwnership() {swigCMemOwn = true;CollisionJNI.btTriangleCallback_change_ownership(this, swigCPtr, true);}
","public void [MASK]() {swigCMemOwn = true;CollisionJNI.btTriangleCallback_change_ownership(this, swigCPtr, true);}
",swigTakeOwnership,"[{'value': ['run'], 'probability': 0.6577610969543457}, {'value': ['clear'], 'probability': 0.0363132581114769}, {'value': ['test'], 'probability': 0.030498215928673744}, {'value': ['close'], 'probability': 0.01185648888349533}, {'value': ['start'], 'probability': 0.01058699656277895}]","[-0.087563194, -0.13124146, -0.15072986, -0.20058393, -0.03608878]",-0.069718752555996,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['update'], 'probability': 1.6694683135920485e-10}, {'value': ['destroy'], 'probability': 1.6196419205805057e-10}, {'value': ['move'], 'probability': 1.5943645015337182e-10}, {'value': ['abort'], 'probability': 6.830021270776143e-11}, {'value': ['do', 'delete'], 'probability': 5.4813178301804655e-11}, {'value': ['upload'], 'probability': 2.8569027352154386e-11}, {'value': ['finish'], 'probability': 2.5143404719374374e-11}, {'value': ['remove'], 'probability': 1.9486174826499614e-11}, {'value': ['save'], 'probability': 1.689471999799519e-11}]","[-0.05036918, -0.20058964, -0.15696473, -0.16200402, 0.05407105, -0.07227076, 0.043096792, -0.015956704, -0.053591672, -0.017662918]",-0.05036918008552081
156,156,"public void processTriangle(btVector3 triangle, int partId, int triangleIndex) {CollisionJNI.btTriangleCallback_processTriangle(swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK](btVector3 triangle, int partId, int triangleIndex) {CollisionJNI.btTriangleCallback_[MASK](swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",processTriangle,"[{'value': ['destroy'], 'probability': 0.19297873973846436}, {'value': ['set'], 'probability': 0.07795923203229904}, {'value': ['save'], 'probability': 0.06849037855863571}, {'value': ['create'], 'probability': 0.03720488026738167}, {'value': ['start'], 'probability': 0.03348546475172043}]","[0.39113346, 0.55405426, 0.38235566, 0.5869638, 0.6356873]",0.1879859715117249,"[{'value': ['process', 'triangle'], 'probability': 0.8616664409637451}, {'value': ['resolve', 'pick'], 'probability': 0.13831663131713867}, {'value': ['expand', 'property'], 'probability': 3.930626007786486e-06}, {'value': ['atan'], 'probability': 2.471244215485058e-06}, {'value': ['is', 'read', 'write'], 'probability': 2.4224293611041503e-06}, {'value': ['get', 'triangles'], 'probability': 2.378104909439571e-06}, {'value': ['is', 'selected', 'index'], 'probability': 2.0350321392470505e-06}, {'value': ['create', 'content', 'provider'], 'probability': 1.5630477037120727e-06}, {'value': ['print', 'short'], 'probability': 1.179492528535775e-06}, {'value': ['drop', 'to', 'frame'], 'probability': 9.296322787122335e-07}]","[0.82335734, 0.5912957, 0.4724669, -0.34708092, 0.53229076, 0.46484786, 0.499376, 0.57178235, 0.41019613, 0.54464674]",0.7912517125119577
157,157,"public static long getCPtr(GIM_TRIANGLE_CONTACT obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](GIM_TRIANGLE_CONTACT obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07582446187734604}, {'value': ['read'], 'probability': 0.04628850147128105}, {'value': ['replace'], 'probability': 0.04234231635928154}, {'value': ['execute'], 'probability': 0.040041521191596985}, {'value': ['process'], 'probability': 0.03359787538647652}]","[1.0, 0.5726487, 0.4901826, 0.37713256, 0.52250975]",0.155743158512606,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
158,158,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
159,159,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_GIM_TRIANGLE_CONTACT(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_GIM_TRIANGLE_CONTACT(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7966665625572205}, {'value': ['start'], 'probability': 0.014922860078513622}, {'value': ['execute'], 'probability': 0.01034466177225113}, {'value': ['test'], 'probability': 0.009860370308160782}, {'value': ['clear'], 'probability': 0.009402704425156116}]","[0.13931048, 0.15163165, 0.33713183, 0.14537679, 0.18840031]",0.1199392346528826,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
160,160,"public void setPenetration_depth(float value) {CollisionJNI.GIM_TRIANGLE_CONTACT_penetration_depth_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.GIM_TRIANGLE_CONTACT_penetration_depth_set(swigCPtr, this, value);}
",setPenetration_depth,"[{'value': ['set'], 'probability': 0.41953209042549133}, {'value': ['put'], 'probability': 0.184557244181633}, {'value': ['write'], 'probability': 0.02561064064502716}, {'value': ['value'], 'probability': 0.024261638522148132}, {'value': ['add'], 'probability': 0.022055571898818016}]","[1.0, 0.7944568, 0.46259418, 0.47274652, 0.5084879]",0.6006867739103542,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
161,161,"public float getPenetration_depth() {return CollisionJNI.GIM_TRIANGLE_CONTACT_penetration_depth_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.GIM_TRIANGLE_CONTACT_penetration_depth_get(swigCPtr, this);}
",getPenetration_depth,"[{'value': ['float'], 'probability': 0.15807287395000458}, {'value': ['get'], 'probability': 0.0830538421869278}, {'value': ['build'], 'probability': 0.04457702115178108}, {'value': ['double'], 'probability': 0.034398097544908524}, {'value': ['value'], 'probability': 0.02233261801302433}]","[0.2808844, 1.0, 0.5626448, 0.5437231, 0.46303764]",0.1815789556210008,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
162,162,"public void setPoint_count(int value) {CollisionJNI.GIM_TRIANGLE_CONTACT_point_count_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.GIM_TRIANGLE_CONTACT_point_count_set(swigCPtr, this, value);}
",setPoint_count,"[{'value': ['set'], 'probability': 0.40836548805236816}, {'value': ['put'], 'probability': 0.19125673174858093}, {'value': ['value'], 'probability': 0.02663222700357437}, {'value': ['execute'], 'probability': 0.01782148703932762}, {'value': ['write'], 'probability': 0.014293947257101536}]","[1.0, 0.7944568, 0.47274652, 0.35167885, 0.46259418]",0.5857807248364001,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
163,163,"public int getPoint_count() {return CollisionJNI.GIM_TRIANGLE_CONTACT_point_count_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.GIM_TRIANGLE_CONTACT_point_count_get(swigCPtr, this);}
",getPoint_count,"[{'value': ['count'], 'probability': 0.17479978501796722}, {'value': ['start'], 'probability': 0.09406290203332901}, {'value': ['get'], 'probability': 0.07389548420906067}, {'value': ['value'], 'probability': 0.05472421273589134}, {'value': ['size'], 'probability': 0.03647748380899429}]","[0.4437648, 0.7199945, 1.0, 0.46303764, 0.43109724]",0.2602549604763059,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
164,164,"public void setSeparating_normal(btVector4 value) {CollisionJNI.GIM_TRIANGLE_CONTACT_separating_normal_set(swigCPtr, this, btVector4.getCPtr(value), value);}
","public void [MASK](btVector4 value) {CollisionJNI.GIM_TRIANGLE_CONTACT_separating_normal_set(swigCPtr, this, btVector4.getCPtr(value), value);}
",setSeparating_normal,"[{'value': ['set'], 'probability': 0.5699993371963501}, {'value': ['put'], 'probability': 0.07823425531387329}, {'value': ['execute'], 'probability': 0.016253741458058357}, {'value': ['add'], 'probability': 0.01604016125202179}, {'value': ['update'], 'probability': 0.01191125251352787}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.41854778]",0.6510108247133863,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
165,165,"public btVector4 getSeparating_normal() {long cPtr = CollisionJNI.GIM_TRIANGLE_CONTACT_separating_normal_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector4(cPtr, false);}
","public btVector4 [MASK]() {long cPtr = CollisionJNI.GIM_TRIANGLE_CONTACT_separating_normal_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector4(cPtr, false);}
",getSeparating_normal,"[{'value': ['get'], 'probability': 0.14836129546165466}, {'value': ['clone'], 'probability': 0.04950333759188652}, {'value': ['test'], 'probability': 0.03344232589006424}, {'value': ['double'], 'probability': 0.029599694535136223}, {'value': ['update'], 'probability': 0.028527885675430298}]","[1.0, 0.166604, 0.4599198, 0.5437231, 0.36048478]",0.198367443986124,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
166,166,"public void setPoints(btVector3 value) {CollisionJNI.GIM_TRIANGLE_CONTACT_points_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.GIM_TRIANGLE_CONTACT_points_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setPoints,"[{'value': ['set'], 'probability': 0.6121907234191895}, {'value': ['put'], 'probability': 0.12212281674146652}, {'value': ['add'], 'probability': 0.019626135006546974}, {'value': ['apply'], 'probability': 0.015560443513095379}, {'value': ['execute'], 'probability': 0.009846867993474007}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.7304513520844848,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
167,167,"public btVector3 getPoints() {long cPtr = CollisionJNI.GIM_TRIANGLE_CONTACT_points_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.GIM_TRIANGLE_CONTACT_points_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getPoints,"[{'value': ['get'], 'probability': 0.13218779861927032}, {'value': ['double'], 'probability': 0.03921530768275261}, {'value': ['start'], 'probability': 0.02736184187233448}, {'value': ['build'], 'probability': 0.0245039202272892}, {'value': ['test'], 'probability': 0.02181851863861084}]","[1.0, 0.5437231, 0.7199945, 0.5626448, 0.4599198]",0.1970322145390471,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
168,168,"public void copy_from(GIM_TRIANGLE_CONTACT other) {CollisionJNI.GIM_TRIANGLE_CONTACT_copy_from(swigCPtr, this, GIM_TRIANGLE_CONTACT.getCPtr(other), other);}
","public void [MASK](GIM_TRIANGLE_CONTACT other) {CollisionJNI.GIM_TRIANGLE_CONTACT_[MASK](swigCPtr, this, GIM_TRIANGLE_CONTACT.getCPtr(other), other);}
",copy_from,"[{'value': ['execute'], 'probability': 0.07584165036678314}, {'value': ['add'], 'probability': 0.06163701415061951}, {'value': ['accept'], 'probability': 0.04168342053890228}, {'value': ['set'], 'probability': 0.03297879919409752}, {'value': ['visit'], 'probability': 0.030600978061556816}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['swap'], 'probability': 0.9244913458824158}, {'value': ['merge'], 'probability': 0.016967954114079475}, {'value': ['merge', 'into'], 'probability': 0.016922689974308014}, {'value': ['intersect'], 'probability': 0.01631944812834263}, {'value': ['ne'], 'probability': 0.00755274947732687}, {'value': ['copy', 'to'], 'probability': 0.005080802366137505}, {'value': ['or'], 'probability': 0.004162945318967104}, {'value': ['assign'], 'probability': 0.0032835928723216057}, {'value': ['add'], 'probability': 0.0026604204904288054}, {'value': ['and'], 'probability': 0.0025580134242773056}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
169,169,"public void merge_points(btVector4 plane, float margin, btVector3 points, int point_count) {CollisionJNI.GIM_TRIANGLE_CONTACT_merge_points(swigCPtr, this, btVector4.getCPtr(plane), plane, margin, btVector3.getCPtr(points), points, point_count);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK](btVector4 plane, float margin, btVector3 points, int point_count) {CollisionJNI.GIM_TRIANGLE_CONTACT_[MASK](swigCPtr, this, btVector4.getCPtr(plane), plane, margin, btVector3.getCPtr(points), points, point_count);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",merge_points,"[{'value': ['destroy'], 'probability': 0.49028724431991577}, {'value': ['save'], 'probability': 0.05227162316441536}, {'value': ['set'], 'probability': 0.027097685262560844}, {'value': ['verify'], 'probability': 0.017913909628987312}, {'value': ['destroyed'], 'probability': 0.017476286739110947}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set', 'poly', 'to', 'poly'], 'probability': 0.8613206148147583}, {'value': ['add', 'point'], 'probability': 0.129196435213089}, {'value': ['draw', 'points'], 'probability': 0.002767927711829543}, {'value': ['compute', 'centroid'], 'probability': 0.0024756425991654396}, {'value': ['insert', 'point'], 'probability': 0.0011318838223814964}, {'value': ['test', 'resize'], 'probability': 0.00073852768400684}, {'value': ['shape'], 'probability': 0.000674403621815145}, {'value': ['set', 'padding'], 'probability': 0.0006171018467284739}, {'value': ['make'], 'probability': 0.0006118278834037483}, {'value': ['drop'], 'probability': 0.0004655606171581894}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
170,170,"public static long getCPtr(btOptimizedBvhNodeDoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btOptimizedBvhNodeDoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08996310830116272}, {'value': ['execute'], 'probability': 0.05109412968158722}, {'value': ['read'], 'probability': 0.035420164465904236}, {'value': ['process'], 'probability': 0.033353399485349655}, {'value': ['update'], 'probability': 0.032018620520830154}]","[1.0, 0.37713256, 0.5726487, 0.52250975, 0.36048478]",0.1584853816408595,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
171,171,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
172,172,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btOptimizedBvhNodeDoubleData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btOptimizedBvhNodeDoubleData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8308504223823547}, {'value': ['start'], 'probability': 0.014088107272982597}, {'value': ['clear'], 'probability': 0.0113973468542099}, {'value': ['test'], 'probability': 0.011111783795058727}, {'value': ['execute'], 'probability': 0.010164473205804825}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.125071800025883,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
173,173,"public void setAabbMinOrg(btVector3DoubleData value) {CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMinOrg_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMinOrg_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAabbMinOrg,"[{'value': ['set'], 'probability': 0.5970504283905029}, {'value': ['put'], 'probability': 0.04649622365832329}, {'value': ['get'], 'probability': 0.02114873193204403}, {'value': ['add'], 'probability': 0.02059803158044815}, {'value': ['apply'], 'probability': 0.02050037868320942}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.5010617]",0.668488087097594,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
174,174,"public btVector3DoubleData getAabbMinOrg() {long cPtr = CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMinOrg_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMinOrg_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAabbMinOrg,"[{'value': ['get'], 'probability': 0.34607183933258057}, {'value': ['build'], 'probability': 0.17459915578365326}, {'value': ['create'], 'probability': 0.11791931092739105}, {'value': ['clone'], 'probability': 0.032340098172426224}, {'value': ['resolve'], 'probability': 0.02161390148103237}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.5324340794222936,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
175,175,"public void setAabbMaxOrg(btVector3DoubleData value) {CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMaxOrg_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMaxOrg_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAabbMaxOrg,"[{'value': ['set'], 'probability': 0.5963217616081238}, {'value': ['put'], 'probability': 0.04531044140458107}, {'value': ['get'], 'probability': 0.02085919864475727}, {'value': ['apply'], 'probability': 0.01998295448720455}, {'value': ['execute'], 'probability': 0.019946664571762085}]","[1.0, 0.7944568, 0.65028083, 0.5010617, 0.35167885]",0.6629107987891207,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
176,176,"public btVector3DoubleData getAabbMaxOrg() {long cPtr = CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMaxOrg_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = CollisionJNI.btOptimizedBvhNodeDoubleData_aabbMaxOrg_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAabbMaxOrg,"[{'value': ['get'], 'probability': 0.3464527726173401}, {'value': ['build'], 'probability': 0.16965027153491974}, {'value': ['create'], 'probability': 0.11967744678258896}, {'value': ['clone'], 'probability': 0.0338493213057518}, {'value': ['resolve'], 'probability': 0.020777929574251175}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.5310204652287084,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
177,177,"public void setEscapeIndex(int value) {CollisionJNI.btOptimizedBvhNodeDoubleData_escapeIndex_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btOptimizedBvhNodeDoubleData_escapeIndex_set(swigCPtr, this, value);}
",setEscapeIndex,"[{'value': ['set'], 'probability': 0.6170770525932312}, {'value': ['put'], 'probability': 0.08800994604825974}, {'value': ['execute'], 'probability': 0.0395754799246788}, {'value': ['save'], 'probability': 0.016662033274769783}, {'value': ['run'], 'probability': 0.013648346066474915}]","[1.0, 0.7944568, 0.35167885, 0.5413879, 0.67632943]",0.719166411767943,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
178,178,"public int getEscapeIndex() {return CollisionJNI.btOptimizedBvhNodeDoubleData_escapeIndex_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btOptimizedBvhNodeDoubleData_escapeIndex_get(swigCPtr, this);}
",getEscapeIndex,"[{'value': ['execute'], 'probability': 0.1055799052119255}, {'value': ['run'], 'probability': 0.08919066935777664}, {'value': ['get'], 'probability': 0.08856108784675598}, {'value': ['escape'], 'probability': 0.08840876817703247}, {'value': ['start'], 'probability': 0.03385886549949646}]","[0.37713256, 0.65114945, 1.0, 0.54533845, 0.7199945]",0.2590460609503895,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
179,179,"public void setSubPart(int value) {CollisionJNI.btOptimizedBvhNodeDoubleData_subPart_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btOptimizedBvhNodeDoubleData_subPart_set(swigCPtr, this, value);}
",setSubPart,"[{'value': ['set'], 'probability': 0.6688640713691711}, {'value': ['put'], 'probability': 0.10623353719711304}, {'value': ['execute'], 'probability': 0.013135109096765518}, {'value': ['get'], 'probability': 0.010299261659383774}, {'value': ['value'], 'probability': 0.007961636409163475}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.47274652]",0.7683426136626506,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
180,180,"public int getSubPart() {return CollisionJNI.btOptimizedBvhNodeDoubleData_subPart_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btOptimizedBvhNodeDoubleData_subPart_get(swigCPtr, this);}
",getSubPart,"[{'value': ['get'], 'probability': 0.16509366035461426}, {'value': ['start'], 'probability': 0.044586531817913055}, {'value': ['size'], 'probability': 0.03356679528951645}, {'value': ['execute'], 'probability': 0.028706135228276253}, {'value': ['next'], 'probability': 0.02846900373697281}]","[1.0, 0.7199945, 0.43109724, 0.37713256, 0.6966621]",0.2423255652939154,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
181,181,"public void setTriangleIndex(int value) {CollisionJNI.btOptimizedBvhNodeDoubleData_triangleIndex_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btOptimizedBvhNodeDoubleData_triangleIndex_set(swigCPtr, this, value);}
",setTriangleIndex,"[{'value': ['set'], 'probability': 0.6625967025756836}, {'value': ['put'], 'probability': 0.09522343426942825}, {'value': ['execute'], 'probability': 0.01590566523373127}, {'value': ['get'], 'probability': 0.010688930749893188}, {'value': ['value'], 'probability': 0.008323745802044868}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.47274652]",0.7547271202382044,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
182,182,"public int getTriangleIndex() {return CollisionJNI.btOptimizedBvhNodeDoubleData_triangleIndex_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btOptimizedBvhNodeDoubleData_triangleIndex_get(swigCPtr, this);}
",getTriangleIndex,"[{'value': ['get'], 'probability': 0.2223583608865738}, {'value': ['start'], 'probability': 0.037831734865903854}, {'value': ['execute'], 'probability': 0.03245163336396217}, {'value': ['size'], 'probability': 0.030789822340011597}, {'value': ['run'], 'probability': 0.026976237073540688}]","[1.0, 0.7199945, 0.37713256, 0.43109724, 0.65114945]",0.2926745384724734,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
183,183,"public void setPad(String value) {CollisionJNI.btOptimizedBvhNodeDoubleData_pad_set(swigCPtr, this, value);}
","public void [MASK](String value) {CollisionJNI.btOptimizedBvhNodeDoubleData_pad_set(swigCPtr, this, value);}
",setPad,"[{'value': ['set'], 'probability': 0.5545667409896851}, {'value': ['put'], 'probability': 0.14336904883384705}, {'value': ['execute'], 'probability': 0.01911146193742752}, {'value': ['write'], 'probability': 0.012166825123131275}, {'value': ['read'], 'probability': 0.012052780948579311}]","[1.0, 0.7944568, 0.35167885, 0.46259418, 0.4820371]",0.6866265408432153,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
184,184,"public String getPad() {return CollisionJNI.btOptimizedBvhNodeDoubleData_pad_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public String [MASK]() {return CollisionJNI.btOptimizedBvhNodeDoubleData_pad_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",getPad,"[{'value': ['destroy'], 'probability': 0.8067981600761414}, {'value': ['destroyed'], 'probability': 0.039017945528030396}, {'value': ['build'], 'probability': 0.027960123494267464}, {'value': ['rebuild'], 'probability': 0.013961441814899445}, {'value': ['create'], 'probability': 0.007145292591303587}]","[0.40928823, 0.32746348, 0.5626448, 0.37552252, 0.62328804]",0.36841796985142,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
185,185,"public static long getCPtr(btDynamicsWorldDoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btDynamicsWorldDoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.09488427639007568}, {'value': ['execute'], 'probability': 0.04953589290380478}, {'value': ['read'], 'probability': 0.03923802077770233}, {'value': ['update'], 'probability': 0.03317266330122948}, {'value': ['run'], 'probability': 0.03315217047929764}]","[1.0, 0.37713256, 0.5726487, 0.36048478, 0.65114945]",0.1695807343040054,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
186,186,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
187,187,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btDynamicsWorldDoubleData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btDynamicsWorldDoubleData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8390380144119263}, {'value': ['start'], 'probability': 0.015767665579915047}, {'value': ['test'], 'probability': 0.01117302943021059}, {'value': ['clear'], 'probability': 0.010098160244524479}, {'value': ['execute'], 'probability': 0.009454037062823772}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1259917174914073,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
188,188,"public void setSolverInfo(btContactSolverInfoDoubleData value) {DynamicsJNI.btDynamicsWorldDoubleData_solverInfo_set(swigCPtr, this, btContactSolverInfoDoubleData.getCPtr(value), value);}
","public void [MASK](btContactSolverInfoDoubleData value) {DynamicsJNI.btDynamicsWorldDoubleData_solverInfo_set(swigCPtr, this, btContactSolverInfoDoubleData.getCPtr(value), value);}
",setSolverInfo,"[{'value': ['set'], 'probability': 0.6960673332214355}, {'value': ['put'], 'probability': 0.03527643904089928}, {'value': ['add'], 'probability': 0.021943654865026474}, {'value': ['apply'], 'probability': 0.021021395921707153}, {'value': ['execute'], 'probability': 0.014918562024831772}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.751030580560732,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
189,189,"public btContactSolverInfoDoubleData getSolverInfo() {long cPtr = DynamicsJNI.btDynamicsWorldDoubleData_solverInfo_get(swigCPtr, this);return (cPtr == 0) ? null : new btContactSolverInfoDoubleData(cPtr, false);}
","public btContactSolverInfoDoubleData [MASK]() {long cPtr = DynamicsJNI.btDynamicsWorldDoubleData_solverInfo_get(swigCPtr, this);return (cPtr == 0) ? null : new btContactSolverInfoDoubleData(cPtr, false);}
",getSolverInfo,"[{'value': ['get'], 'probability': 0.368608683347702}, {'value': ['create'], 'probability': 0.1269187033176422}, {'value': ['build'], 'probability': 0.1254594475030899}, {'value': ['##s'], 'probability': 0.05659351497888565}, {'value': ['resolve'], 'probability': 0.023971999064087868}]","[1.0, 0.62328804, 0.5626448, 0.0, 0.427468]",0.5285519583326693,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
190,190,"public void setGravity(btVector3DoubleData value) {DynamicsJNI.btDynamicsWorldDoubleData_gravity_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btDynamicsWorldDoubleData_gravity_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setGravity,"[{'value': ['set'], 'probability': 0.7324432134628296}, {'value': ['put'], 'probability': 0.037973783910274506}, {'value': ['add'], 'probability': 0.015228667296469212}, {'value': ['apply'], 'probability': 0.013224385678768158}, {'value': ['update'], 'probability': 0.011762192472815514}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.41854778]",0.7819046087205554,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
191,191,"public boolean markSupported() {return false;}
","public boolean [MASK]() {return false;}
",markSupported,"[{'value': ['equals'], 'probability': 0.08609996736049652}, {'value': ['is'], 'probability': 0.08533840626478195}, {'value': ['exists'], 'probability': 0.040638137608766556}, {'value': ['run'], 'probability': 0.03207220509648323}, {'value': ['matches'], 'probability': 0.026149984449148178}]","[0.23136741, 0.42531824, 0.15816878, 0.46533602, 0.3606621]",0.0870000525958984,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.34398448, 0.39776382, 0.35683647, 0.4482133, 0.2561614, 0.12161191, 0.5032458, 0.4868396, 0.3560433, 0.4620769]",0.3658399117276839
192,192,"public int read() {synchronized (lock) {char charArray[] = new char[1];if (read(charArray, 0, 1) != -1) {return charArray[0];}return -1;}}
","public int [MASK]() {synchronized (lock) {char charArray[] = new char[1];if ([MASK](charArray, 0, 1) != -1) {return charArray[0];}return -1;}}
",read,"[{'value': ['lock'], 'probability': 0.1787995994091034}, {'value': ['start'], 'probability': 0.10191512852907181}, {'value': ['unlock'], 'probability': 0.07803685963153839}, {'value': ['get'], 'probability': 0.055805377662181854}, {'value': ['break'], 'probability': 0.044556260108947754}]","[0.21719223, 0.43149626, 0.09320626, 0.5726487, 0.4168543]",0.1406137502742561,"[{'value': ['read'], 'probability': 0.9999762773513794}, {'value': ['add'], 'probability': 5.242024599283468e-06}, {'value': ['write'], 'probability': 4.161230208410416e-06}, {'value': ['find'], 'probability': 2.5464371447014855e-06}, {'value': ['select'], 'probability': 2.3444497401214903e-06}, {'value': ['open'], 'probability': 2.18003879126627e-06}, {'value': ['load'], 'probability': 1.9375654574105283e-06}, {'value': ['update'], 'probability': 1.8895796074502869e-06}, {'value': ['remove'], 'probability': 1.8395286360828322e-06}, {'value': ['delete'], 'probability': 1.561439376018825e-06}]","[0.99999994, 0.36516917, 0.74154025, 0.5652032, 0.39228055, 0.3492585, 0.32439876, 0.3623474, 0.34332725, 0.3864924]",0.9999868859046477
193,193,"public int read(char buf[]) {return read(buf, 0, buf.length);}
","public int [MASK](char buf[]) {return [MASK](buf, 0, buf.length);}
",read,"[{'value': ['compare'], 'probability': 0.2291133999824524}, {'value': ['get'], 'probability': 0.19231632351875305}, {'value': ['read'], 'probability': 0.04460268095135689}, {'value': ['min'], 'probability': 0.04000004380941391}, {'value': ['split'], 'probability': 0.01779591292142868}]","[0.49443805, 0.5726487, 0.99999994, 0.17029731, 0.2450231]",0.2791870645690785,"[{'value': ['read'], 'probability': 0.9999979734420776}, {'value': ['next', 'char'], 'probability': 7.512707611567748e-07}, {'value': ['read', 'from'], 'probability': 6.787244046790875e-07}, {'value': ['get'], 'probability': 2.0215512108734401e-07}, {'value': ['from', 'string'], 'probability': 1.6840462535583356e-07}, {'value': ['load'], 'probability': 1.3931428100022458e-07}, {'value': ['read', 'object'], 'probability': 8.57354578442937e-08}, {'value': ['buffer'], 'probability': 3.7844689160237976e-08}, {'value': ['read', 'char'], 'probability': 3.461799380488628e-08}, {'value': ['read', 'model'], 'probability': 3.3892781914346415e-08}]","[0.99999994, 0.29840633, 0.82868487, 0.5726487, 0.42142898, 0.32439876, 0.8316684, 0.08653828, 0.69518477, 0.8037652]",0.9999990578888578
194,194,"public boolean ready() {return false;}
","public boolean [MASK]() {return false;}
",ready,"[{'value': ['equals'], 'probability': 0.08609996736049652}, {'value': ['is'], 'probability': 0.08533840626478195}, {'value': ['exists'], 'probability': 0.040638137608766556}, {'value': ['run'], 'probability': 0.03207220509648323}, {'value': ['matches'], 'probability': 0.026149984449148178}]","[0.1041031, 0.54812133, 0.2938063, 0.522345, 0.34503898]",0.0934543363868823,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.42692038, 0.7324215, 0.6735198, 0.54538196, 0.47521973, 0.18671776, 0.53898734, 0.5208955, 0.54796344, 0.5464287]",0.5235615510261902
195,195,"public void reset() {throw new IOException();}
","public void [MASK]() {throw new IOException();}
",reset,"[{'value': ['run'], 'probability': 0.504541277885437}, {'value': ['execute'], 'probability': 0.0719066932797432}, {'value': ['fail'], 'probability': 0.04340870678424835}, {'value': ['test'], 'probability': 0.03840648755431175}, {'value': ['close'], 'probability': 0.03205464780330658}]","[0.1346719, 0.25290957, 0.25021085, 0.15809871, 0.17533866]",0.1086871863743683,"[{'value': ['flush'], 'probability': 0.37259146571159363}, {'value': ['reset'], 'probability': 0.3249763250350952}, {'value': ['close'], 'probability': 0.09006581455469131}, {'value': ['remove'], 'probability': 0.06715923547744751}, {'value': ['rollback'], 'probability': 0.055683545768260956}, {'value': ['clear'], 'probability': 0.028551630675792694}, {'value': ['reset', 'buffer'], 'probability': 0.023768078535795212}, {'value': ['dispose'], 'probability': 0.01821870170533657}, {'value': ['shutdown'], 'probability': 0.009636318311095238}, {'value': ['println'], 'probability': 0.009348821826279163}]","[0.13276353, 1.0, 0.17533866, 0.23523106, 0.22872679, 0.10589813, 0.76980734, 0.15166157, 0.25621086, 0.0]",0.44532157125349153
196,196,"public long skip(long count) {if (count < 0) {throw new IllegalArgumentException();}synchronized (lock) {long skipped = 0;int toRead = count < 512 ? (int) count : 512;char charsSkipped[] = new char[toRead];while (skipped < count) {int read = read(charsSkipped, 0, toRead);if (read == -1) {return skipped;}skipped += read;if (read < toRead) {return skipped;}if (count - skipped < toRead) {toRead = (int) (count - skipped);}}return skipped;}}
","public long [MASK](long count) {if (count < 0) {throw new IllegalArgumentException();}synchronized (lock) {long [MASK]ped = 0;int toRead = count < 512 ? (int) count : 512;char charsSkipped[] = new char[toRead];while ([MASK]ped < count) {int read = read(charsSkipped, 0, toRead);if (read == -1) {return [MASK]ped;}[MASK]ped += read;if (read < toRead) {return [MASK]ped;}if (count - [MASK]ped < toRead) {toRead = (int) (count - [MASK]ped);}}return [MASK]ped;}}
",skip,"[{'value': ['read'], 'probability': 0.8854347467422485}, {'value': ['write'], 'probability': 0.01935766264796257}, {'value': ['get'], 'probability': 0.014249765314161777}, {'value': ['accept'], 'probability': 0.0038119314704090357}, {'value': ['process'], 'probability': 0.003421245375648141}]","[0.33486244, 0.3846241, 0.49507433, 0.38750026, 0.20205128]",0.3131673484148131,"[{'value': ['skip'], 'probability': 0.9999560117721558}, {'value': ['skip', 'bytes'], 'probability': 4.3560616177273914e-05}, {'value': ['read', 'bytes'], 'probability': 2.986092511036986e-07}, {'value': ['peek'], 'probability': 1.3838807433330658e-08}, {'value': ['eof'], 'probability': 1.3542128307619805e-08}, {'value': ['skip', 'fully'], 'probability': 1.199260424300519e-08}, {'value': ['should', 'skip'], 'probability': 8.569012166503853e-09}, {'value': ['stem'], 'probability': 7.993294026675812e-09}, {'value': ['iter'], 'probability': 6.782344907918514e-09}, {'value': ['back'], 'probability': 5.828831195486828e-09}]","[1.0, 0.5265433, 0.12052637, 0.15904307, -0.2631147, 0.6831929, 0.7714456, 0.09270021, 0.023233984, 0.43710783]",0.9999790012010478
197,197,"public int read(CharBuffer target) {if (null == target) {throw new NullPointerException();}int length = target.length();char[] buf = new char[length];length = Math.min(length, read(buf));if (length > 0) {target.put(buf, 0, length);}return length;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public int [MASK](CharBuffer target) {if (null == target) {throw new NullPointerException();}int length = target.length();char[] buf = new char[length];length = Math.min(length, [MASK](buf));if (length > 0) {target.put(buf, 0, length);}return length;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",read,"[{'value': ['put'], 'probability': 0.792536735534668}, {'value': ['get'], 'probability': 0.09005948156118393}, {'value': ['remove'], 'probability': 0.007356215734034777}, {'value': ['compare'], 'probability': 0.006697105709463358}, {'value': ['evaluate'], 'probability': 0.005813848227262497}]","[0.5763633, 0.5726487, 0.34332725, 0.49443805, 0.30015728]",0.5159435156888806,"[{'value': ['read'], 'probability': 0.9889590740203857}, {'value': ['add'], 'probability': 0.0023761491756886244}, {'value': ['append'], 'probability': 0.002194805536419153}, {'value': ['expand'], 'probability': 0.0020493182819336653}, {'value': ['get', 'char', 'count'], 'probability': 0.0010404989589005709}, {'value': ['characters'], 'probability': 0.0008907594019547105}, {'value': ['replace'], 'probability': 0.0007516600308008492}, {'value': ['buffer'], 'probability': 0.0006231771549209952}, {'value': ['ensure', 'data'], 'probability': 0.0005830905865877867}, {'value': ['receive'], 'probability': 0.0005313658621162176}]","[0.99999994, 0.36516917, 0.039740093, 0.19611368, 0.50715524, 0.44425938, 0.2969953, 0.08653828, 0.4347804, 0.48796204]",0.9920292258538871
198,198,"public static long getCPtr(btDbvtAabbMm obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btDbvtAabbMm obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.09683705121278763}, {'value': ['read'], 'probability': 0.042279403656721115}, {'value': ['execute'], 'probability': 0.028162194415926933}, {'value': ['match'], 'probability': 0.027943646535277367}, {'value': ['skip'], 'probability': 0.025021305307745934}]","[1.0, 0.5726487, 0.37713256, 0.4692583, 0.49507433]",0.1571693718438725,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
199,199,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
200,200,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btDbvtAabbMm(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btDbvtAabbMm(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.850050151348114}, {'value': ['start'], 'probability': 0.011651752516627312}, {'value': ['clear'], 'probability': 0.009178943932056427}, {'value': ['test'], 'probability': 0.008224476128816605}, {'value': ['execute'], 'probability': 0.00808278750628233}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1258375971469442,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
201,201,"public Vector3 Center() {return CollisionJNI.btDbvtAabbMm_Center(swigCPtr, this);}
","public Vector3 [MASK]() {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this);}
",Center,"[{'value': ['clone'], 'probability': 0.05674806982278824}, {'value': ['get'], 'probability': 0.035586483776569366}, {'value': ['build'], 'probability': 0.03299407660961151}, {'value': ['##D'], 'probability': 0.03066249191761017}, {'value': ['run'], 'probability': 0.027935801073908806}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
202,202,"public Vector3 Lengths() {return CollisionJNI.btDbvtAabbMm_Lengths(swigCPtr, this);}
","public Vector3 [MASK]() {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this);}
",Lengths,"[{'value': ['clone'], 'probability': 0.05674806982278824}, {'value': ['get'], 'probability': 0.035586483776569366}, {'value': ['build'], 'probability': 0.03299407660961151}, {'value': ['##D'], 'probability': 0.03066249191761017}, {'value': ['run'], 'probability': 0.027935801073908806}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
203,203,"public Vector3 Extents() {return CollisionJNI.btDbvtAabbMm_Extents(swigCPtr, this);}
","public Vector3 [MASK]() {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this);}
",Extents,"[{'value': ['clone'], 'probability': 0.05674806982278824}, {'value': ['get'], 'probability': 0.035586483776569366}, {'value': ['build'], 'probability': 0.03299407660961151}, {'value': ['##D'], 'probability': 0.03066249191761017}, {'value': ['run'], 'probability': 0.027935801073908806}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
204,204,"public Vector3 Mins() {return CollisionJNI.btDbvtAabbMm_Mins(swigCPtr, this);}
","public Vector3 [MASK]() {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this);}
",Mins,"[{'value': ['clone'], 'probability': 0.05674806982278824}, {'value': ['get'], 'probability': 0.035586483776569366}, {'value': ['build'], 'probability': 0.03299407660961151}, {'value': ['##D'], 'probability': 0.03066249191761017}, {'value': ['run'], 'probability': 0.027935801073908806}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
205,205,"public Vector3 Maxs() {return CollisionJNI.btDbvtAabbMm_Maxs(swigCPtr, this);}
","public Vector3 [MASK]() {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this);}
",Maxs,"[{'value': ['clone'], 'probability': 0.05674806982278824}, {'value': ['get'], 'probability': 0.035586483776569366}, {'value': ['build'], 'probability': 0.03299407660961151}, {'value': ['##D'], 'probability': 0.03066249191761017}, {'value': ['run'], 'probability': 0.027935801073908806}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
206,206,"public static btDbvtAabbMm FromCE(Vector3 c, Vector3 e) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_FromCE(c, e), true);}
","public static btDbvtAabbMm [MASK](Vector3 c, Vector3 e) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_[MASK](c, e), true);}
",FromCE,"[{'value': ['_'], 'probability': 0.9750480055809021}, {'value': ['##l'], 'probability': 0.003942071460187435}, {'value': ['##d'], 'probability': 0.0017730459803715348}, {'value': ['='], 'probability': 0.0016580375377088785}, {'value': ['##x'], 'probability': 0.0015497588319703937}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['cross'], 'probability': 0.31587642431259155}, {'value': ['vector'], 'probability': 0.2782781422138214}, {'value': ['minus'], 'probability': 0.0850791186094284}, {'value': ['of'], 'probability': 0.06352847814559937}, {'value': ['mul'], 'probability': 0.05539953336119652}, {'value': ['get', 'current', 'tangent'], 'probability': 0.04776977375149727}, {'value': ['project'], 'probability': 0.04592493548989296}, {'value': ['last'], 'probability': 0.041604071855545044}, {'value': ['get', 'imag', 'eigenvalues'], 'probability': 0.04126853868365288}, {'value': ['pred'], 'probability': 0.025271041318774223}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
207,207,"public static btDbvtAabbMm FromCR(Vector3 c, float r) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_FromCR(c, r), true);}
","public static btDbvtAabbMm [MASK](Vector3 c, float r) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_[MASK](c, r), true);}
",FromCR,"[{'value': ['_'], 'probability': 0.9828101396560669}, {'value': ['##l'], 'probability': 0.0024846249725669622}, {'value': ['##d'], 'probability': 0.0010614673374220729}, {'value': ['='], 'probability': 0.0009144879877567291}, {'value': ['##x'], 'probability': 0.0006929769297130406}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul'], 'probability': 0.16368231177330017}, {'value': ['div'], 'probability': 0.1382933259010315}, {'value': ['avg'], 'probability': 0.11558642238378525}, {'value': ['vector'], 'probability': 0.10490723699331284}, {'value': ['var'], 'probability': 0.09100497514009476}, {'value': ['of'], 'probability': 0.09014791995286942}, {'value': ['minus'], 'probability': 0.08266546577215195}, {'value': ['project'], 'probability': 0.08089897781610489}, {'value': ['max'], 'probability': 0.06726618111133575}, {'value': ['is', 'not', 'equal'], 'probability': 0.06554710865020752}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
208,208,"public static btDbvtAabbMm FromMM(Vector3 mi, Vector3 mx) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_FromMM(mi, mx), true);}
","public static btDbvtAabbMm [MASK](Vector3 mi, Vector3 mx) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_[MASK](mi, mx), true);}
",FromMM,"[{'value': ['_'], 'probability': 0.988723635673523}, {'value': ['##l'], 'probability': 0.0014756860909983516}, {'value': ['='], 'probability': 0.0011186297051608562}, {'value': ['##d'], 'probability': 0.0006041856249794364}, {'value': ['##x'], 'probability': 0.0004439412150532007}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['minus'], 'probability': 0.3315761983394623}, {'value': ['vector'], 'probability': 0.19832655787467957}, {'value': ['normalized'], 'probability': 0.15866924822330475}, {'value': ['cross'], 'probability': 0.06952063739299774}, {'value': ['get', 'grid', 'data'], 'probability': 0.060665786266326904}, {'value': ['times'], 'probability': 0.05880821496248245}, {'value': ['get', 'imag', 'eigenvalues'], 'probability': 0.03273831680417061}, {'value': ['difference'], 'probability': 0.03130383789539337}, {'value': ['get', 'union'], 'probability': 0.030892493203282356}, {'value': ['get', 'translation'], 'probability': 0.027498740702867508}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
209,209,"public static btDbvtAabbMm FromPoints(btVector3 pts, int n) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_FromPoints__SWIG_0(btVector3.getCPtr(pts), pts, n), true);}
","public static btDbvtAabbMm [MASK](btVector3 pts, int n) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_[MASK]__SWIG_0(btVector3.getCPtr(pts), pts, n), true);}
",FromPoints,"[{'value': ['_'], 'probability': 0.539198637008667}, {'value': ['##l'], 'probability': 0.09812749922275543}, {'value': ['##d'], 'probability': 0.04318678751587868}, {'value': ['##x'], 'probability': 0.031543951481580734}, {'value': ['##1'], 'probability': 0.021541796624660492}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['child'], 'probability': 0.22776134312152863}, {'value': ['range'], 'probability': 0.15022912621498108}, {'value': ['get', 'edges'], 'probability': 0.14004643261432648}, {'value': ['near'], 'probability': 0.13112592697143555}, {'value': ['copy'], 'probability': 0.08286374062299728}, {'value': ['set', 'points'], 'probability': 0.06371203809976578}, {'value': ['intersect'], 'probability': 0.06032341718673706}, {'value': ['edges'], 'probability': 0.05433787405490875}, {'value': ['get', 'polygon'], 'probability': 0.04496835917234421}, {'value': ['append', 'node'], 'probability': 0.04463177174329758}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
210,210,"public static btDbvtAabbMm FromPoints(SWIGTYPE_p_p_btVector3 ppts, int n) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_FromPoints__SWIG_1(SWIGTYPE_p_p_btVector3.getCPtr(ppts), n), true);}
","public static btDbvtAabbMm [MASK](SWIGTYPE_p_p_btVector3 ppts, int n) {return new btDbvtAabbMm(CollisionJNI.btDbvtAabbMm_[MASK]__SWIG_1(SWIGTYPE_p_p_btVector3.getCPtr(ppts), n), true);}
",FromPoints,"[{'value': ['_'], 'probability': 0.3163033723831177}, {'value': ['##1'], 'probability': 0.13668423891067505}, {'value': ['##l'], 'probability': 0.09268331527709961}, {'value': ['##2'], 'probability': 0.0844631940126419}, {'value': ['##d'], 'probability': 0.04027913138270378}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['alloc'], 'probability': 0.21354669332504272}, {'value': ['near'], 'probability': 0.158174067735672}, {'value': ['get', 'file', 'mode'], 'probability': 0.14077740907669067}, {'value': ['find', 'min'], 'probability': 0.10906721651554108}, {'value': ['unfold'], 'probability': 0.1010875478386879}, {'value': ['find', 'after'], 'probability': 0.0714346319437027}, {'value': ['comb'], 'probability': 0.07133829593658447}, {'value': ['refer'], 'probability': 0.049504779279232025}, {'value': ['neighbors'], 'probability': 0.04522683098912239}, {'value': ['clear', 'limit'], 'probability': 0.039842523634433746}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
211,211,"public void Expand(Vector3 e) {CollisionJNI.btDbvtAabbMm_Expand(swigCPtr, this, e);}
","public void [MASK](Vector3 e) {CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this, e);}
",Expand,"[{'value': ['execute'], 'probability': 0.19116874039173126}, {'value': ['run'], 'probability': 0.1605290323495865}, {'value': ['read'], 'probability': 0.07437692582607269}, {'value': ['write'], 'probability': 0.031696952879428864}, {'value': ['update'], 'probability': 0.030308416113257408}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['push', 'back'], 'probability': 0.20477981865406036}, {'value': ['item', 'state', 'changed'], 'probability': 0.17797179520130157}, {'value': ['add'], 'probability': 0.17778755724430084}, {'value': ['add', 'first'], 'probability': 0.13518080115318298}, {'value': ['grow'], 'probability': 0.056303441524505615}, {'value': ['join'], 'probability': 0.05559884011745453}, {'value': ['last'], 'probability': 0.05304327607154846}, {'value': ['set'], 'probability': 0.0483836755156517}, {'value': ['add', 'flag'], 'probability': 0.04642317444086075}, {'value': ['insert', 'edge'], 'probability': 0.04452754184603691}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
212,212,"public void SignedExpand(Vector3 e) {CollisionJNI.btDbvtAabbMm_SignedExpand(swigCPtr, this, e);}
","public void [MASK](Vector3 e) {CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this, e);}
",SignedExpand,"[{'value': ['execute'], 'probability': 0.19116874039173126}, {'value': ['run'], 'probability': 0.1605290323495865}, {'value': ['read'], 'probability': 0.07437692582607269}, {'value': ['write'], 'probability': 0.031696952879428864}, {'value': ['update'], 'probability': 0.030308416113257408}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['push', 'back'], 'probability': 0.20477981865406036}, {'value': ['item', 'state', 'changed'], 'probability': 0.17797179520130157}, {'value': ['add'], 'probability': 0.17778755724430084}, {'value': ['add', 'first'], 'probability': 0.13518080115318298}, {'value': ['grow'], 'probability': 0.056303441524505615}, {'value': ['join'], 'probability': 0.05559884011745453}, {'value': ['last'], 'probability': 0.05304327607154846}, {'value': ['set'], 'probability': 0.0483836755156517}, {'value': ['add', 'flag'], 'probability': 0.04642317444086075}, {'value': ['insert', 'edge'], 'probability': 0.04452754184603691}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
213,213,"public boolean Contain(btDbvtAabbMm a) {return CollisionJNI.btDbvtAabbMm_Contain(swigCPtr, this, btDbvtAabbMm.getCPtr(a), a);}
","public boolean [MASK](btDbvtAabbMm a) {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this, btDbvtAabbMm.getCPtr(a), a);}
",Contain,"[{'value': ['equals'], 'probability': 0.1207127794623375}, {'value': ['execute'], 'probability': 0.09448524564504623}, {'value': ['matches'], 'probability': 0.05399855598807335}, {'value': ['supports'], 'probability': 0.034708231687545776}, {'value': ['accepts'], 'probability': 0.030667874962091446}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['ne'], 'probability': 0.47296157479286194}, {'value': ['eq'], 'probability': 0.4337309002876282}, {'value': ['lt'], 'probability': 0.05608125030994415}, {'value': ['add'], 'probability': 0.010180179961025715}, {'value': ['swap'], 'probability': 0.00866527110338211}, {'value': ['gt'], 'probability': 0.004748520441353321}, {'value': ['assign'], 'probability': 0.004611219745129347}, {'value': ['has'], 'probability': 0.003354097018018365}, {'value': ['set'], 'probability': 0.0032397573813796043}, {'value': ['contains'], 'probability': 0.002427245955914259}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
214,214,"public int Classify(Vector3 n, float o, int s) {return CollisionJNI.btDbvtAabbMm_Classify(swigCPtr, this, n, o, s);}
","public int [MASK](Vector3 n, float o, int s) {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this, n, o, s);}
",Classify,"[{'value': ['compare'], 'probability': 0.2530107796192169}, {'value': ['read'], 'probability': 0.13388003408908844}, {'value': ['evaluate'], 'probability': 0.0519823394715786}, {'value': ['process'], 'probability': 0.0322081483900547}, {'value': ['get'], 'probability': 0.028812861070036888}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set'], 'probability': 0.7174697518348694}, {'value': ['contains'], 'probability': 0.06218317523598671}, {'value': ['eq'], 'probability': 0.046464044600725174}, {'value': ['add'], 'probability': 0.030684949830174446}, {'value': ['is'], 'probability': 0.029862402006983757}, {'value': ['equals'], 'probability': 0.029761046171188354}, {'value': ['equal'], 'probability': 0.025380970910191536}, {'value': ['translate'], 'probability': 0.02193598821759224}, {'value': ['vector'], 'probability': 0.019262071698904037}, {'value': ['ne'], 'probability': 0.016995687037706375}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
215,215,"public float ProjectMinimum(Vector3 v, long signs) {return CollisionJNI.btDbvtAabbMm_ProjectMinimum(swigCPtr, this, v, signs);}
","public float [MASK](Vector3 v, long signs) {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this, v, signs);}
",ProjectMinimum,"[{'value': ['sign'], 'probability': 0.11844464391469955}, {'value': ['paint'], 'probability': 0.034075118601322174}, {'value': ['evaluate'], 'probability': 0.03275178745388985}, {'value': ['value'], 'probability': 0.026362016797065735}, {'value': ['execute'], 'probability': 0.02385100908577442}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'signs'], 'probability': 0.9602020978927612}, {'value': ['contains'], 'probability': 0.013598049990832806}, {'value': ['remove'], 'probability': 0.009676526300609112}, {'value': ['set'], 'probability': 0.00436772545799613}, {'value': ['update'], 'probability': 0.004261338151991367}, {'value': ['get', 'difference'], 'probability': 0.0019477329915389419}, {'value': ['remove', 'sign'], 'probability': 0.0019383420003578067}, {'value': ['value'], 'probability': 0.0018587119411677122}, {'value': ['values'], 'probability': 0.0011878557270392776}, {'value': ['find'], 'probability': 0.0009615679155103862}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
216,216,"public Vector3 tMins() {return CollisionJNI.btDbvtAabbMm_tMins(swigCPtr, this);}
","public Vector3 [MASK]() {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this);}
",tMins,"[{'value': ['clone'], 'probability': 0.05674806982278824}, {'value': ['get'], 'probability': 0.035586483776569366}, {'value': ['build'], 'probability': 0.03299407660961151}, {'value': ['##D'], 'probability': 0.03066249191761017}, {'value': ['run'], 'probability': 0.027935801073908806}]","[0.2031508, 0.4300905, 0.3358478, 0.0, 0.3535753]",0.0477922203983995,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.39193714, 0.4294543, 0.39732775, 0.4135174, 0.523077, 0.37944284, 0.40330952, 0.41575712, 0.33749214, 0.36888388]",0.40585172386786195
217,217,"public Vector3 tMaxs() {return CollisionJNI.btDbvtAabbMm_tMaxs(swigCPtr, this);}public float getMinWidth() {return getPrefWidth();}
","public Vector3 [MASK]() {return CollisionJNI.btDbvtAabbMm_[MASK](swigCPtr, this);}public float getMinWidth() {return getPrefWidth();}
",tMaxs,"[{'value': ['clone'], 'probability': 0.05760781094431877}, {'value': ['get'], 'probability': 0.05462568253278732}, {'value': ['##D'], 'probability': 0.04158291593194008}, {'value': ['##V'], 'probability': 0.03332812711596489}, {'value': ['build'], 'probability': 0.02644340880215168}]","[0.2031508, 0.4300905, 0.0, 0.0, 0.3358478]",0.0440780194709131,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.39193714, 0.4294543, 0.39732775, 0.4135174, 0.523077, 0.37944284, 0.40330952, 0.41575712, 0.33749214, 0.36888388]",0.40585172386786195
218,218,"public float getMinHeight() {return getPrefHeight();}
","public float [MASK]() {return getPrefHeight();}
",getMinHeight,"[{'value': ['get'], 'probability': 0.14853782951831818}, {'value': ['float'], 'probability': 0.0535367913544178}, {'value': ['trim'], 'probability': 0.03973961994051933}, {'value': ['next'], 'probability': 0.030451849102973938}, {'value': ['bar'], 'probability': 0.023003607988357544}]","[1.0, 0.2808844, 0.29039297, 0.6966621, 0.45318797]",0.2067551927609671,"[{'value': ['as', 'float'], 'probability': 0.824252188205719}, {'value': ['calculate', 'decision', 'score'], 'probability': 0.05015652999281883}, {'value': ['get', 'progress'], 'probability': 0.028423182666301727}, {'value': ['m', 'first', 'byte', 'weight'], 'probability': 0.019289471209049225}, {'value': ['get', 'percent', 'used'], 'probability': 0.01900026947259903}, {'value': ['elapsed', 'time'], 'probability': 0.015945298597216606}, {'value': ['get', 'mass'], 'probability': 0.013962916098535061}, {'value': ['float', 'value'], 'probability': 0.010670461691915989}, {'value': ['get', 'alpha'], 'probability': 0.01026229839771986}, {'value': ['get', 'weight'], 'probability': 0.008037513121962547}]","[0.5980391, 0.6528801, 0.8719993, 0.5246985, 0.8114748, 0.51694953, 0.8130952, 0.45959836, 0.7418046, 0.86562276]",0.6150759248106158
219,219,"public float getPrefWidth() {return 0;}
","public float [MASK]() {return 0;}
",getPrefWidth,"[{'value': ['get'], 'probability': 0.11902123689651489}, {'value': ['next'], 'probability': 0.0462767593562603}, {'value': ['start'], 'probability': 0.04457392171025276}, {'value': ['value'], 'probability': 0.04454116150736809}, {'value': ['length'], 'probability': 0.03849995136260986}]","[1.0, 0.6966621, 0.7199945, 0.46303764, 0.3304365]",0.2166995037677849,"[{'value': ['get', 'progress'], 'probability': 0.7595232725143433}, {'value': ['get', 'token', 'score'], 'probability': 0.1375284194946289}, {'value': ['float', 'value'], 'probability': 0.02174360118806362}, {'value': ['get', 'value'], 'probability': 0.017533767968416214}, {'value': ['get', 'float', 'value'], 'probability': 0.013472716324031353}, {'value': ['freq'], 'probability': 0.013357573188841343}, {'value': ['get', 'scale'], 'probability': 0.0103947464376688}, {'value': ['get', 'position'], 'probability': 0.009946130216121674}, {'value': ['get', 'attenuation'], 'probability': 0.008411125279963017}, {'value': ['get', 'float'], 'probability': 0.008088769391179085}]","[0.8719993, 0.8198348, 0.45959836, 0.8500731, 0.78096455, -0.21266466, 0.82746357, 0.88500535, 0.7290076, 0.84481704]",0.8380026411932431
220,220,"public float getPrefHeight() {return 0;}
","public float [MASK]() {return 0;}
",getPrefHeight,"[{'value': ['get'], 'probability': 0.11902123689651489}, {'value': ['next'], 'probability': 0.0462767593562603}, {'value': ['start'], 'probability': 0.04457392171025276}, {'value': ['value'], 'probability': 0.04454116150736809}, {'value': ['length'], 'probability': 0.03849995136260986}]","[1.0, 0.6966621, 0.7199945, 0.46303764, 0.3304365]",0.2166995037677849,"[{'value': ['get', 'progress'], 'probability': 0.7595232725143433}, {'value': ['get', 'token', 'score'], 'probability': 0.1375284194946289}, {'value': ['float', 'value'], 'probability': 0.02174360118806362}, {'value': ['get', 'value'], 'probability': 0.017533767968416214}, {'value': ['get', 'float', 'value'], 'probability': 0.013472716324031353}, {'value': ['freq'], 'probability': 0.013357573188841343}, {'value': ['get', 'scale'], 'probability': 0.0103947464376688}, {'value': ['get', 'position'], 'probability': 0.009946130216121674}, {'value': ['get', 'attenuation'], 'probability': 0.008411125279963017}, {'value': ['get', 'float'], 'probability': 0.008088769391179085}]","[0.8719993, 0.8198348, 0.45959836, 0.8500731, 0.78096455, -0.21266466, 0.82746357, 0.88500535, 0.7290076, 0.84481704]",0.8380026411932431
221,221,"public float getMaxWidth() {return 0;}
","public float [MASK]() {return 0;}
",getMaxWidth,"[{'value': ['get'], 'probability': 0.11902123689651489}, {'value': ['next'], 'probability': 0.0462767593562603}, {'value': ['start'], 'probability': 0.04457392171025276}, {'value': ['value'], 'probability': 0.04454116150736809}, {'value': ['length'], 'probability': 0.03849995136260986}]","[1.0, 0.6966621, 0.7199945, 0.46303764, 0.3304365]",0.2166995037677849,"[{'value': ['get', 'progress'], 'probability': 0.7595232725143433}, {'value': ['get', 'token', 'score'], 'probability': 0.1375284194946289}, {'value': ['float', 'value'], 'probability': 0.02174360118806362}, {'value': ['get', 'value'], 'probability': 0.017533767968416214}, {'value': ['get', 'float', 'value'], 'probability': 0.013472716324031353}, {'value': ['freq'], 'probability': 0.013357573188841343}, {'value': ['get', 'scale'], 'probability': 0.0103947464376688}, {'value': ['get', 'position'], 'probability': 0.009946130216121674}, {'value': ['get', 'attenuation'], 'probability': 0.008411125279963017}, {'value': ['get', 'float'], 'probability': 0.008088769391179085}]","[0.8719993, 0.8198348, 0.45959836, 0.8500731, 0.78096455, -0.21266466, 0.82746357, 0.88500535, 0.7290076, 0.84481704]",0.8380026411932431
222,222,"public float getMaxHeight() {return 0;}
","public float [MASK]() {return 0;}
",getMaxHeight,"[{'value': ['get'], 'probability': 0.11902123689651489}, {'value': ['next'], 'probability': 0.0462767593562603}, {'value': ['start'], 'probability': 0.04457392171025276}, {'value': ['value'], 'probability': 0.04454116150736809}, {'value': ['length'], 'probability': 0.03849995136260986}]","[1.0, 0.6966621, 0.7199945, 0.46303764, 0.3304365]",0.2166995037677849,"[{'value': ['get', 'progress'], 'probability': 0.7595232725143433}, {'value': ['get', 'token', 'score'], 'probability': 0.1375284194946289}, {'value': ['float', 'value'], 'probability': 0.02174360118806362}, {'value': ['get', 'value'], 'probability': 0.017533767968416214}, {'value': ['get', 'float', 'value'], 'probability': 0.013472716324031353}, {'value': ['freq'], 'probability': 0.013357573188841343}, {'value': ['get', 'scale'], 'probability': 0.0103947464376688}, {'value': ['get', 'position'], 'probability': 0.009946130216121674}, {'value': ['get', 'attenuation'], 'probability': 0.008411125279963017}, {'value': ['get', 'float'], 'probability': 0.008088769391179085}]","[0.8719993, 0.8198348, 0.45959836, 0.8500731, 0.78096455, -0.21266466, 0.82746357, 0.88500535, 0.7290076, 0.84481704]",0.8380026411932431
223,223,"public void setLayoutEnabled(boolean enabled) {if (layoutEnabled == enabled)return;layoutEnabled = enabled;setLayoutEnabled(this, enabled);}
","public void [MASK](boolean enabled) {if (layoutEnabled == enabled)return;layoutEnabled = enabled;[MASK](this, enabled);}
",setLayoutEnabled,"[{'value': ['execute'], 'probability': 0.0821540355682373}, {'value': ['run'], 'probability': 0.055512022227048874}, {'value': ['put'], 'probability': 0.045219745486974716}, {'value': ['navigate'], 'probability': 0.04077405110001564}, {'value': ['set'], 'probability': 0.037703901529312134}]","[0.35167885, 0.67632943, 0.7944568, 0.27271438, 1.0]",0.1511849560179796,"[{'value': ['enable', 'widget'], 'probability': 0.5159940123558044}, {'value': ['set', 'enabled'], 'probability': 0.3862413167953491}, {'value': ['set', 'light', 'touch', 'enabled'], 'probability': 0.02290053479373455}, {'value': ['set', 'policy', 'data', 'enable'], 'probability': 0.015603944659233093}, {'value': ['set', 'debug', 'enabled'], 'probability': 0.015138696879148483}, {'value': ['set', 'close', 'angular', 'brackets', 'enabled'], 'probability': 0.01305335946381092}, {'value': ['set', 'built', 'in', 'zoom', 'controls'], 'probability': 0.010052301920950413}, {'value': ['set', 'idle'], 'probability': 0.009461743757128716}, {'value': ['set', 'enabled', 'shallow'], 'probability': 0.00643362058326602}, {'value': ['set', 'sliding', 'enabled'], 'probability': 0.005120414774864912}]","[0.32333913, 0.89065737, 0.81029576, 0.7903212, 0.7497785, 0.773743, 0.8158617, 0.82358116, 0.7958033, 0.83311355]",0.5885682653600718
224,224,"public boolean needsLayout() {return needsLayout;}
","public boolean [MASK]() {return [MASK];}
",needsLayout,"[{'value': ['equals'], 'probability': 0.09117130935192108}, {'value': ['is'], 'probability': 0.0804816484451294}, {'value': ['exists'], 'probability': 0.04379364103078842}, {'value': ['next'], 'probability': 0.03853735700249672}, {'value': ['run'], 'probability': 0.025117989629507065}]","[0.2667383, 0.65654546, 0.4853253, 0.636674, 0.5110951]",0.1357863171559625,"[{'value': ['on', 'tick'], 'probability': 0.7700895071029663}, {'value': ['validate', 'save'], 'probability': 0.15721207857131958}, {'value': ['set', 'buffered', 'image'], 'probability': 0.02980669215321541}, {'value': ['is', 'disposed'], 'probability': 0.00989177543669939}, {'value': ['has', 'meta', 'data'], 'probability': 0.007441112771630287}, {'value': ['handle', 'key', 'up'], 'probability': 0.006764957215636969}, {'value': ['reset', 'game'], 'probability': 0.0059207710437476635}, {'value': ['get', 'thumb'], 'probability': 0.005565233062952757}, {'value': ['get', 'row', 'id'], 'probability': 0.004819836467504501}, {'value': ['is', 'auto', 'id'], 'probability': 0.002488157246261835}]","[0.39489433, 0.5404084, 0.5198201, 0.6176628, 0.5476274, 0.7289236, 0.40864015, 0.58441114, 0.58156, 0.5821356]",0.4295960193791241
225,225,"public void invalidate() {needsLayout = true;}
","public void [MASK]() {needsLayout = true;}
",invalidate,"[{'value': ['run'], 'probability': 0.22421260178089142}, {'value': ['clear'], 'probability': 0.10231862217187881}, {'value': ['wait'], 'probability': 0.03417762741446495}, {'value': ['test'], 'probability': 0.03317095339298248}, {'value': ['execute'], 'probability': 0.026533927768468857}]","[0.045201052, 0.15613793, 0.07173696, 0.1534215, 0.24814302]",0.0402356088440532,"[{'value': ['reset'], 'probability': 0.978701114654541}, {'value': ['update', 'position'], 'probability': 0.009923827834427357}, {'value': ['on', 'tick'], 'probability': 0.005576199386268854}, {'value': ['init', 'fields'], 'probability': 0.004472353961318731}, {'value': ['invalidate'], 'probability': 0.0004571203317027539}, {'value': ['clear'], 'probability': 0.00038924560067243874}, {'value': ['reset', 'game'], 'probability': 0.0001435044250683859}, {'value': ['reset', 'count'], 'probability': 0.00012080274609616026}, {'value': ['set', 'image'], 'probability': 0.00011552037176443264}, {'value': ['rewind'], 'probability': 0.0001002097487798892}]","[0.07457803, 0.097317666, -0.0074777063, -0.054437194, 0.99999994, 0.15613793, 0.020067982, 0.1999297, 0.069831066, -0.049476642]",0.07421824234733362
226,226,"public void invalidateHierarchy() {invalidate();Group parent = getParent();if (parent instanceof Layout)((Layout) parent).invalidateHierarchy();}
","public void [MASK]() {invalidate();Group parent = getParent();if (parent instanceof Layout)((Layout) parent).[MASK]();}
",invalidateHierarchy,"[{'value': ['run'], 'probability': 0.1696634292602539}, {'value': ['test'], 'probability': 0.1500445008277893}, {'value': ['clear'], 'probability': 0.11856056749820709}, {'value': ['execute'], 'probability': 0.0873563289642334}, {'value': ['fail'], 'probability': 0.04280548170208931}]","[0.045201052, 0.1534215, 0.15613793, 0.24814302, 0.29520965]",0.0835142743656705,"[{'value': ['layout'], 'probability': 0.8290920853614807}, {'value': ['update', 'layout'], 'probability': 0.11253312230110168}, {'value': ['refresh'], 'probability': 0.03391505777835846}, {'value': ['set', 'layout'], 'probability': 0.008152229711413383}, {'value': ['redraw'], 'probability': 0.0070571922697126865}, {'value': ['request', 'layout'], 'probability': 0.002384583232924342}, {'value': ['run'], 'probability': 0.002136038849130273}, {'value': ['done'], 'probability': 0.0016303587472066283}, {'value': ['flush'], 'probability': 0.0016092329751700163}, {'value': ['show', 'selection'], 'probability': 0.001490066759288311}]","[-0.044253644, 0.04151283, 0.15417553, 0.024960512, 0.34650022, 0.12365989, 0.045201052, 0.09837377, -0.017247954, 0.016392542]",-0.023592620058423025
227,227,"protected void childrenChanged() {invalidateHierarchy();}
","protected void [MASK]() {invalidateHierarchy();}
",childrenChanged,"[{'value': ['run'], 'probability': 0.25242382287979126}, {'value': ['execute'], 'probability': 0.18155519664287567}, {'value': ['test'], 'probability': 0.028571970760822296}, {'value': ['fail'], 'probability': 0.024096248671412468}, {'value': ['destroy'], 'probability': 0.021376635879278183}]","[0.40975925, 0.18200059, 0.32767317, 0.35599387, 0.32799006]",0.1614278593712586,"[{'value': ['run'], 'probability': 0.3021911084651947}, {'value': ['execute'], 'probability': 0.1883777379989624}, {'value': ['parse', 'keyword', 'line'], 'probability': 0.13548167049884796}, {'value': ['do', 'action'], 'probability': 0.09685070812702179}, {'value': ['init'], 'probability': 0.07700683176517487}, {'value': ['dispose'], 'probability': 0.05351961776614189}, {'value': ['remove', 'all', 'tabs'], 'probability': 0.048259180039167404}, {'value': ['start'], 'probability': 0.041347090154886246}, {'value': ['refresh'], 'probability': 0.03118361532688141}, {'value': ['deactivate'], 'probability': 0.025782398879528046}]","[0.40975925, 0.18200059, 0.14329544, 0.56384957, -0.38433224, 0.18611228, 0.5119791, 0.43824363, 0.03492986, -0.1251443]",0.2531885565774679
228,228,"protected void sizeChanged() {invalidate();}
","protected void [MASK]() {invalidate();}
",sizeChanged,"[{'value': ['execute'], 'probability': 0.13630357384681702}, {'value': ['run'], 'probability': 0.12046565860509872}, {'value': ['fail'], 'probability': 0.11761380732059479}, {'value': ['destroy'], 'probability': 0.07516874372959137}, {'value': ['clear'], 'probability': 0.05734581500291824}]","[0.060827002, 0.3104203, 0.20130293, 0.26919243, 0.36001065]",0.1102418892227425,"[{'value': ['view', 'invalidate'], 'probability': 0.9707784056663513}, {'value': ['run'], 'probability': 0.015903152525424957}, {'value': ['invalidate'], 'probability': 0.003611751366406679}, {'value': ['clear'], 'probability': 0.0025933641009032726}, {'value': ['close'], 'probability': 0.001845506252720952}, {'value': ['on', 'update'], 'probability': 0.0011593597009778023}, {'value': ['dispose'], 'probability': 0.0011463883565738797}, {'value': ['refresh'], 'probability': 0.0011441318783909082}, {'value': ['flush'], 'probability': 0.0011190829100087285}, {'value': ['on', 'invalidated'], 'probability': 0.0006988043896853924}]","[0.32384604, 0.3104203, 0.024906918, 0.36001065, 0.46821547, 0.41625294, 0.16102709, 0.13797626, 0.17893445, 0.36810067]",0.32248961699042217
229,229,"public void setFillParent(boolean fillParent) {this.fillParent = fillParent;}
","public void [MASK](boolean fillParent) {this.fillParent = fillParent;}
",setFillParent,"[{'value': ['fill'], 'probability': 0.5761696100234985}, {'value': ['add'], 'probability': 0.03292778134346008}, {'value': ['put'], 'probability': 0.02878705784678459}, {'value': ['empty'], 'probability': 0.019332339987158775}, {'value': ['apply'], 'probability': 0.019181089475750923}]","[0.48556754, 0.5084879, 0.7944568, 0.4644971, 0.5010617]",0.3379734356714874,"[{'value': ['init'], 'probability': 0.952568531036377}, {'value': ['set', 'orientation'], 'probability': 0.03019123151898384}, {'value': ['set', 'started'], 'probability': 0.007819527760148048}, {'value': ['set', 'override'], 'probability': 0.005812996998429298}, {'value': ['lazy'], 'probability': 0.0012668806593865156}, {'value': ['init', 'defaults'], 'probability': 0.0006257271161302924}, {'value': ['set', 'base', 'dir'], 'probability': 0.0005019847885705531}, {'value': ['init', 'gui'], 'probability': 0.000483034091303125}, {'value': ['set', 'vertical'], 'probability': 0.0003878283314406872}, {'value': ['set', 'active'], 'probability': 0.0003422468726057559}]","[-0.2256778, 0.7948258, 0.9117895, 0.7685955, 0.0775541, -0.06099749, 0.65397054, -0.06624538, 0.79688907, 0.8406839]",-0.17842604796114636
230,230,"public void draw(Batch batch, float parentAlpha) {validate();super.draw(batch, parentAlpha);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK](Batch batch, float parentAlpha) {validate();super.[MASK](batch, parentAlpha);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",draw,"[{'value': ['destroy'], 'probability': 0.16007477045059204}, {'value': ['execute'], 'probability': 0.1231650784611702}, {'value': ['run'], 'probability': 0.06124322488903999}, {'value': ['verify'], 'probability': 0.052601322531700134}, {'value': ['consume'], 'probability': 0.04043867066502571}]","[0.30274642, 0.15086548, 0.44320115, 0.22284454, 0.14890797]",0.1119300477150425,"[{'value': ['draw'], 'probability': 0.7278118133544922}, {'value': ['draw', 'background'], 'probability': 0.2693697512149811}, {'value': ['update', 'score'], 'probability': 0.0008555545355193317}, {'value': ['draw', 'line'], 'probability': 0.0006923102191649377}, {'value': ['new', 'game'], 'probability': 0.0005304867518134415}, {'value': ['add', 'document'], 'probability': 0.00025532921426929533}, {'value': ['drag'], 'probability': 0.00016365725605282933}, {'value': ['paint'], 'probability': 0.00014253382687456906}, {'value': ['go', 'up'], 'probability': 0.00010626260336721316}, {'value': ['get', 'end', 'row'], 'probability': 7.241961429826915e-05}]","[1.0, 0.8432241, 0.63698685, 0.8277805, 0.59394336, 0.4873967, 0.32880735, 0.351799, 0.57580835, 0.60373443]",0.9567173270534861
231,231,"public static long getCPtr(btDispatcherInfo obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btDispatcherInfo obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07273038476705551}, {'value': ['process'], 'probability': 0.047094061970710754}, {'value': ['match'], 'probability': 0.04016411677002907}, {'value': ['update'], 'probability': 0.037954412400722504}, {'value': ['execute'], 'probability': 0.036472637206315994}]","[1.0, 0.52250975, 0.4692583, 0.36048478, 0.37713256]",0.1436218441584641,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
232,232,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
233,233,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btDispatcherInfo(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btDispatcherInfo(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7825456857681274}, {'value': ['clear'], 'probability': 0.016186079010367393}, {'value': ['execute'], 'probability': 0.01492749061435461}, {'value': ['flush'], 'probability': 0.014675124548375607}, {'value': ['start'], 'probability': 0.013874479569494724}]","[0.13931048, 0.18840031, 0.33713183, 0.120570555, 0.15163165]",0.1209720071997079,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
234,234,"public void setTimeStep(float value) {CollisionJNI.btDispatcherInfo_timeStep_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btDispatcherInfo_timeStep_set(swigCPtr, this, value);}
",setTimeStep,"[{'value': ['set'], 'probability': 0.49794504046440125}, {'value': ['put'], 'probability': 0.1681339591741562}, {'value': ['execute'], 'probability': 0.01726033352315426}, {'value': ['update'], 'probability': 0.015040997415781021}, {'value': ['save'], 'probability': 0.014244903810322285}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.5413879]",0.6515976933345242,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
235,235,"public float getTimeStep() {return CollisionJNI.btDispatcherInfo_timeStep_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btDispatcherInfo_timeStep_get(swigCPtr, this);}
",getTimeStep,"[{'value': ['run'], 'probability': 0.06840703636407852}, {'value': ['get'], 'probability': 0.06655450910329819}, {'value': ['start'], 'probability': 0.0462334007024765}, {'value': ['next'], 'probability': 0.044232700020074844}, {'value': ['execute'], 'probability': 0.04337497055530548}]","[0.65114945, 1.0, 0.7199945, 0.6966621, 0.37713256]",0.1915588676873196,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
236,236,"public void setStepCount(int value) {CollisionJNI.btDispatcherInfo_stepCount_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btDispatcherInfo_stepCount_set(swigCPtr, this, value);}
",setStepCount,"[{'value': ['set'], 'probability': 0.4509561061859131}, {'value': ['put'], 'probability': 0.15531790256500244}, {'value': ['execute'], 'probability': 0.04267268627882004}, {'value': ['save'], 'probability': 0.016912957653403282}, {'value': ['update'], 'probability': 0.01675807125866413}]","[1.0, 0.7944568, 0.35167885, 0.5413879, 0.41854778]",0.6055270724921549,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
237,237,"public int getStepCount() {return CollisionJNI.btDispatcherInfo_stepCount_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btDispatcherInfo_stepCount_get(swigCPtr, this);}
",getStepCount,"[{'value': ['get'], 'probability': 0.09581305831670761}, {'value': ['execute'], 'probability': 0.04703760892152786}, {'value': ['start'], 'probability': 0.04666021093726158}, {'value': ['step'], 'probability': 0.04308340698480606}, {'value': ['skip'], 'probability': 0.035839345306158066}]","[1.0, 0.37713256, 0.7199945, 0.6377004, 0.49507433]",0.1923650118584292,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
238,238,"public void setDispatchFunc(int value) {CollisionJNI.btDispatcherInfo_dispatchFunc_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btDispatcherInfo_dispatchFunc_set(swigCPtr, this, value);}
",setDispatchFunc,"[{'value': ['set'], 'probability': 0.5948120951652527}, {'value': ['put'], 'probability': 0.08187247067689896}, {'value': ['execute'], 'probability': 0.03883577138185501}, {'value': ['update'], 'probability': 0.015863923355937004}, {'value': ['save'], 'probability': 0.013147767633199692}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.5413879]",0.6872718063432826,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
239,239,"public int getDispatchFunc() {return CollisionJNI.btDispatcherInfo_dispatchFunc_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btDispatcherInfo_dispatchFunc_get(swigCPtr, this);}
",getDispatchFunc,"[{'value': ['run'], 'probability': 0.10861610621213913}, {'value': ['execute'], 'probability': 0.10490452498197556}, {'value': ['get'], 'probability': 0.08359172195196152}, {'value': ['start'], 'probability': 0.055764127522706985}, {'value': ['next'], 'probability': 0.017684245482087135}]","[0.65114945, 0.37713256, 1.0, 0.7199945, 0.6966621]",0.2463497609125376,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
240,240,"public void setTimeOfImpact(float value) {CollisionJNI.btDispatcherInfo_timeOfImpact_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btDispatcherInfo_timeOfImpact_set(swigCPtr, this, value);}
",setTimeOfImpact,"[{'value': ['set'], 'probability': 0.6273640990257263}, {'value': ['put'], 'probability': 0.12976203858852386}, {'value': ['add'], 'probability': 0.011804116889834404}, {'value': ['update'], 'probability': 0.011648428626358509}, {'value': ['get'], 'probability': 0.010100544430315495}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.7479002951212119,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
241,241,"public float getTimeOfImpact() {return CollisionJNI.btDispatcherInfo_timeOfImpact_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btDispatcherInfo_timeOfImpact_get(swigCPtr, this);}
",getTimeOfImpact,"[{'value': ['get'], 'probability': 0.07866109907627106}, {'value': ['run'], 'probability': 0.06629648059606552}, {'value': ['start'], 'probability': 0.04714895039796829}, {'value': ['next'], 'probability': 0.04448537528514862}, {'value': ['float'], 'probability': 0.042778268456459045}]","[1.0, 0.65114945, 0.7199945, 0.6966621, 0.2808844]",0.1987840241873,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
242,242,"public void setUseContinuous(boolean value) {CollisionJNI.btDispatcherInfo_useContinuous_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {CollisionJNI.btDispatcherInfo_useContinuous_set(swigCPtr, this, value);}
",setUseContinuous,"[{'value': ['set'], 'probability': 0.5898141860961914}, {'value': ['put'], 'probability': 0.08480709791183472}, {'value': ['execute'], 'probability': 0.029545798897743225}, {'value': ['apply'], 'probability': 0.024105750024318695}, {'value': ['accept'], 'probability': 0.019900817424058914}]","[1.0, 0.7944568, 0.35167885, 0.5010617, 0.44626972]",0.6885399923385801,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
243,243,"public boolean getUseContinuous() {return CollisionJNI.btDispatcherInfo_useContinuous_get(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btDispatcherInfo_useContinuous_get(swigCPtr, this);}
",getUseContinuous,"[{'value': ['execute'], 'probability': 0.09709425270557404}, {'value': ['run'], 'probability': 0.08428514003753662}, {'value': ['is'], 'probability': 0.05325762555003166}, {'value': ['equals'], 'probability': 0.04246518015861511}, {'value': ['matches'], 'probability': 0.0388651005923748}]","[0.37713256, 0.65114945, 0.60187685, 0.22535908, 0.38072872]",0.1479211335295644,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
244,244,"public void setDebugDraw(btIDebugDraw value) {CollisionJNI.btDispatcherInfo_debugDraw_set(swigCPtr, this, btIDebugDraw.getCPtr(value), value);}
","public void [MASK](btIDebugDraw value) {CollisionJNI.btDispatcherInfo_debugDraw_set(swigCPtr, this, btIDebugDraw.getCPtr(value), value);}
",setDebugDraw,"[{'value': ['set'], 'probability': 0.5863429307937622}, {'value': ['put'], 'probability': 0.08905818313360214}, {'value': ['execute'], 'probability': 0.020770955830812454}, {'value': ['apply'], 'probability': 0.017898648977279663}, {'value': ['add'], 'probability': 0.014463781379163265}]","[1.0, 0.7944568, 0.35167885, 0.5010617, 0.5084879]",0.6807234986417499,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
245,245,"public btIDebugDraw getDebugDraw() {long cPtr = CollisionJNI.btDispatcherInfo_debugDraw_get(swigCPtr, this);return (cPtr == 0) ? null : new btIDebugDraw(cPtr, false);}
","public btIDebugDraw [MASK]() {long cPtr = CollisionJNI.btDispatcherInfo_debugDraw_get(swigCPtr, this);return (cPtr == 0) ? null : new btIDebugDraw(cPtr, false);}
",getDebugDraw,"[{'value': ['build'], 'probability': 0.17030496895313263}, {'value': ['get'], 'probability': 0.15075713396072388}, {'value': ['create'], 'probability': 0.13558202981948853}, {'value': ['paint'], 'probability': 0.046321578323841095}, {'value': ['trim'], 'probability': 0.022330651059746742}]","[0.5626448, 1.0, 0.62328804, 0.41529104, 0.29039297]",0.3568065931594188,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
246,246,"public void setEnableSatConvex(boolean value) {CollisionJNI.btDispatcherInfo_enableSatConvex_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {CollisionJNI.btDispatcherInfo_enableSatConvex_set(swigCPtr, this, value);}
",setEnableSatConvex,"[{'value': ['set'], 'probability': 0.5676822066307068}, {'value': ['put'], 'probability': 0.11116930097341537}, {'value': ['execute'], 'probability': 0.038068223744630814}, {'value': ['accept'], 'probability': 0.024973275139927864}, {'value': ['apply'], 'probability': 0.021651601418852806}]","[1.0, 0.7944568, 0.35167885, 0.44626972, 0.5010617]",0.6913828048550017,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
247,247,"public boolean getEnableSatConvex() {return CollisionJNI.btDispatcherInfo_enableSatConvex_get(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btDispatcherInfo_enableSatConvex_get(swigCPtr, this);}
",getEnableSatConvex,"[{'value': ['execute'], 'probability': 0.15612134337425232}, {'value': ['run'], 'probability': 0.08362440764904022}, {'value': ['supports'], 'probability': 0.049322545528411865}, {'value': ['is'], 'probability': 0.04401228576898575}, {'value': ['matches'], 'probability': 0.034273333847522736}]","[0.37713256, 0.65114945, 0.28394556, 0.60187685, 0.38072872]",0.166874166386223,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
248,248,"public void setEnableSPU(boolean value) {CollisionJNI.btDispatcherInfo_enableSPU_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {CollisionJNI.btDispatcherInfo_enableSPU_set(swigCPtr, this, value);}
",setEnableSPU,"[{'value': ['set'], 'probability': 0.4951816499233246}, {'value': ['put'], 'probability': 0.09624835103750229}, {'value': ['execute'], 'probability': 0.051819246262311935}, {'value': ['accept'], 'probability': 0.029450995847582817}, {'value': ['apply'], 'probability': 0.014051107689738274}]","[1.0, 0.7944568, 0.35167885, 0.44626972, 0.5010617]",0.610054097098109,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
249,249,"public boolean getEnableSPU() {return CollisionJNI.btDispatcherInfo_enableSPU_get(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btDispatcherInfo_enableSPU_get(swigCPtr, this);}
",getEnableSPU,"[{'value': ['execute'], 'probability': 0.13680003583431244}, {'value': ['run'], 'probability': 0.07058583945035934}, {'value': ['supports'], 'probability': 0.05447931960225105}, {'value': ['equals'], 'probability': 0.0354483425617218}, {'value': ['is'], 'probability': 0.031355809420347214}]","[0.37713256, 0.65114945, 0.28394556, 0.22535908, 0.60187685]",0.139883781875143,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
250,250,"public void setUseEpa(boolean value) {CollisionJNI.btDispatcherInfo_useEpa_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {CollisionJNI.btDispatcherInfo_useEpa_set(swigCPtr, this, value);}
",setUseEpa,"[{'value': ['set'], 'probability': 0.49729660153388977}, {'value': ['put'], 'probability': 0.10689391940832138}, {'value': ['execute'], 'probability': 0.03989103436470032}, {'value': ['accept'], 'probability': 0.025173574686050415}, {'value': ['apply'], 'probability': 0.020545171573758125}]","[1.0, 0.7944568, 0.35167885, 0.44626972, 0.5010617]",0.6177766358541925,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
251,251,"public boolean getUseEpa() {return CollisionJNI.btDispatcherInfo_useEpa_get(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btDispatcherInfo_useEpa_get(swigCPtr, this);}
",getUseEpa,"[{'value': ['run'], 'probability': 0.12163443118333817}, {'value': ['execute'], 'probability': 0.10385852307081223}, {'value': ['is'], 'probability': 0.04774169251322746}, {'value': ['use'], 'probability': 0.03402271866798401}, {'value': ['matches'], 'probability': 0.03337232768535614}]","[0.65114945, 0.37713256, 0.60187685, 0.62826884, 0.38072872]",0.1811864616722169,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
252,252,"public void setAllowedCcdPenetration(float value) {CollisionJNI.btDispatcherInfo_allowedCcdPenetration_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btDispatcherInfo_allowedCcdPenetration_set(swigCPtr, this, value);}
",setAllowedCcdPenetration,"[{'value': ['set'], 'probability': 0.6304821372032166}, {'value': ['put'], 'probability': 0.10107223689556122}, {'value': ['add'], 'probability': 0.013679422438144684}, {'value': ['get'], 'probability': 0.012748981826007366}, {'value': ['accept'], 'probability': 0.012288565747439861}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.44626972]",0.7315099149185254,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
253,253,"public float getAllowedCcdPenetration() {return CollisionJNI.btDispatcherInfo_allowedCcdPenetration_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btDispatcherInfo_allowedCcdPenetration_get(swigCPtr, this);}
",getAllowedCcdPenetration,"[{'value': ['get'], 'probability': 0.08129950612783432}, {'value': ['float'], 'probability': 0.07755064219236374}, {'value': ['run'], 'probability': 0.037528373301029205}, {'value': ['bar'], 'probability': 0.03417215496301651}, {'value': ['execute'], 'probability': 0.03092297725379467}]","[1.0, 0.2808844, 0.65114945, 0.45318797, 0.37713256]",0.1546673216137332,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
254,254,"public void setUseConvexConservativeDistanceUtil(boolean value) {CollisionJNI.btDispatcherInfo_useConvexConservativeDistanceUtil_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {CollisionJNI.btDispatcherInfo_useConvexConservativeDistanceUtil_set(swigCPtr, this, value);}
",setUseConvexConservativeDistanceUtil,"[{'value': ['set'], 'probability': 0.5992524027824402}, {'value': ['put'], 'probability': 0.09373874962329865}, {'value': ['execute'], 'probability': 0.02629932574927807}, {'value': ['accept'], 'probability': 0.022155629470944405}, {'value': ['apply'], 'probability': 0.016578126698732376}]","[1.0, 0.7944568, 0.35167885, 0.44626972, 0.5010617]",0.7011667551136735,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
255,255,"public boolean getUseConvexConservativeDistanceUtil() {return CollisionJNI.btDispatcherInfo_useConvexConservativeDistanceUtil_get(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btDispatcherInfo_useConvexConservativeDistanceUtil_get(swigCPtr, this);}
",getUseConvexConservativeDistanceUtil,"[{'value': ['run'], 'probability': 0.13657020032405853}, {'value': ['execute'], 'probability': 0.12702226638793945}, {'value': ['is'], 'probability': 0.04714566469192505}, {'value': ['matches'], 'probability': 0.04466995969414711}, {'value': ['equals'], 'probability': 0.025479888543486595}]","[0.65114945, 0.37713256, 0.60187685, 0.38072872, 0.22535908]",0.1879569895046431,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
256,256,"public void setConvexConservativeDistanceThreshold(float value) {CollisionJNI.btDispatcherInfo_convexConservativeDistanceThreshold_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btDispatcherInfo_convexConservativeDistanceThreshold_set(swigCPtr, this, value);}
",setConvexConservativeDistanceThreshold,"[{'value': ['set'], 'probability': 0.6036249995231628}, {'value': ['put'], 'probability': 0.11629246920347214}, {'value': ['accept'], 'probability': 0.014349257573485374}, {'value': ['get'], 'probability': 0.013462125323712826}, {'value': ['add'], 'probability': 0.013324740342795849}]","[1.0, 0.7944568, 0.44626972, 0.65028083, 0.5084879]",0.7179476103549498,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
257,257,"public void render() {Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);camera.update();batch.setProjectionMatrix(camera.combined);batch.begin();batch.draw(img2, -100, 0);batch.draw(img1, 0, 0);batch.end();batch.getProjectionMatrix().setToOrtho2D(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());batch.begin();font.draw(batch, ""fps: "" + Gdx.graphics.getFramesPerSecond(), 0, 30);batch.end();}
","public void [MASK]() {Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);camera.update();batch.setProjectionMatrix(camera.combined);batch.begin();batch.draw(img2, -100, 0);batch.draw(img1, 0, 0);batch.end();batch.getProjectionMatrix().setToOrtho2D(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());batch.begin();font.draw(batch, ""fps: "" + Gdx.graphics.getFramesPerSecond(), 0, 30);batch.end();}
",render,"[{'value': ['start'], 'probability': 0.46833178400993347}, {'value': ['update'], 'probability': 0.08491281419992447}, {'value': ['close'], 'probability': 0.04527828097343445}, {'value': ['finish'], 'probability': 0.04002842679619789}, {'value': ['begin'], 'probability': 0.03722309693694115}]","[0.16855277, 0.3001075, 0.1571209, 0.112674825, 0.29614606]",0.1270694270318534,"[{'value': ['render'], 'probability': 0.927362322807312}, {'value': ['reset'], 'probability': 0.04459007829427719}, {'value': ['draw'], 'probability': 0.011164968833327293}, {'value': ['update'], 'probability': 0.00477372482419014}, {'value': ['save'], 'probability': 0.0037360030692070723}, {'value': ['clear'], 'probability': 0.0035476696211844683}, {'value': ['clear', 'screen'], 'probability': 0.001410788856446743}, {'value': ['display'], 'probability': 0.0013227122835814953}, {'value': ['init'], 'probability': 0.0011640855809673667}, {'value': ['pre', 'render'], 'probability': 0.0009276527562178671}]","[1.0, 0.13656701, 0.2878108, 0.3001075, 0.30900162, 0.38354138, 0.41021425, 0.30272847, 0.1500768, 0.7536548]",0.9424659753630901
258,258,"public void dispose() {batch.dispose();font.dispose();img1.dispose();img2.dispose();}public ByteBuffer asReadOnlyBuffer() {return this;}
","public void [MASK]() {batch.[MASK]();font.[MASK]();img1.[MASK]();img2.[MASK]();}public ByteBuffer asReadOnlyBuffer() {return this;}
",dispose,"[{'value': ['run'], 'probability': 0.21473011374473572}, {'value': ['flush'], 'probability': 0.15056872367858887}, {'value': ['execute'], 'probability': 0.07268990576267242}, {'value': ['close'], 'probability': 0.05717860907316208}, {'value': ['start'], 'probability': 0.05136731266975403}]","[0.13288948, 0.23337094, 0.36579466, 0.17637412, 0.14684053]",0.1078909479018436,"[{'value': ['dispose'], 'probability': 0.9587283134460449}, {'value': ['hide'], 'probability': 0.014440376311540604}, {'value': ['dispose', 'icons'], 'probability': 0.0076072365045547485}, {'value': ['close'], 'probability': 0.0037671085447072983}, {'value': ['dispose', 'resources'], 'probability': 0.0036401194520294666}, {'value': ['run'], 'probability': 0.0031952778808772564}, {'value': ['on', 'dispose'], 'probability': 0.0030522660817950964}, {'value': ['stop'], 'probability': 0.002086266176775098}, {'value': ['delete'], 'probability': 0.0019410266540944576}, {'value': ['destroy'], 'probability': 0.0015419661067426205}]","[0.99999994, 0.4591369, 0.69316214, 0.17637412, 0.7428976, 0.13288948, 0.66587484, 0.22849083, 0.3089048, 0.5099461]",0.9783197210790604
259,259,"byte[] protectedArray() {throw new UnsupportedOperationException();}
","byte[] protectedArray() [MASK] new UnsupportedOperationException();}
",{throw,"[{'value': ['{'], 'probability': 0.7774834036827087}, {'value': ['throws'], 'probability': 0.08227095007896423}, {'value': ['='], 'probability': 0.054835639894008636}, {'value': ['throw'], 'probability': 0.03477649763226509}, {'value': [';'], 'probability': 0.027824725955724716}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['to', 'bytes'], 'probability': 0.3003075420856476}, {'value': ['get', 'tbs', 'certificate'], 'probability': 0.16586171090602875}, {'value': ['get', 'payload'], 'probability': 0.1382051706314087}, {'value': ['engine', 'do', 'final'], 'probability': 0.07939355075359344}, {'value': ['get', 'signature'], 'probability': 0.0762806311249733}, {'value': ['get', 'bold', 'set'], 'probability': 0.05256237834692001}, {'value': ['get', 'adapter', 'id'], 'probability': 0.05219035595655441}, {'value': ['get', 'bytes'], 'probability': 0.048351023346185684}, {'value': ['get', 'encoded'], 'probability': 0.046923164278268814}, {'value': ['get', 'connection', 'data'], 'probability': 0.03992447629570961}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
260,260,"int protectedArrayOffset() {throw new UnsupportedOperationException();}
","int protectedArrayOffset() [MASK] new UnsupportedOperationException();}
",{throw,"[{'value': ['throws'], 'probability': 0.5903132557868958}, {'value': ['{'], 'probability': 0.15407702326774597}, {'value': ['throw'], 'probability': 0.1440572738647461}, {'value': ['='], 'probability': 0.07792532444000244}, {'value': ['return'], 'probability': 0.012387079186737537}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'pretty', 'indent'], 'probability': 0.3351535499095917}, {'value': ['size'], 'probability': 0.18222156167030334}, {'value': ['get', 'depth'], 'probability': 0.1271495372056961}, {'value': ['get', 'packet', 'buffer', 'size'], 'probability': 0.0790475606918335}, {'value': ['get', 'payload', 'length'], 'probability': 0.07148560881614685}, {'value': ['get', 'count'], 'probability': 0.04880952090024948}, {'value': ['get', 'as', 'int'], 'probability': 0.047871850430965424}, {'value': ['get', 'id'], 'probability': 0.046965714544057846}, {'value': ['hash', 'code'], 'probability': 0.031649839133024216}, {'value': ['get', 'login', 'timeout'], 'probability': 0.029645267874002457}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
261,261,"boolean protectedHasArray() {throw new UnsupportedOperationException();}
","boolean protectedHasArray() [MASK] new UnsupportedOperationException();}
",{throw,"[{'value': ['throws'], 'probability': 0.8128884434700012}, {'value': ['throw'], 'probability': 0.1426135152578354}, {'value': ['{'], 'probability': 0.037160832434892654}, {'value': ['='], 'probability': 0.002628302201628685}, {'value': [';'], 'probability': 0.001867426442913711}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'as', 'boolean', 'wrapper'], 'probability': 0.278842031955719}, {'value': ['is', 'empty'], 'probability': 0.23716166615486145}, {'value': ['is', 'input', 'shutdown'], 'probability': 0.16313396394252777}, {'value': ['is', 'locked'], 'probability': 0.06102566048502922}, {'value': ['is', 'committed'], 'probability': 0.050665680319070816}, {'value': ['is', 'held', 'exclusively'], 'probability': 0.04967055842280388}, {'value': ['is', 'pretty', 'printing'], 'probability': 0.04296669363975525}, {'value': ['is', 'object', 'memory', 'enabled'], 'probability': 0.04038349539041519}, {'value': ['is', 'ignore', 'processing', 'instructions'], 'probability': 0.040042679756879807}, {'value': ['is', 'requested', 'session', 'id', 'from', 'url'], 'probability': 0.03610751032829285}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
262,262,"public ByteBuffer compact() {return this;}
","public ByteBuffer [MASK]() {return this;}
",compact,"[{'value': ['get'], 'probability': 0.04903826490044594}, {'value': ['paint'], 'probability': 0.040433369576931}, {'value': ['create'], 'probability': 0.03835119307041168}, {'value': ['transform'], 'probability': 0.030290761962532997}, {'value': ['build'], 'probability': 0.029471667483448982}]","[0.2476357, 0.20282309, 0.37647277, 0.26904315, 0.36250606]",0.053615806257157,"[{'value': ['to', 'byte', 'buffer'], 'probability': 0.3371146619319916}, {'value': ['get', 'buf'], 'probability': 0.1550513654947281}, {'value': ['get', 'nio', 'buffer'], 'probability': 0.12271890789270401}, {'value': ['get', 'byte', 'buffer'], 'probability': 0.11271312832832336}, {'value': ['get', 'unmapped', 'byte', 'buffer'], 'probability': 0.10511551052331924}, {'value': ['get', 'data'], 'probability': 0.0429413877427578}, {'value': ['buffer'], 'probability': 0.03859618306159973}, {'value': ['get', 'selection'], 'probability': 0.02976500615477562}, {'value': ['get', 'content'], 'probability': 0.02959393337368965}, {'value': ['get', 'internal', 'buffer'], 'probability': 0.0263899564743042}]","[0.35606351, 0.14632903, 0.20896766, 0.3636455, 0.35822043, 0.3829612, 0.16343516, 0.2809526, 0.38551846, 0.33209062]",0.29829745324871754
263,263,"public ByteBuffer duplicate() {return this;}
","public ByteBuffer [MASK]() {return this;}
",duplicate,"[{'value': ['get'], 'probability': 0.04903826490044594}, {'value': ['paint'], 'probability': 0.040433369576931}, {'value': ['create'], 'probability': 0.03835119307041168}, {'value': ['transform'], 'probability': 0.030290761962532997}, {'value': ['build'], 'probability': 0.029471667483448982}]","[0.30536392, 0.28788605, 0.38261807, 0.3255782, 0.2595073]",0.0587987045660433,"[{'value': ['to', 'byte', 'buffer'], 'probability': 0.3371146619319916}, {'value': ['get', 'buf'], 'probability': 0.1550513654947281}, {'value': ['get', 'nio', 'buffer'], 'probability': 0.12271890789270401}, {'value': ['get', 'byte', 'buffer'], 'probability': 0.11271312832832336}, {'value': ['get', 'unmapped', 'byte', 'buffer'], 'probability': 0.10511551052331924}, {'value': ['get', 'data'], 'probability': 0.0429413877427578}, {'value': ['buffer'], 'probability': 0.03859618306159973}, {'value': ['get', 'selection'], 'probability': 0.02976500615477562}, {'value': ['get', 'content'], 'probability': 0.02959393337368965}, {'value': ['get', 'internal', 'buffer'], 'probability': 0.0263899564743042}]","[0.29248154, 0.21630043, 0.23822652, 0.30841893, 0.33249035, 0.37072214, 0.13851814, 0.29263356, 0.2988579, 0.28978577]",0.2775527951926504
264,264,"public byte get() {return get(position++);}
","public byte [MASK]() {return [MASK](position++);}
",get,"[{'value': ['position'], 'probability': 0.30062806606292725}, {'value': ['start'], 'probability': 0.0846250131726265}, {'value': ['get'], 'probability': 0.05316166207194328}, {'value': ['next'], 'probability': 0.04490390419960022}, {'value': ['length'], 'probability': 0.03263920173048973}]","[0.5401049, 0.7199945, 1.0, 0.6966621, 0.3304365]",0.3185299371141251,"[{'value': ['next'], 'probability': 0.7598059773445129}, {'value': ['get'], 'probability': 0.11780383437871933}, {'value': ['next', 'position'], 'probability': 0.08530642092227936}, {'value': ['read', 'byte'], 'probability': 0.01693325862288475}, {'value': ['get', 'position'], 'probability': 0.01270062942057848}, {'value': ['next', 'resource'], 'probability': 0.0018446793546900153}, {'value': ['get', 'char'], 'probability': 0.0017560303676873446}, {'value': ['move', 'to', 'first'], 'probability': 0.0014389056013897061}, {'value': ['next', 'node'], 'probability': 0.001384236034937203}, {'value': ['next', 'doc'], 'probability': 0.0010259924456477165}]","[0.6966621, 1.0, 0.6829766, 0.37058464, 0.88500535, 0.62285244, 0.7219311, 0.772304, 0.5115048, 0.6603426]",0.7278230004231181
265,265,"public byte get(int index) {return get(s, index);}
","public byte [MASK](int index) {return [MASK](s, index);}
",get,"[{'value': ['transform'], 'probability': 0.1184992715716362}, {'value': ['value'], 'probability': 0.07945133745670319}, {'value': ['get'], 'probability': 0.0527719222009182}, {'value': ['read'], 'probability': 0.043303895741701126}, {'value': ['replace'], 'probability': 0.04329749196767807}]","[0.33052462, 0.46303764, 1.0, 0.5726487, 0.4901826]",0.1747494064142891,"[{'value': ['get'], 'probability': 0.888056755065918}, {'value': ['get', 'byte'], 'probability': 0.054880667477846146}, {'value': ['get', 'byte', 'at'], 'probability': 0.024935636669397354}, {'value': ['get', 's'], 'probability': 0.0103787025436759}, {'value': ['read', 'byte'], 'probability': 0.007033265195786953}, {'value': ['get', 'value'], 'probability': 0.0051709068939089775}, {'value': ['peek'], 'probability': 0.0039107357151806355}, {'value': ['index'], 'probability': 0.0021196301095187664}, {'value': ['get', 'f'], 'probability': 0.002118645701557398}, {'value': ['get', 'index'], 'probability': 0.0013951340224593878}]","[1.0, 0.7359534, 0.7797436, 0.8483535, 0.37058464, 0.8500731, 0.32689062, 0.24769717, 0.7780981, 0.7092336]",0.9681380488498568
266,266,"public final double getDouble() {return Numbers.longBitsToDouble(getLong());}
","public final [MASK] getDouble() {return Numbers.longBitsToDouble(getLong());}
",double,"[{'value': ['long'], 'probability': 0.3830614686012268}, {'value': ['String'], 'probability': 0.3523580729961395}, {'value': ['Long'], 'probability': 0.18118423223495483}, {'value': ['double'], 'probability': 0.020192226395010948}, {'value': ['Short'], 'probability': 0.010124271735548973}]","[0.56460696, 0.0, 0.0, 1.0, 0.0]",0.2364713994326344,"[{'value': ['get', 'double'], 'probability': 0.529777467250824}, {'value': ['read', 'double'], 'probability': 0.4359651207923889}, {'value': ['get'], 'probability': 0.02729458175599575}, {'value': ['to', 'double'], 'probability': 0.0025279438123106956}, {'value': ['get', 'float'], 'probability': 0.00160107365809381}, {'value': ['get', 'number'], 'probability': 0.0009819758124649525}, {'value': ['get', 'common'], 'probability': 0.0006871791556477547}, {'value': ['get', 'value'], 'probability': 0.0005567276384681463}, {'value': ['double', 'value'], 'probability': 0.00036446694866754115}, {'value': ['get', 'f'], 'probability': 0.0002434253692626953}]","[0.8721349, 0.8172243, 0.5437231, 0.8405378, 0.49512014, 0.6482366, 0.57409847, 0.55912966, 0.82658416, 0.5577671]",0.8378563412047979
267,267,"public final double getDouble(int index) {return Numbers.longBitsToDouble(getLong(index));}
","public final [MASK] getDouble(int index) {return Numbers.longBitsToDouble(getLong(index));}
",double,"[{'value': ['long'], 'probability': 0.6979249119758606}, {'value': ['Long'], 'probability': 0.15709803998470306}, {'value': ['String'], 'probability': 0.0515160858631134}, {'value': ['double'], 'probability': 0.03645196929574013}, {'value': ['float'], 'probability': 0.011494354344904423}]","[0.56460696, 0.0, 0.0, 1.0, 0.21689123]",0.432998259999076,"[{'value': ['get', 'double'], 'probability': 0.9307669401168823}, {'value': ['get'], 'probability': 0.040808867663145065}, {'value': ['get', 'double', 'at'], 'probability': 0.010611661709845066}, {'value': ['read', 'double'], 'probability': 0.009971692226827145}, {'value': ['get', 'float'], 'probability': 0.002794749103486538}, {'value': ['get', 'number'], 'probability': 0.0013246848247945309}, {'value': ['long', 'bits', 'to', 'double'], 'probability': 0.0010458342730998993}, {'value': ['get', 'f'], 'probability': 0.0010256188688799739}, {'value': ['to', 'double'], 'probability': 0.0009613832808099687}, {'value': ['parse', 'double'], 'probability': 0.0006885717739351094}]","[0.8721349, 0.5437231, 0.79501504, 0.8172243, 0.49512014, 0.6482366, 0.76748866, 0.5577671, 0.8405378, 0.78047657]",0.8554912574194933
268,268,"public final float getFloat() {return Numbers.intBitsToFloat(getInt());}
","public final [MASK] getFloat() {return Numbers.intBitsToFloat(getInt());}
",float,"[{'value': ['String'], 'probability': 0.3003751039505005}, {'value': ['Long'], 'probability': 0.23830410838127136}, {'value': ['long'], 'probability': 0.13443204760551453}, {'value': ['float'], 'probability': 0.13211621344089508}, {'value': ['double'], 'probability': 0.02633594535291195}]","[0.0, 0.0, 0.31141275, 1.0, 0.21689123]",0.179692102857477,"[{'value': ['get', 'float'], 'probability': 0.9829273819923401}, {'value': ['read', 'float'], 'probability': 0.01488090492784977}, {'value': ['re'], 'probability': 0.0012100853491574526}, {'value': ['float', 'value'], 'probability': 0.00034750293707475066}, {'value': ['get', 'number'], 'probability': 0.00023203788441605866}, {'value': ['get', 'boost'], 'probability': 0.00010249602200929075}, {'value': ['as', 'float'], 'probability': 9.786265582079068e-05}, {'value': ['get'], 'probability': 9.382853022543713e-05}, {'value': ['to', 'float'], 'probability': 5.543776205740869e-05}, {'value': ['get', 'alpha'], 'probability': 5.257509110379033e-05}]","[0.7508107, 0.7511868, 0.24296713, 0.7827648, 0.2448841, 0.31175083, 0.7578301, 0.2808844, 0.7663453, 0.31555343]",0.7499851276718825
269,269,"public final float getFloat(int index) {return Numbers.intBitsToFloat(getInt(index));}
","public final [MASK] getFloat(int index) {return Numbers.intBitsToFloat(getInt(index));}
",float,"[{'value': ['Long'], 'probability': 0.24726352095603943}, {'value': ['long'], 'probability': 0.1686994880437851}, {'value': ['String'], 'probability': 0.14960977435112}, {'value': ['float'], 'probability': 0.14958280324935913}, {'value': ['Point'], 'probability': 0.058659203350543976}]","[0.0, 0.31141275, 0.0, 1.0, 0.0]",0.2021179750271793,"[{'value': ['get', 'float'], 'probability': 0.9219021797180176}, {'value': ['read', 'float'], 'probability': 0.034499187022447586}, {'value': ['int', 'bits', 'to', 'float'], 'probability': 0.014324923045933247}, {'value': ['get', 'double'], 'probability': 0.012422561645507812}, {'value': ['get'], 'probability': 0.00744281429797411}, {'value': ['get', 'number'], 'probability': 0.005068288650363684}, {'value': ['get', 'd'], 'probability': 0.0021639219485223293}, {'value': ['get', 'float', 'at'], 'probability': 0.0008268082747235894}, {'value': ['float', 'at'], 'probability': 0.0006908405921421945}, {'value': ['remainder'], 'probability': 0.0006585009978152812}]","[0.7508107, 0.7511868, 0.65511745, 0.28415653, 0.2808844, 0.2448841, 0.15801227, 0.60229206, 0.70347035, 0.25269052]",0.7358278166997877
270,270,"public final int getInt() {int newPosition = position + 4;int result = loadInt(position);position = newPosition;return result;}
","public final [MASK] getInt() {[MASK] newPosition = position + 4;[MASK] result = loadInt(position);position = newPosition;return result;}
",int,"[{'value': ['String'], 'probability': 0.8544155359268188}, {'value': ['long'], 'probability': 0.030275313183665276}, {'value': ['Point'], 'probability': 0.02964036911725998}, {'value': ['double'], 'probability': 0.00824306346476078}, {'value': ['void'], 'probability': 0.006890044081956148}]","[0.0, 0.028398475, 0.0, -0.006145916, -0.009351521]",0.0007446791490804,"[{'value': ['get', 'int'], 'probability': 0.9877249598503113}, {'value': ['read', 'int'], 'probability': 0.006225530058145523}, {'value': ['load', 'int'], 'probability': 0.0018846170278266072}, {'value': ['next', 'int'], 'probability': 0.001341019058600068}, {'value': ['read', 'integer'], 'probability': 0.0008969726623035967}, {'value': ['hash', 'code'], 'probability': 0.0006469227955676615}, {'value': ['load'], 'probability': 0.00044247129699215293}, {'value': ['put', 'int'], 'probability': 0.00032677355920895934}, {'value': ['get', 'sequence', 'number'], 'probability': 0.00027581537142395973}, {'value': ['get', 'thread', 'id'], 'probability': 0.00023485156998503953}]","[0.7213287, 0.7581079, 0.7465888, 0.75813574, 0.15026051, 0.15652266, -0.0054628504, 0.77556396, 0.018306462, 0.13025837]",0.7201403880806418
271,271,"public final int getInt(int index) {return loadInt(index);}
","public final [MASK] getInt([MASK] index) {return loadInt(index);}
",int,"[{'value': ['String'], 'probability': 0.7217515707015991}, {'value': ['long'], 'probability': 0.07977918535470963}, {'value': ['Value'], 'probability': 0.03151128813624382}, {'value': ['Long'], 'probability': 0.024009311571717262}, {'value': ['Index'], 'probability': 0.01742531731724739}]","[0.0, 0.028398475, 0.0, 0.0, 0.0]",0.0022656071751588,"[{'value': ['get', 'int'], 'probability': 0.4529457986354828}, {'value': ['get', 'update', 'version'], 'probability': 0.3509265184402466}, {'value': ['get', 'attribute', 'name', 'resource'], 'probability': 0.0582406222820282}, {'value': ['get', 'int', 'parameter'], 'probability': 0.032469745725393295}, {'value': ['get', 'line', 'of', 'offset'], 'probability': 0.022762810811400414}, {'value': ['calculate', 'crc'], 'probability': 0.02151750773191452}, {'value': ['get', 'unsigned', 'medium'], 'probability': 0.01765851117670536}, {'value': ['fload'], 'probability': 0.015343268401920795}, {'value': ['get', 'thread', 'id'], 'probability': 0.014795975759625435}, {'value': ['load', 'parameter'], 'probability': 0.01333913579583168}]","[0.7213287, 0.11142378, -0.01433857, 0.6020006, -0.008466305, 0.02467491, 0.14049023, 0.0, 0.13025837, 0.024434397]",0.3896083898452225
272,272,"public final long getLong() {throw new UnsupportedOperationException();}
","public final [MASK] getLong() {throw new UnsupportedOperationException();}
",long,"[{'value': ['String'], 'probability': 0.8400979042053223}, {'value': ['long'], 'probability': 0.07574435323476791}, {'value': ['Long'], 'probability': 0.04470020532608032}, {'value': ['Date'], 'probability': 0.007209274917840958}, {'value': ['short'], 'probability': 0.004063866101205349}]","[0.0, 1.0, 0.0, 0.0, 0.82193786]",0.0790845986374925,"[{'value': ['long', 'value'], 'probability': 0.48082149028778076}, {'value': ['get', 'creation', 'time'], 'probability': 0.19525758922100067}, {'value': ['get', 'last', 'accessed', 'time'], 'probability': 0.06689224392175674}, {'value': ['get', 'count'], 'probability': 0.05681300908327103}, {'value': ['get', 'id'], 'probability': 0.051378678530454636}, {'value': ['get', 'as', 'long'], 'probability': 0.05016600340604782}, {'value': ['get', 'size'], 'probability': 0.03410587087273598}, {'value': ['get', 'long', 'value'], 'probability': 0.02705344371497631}, {'value': ['size'], 'probability': 0.01960325427353382}, {'value': ['get', 'period'], 'probability': 0.017908472567796707}]","[0.83113337, 0.7461135, 0.72586584, 0.56738156, 0.47205693, 0.8841274, 0.6536135, 0.8334794, 0.45924205, 0.74962634]",0.7619752039389893
273,273,"public final long getLong(int index) {throw new UnsupportedOperationException();}
","public final [MASK] getLong(int index) {throw new UnsupportedOperationException();}
",long,"[{'value': ['long'], 'probability': 0.3487953841686249}, {'value': ['String'], 'probability': 0.2841799557209015}, {'value': ['Long'], 'probability': 0.0688481256365776}, {'value': ['Point'], 'probability': 0.055929962545633316}, {'value': ['Index'], 'probability': 0.049020640552043915}]","[1.0, 0.0, 0.0, 0.0, 0.0]",0.3487953841686249,"[{'value': ['seek'], 'probability': 0.35930314660072327}, {'value': ['try', 'acquire', 'shared'], 'probability': 0.3111562132835388}, {'value': ['get', 'long'], 'probability': 0.14122836291790009}, {'value': ['remove'], 'probability': 0.055895935744047165}, {'value': ['get', 'attribute', 'name', 'resource'], 'probability': 0.03010210581123829}, {'value': ['add'], 'probability': 0.028890911489725113}, {'value': ['get', 'item', 'id'], 'probability': 0.024685723707079887}, {'value': ['skip'], 'probability': 0.020795950666069984}, {'value': ['get'], 'probability': 0.015339135192334652}, {'value': ['get', 'long', 'at'], 'probability': 0.01260257139801979}]","[0.475357, 0.57646585, 0.906537, 0.40847033, 0.5952898, 0.42694214, 0.43690813, 0.29806638, 0.65134645, 0.8619852]",0.5691212771082999
274,274,"public final short getShort() {int newPosition = position + 2;short result = loadShort(position);position = newPosition;return result;}
","public final [MASK] getShort() {int newPosition = position + 2;[MASK] result = loadShort(position);position = newPosition;return result;}
",short,"[{'value': ['String'], 'probability': 0.7310760617256165}, {'value': ['Point'], 'probability': 0.04671821370720863}, {'value': ['Block'], 'probability': 0.03487113490700722}, {'value': ['long'], 'probability': 0.02989942766726017}, {'value': ['void'], 'probability': 0.027063841000199318}]","[0.0, 0.0, 0.0, 0.82193786, 0.2045382]",0.0301110607877142,"[{'value': ['get', 'short'], 'probability': 0.6710918545722961}, {'value': ['read', 'short'], 'probability': 0.2377878576517105}, {'value': ['position'], 'probability': 0.03711460158228874}, {'value': ['put', 'short'], 'probability': 0.011561219580471516}, {'value': ['set', 'position'], 'probability': 0.009995558299124241}, {'value': ['update', 'position'], 'probability': 0.008144517429172993}, {'value': ['get', 'new', 'position'], 'probability': 0.0067979092709720135}, {'value': ['get', 'word'], 'probability': 0.006756112910807133}, {'value': ['get', 'position'], 'probability': 0.006584337912499905}, {'value': ['next'], 'probability': 0.004165958147495985}]","[0.87722754, 0.86806184, 0.48871022, 0.9116828, 0.6357938, 0.46937147, 0.6550658, 0.6073673, 0.60838664, 0.6159604]",0.8490995985967941
275,275,"public final short getShort(int index) {return loadShort(index);}
","public final [MASK] getShort(int index) {return loadShort(index);}
",short,"[{'value': ['String'], 'probability': 0.65292888879776}, {'value': ['long'], 'probability': 0.11109104007482529}, {'value': ['Long'], 'probability': 0.04408533126115799}, {'value': ['Block'], 'probability': 0.030064327642321587}, {'value': ['Point'], 'probability': 0.019563643261790276}]","[0.0, 0.82193786, 0.0, 0.0, 0.0]",0.0913099316396706,"[{'value': ['get', 'index'], 'probability': 0.48830312490463257}, {'value': ['get', 'short'], 'probability': 0.16886396706104279}, {'value': ['get', 'flag'], 'probability': 0.13331004977226257}, {'value': ['get', 'unsigned', 'byte'], 'probability': 0.0480051189661026}, {'value': ['get', 'short', 'le'], 'probability': 0.04379552975296974}, {'value': ['get', 'segment'], 'probability': 0.03159604221582413}, {'value': ['get', 'real', 'index'], 'probability': 0.02761988900601864}, {'value': ['set', 'index'], 'probability': 0.020174870267510414}, {'value': ['get', 'short', 'at'], 'probability': 0.0199507437646389}, {'value': ['item', 'index'], 'probability': 0.018380731344223022}]","[0.50995404, 0.87722754, 0.55225146, 0.5092138, 0.7959527, 0.65205187, 0.56121206, 0.5107102, 0.8132669, 0.35848835]",0.5992899253640402
276,276,"public boolean isDirect() {return false;}
","public boolean [MASK]() {return false;}
",isDirect,"[{'value': ['equals'], 'probability': 0.08609996736049652}, {'value': ['is'], 'probability': 0.08533840626478195}, {'value': ['exists'], 'probability': 0.040638137608766556}, {'value': ['run'], 'probability': 0.03207220509648323}, {'value': ['matches'], 'probability': 0.026149984449148178}]","[0.3373858, 0.99999994, 0.65599275, 0.5624562, 0.3614936]",0.1685378933344579,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.8161649, 0.6806554, 0.56186396, 0.84856033, 0.6018855, 0.40556675, 0.83603704, 0.82156163, 0.8260242, 0.8537696]",0.7411481787423946
277,277,"public ByteBuffer put(byte b) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](byte b) {throw new UnsupportedOperationException();}
",put,"[{'value': ['generate'], 'probability': 0.05437938868999481}, {'value': ['create'], 'probability': 0.04715699702501297}, {'value': ['paint'], 'probability': 0.04634048044681549}, {'value': ['transform'], 'probability': 0.04320445656776428}, {'value': ['process'], 'probability': 0.03758052736520767}]","[0.4521689, 0.67969376, 0.5066166, 0.40661216, 0.5431552]",0.1180973577630046,"[{'value': ['read'], 'probability': 0.2621281147003174}, {'value': ['set', 'byte', 'value'], 'probability': 0.160771444439888}, {'value': ['value', 'of'], 'probability': 0.1358337104320526}, {'value': ['buffer'], 'probability': 0.0961688831448555}, {'value': ['to', 'byte', 'buffer'], 'probability': 0.09575559198856354}, {'value': ['ascii', 'decode'], 'probability': 0.05561445280909538}, {'value': ['add', 'byte'], 'probability': 0.053834281861782074}, {'value': ['put', 'bytes'], 'probability': 0.05042227730154991}, {'value': ['read', 'fully'], 'probability': 0.04566594958305359}, {'value': ['deserialize'], 'probability': 0.043805334717035294}]","[0.5763633, 0.61736536, 0.6504943, 0.2567798, 0.5907406, 0.036837593, 0.4415832, 0.67645836, 0.6891528, 0.0]",0.5113561477769629
278,278,"public ByteBuffer put(int index, byte b) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](int index, byte b) {throw new UnsupportedOperationException();}
",put,"[{'value': ['generate'], 'probability': 0.0706009641289711}, {'value': ['paint'], 'probability': 0.05892886966466904}, {'value': ['update'], 'probability': 0.04647669941186905}, {'value': ['create'], 'probability': 0.042424190789461136}, {'value': ['put'], 'probability': 0.03691573068499565}]","[0.4521689, 0.5066166, 0.37657535, 0.67969376, 1.0]",0.1450310720155139,"[{'value': ['read'], 'probability': 0.33236345648765564}, {'value': ['put', 'char'], 'probability': 0.15575586259365082}, {'value': ['to', 'byte', 'buffer'], 'probability': 0.09895951300859451}, {'value': ['get', 'byte', 'buffer'], 'probability': 0.07926378399133682}, {'value': ['get', 'chunk'], 'probability': 0.07864124327898026}, {'value': ['read', 'fully'], 'probability': 0.06996352225542068}, {'value': ['to', 'byte', 'buffers'], 'probability': 0.05274922028183937}, {'value': ['set', 'byte', 'value'], 'probability': 0.05254758149385452}, {'value': ['put', 'byte'], 'probability': 0.04290035367012024}, {'value': ['read', 'buffer'], 'probability': 0.03685549274086952}]","[0.5763633, 0.6629484, 0.5907406, 0.5880743, 0.7163919, 0.6891528, 0.5039913, 0.61736536, 0.6823775, 0.5632111]",0.6135039651694233
279,279,"public ByteBuffer putDouble(double value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](double value) {throw new UnsupportedOperationException();}
",putDouble,"[{'value': ['transform'], 'probability': 0.075189009308815}, {'value': ['generate'], 'probability': 0.056509580463171005}, {'value': ['put'], 'probability': 0.041356343775987625}, {'value': ['create'], 'probability': 0.03819387033581734}, {'value': ['get'], 'probability': 0.03633448854088783}]","[0.40661216, 0.4521689, 1.0, 0.67969376, 0.8176035]",0.1531483259109195,"[{'value': ['put', 'double'], 'probability': 0.4947684407234192}, {'value': ['convert', 'to'], 'probability': 0.12869907915592194}, {'value': ['from', 'double'], 'probability': 0.10156147927045822}, {'value': ['scale'], 'probability': 0.08907823264598846}, {'value': ['put', 'char'], 'probability': 0.05043072625994682}, {'value': ['set'], 'probability': 0.03259078040719032}, {'value': ['set', 'value'], 'probability': 0.030418943613767624}, {'value': ['decode'], 'probability': 0.02632138319313526}, {'value': ['value', 'of'], 'probability': 0.024440394714474678}, {'value': ['read'], 'probability': 0.021690502762794495}]","[0.8783067, 0.7485247, 0.7275324, 0.43270293, 0.6629484, 0.7944568, 0.75289106, 0.06505791, 0.6504943, 0.5763633]",0.7556660035572345
280,280,"public ByteBuffer putDouble(int index, double value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](int index, double value) {throw new UnsupportedOperationException();}
",putDouble,"[{'value': ['generate'], 'probability': 0.06883786618709564}, {'value': ['put'], 'probability': 0.04980887845158577}, {'value': ['paint'], 'probability': 0.044205598533153534}, {'value': ['transform'], 'probability': 0.04370442032814026}, {'value': ['create'], 'probability': 0.039345066994428635}]","[0.4521689, 1.0, 0.5066166, 0.40661216, 0.67969376]",0.1478438563023953,"[{'value': ['put', 'double'], 'probability': 0.4149402379989624}, {'value': ['put', 'char'], 'probability': 0.2877064645290375}, {'value': ['set'], 'probability': 0.07130096107721329}, {'value': ['put', 'int'], 'probability': 0.0583362877368927}, {'value': ['put', 'float'], 'probability': 0.04027017578482628}, {'value': ['read'], 'probability': 0.03998904302716255}, {'value': ['put'], 'probability': 0.02568707801401615}, {'value': ['remove', 'at'], 'probability': 0.02451498806476593}, {'value': ['put', 'long'], 'probability': 0.01886626146733761}, {'value': ['decode'], 'probability': 0.018388547003269196}]","[0.8783067, 0.6629484, 0.7944568, 0.63844746, 0.82385653, 0.5763633, 1.0, 0.77158254, 0.90255356, 0.06505791]",0.7681211303168993
281,281,"public ByteBuffer putFloat(float value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](float value) {throw new UnsupportedOperationException();}
",putFloat,"[{'value': ['transform'], 'probability': 0.07995161414146423}, {'value': ['generate'], 'probability': 0.05589437484741211}, {'value': ['put'], 'probability': 0.03954409435391426}, {'value': ['value'], 'probability': 0.035640038549900055}, {'value': ['get'], 'probability': 0.030489105731248856}]","[0.40661216, 0.4521689, 1.0, 0.51458603, 0.8176035]",0.1405949577702714,"[{'value': ['put', 'float'], 'probability': 0.523392915725708}, {'value': ['convert', 'to'], 'probability': 0.3825187683105469}, {'value': ['set', 'value'], 'probability': 0.019518718123435974}, {'value': ['scale'], 'probability': 0.01860775798559189}, {'value': ['value', 'of'], 'probability': 0.01792939566075802}, {'value': ['read'], 'probability': 0.012480000033974648}, {'value': ['put', 'char'], 'probability': 0.00999742466956377}, {'value': ['set'], 'probability': 0.0068059382028877735}, {'value': ['append'], 'probability': 0.0044184657745063305}, {'value': ['decode'], 'probability': 0.004330596420913935}]","[0.82385653, 0.7485247, 0.75289106, 0.43270293, 0.6504943, 0.5763633, 0.6629484, 0.7944568, -0.11104319, 0.06505791]",0.7709544007247898
282,282,"public ByteBuffer putFloat(int index, float value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](int index, float value) {throw new UnsupportedOperationException();}
",putFloat,"[{'value': ['generate'], 'probability': 0.07771700620651245}, {'value': ['put'], 'probability': 0.04919082671403885}, {'value': ['process'], 'probability': 0.04522837698459625}, {'value': ['paint'], 'probability': 0.044486597180366516}, {'value': ['transform'], 'probability': 0.04344024136662483}]","[0.4521689, 1.0, 0.5431552, 0.5066166, 0.40661216]",0.1490990472253743,"[{'value': ['put', 'float'], 'probability': 0.47233930230140686}, {'value': ['put', 'char'], 'probability': 0.25625988841056824}, {'value': ['put', 'int'], 'probability': 0.08217205852270126}, {'value': ['read'], 'probability': 0.04271584376692772}, {'value': ['set'], 'probability': 0.03768233209848404}, {'value': ['get', 'chunk'], 'probability': 0.02543698064982891}, {'value': ['read', 'buffer'], 'probability': 0.02362394705414772}, {'value': ['convert', 'to'], 'probability': 0.02323257550597191}, {'value': ['put', 'short'], 'probability': 0.018427077680826187}, {'value': ['put', 'long'], 'probability': 0.018110018223524094}]","[0.82385653, 0.6629484, 0.63844746, 0.5763633, 0.7944568, 0.7163919, 0.5632111, 0.7485247, 0.89370567, 0.90255356]",0.7477781912204314
283,283,"public ByteBuffer putInt(int value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](int value) {throw new UnsupportedOperationException();}
",putInt,"[{'value': ['transform'], 'probability': 0.0755714699625969}, {'value': ['generate'], 'probability': 0.05706153064966202}, {'value': ['put'], 'probability': 0.0396314300596714}, {'value': ['process'], 'probability': 0.03254059702157974}, {'value': ['value'], 'probability': 0.03010483644902706}]","[0.40661216, 0.4521689, 1.0, 0.5431552, 0.51458603]",0.1293272813261082,"[{'value': ['put', 'int'], 'probability': 0.3421904742717743}, {'value': ['put', 'char'], 'probability': 0.1802806258201599}, {'value': ['convert', 'to'], 'probability': 0.15133881568908691}, {'value': ['get', 'chunk'], 'probability': 0.08747807145118713}, {'value': ['read'], 'probability': 0.05916844680905342}, {'value': ['user', 'data'], 'probability': 0.04216344654560089}, {'value': ['create', 'byte', 'buffer'], 'probability': 0.03900143504142761}, {'value': ['value', 'of'], 'probability': 0.03535505756735802}, {'value': ['ascii', 'decode'], 'probability': 0.03390488028526306}, {'value': ['get', 'unmapped', 'byte', 'buffer'], 'probability': 0.029118714854121208}]","[0.63844746, 0.6629484, 0.7485247, 0.7163919, 0.5763633, 0.4376127, 0.47084814, 0.6504943, 0.036837593, 0.45992854]",0.6224941147041505
284,284,"public ByteBuffer putInt(int index, int value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](int index, int value) {throw new UnsupportedOperationException();}
",putInt,"[{'value': ['generate'], 'probability': 0.08231835067272186}, {'value': ['put'], 'probability': 0.06141504645347595}, {'value': ['process'], 'probability': 0.04930735379457474}, {'value': ['create'], 'probability': 0.03921356052160263}, {'value': ['paint'], 'probability': 0.0382130891084671}]","[0.4521689, 1.0, 0.5431552, 0.67969376, 0.5066166]",0.1714309880966524,"[{'value': ['put', 'int'], 'probability': 0.7027115821838379}, {'value': ['put', 'char'], 'probability': 0.15954093635082245}, {'value': ['get', 'chunk'], 'probability': 0.025919558480381966}, {'value': ['to', 'byte', 'buffers'], 'probability': 0.021948503330349922}, {'value': ['read'], 'probability': 0.020015353336930275}, {'value': ['put', 'long'], 'probability': 0.017241088673472404}, {'value': ['to', 'byte', 'buffer'], 'probability': 0.014669235795736313}, {'value': ['remove', 'at'], 'probability': 0.01365660224109888}, {'value': ['get'], 'probability': 0.013069541193544865}, {'value': ['put'], 'probability': 0.011227658949792385}]","[0.63844746, 0.6629484, 0.7163919, 0.5039913, 0.5763633, 0.90255356, 0.5907406, 0.77158254, 0.8176035, 1.0]",0.6522556413535291
285,285,"public ByteBuffer putLong(long value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](long value) {throw new UnsupportedOperationException();}
",putLong,"[{'value': ['transform'], 'probability': 0.07104594260454178}, {'value': ['generate'], 'probability': 0.041403912007808685}, {'value': ['put'], 'probability': 0.03607231378555298}, {'value': ['read'], 'probability': 0.03385314345359802}, {'value': ['create'], 'probability': 0.030856167897582054}]","[0.40661216, 0.4521689, 1.0, 0.5763633, 0.67969376]",0.1241664747024474,"[{'value': ['put', 'long'], 'probability': 0.7346748113632202}, {'value': ['encode', 'long'], 'probability': 0.06408493965864182}, {'value': ['put', 'char'], 'probability': 0.062290389090776443}, {'value': ['read'], 'probability': 0.04621115326881409}, {'value': ['get', 'chunk'], 'probability': 0.034108467400074005}, {'value': ['put'], 'probability': 0.019725428894162178}, {'value': ['user', 'data'], 'probability': 0.012751104310154915}, {'value': ['create', 'byte', 'buffer'], 'probability': 0.010922304354608059}, {'value': ['value', 'of'], 'probability': 0.010300626046955585}, {'value': ['convert', 'to'], 'probability': 0.004930778872221708}]","[0.90255356, 0.559955, 0.6629484, 0.5763633, 0.7163919, 1.0, 0.4376127, 0.47084814, 0.6504943, 0.7485247]",0.8321723342447759
286,286,"public ByteBuffer putLong(int index, long value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](int index, long value) {throw new UnsupportedOperationException();}
",putLong,"[{'value': ['generate'], 'probability': 0.0698825940489769}, {'value': ['put'], 'probability': 0.04891449585556984}, {'value': ['process'], 'probability': 0.0457305833697319}, {'value': ['transform'], 'probability': 0.041713882237672806}, {'value': ['paint'], 'probability': 0.041271962225437164}]","[0.4521689, 1.0, 0.5431552, 0.40661216, 0.5066166]",0.1432224687367702,"[{'value': ['put', 'int'], 'probability': 0.34437066316604614}, {'value': ['put', 'char'], 'probability': 0.24852485954761505}, {'value': ['put', 'long'], 'probability': 0.20886000990867615}, {'value': ['get', 'chunk'], 'probability': 0.058350346982479095}, {'value': ['read'], 'probability': 0.037480369210243225}, {'value': ['get'], 'probability': 0.025192761793732643}, {'value': ['read', 'buffer'], 'probability': 0.021442772820591927}, {'value': ['put'], 'probability': 0.02021550014615059}, {'value': ['get', 'byte', 'buffer'], 'probability': 0.0181955024600029}, {'value': ['to', 'byte', 'buffers'], 'probability': 0.017367254942655563}]","[0.63844746, 0.6629484, 0.90255356, 0.7163919, 0.5763633, 0.8176035, 0.5632111, 1.0, 0.5880743, 0.5039913]",0.7088763547015796
287,287,"public ByteBuffer putShort(short value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](short value) {throw new UnsupportedOperationException();}
",putShort,"[{'value': ['generate'], 'probability': 0.05383024737238884}, {'value': ['transform'], 'probability': 0.052231963723897934}, {'value': ['put'], 'probability': 0.03915087506175041}, {'value': ['get'], 'probability': 0.03830709680914879}, {'value': ['create'], 'probability': 0.036016467958688736}]","[0.4521689, 0.40661216, 1.0, 0.8176035, 0.67969376]",0.1405295769014874,"[{'value': ['put', 'short'], 'probability': 0.8062755465507507}, {'value': ['read'], 'probability': 0.10435846447944641}, {'value': ['get', 'chunk'], 'probability': 0.015029100701212883}, {'value': ['convert', 'to'], 'probability': 0.013750267215073109}, {'value': ['put', 'char'], 'probability': 0.012839707545936108}, {'value': ['set'], 'probability': 0.012665600515902042}, {'value': ['set', 'value'], 'probability': 0.01142519898712635}, {'value': ['set', 'short', 'value'], 'probability': 0.008759994991123676}, {'value': ['add', 'short'], 'probability': 0.008586958050727844}, {'value': ['value', 'of'], 'probability': 0.006309209391474724}]","[0.89370567, 0.5763633, 0.7163919, 0.7485247, 0.6629484, 0.7944568, 0.75289106, 0.7823862, 0.73067224, 0.6504943]",0.84618887917339
288,288,"public ByteBuffer putShort(int index, short value) {throw new UnsupportedOperationException();}
","public ByteBuffer [MASK](int index, short value) {throw new UnsupportedOperationException();}
",putShort,"[{'value': ['generate'], 'probability': 0.07089705020189285}, {'value': ['put'], 'probability': 0.05268370360136032}, {'value': ['process'], 'probability': 0.03974340111017227}, {'value': ['transform'], 'probability': 0.03821535408496857}, {'value': ['paint'], 'probability': 0.03635329753160477}]","[0.4521689, 1.0, 0.5431552, 0.40661216, 0.5066166]",0.1402839916517473,"[{'value': ['put', 'short'], 'probability': 0.5639235973358154}, {'value': ['put', 'char'], 'probability': 0.12042313069105148}, {'value': ['put', 'int'], 'probability': 0.09042485803365707}, {'value': ['read'], 'probability': 0.07647044211626053}, {'value': ['get', 'chunk'], 'probability': 0.039084069430828094}, {'value': ['set'], 'probability': 0.035459209233522415}, {'value': ['put'], 'probability': 0.02243206836283207}, {'value': ['put', 'float'], 'probability': 0.021058471873402596}, {'value': ['read', 'buffer'], 'probability': 0.016572818160057068}, {'value': ['get', 'value', 'at'], 'probability': 0.014151412062346935}]","[0.89370567, 0.6629484, 0.63844746, 0.5763633, 0.7163919, 0.7944568, 1.0, 0.82385653, 0.5632111, 0.7939522]",0.8021434039745406
289,289,"public boolean isReadOnly() {return true;}
","public boolean [MASK]() {return true;}
",isReadOnly,"[{'value': ['equals'], 'probability': 0.1153678447008133}, {'value': ['is'], 'probability': 0.0887511745095253}, {'value': ['exists'], 'probability': 0.04286004230380058}, {'value': ['matches'], 'probability': 0.033196453005075455}, {'value': ['value'], 'probability': 0.028349580243229866}]","[0.3373858, 0.99999994, 0.65599275, 0.3614936, 0.53464335]",0.1829477385559913,"[{'value': ['defined'], 'probability': 0.3214266300201416}, {'value': ['is', 'negatable'], 'probability': 0.24385616183280945}, {'value': ['get', 'support', 'create'], 'probability': 0.08135801553726196}, {'value': ['is', 'default'], 'probability': 0.07048829644918442}, {'value': ['operates', 'on', 'fact', 'handles'], 'probability': 0.058586958795785904}, {'value': ['need', 'credentials'], 'probability': 0.051613688468933105}, {'value': ['is', 'initialized'], 'probability': 0.046987809240818024}, {'value': ['is', 'save', 'as', 'allowed'], 'probability': 0.04515714943408966}, {'value': ['is', 'available'], 'probability': 0.040341027081012726}, {'value': ['is', 'singleton'], 'probability': 0.04018421098589897}]","[0.57788044, 0.99999994, 0.6806554, 0.8370681, 0.76596993, 0.5305004, 0.82793635, 0.8430273, 0.8872678, 0.8811584]",0.7644130921268026
290,290,"protected final int loadInt(int baseOffset) {int bytes = 0;for (int i = 3; i >= 0; i--) {bytes = bytes << 8;bytes = bytes | (get(baseOffset + i) & 0xFF);}return bytes;}
","protected final [MASK] loadInt([MASK] baseOffset) {[MASK] bytes = 0;for ([MASK] i = 3; i >= 0; i--) {bytes = bytes << 8;bytes = bytes | (get(baseOffset + i) & 0xFF);}return bytes;}
",int,"[{'value': ['void'], 'probability': 0.4730105400085449}, {'value': ['String'], 'probability': 0.32739150524139404}, {'value': ['long'], 'probability': 0.11093296855688095}, {'value': ['double'], 'probability': 0.009079692885279655}, {'value': ['Long'], 'probability': 0.007057777140289545}]","[-0.009351521, 0.0, 0.028398475, -0.006145916, 0.0]",-0.0013288438338268,"[{'value': ['read', 'v', 'long'], 'probability': 0.4502682387828827}, {'value': ['get', 'long'], 'probability': 0.11569017916917801}, {'value': ['get', 'boolean'], 'probability': 0.10871943086385727}, {'value': ['pack'], 'probability': 0.06315848976373672}, {'value': ['get', 'int'], 'probability': 0.05811738967895508}, {'value': ['get', 'bits'], 'probability': 0.057333528995513916}, {'value': ['read', 'v', 'int'], 'probability': 0.055946093052625656}, {'value': ['decode', 'short'], 'probability': 0.03260612487792969}, {'value': ['get', 'integer'], 'probability': 0.029741093516349792}, {'value': ['get', 'float'], 'probability': 0.028419477865099907}]","[0.20629746, 0.02557431, 0.06963484, 0.012809148, 0.7213287, 0.06659556, 0.69437337, -0.0027790002, 0.13112466, 0.05365039]",0.19414882830643962
291,291,"protected final short loadShort(int baseOffset) {short bytes = 0;bytes = (short) (get(baseOffset + 1) << 8);bytes |= (get(baseOffset) & 0xFF);return bytes;}public void create() {batch = new SpriteBatch();texture = new Texture(Gdx.files.internal(""data/g2d/progressive-libgdx.jpg""));texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);drawable = new TextureRegionDrawable(new TextureRegion(texture));}
","protected final [MASK] loadShort(int baseOffset) {[MASK] bytes = 0;bytes = ([MASK]) (get(baseOffset + 1) << 8);bytes |= (get(baseOffset) & 0xFF);return bytes;}public void create() {batch = new SpriteBatch();texture = new Texture(Gdx.files.internal(""data/g2d/progressive-libgdx.jpg""));texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);drawable = new TextureRegionDrawable(new TextureRegion(texture));}
",short,"[{'value': ['void'], 'probability': 0.9453454613685608}, {'value': ['String'], 'probability': 0.021693991497159004}, {'value': ['long'], 'probability': 0.016388418152928352}, {'value': ['double'], 'probability': 0.003171309595927596}, {'value': ['Block'], 'probability': 0.001838037045672536}]","[0.2045382, 0.0, 0.82193786, 0.62266797, 0.0]",0.2088041898054688,"[{'value': ['unpack'], 'probability': 0.9159849882125854}, {'value': ['pack'], 'probability': 0.0769818052649498}, {'value': ['get', 'bytes'], 'probability': 0.0022503570653498173}, {'value': ['get', 'short'], 'probability': 0.0020791906863451004}, {'value': ['unpack', 'bytes'], 'probability': 0.000711682194378227}, {'value': ['byte', 'array', 'to', 'short'], 'probability': 0.000584498920943588}, {'value': ['get', 'float'], 'probability': 0.0005228497902862728}, {'value': ['set', 'serial'], 'probability': 0.0003458130522631109}, {'value': ['get', 'flag'], 'probability': 0.0003196900070179254}, {'value': ['ubyte'], 'probability': 0.0002190326777053997}]","[-0.16478072, 0.39826542, 0.484793, 0.87722754, 0.008960889, 0.7944494, 0.578803, 0.5943532, 0.55225146, 0.0]",-0.11620715066020647
292,292,"public void render() {Gdx.gl.glClearColor(1, 1, 1, 1);Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);batch.begin();drawable.draw(batch, 0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());batch.end();}
","public void [MASK]() {Gdx.gl.glClearColor(1, 1, 1, 1);Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);batch.begin();drawable.draw(batch, 0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());batch.end();}
",render,"[{'value': ['start'], 'probability': 0.47564324736595154}, {'value': ['flush'], 'probability': 0.1223287507891655}, {'value': ['begin'], 'probability': 0.09767773002386093}, {'value': ['finish'], 'probability': 0.08423857390880585}, {'value': ['close'], 'probability': 0.03292245417833328}]","[0.16855277, 0.1283141, 0.29614606, 0.112674825, 0.1571209]",0.1394587376523181,"[{'value': ['render'], 'probability': 0.9990928173065186}, {'value': ['draw'], 'probability': 0.0005851511377841234}, {'value': ['display'], 'probability': 0.0002644209598656744}, {'value': ['do', 'render'], 'probability': 1.3245797163108364e-05}, {'value': ['clear', 'screen'], 'probability': 1.177552985609509e-05}, {'value': ['on', 'stop'], 'probability': 1.1527271453815047e-05}, {'value': ['paint'], 'probability': 6.884305093990406e-06}, {'value': ['post', 'render'], 'probability': 5.185209829505766e-06}, {'value': ['reset'], 'probability': 4.66313167635235e-06}, {'value': ['save'], 'probability': 4.2834335545194335e-06}]","[1.0, 0.2878108, 0.30272847, 0.7438762, 0.41021425, 0.24208109, 0.25964546, 0.6879359, 0.13656701, 0.30900162]",0.999366067122479
293,293,"public void dispose() {stop = true;try {thread.join();} catch (InterruptedException e) {e.printStackTrace();}}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK]() {stop = true;try {thread.join();} catch (InterruptedException e) {e.printStackTrace();}}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",dispose,"[{'value': ['close'], 'probability': 0.3587277829647064}, {'value': ['stop'], 'probability': 0.20414796471595764}, {'value': ['run'], 'probability': 0.16862739622592926}, {'value': ['start'], 'probability': 0.03692813590168953}, {'value': ['destroy'], 'probability': 0.02832755632698536}]","[0.17637412, 0.22849083, 0.13288948, 0.14684053, 0.5099461]",0.1521931166811812,"[{'value': ['stop'], 'probability': 0.6335044503211975}, {'value': ['stop', 'thread'], 'probability': 0.15104098618030548}, {'value': ['destroy'], 'probability': 0.05718475580215454}, {'value': ['shutdown'], 'probability': 0.0554036945104599}, {'value': ['halt'], 'probability': 0.03494993969798088}, {'value': ['close'], 'probability': 0.03218634054064751}, {'value': ['request', 'stop'], 'probability': 0.010400718078017235}, {'value': ['cancel'], 'probability': 0.010024399496614933}, {'value': ['kill'], 'probability': 0.009239543229341507}, {'value': ['shut', 'down'], 'probability': 0.006065152119845152}]","[0.22849083, 0.15648434, 0.5099461, 0.10550895, 0.22581598, 0.17637412, 0.22206905, 0.31668118, 0.28942856, 0.31548518]",0.22703319744982173
294,294,"public static long getCPtr(btVector3Array obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btVector3Array obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.09569873660802841}, {'value': ['read'], 'probability': 0.05561504513025284}, {'value': ['process'], 'probability': 0.03275097906589508}, {'value': ['execute'], 'probability': 0.03163803741335869}, {'value': ['skip'], 'probability': 0.02849774993956089}]","[1.0, 0.5726487, 0.52250975, 0.37713256, 0.49507433]",0.1706995648353544,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
295,295,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
296,296,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.delete_btVector3Array(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.[MASK]_btVector3Array(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.829407274723053}, {'value': ['start'], 'probability': 0.012511391192674637}, {'value': ['clear'], 'probability': 0.011703367345035076}, {'value': ['test'], 'probability': 0.011248151771724224}, {'value': ['execute'], 'probability': 0.008569449186325073}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1241714200989793,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
297,297,"public int size() {return LinearMathJNI.btVector3Array_size(swigCPtr, this);}
","public int [MASK]() {return LinearMathJNI.btVector3Array_[MASK](swigCPtr, this);}
",size,"[{'value': ['get'], 'probability': 0.0602634996175766}, {'value': ['start'], 'probability': 0.04162027686834335}, {'value': ['state'], 'probability': 0.03912746533751488}, {'value': ['run'], 'probability': 0.03615577518939972}, {'value': ['execute'], 'probability': 0.035883061587810516}]","[0.43109724, 0.33919933, 0.3533125, 0.3104203, 0.060827002]",0.0673273666236456,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.43946105, 1.0, 0.41892266, 0.32137358, 0.6472228, 0.3907918, 0.5215747, 0.4558701, 0.55180424, 0.3676154]",0.5357924439355415
298,298,"public Vector3 at(int n) {return LinearMathJNI.btVector3Array_at__SWIG_0(swigCPtr, this, n);}
","public Vector3 [MASK](int n) {return LinearM[MASK]hJNI.btVector3Array_[MASK]__SWIG_0(swigCPtr, this, n);}
",at,"[{'value': ['read'], 'probability': 0.06716504693031311}, {'value': ['get'], 'probability': 0.05599185451865196}, {'value': ['skip'], 'probability': 0.03093000128865242}, {'value': ['expand'], 'probability': 0.020060548558831215}, {'value': ['double'], 'probability': 0.019070835784077644}]","[0.44621965, 0.5592328, 0.2465072, 0.36075017, 0.46080387]",0.0849320729843342,"[{'value': ['last'], 'probability': 0.35194846987724304}, {'value': ['top'], 'probability': 0.19735892117023468}, {'value': ['size'], 'probability': 0.07952036708593369}, {'value': ['height'], 'probability': 0.06882931292057037}, {'value': ['n'], 'probability': 0.06565222144126892}, {'value': ['x'], 'probability': 0.05430746451020241}, {'value': ['get', 'n'], 'probability': 0.05084173381328583}, {'value': ['succ'], 'probability': 0.048885855823755264}, {'value': ['offset'], 'probability': 0.04134710505604744}, {'value': ['back'], 'probability': 0.04130853712558746}]","[0.7031593, 0.59240633, 0.45546004, 0.4379723, 0.24578609, 0.3099057, 0.50995815, 0.0, 0.21370363, 0.6281392]",0.5244334859932317
299,299,"public void clear() {LinearMathJNI.btVector3Array_clear(swigCPtr, this);}
","public void [MASK]() {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this);}
",clear,"[{'value': ['run'], 'probability': 0.6530877351760864}, {'value': ['test'], 'probability': 0.07259534299373627}, {'value': ['execute'], 'probability': 0.051184237003326416}, {'value': ['setup'], 'probability': 0.019144363701343536}, {'value': ['close'], 'probability': 0.01538530457764864}]","[0.5174217, 0.50097936, 0.2674111, 0.24623603, 0.6670826]",0.402955084493835,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[1.0, 0.10589813, 0.33428323, -0.15065373, 0.5174217, 0.46200594, -0.049230263, 0.63500667, 0.51379555, 0.4890483]",0.4869536660085845
300,300,"public void pop_back() {LinearMathJNI.btVector3Array_pop_back(swigCPtr, this);}
","public void [MASK]() {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this);}
",pop_back,"[{'value': ['run'], 'probability': 0.6530877351760864}, {'value': ['test'], 'probability': 0.07259534299373627}, {'value': ['execute'], 'probability': 0.051184237003326416}, {'value': ['setup'], 'probability': 0.019144363701343536}, {'value': ['close'], 'probability': 0.01538530457764864}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
301,301,"public void resizeNoInitialize(int newsize) {LinearMathJNI.btVector3Array_resizeNoInitialize(swigCPtr, this, newsize);}
","public void [MASK](int newsize) {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, newsize);}
",resizeNoInitialize,"[{'value': ['read'], 'probability': 0.1343201994895935}, {'value': ['run'], 'probability': 0.0765213668346405}, {'value': ['execute'], 'probability': 0.0653769001364708}, {'value': ['write'], 'probability': 0.05946064740419388}, {'value': ['update'], 'probability': 0.050766777247190475}]","[0.049979586, -0.15778436, 0.28510186, 0.094005585, 0.08713582]",0.0232917069198944,"[{'value': ['resize'], 'probability': 0.5637989044189453}, {'value': ['grow', 'to'], 'probability': 0.2716221511363983}, {'value': ['set', 'size'], 'probability': 0.12670308351516724}, {'value': ['realloc', 'array'], 'probability': 0.009199635125696659}, {'value': ['grow', 'buffer'], 'probability': 0.008404801599681377}, {'value': ['grow'], 'probability': 0.008237209171056747}, {'value': ['set', 'max', 'threads'], 'probability': 0.00489957956597209}, {'value': ['set', 'size', 'raw'], 'probability': 0.0030743558891117573}, {'value': ['set', 'next'], 'probability': 0.0021513982210308313}, {'value': ['contract'], 'probability': 0.0019088691333308816}]","[1.0, 0.023662087, -0.043681968, 0.051039167, 0.11848061, 0.045256644, -0.045691874, -0.0766783, -0.15737534, -0.21866974]",0.5653139512286949
302,302,"public void resize(int newsize, Vector3 fillData) {LinearMathJNI.btVector3Array_resize__SWIG_0(swigCPtr, this, newsize, fillData);}
","public void [MASK](int newsize, Vector3 fillData) {LinearMathJNI.btVector3Array_[MASK]__SWIG_0(swigCPtr, this, newsize, fillData);}
",resize,"[{'value': ['read'], 'probability': 0.11000483483076096}, {'value': ['write'], 'probability': 0.0925968810915947}, {'value': ['fill'], 'probability': 0.05457940697669983}, {'value': ['run'], 'probability': 0.05431656166911125}, {'value': ['execute'], 'probability': 0.030669955536723137}]","[0.049979586, 0.094005585, 0.19123738, -0.15778436, 0.28510186]",0.0248140001960619,"[{'value': ['fill', 'data'], 'probability': 0.9999370574951172}, {'value': ['set', 'image', 'size'], 'probability': 1.9918112229788676e-05}, {'value': ['get', 'sorted', 'methods'], 'probability': 1.0456482414156199e-05}, {'value': ['read', 'int', 'array'], 'probability': 6.9813340815017e-06}, {'value': ['do', 'load', 'data'], 'probability': 6.483086963271489e-06}, {'value': ['copy', 'of'], 'probability': 4.599196472554468e-06}, {'value': ['on', 'load', 'finished'], 'probability': 3.7277550291037187e-06}, {'value': ['split', 'int'], 'probability': 3.633797405200312e-06}, {'value': ['sort', 'strings'], 'probability': 3.614718252720195e-06}, {'value': ['to', 'byte', 'array'], 'probability': 3.499778358673211e-06}]","[0.09166332, -0.0023121515, 0.062366564, 0.024634074, 0.056041136, -0.15786467, -0.18548745, -0.09601557, -0.012200881, 0.13723357]",0.09165736164127256
303,303,"public void resize(int newsize) {LinearMathJNI.btVector3Array_resize__SWIG_1(swigCPtr, this, newsize);}
","public void [MASK](int newsize) {LinearMathJNI.btVector3Array_[MASK]__SWIG_1(swigCPtr, this, newsize);}
",resize,"[{'value': ['read'], 'probability': 0.15985523164272308}, {'value': ['run'], 'probability': 0.07544555515050888}, {'value': ['update'], 'probability': 0.05651845037937164}, {'value': ['execute'], 'probability': 0.0515415295958519}, {'value': ['write'], 'probability': 0.048523299396038055}]","[0.049979586, -0.15778436, 0.08713582, 0.28510186, 0.094005585]",0.0202661985985162,"[{'value': ['resize'], 'probability': 0.5637989044189453}, {'value': ['grow', 'to'], 'probability': 0.2716221511363983}, {'value': ['set', 'size'], 'probability': 0.12670308351516724}, {'value': ['realloc', 'array'], 'probability': 0.009199635125696659}, {'value': ['grow', 'buffer'], 'probability': 0.008404801599681377}, {'value': ['grow'], 'probability': 0.008237209171056747}, {'value': ['set', 'max', 'threads'], 'probability': 0.00489957956597209}, {'value': ['set', 'size', 'raw'], 'probability': 0.0030743558891117573}, {'value': ['set', 'next'], 'probability': 0.0021513982210308313}, {'value': ['contract'], 'probability': 0.0019088691333308816}]","[1.0, 0.023662087, -0.043681968, 0.051039167, 0.11848061, 0.045256644, -0.045691874, -0.0766783, -0.15737534, -0.21866974]",0.5653139512286949
304,304,"public Vector3 expandNonInitializing() {return LinearMathJNI.btVector3Array_expandNonInitializing(swigCPtr, this);}
","public Vector3 [MASK]() {return LinearMathJNI.btVector3Array_[MASK](swigCPtr, this);}
",expandNonInitializing,"[{'value': ['clone'], 'probability': 0.0769396424293518}, {'value': ['get'], 'probability': 0.04411324858665466}, {'value': ['run'], 'probability': 0.03845388442277908}, {'value': ['execute'], 'probability': 0.03337014466524124}, {'value': ['cache'], 'probability': 0.029888369143009186}]","[0.12266031, 0.47652406, 0.42247012, 0.2314355, 0.056975175]",0.0561300126053009,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.4214181, 0.47303244, 0.39704555, 0.3619467, 0.32589045, 0.45706663, 0.5103038, 0.49439588, 0.388255, 0.40997103]",0.42314216198843574
305,305,"public Vector3 expand(Vector3 fillValue) {return LinearMathJNI.btVector3Array_expand__SWIG_0(swigCPtr, this, fillValue);}
","public Vector3 [MASK](Vector3 fillValue) {return LinearMathJNI.btVector3Array_[MASK]__SWIG_0(swigCPtr, this, fillValue);}
",expand,"[{'value': ['get'], 'probability': 0.08968251198530197}, {'value': ['read'], 'probability': 0.04458291456103325}, {'value': ['fill'], 'probability': 0.03730406612157822}, {'value': ['create'], 'probability': 0.036636900156736374}, {'value': ['generate'], 'probability': 0.026615913957357407}]","[0.47652406, 0.19611368, 0.44564027, 0.6842106, 0.55096716]",0.1078352372985343,"[{'value': ['get', 'fill', 'value'], 'probability': 0.872343897819519}, {'value': ['set', 'fill', 'value'], 'probability': 0.11067110300064087}, {'value': ['item', 'clicked'], 'probability': 0.008090236224234104}, {'value': ['get'], 'probability': 0.005034199915826321}, {'value': ['get', 'attr', 'value'], 'probability': 0.0009800484403967857}, {'value': ['get', 'mean'], 'probability': 0.0007634175708517432}, {'value': ['parse'], 'probability': 0.0005774912424385548}, {'value': ['get', 'cpu'], 'probability': 0.0005388891440816224}, {'value': ['load'], 'probability': 0.0005182233871892095}, {'value': ['find', 'by', 'username'], 'probability': 0.00048254328430630267}]","[0.5727043, 0.5767597, 0.18482494, 0.47652406, 0.54119915, 0.4781111, -0.09361283, 0.32828608, 0.25310114, 0.38537642]",0.5686553010788835
306,306,"public Vector3 expand() {return LinearMathJNI.btVector3Array_expand__SWIG_1(swigCPtr, this);}
","public Vector3 [MASK]() {return LinearMathJNI.btVector3Array_[MASK]__SWIG_1(swigCPtr, this);}
",expand,"[{'value': ['clone'], 'probability': 0.11121807247400284}, {'value': ['get'], 'probability': 0.0456375814974308}, {'value': ['build'], 'probability': 0.032519906759262085}, {'value': ['cache'], 'probability': 0.027952102944254875}, {'value': ['run'], 'probability': 0.025664517655968666}]","[0.12266031, 0.47652406, 0.77014875, 0.056975175, 0.42247012]",0.0728696820833228,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.4214181, 0.47303244, 0.39704555, 0.3619467, 0.32589045, 0.45706663, 0.5103038, 0.49439588, 0.388255, 0.40997103]",0.42314216198843574
307,307,"public void push_back(Vector3 _Val) {LinearMathJNI.btVector3Array_push_back(swigCPtr, this, _Val);}
","public void [MASK](Vector3 _Val) {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, _Val);}
",push_back,"[{'value': ['test'], 'probability': 0.10843557119369507}, {'value': ['read'], 'probability': 0.0664512887597084}, {'value': ['run'], 'probability': 0.057755246758461}, {'value': ['execute'], 'probability': 0.049189645797014236}, {'value': ['write'], 'probability': 0.033075395971536636}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['add'], 'probability': 0.5042491555213928}, {'value': ['assign'], 'probability': 0.12834738194942474}, {'value': ['set'], 'probability': 0.06654422730207443}, {'value': ['apply', 'to'], 'probability': 0.0590142086148262}, {'value': ['check'], 'probability': 0.05122346058487892}, {'value': ['do', 'reset'], 'probability': 0.04961803928017616}, {'value': ['parse'], 'probability': 0.03827543184161186}, {'value': ['set', 'items'], 'probability': 0.0365588441491127}, {'value': ['set', 'left'], 'probability': 0.035107970237731934}, {'value': ['set', 'max'], 'probability': 0.031061312183737755}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
308,308,"public int capacity() {return LinearMathJNI.btVector3Array_capacity(swigCPtr, this);}
","public int [MASK]() {return LinearMathJNI.btVector3Array_[MASK](swigCPtr, this);}
",capacity,"[{'value': ['get'], 'probability': 0.0602634996175766}, {'value': ['start'], 'probability': 0.04162027686834335}, {'value': ['state'], 'probability': 0.03912746533751488}, {'value': ['run'], 'probability': 0.03615577518939972}, {'value': ['execute'], 'probability': 0.035883061587810516}]","[0.39120343, 0.39022288, 0.36496612, 0.38905686, 0.1831263]",0.0747344562599475,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.28912878, 0.5215747, 0.3538879, 0.37117583, 0.5166019, 0.19587296, 1.0, 0.52402985, 0.39110717, 0.2549796]",0.39792419239359744
309,309,"public void reserve(int _Count) {LinearMathJNI.btVector3Array_reserve(swigCPtr, this, _Count);}
","public void [MASK](int _Count) {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, _Count);}
",reserve,"[{'value': ['set'], 'probability': 0.08527059108018875}, {'value': ['update'], 'probability': 0.06317710876464844}, {'value': ['count'], 'probability': 0.061601944267749786}, {'value': ['write'], 'probability': 0.04257717356085777}, {'value': ['test'], 'probability': 0.0416664220392704}]","[0.397411, 0.3123306, 0.110491216, 0.22263004, 0.31015575]",0.0828281263263019,"[{'value': ['release'], 'probability': 0.46275025606155396}, {'value': ['set', 'count'], 'probability': 0.0958523079752922}, {'value': ['reinit'], 'probability': 0.07509720325469971}, {'value': ['set', 'length'], 'probability': 0.06663129478693008}, {'value': ['delete', 'data'], 'probability': 0.06446066498756409}, {'value': ['grow'], 'probability': 0.06270162016153336}, {'value': ['init'], 'probability': 0.04847118631005287}, {'value': ['set', 'top'], 'probability': 0.04769664257764816}, {'value': ['set', 'size'], 'probability': 0.041721899062395096}, {'value': ['reserve'], 'probability': 0.03461695462465286}]","[0.3424108, 0.30315474, 0.0, 0.3527373, 0.31252587, 0.2767484, -0.20590384, 0.4331246, 0.39756945, 0.99999994]",0.31039279922068513
310,310,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](swigCPtr = cPtr, cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.9115408658981323}, {'value': ['destroyed'], 'probability': 0.0691232979297638}, {'value': ['rebuild'], 'probability': 0.004925813991576433}, {'value': ['save'], 'probability': 0.0026005508843809366}, {'value': ['run'], 'probability': 0.001220924430526793}]","[0.0852853, -0.009507184, 0.19255844, 0.15556529, 0.1346719]",0.0786013536722733,"[{'value': ['reset'], 'probability': 0.9976670742034912}, {'value': ['reinit'], 'probability': 0.0007650359184481204}, {'value': ['destroy'], 'probability': 0.0004842917260248214}, {'value': ['stop'], 'probability': 0.0004195002547930926}, {'value': ['clear'], 'probability': 0.00021948434005025774}, {'value': ['start'], 'probability': 0.00013255604426376522}, {'value': ['shutdown'], 'probability': 0.0001189266549772583}, {'value': ['restart'], 'probability': 8.343072840943933e-05}, {'value': ['mark'], 'probability': 5.742608482250944e-05}, {'value': ['abort'], 'probability': 5.2347619202919304e-05}]","[1.0, 0.0, 0.0852853, 0.1610944, 0.10589813, 0.23268494, 0.25621086, 0.38693747, 0.12411288, 0.21679178]",0.9979112717127002
311,311,"public static long getCPtr(less obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](less obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.23312433063983917}, {'value': ['run'], 'probability': 0.0686982274055481}, {'value': ['execute'], 'probability': 0.05968594551086426}, {'value': ['skip'], 'probability': 0.0423017181456089}, {'value': ['start'], 'probability': 0.015262218192219734}]","[1.0, 0.65114945, 0.37713256, 0.49507433, 0.7199945]",0.3322978652382745,"[{'value': ['get', 'c', 'ptr'], 'probability': 0.9999948740005493}, {'value': ['size'], 'probability': 4.010123575426405e-06}, {'value': ['get', 'size'], 'probability': 1.991519553712351e-07}, {'value': ['get', 'first'], 'probability': 1.6809040914722573e-07}, {'value': ['get', 'flags'], 'probability': 1.2951602457178524e-07}, {'value': ['get', 'index'], 'probability': 1.1579808045780737e-07}, {'value': ['get', 'type'], 'probability': 1.1333190741424914e-07}, {'value': ['height'], 'probability': 1.1312673819929842e-07}, {'value': ['get', 'count'], 'probability': 1.080141487364017e-07}, {'value': ['get', 'base'], 'probability': 9.6845610642049e-08}]","[0.67619735, 0.43109724, 0.83762157, 0.8991456, 0.75727946, 0.7092336, 0.8542828, 0.30686238, 0.85928994, 0.8330182]",0.6761964157468678
312,312,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
313,313,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.delete_btVector3Array_less(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.[MASK]_btVector3Array_less(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8380504846572876}, {'value': ['start'], 'probability': 0.012868618592619896}, {'value': ['clear'], 'probability': 0.01101369597017765}, {'value': ['test'], 'probability': 0.010463948361575603}, {'value': ['close'], 'probability': 0.008433878421783447}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.10496158]",0.123181936670657,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
314,314,"public void swap(int index0, int index1) {LinearMathJNI.btVector3Array_swap(swigCPtr, this, index0, index1);}
","public void [MASK](int index0, int index1) {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, index0, index1);}
",swap,"[{'value': ['start'], 'probability': 0.08720888942480087}, {'value': ['run'], 'probability': 0.08308176696300507}, {'value': ['read'], 'probability': 0.06197113171219826}, {'value': ['search'], 'probability': 0.0431152880191803}, {'value': ['test'], 'probability': 0.04138799011707306}]","[0.31498596, 0.28574294, 0.19274043, 0.32104456, 0.16102557]",0.083660399847571,"[{'value': ['set', 'index'], 'probability': 0.839439332485199}, {'value': ['go', 'to'], 'probability': 0.06698573380708694}, {'value': ['set', 'position'], 'probability': 0.03547642007470131}, {'value': ['set', 'selected', 'index'], 'probability': 0.01726466417312622}, {'value': ['bind', 'null'], 'probability': 0.007791812065988779}, {'value': ['insert', 'element', 'at'], 'probability': 0.00745506351813674}, {'value': ['custom', 'button', 'pressed'], 'probability': 0.006796605885028839}, {'value': ['move', 'row', 'up'], 'probability': 0.00650952011346817}, {'value': ['get', 'index'], 'probability': 0.0062749916687607765}, {'value': ['move', 'to'], 'probability': 0.006005893927067518}]","[0.4099241, 0.39993185, 0.34497377, 0.39692268, 0.17588076, 0.3653105, 0.21681924, 0.4553856, 0.4355239, 0.4394671]",0.4038914335563653
315,315,"public int findBinarySearch(Vector3 key) {return LinearMathJNI.btVector3Array_findBinarySearch(swigCPtr, this, key);}
","public int [MASK](Vector3 key) {return LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, key);}
",findBinarySearch,"[{'value': ['read'], 'probability': 0.2581532299518585}, {'value': ['get'], 'probability': 0.12047687917947769}, {'value': ['execute'], 'probability': 0.06506384909152985}, {'value': ['write'], 'probability': 0.048162199556827545}, {'value': ['compare'], 'probability': 0.04424258694052696}]","[0.5652032, 0.8391008, 0.35124257, 0.5879846, 0.5351934]",0.3218514382916548,"[{'value': ['aref'], 'probability': 0.3654927611351013}, {'value': ['get', 'key'], 'probability': 0.09779176861047745}, {'value': ['key'], 'probability': 0.0948445200920105}, {'value': ['get', 'keys'], 'probability': 0.08762578666210175}, {'value': ['translate'], 'probability': 0.07404547184705734}, {'value': ['get', 'index'], 'probability': 0.07054294645786285}, {'value': ['lte'], 'probability': 0.06177474185824394}, {'value': ['apply'], 'probability': 0.055126190185546875}, {'value': ['index'], 'probability': 0.047309037297964096}, {'value': ['test'], 'probability': 0.04544682800769806}]","[-0.2015917, 0.80485445, 0.5447813, 0.77186865, 0.47610816, 0.60076725, -0.06721366, 0.52760124, 0.215606, 0.46358177]",0.2581674700689636
316,316,"public int findLinearSearch(Vector3 key) {return LinearMathJNI.btVector3Array_findLinearSearch(swigCPtr, this, key);}
","public int [MASK](Vector3 key) {return LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, key);}
",findLinearSearch,"[{'value': ['read'], 'probability': 0.2581532299518585}, {'value': ['get'], 'probability': 0.12047687917947769}, {'value': ['execute'], 'probability': 0.06506384909152985}, {'value': ['write'], 'probability': 0.048162199556827545}, {'value': ['compare'], 'probability': 0.04424258694052696}]","[0.5652032, 0.8391008, 0.35124257, 0.5879846, 0.5351934]",0.3218514382916548,"[{'value': ['aref'], 'probability': 0.3654927611351013}, {'value': ['get', 'key'], 'probability': 0.09779176861047745}, {'value': ['key'], 'probability': 0.0948445200920105}, {'value': ['get', 'keys'], 'probability': 0.08762578666210175}, {'value': ['translate'], 'probability': 0.07404547184705734}, {'value': ['get', 'index'], 'probability': 0.07054294645786285}, {'value': ['lte'], 'probability': 0.06177474185824394}, {'value': ['apply'], 'probability': 0.055126190185546875}, {'value': ['index'], 'probability': 0.047309037297964096}, {'value': ['test'], 'probability': 0.04544682800769806}]","[-0.2015917, 0.80485445, 0.5447813, 0.77186865, 0.47610816, 0.60076725, -0.06721366, 0.52760124, 0.215606, 0.46358177]",0.2581674700689636
317,317,"public void remove(Vector3 key) {LinearMathJNI.btVector3Array_remove(swigCPtr, this, key);}
","public void [MASK](Vector3 key) {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, key);}
",remove,"[{'value': ['execute'], 'probability': 0.17110830545425415}, {'value': ['read'], 'probability': 0.07480473816394806}, {'value': ['write'], 'probability': 0.05887988209724426}, {'value': ['key'], 'probability': 0.04279499128460884}, {'value': ['run'], 'probability': 0.04207221046090126}]","[0.31010044, 0.34332725, 0.3362492, 0.4041129, 0.32723948]",0.1296032755864848,"[{'value': ['set', 'key'], 'probability': 0.17028333246707916}, {'value': ['add'], 'probability': 0.13658805191516876}, {'value': ['remove'], 'probability': 0.1276862472295761}, {'value': ['add', 'first'], 'probability': 0.12266895920038223}, {'value': ['key', 'pressed'], 'probability': 0.1125287339091301}, {'value': ['clear'], 'probability': 0.11073289811611176}, {'value': ['set', 'dirty'], 'probability': 0.09004710614681244}, {'value': ['set', 'data'], 'probability': 0.05470098555088043}, {'value': ['load'], 'probability': 0.04042431712150574}, {'value': ['extend'], 'probability': 0.034339360892772675}]","[0.4934933, 0.67838424, 0.99999994, 0.5991986, 0.5417634, 0.5344353, 0.49233916, 0.42353436, 0.33030954, 0.48728156]",0.5956126312011808
318,318,"public void initializeFromBuffer(long buffer, int size, int capacity) {LinearMathJNI.btVector3Array_initializeFromBuffer(swigCPtr, this, buffer, size, capacity);}
","public void [MASK](long buffer, int size, int capacity) {LinearMathJNI.btVector3Array_[MASK](swigCPtr, this, buffer, size, capacity);}
",initializeFromBuffer,"[{'value': ['write'], 'probability': 0.14986906945705414}, {'value': ['execute'], 'probability': 0.149318665266037}, {'value': ['run'], 'probability': 0.1426285207271576}, {'value': ['read'], 'probability': 0.10279389470815659}, {'value': ['load'], 'probability': 0.01705249212682247}]","[0.0038990397, 0.21664008, -0.23605645, -0.11918663, 0.008884094]",-0.0128357902601382,"[{'value': ['set', 'capacity'], 'probability': 0.7038453221321106}, {'value': ['init'], 'probability': 0.15793436765670776}, {'value': ['resize'], 'probability': 0.044762492179870605}, {'value': ['allocate'], 'probability': 0.0281729344278574}, {'value': ['capacity'], 'probability': 0.017902957275509834}, {'value': ['grow'], 'probability': 0.017546221613883972}, {'value': ['set', 'size'], 'probability': 0.01644466631114483}, {'value': ['reserve'], 'probability': 0.006299939006567001}, {'value': ['initialize'], 'probability': 0.0037946905940771103}, {'value': ['set', 'buffer', 'size'], 'probability': 0.00329641904681921}]","[-0.13402466, 0.3241355, 0.55660653, 0.34498814, -0.07660826, -0.013367942, -0.12290232, -0.22529681, 0.99999994, -0.06115356]",-0.009959483545550861
319,319,"public static long getCPtr(btCapsuleShapeX obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btCapsuleShapeX obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08313191682100296}, {'value': ['skip'], 'probability': 0.04292814061045647}, {'value': ['read'], 'probability': 0.03724511340260506}, {'value': ['process'], 'probability': 0.03638080507516861}, {'value': ['execute'], 'probability': 0.033257126808166504}]","[1.0, 0.49507433, 0.5726487, 0.52250975, 0.37713256]",0.1572645742995746,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
320,320,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
321,321,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btCapsuleShapeX(swigCPtr);}swigCPtr = 0;}super.delete();}static ReadOnlyCharArrayBuffer copy(CharArrayBuffer other, int markOfOther) {ReadOnlyCharArrayBuffer buf = new ReadOnlyCharArrayBuffer(other.capacity(), other.backingArray, other.offset);buf.limit = other.limit();buf.position = other.position();buf.mark = markOfOther;return buf;}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btCapsuleShapeX(swigCPtr);}swigCPtr = 0;}super.[MASK]();}static ReadOnlyCharArrayBuffer copy(CharArrayBuffer other, int markOfOther) {ReadOnlyCharArrayBuffer buf = new ReadOnlyCharArrayBuffer(other.capacity(), other.backingArray, other.offset);buf.limit = other.limit();buf.position = other.position();buf.mark = markOfOther;return buf;}
",delete,"[{'value': ['run'], 'probability': 0.7641973495483398}, {'value': ['close'], 'probability': 0.02263743057847023}, {'value': ['test'], 'probability': 0.015368303284049034}, {'value': ['start'], 'probability': 0.013143124058842659}, {'value': ['execute'], 'probability': 0.011802822351455688}]","[0.13931048, 0.10496158, 0.14537679, 0.15163165, 0.33713183]",0.1170429747099668,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
322,322,"public CharBuffer asReadOnlyBuffer() {return duplicate();}
","public CharBuffer [MASK]() {return duplicate();}
",asReadOnlyBuffer,"[{'value': ['clone'], 'probability': 0.4225434362888336}, {'value': ['copy'], 'probability': 0.16144607961177826}, {'value': ['create'], 'probability': 0.03847949206829071}, {'value': ['build'], 'probability': 0.03416195511817932}, {'value': ['replica'], 'probability': 0.03303917497396469}]","[0.18209177, 0.36391696, 0.5990647, 0.5146036, 0.19000979]",0.1826039882162152,"[{'value': ['as', 'read', 'only', 'buffer'], 'probability': 0.9984629154205322}, {'value': ['duplicate'], 'probability': 0.001451035845093429}, {'value': ['get', 'unmap', 'char', 'buffer'], 'probability': 4.3767788156401366e-05}, {'value': ['compact'], 'probability': 1.3367198334890418e-05}, {'value': ['to', 'string'], 'probability': 1.1439744412200525e-05}, {'value': ['initial', 'value'], 'probability': 6.018452495482052e-06}, {'value': ['test', 'duplicate'], 'probability': 4.173068646196043e-06}, {'value': ['get', 'exception', 'char', 'buffer'], 'probability': 2.619716042318032e-06}, {'value': ['get', 'duplicate'], 'probability': 2.3792442789272172e-06}, {'value': ['get', 'row'], 'probability': 2.320849034731509e-06}]","[0.8679184, 0.18586844, 0.48313513, 0.3213268, 0.7414346, 0.59260374, 0.46764177, 0.61159253, 0.54492813, 0.6433458]",0.866897870480487
323,323,"public CharBuffer compact() {throw new ReadOnlyBufferException();}
","public CharBuffer [MASK]() {throw new ReadOnlyBufferException();}
",compact,"[{'value': ['cache'], 'probability': 0.04887659475207329}, {'value': ['create'], 'probability': 0.043256696313619614}, {'value': ['build'], 'probability': 0.03311808034777641}, {'value': ['read'], 'probability': 0.02426975965499878}, {'value': ['get'], 'probability': 0.0239628404378891}]","[0.29478008, 0.37647277, 0.36250606, 0.20616102, 0.2476357]",0.0536358529058583,"[{'value': ['compact'], 'probability': 0.9954966306686401}, {'value': ['put'], 'probability': 0.003969850484281778}, {'value': ['discard', 'read', 'bytes'], 'probability': 0.0003586774109862745}, {'value': ['test', 'put', 'char', 'buffer'], 'probability': 8.326271927217022e-05}, {'value': ['protected', 'array', 'offset'], 'probability': 6.531315739266574e-05}, {'value': ['put', 'if', 'absent'], 'probability': 6.401211976481136e-06}, {'value': ['protected', 'array'], 'probability': 6.088537702453323e-06}, {'value': ['is', 'array'], 'probability': 4.952155904902611e-06}, {'value': ['test', 'putint'], 'probability': 4.662299488700228e-06}, {'value': ['insert', 'row'], 'probability': 4.274104867363349e-06}]","[0.99999994, 0.27955118, 0.24448375, 0.23873474, 0.44672006, 0.29812628, 0.44950372, 0.47681752, 0.20556796, 0.2673658]",0.9967522001592715
324,324,"public CharBuffer duplicate() {return copy(this, mark);}
","public CharBuffer [MASK]() {return copy(this, mark);}
",duplicate,"[{'value': ['copy'], 'probability': 0.6508513689041138}, {'value': ['mark'], 'probability': 0.1576164811849594}, {'value': ['create'], 'probability': 0.028560437262058258}, {'value': ['print'], 'probability': 0.016770899295806885}, {'value': ['clone'], 'probability': 0.008252685889601707}]","[0.44766894, 0.15882057, 0.38261807, 0.3844189, 0.22142994]",0.3356008634979825,"[{'value': ['duplicate'], 'probability': 0.9807724952697754}, {'value': ['as', 'read', 'only', 'buffer'], 'probability': 0.016282597556710243}, {'value': ['clone'], 'probability': 0.002304426394402981}, {'value': ['copy'], 'probability': 0.0004990834277123213}, {'value': ['to', 'string'], 'probability': 5.799983046017587e-05}, {'value': ['dup'], 'probability': 2.4147808289853856e-05}, {'value': ['deep', 'copy'], 'probability': 2.4051714717643335e-05}, {'value': ['get', 'content'], 'probability': 2.2286623789113946e-05}, {'value': ['uid'], 'probability': 6.8551885306078475e-06}, {'value': ['pop'], 'probability': 5.9680587582988665e-06}]","[1.0, 0.27947068, 0.22142994, 0.44766894, 0.2741214, -0.21189441, 0.29618514, 0.2988579, 0.10843198, 0.0852977]",0.986082515914979
325,325,"public boolean isReadOnly() {return true;}
","public boolean [MASK]() {return true;}
",isReadOnly,"[{'value': ['equals'], 'probability': 0.1153678447008133}, {'value': ['is'], 'probability': 0.0887511745095253}, {'value': ['exists'], 'probability': 0.04286004230380058}, {'value': ['matches'], 'probability': 0.033196453005075455}, {'value': ['value'], 'probability': 0.028349580243229866}]","[0.3373858, 0.99999994, 0.65599275, 0.3614936, 0.53464335]",0.1829477385559913,"[{'value': ['defined'], 'probability': 0.3214266300201416}, {'value': ['is', 'negatable'], 'probability': 0.24385616183280945}, {'value': ['get', 'support', 'create'], 'probability': 0.08135801553726196}, {'value': ['is', 'default'], 'probability': 0.07048829644918442}, {'value': ['operates', 'on', 'fact', 'handles'], 'probability': 0.058586958795785904}, {'value': ['need', 'credentials'], 'probability': 0.051613688468933105}, {'value': ['is', 'initialized'], 'probability': 0.046987809240818024}, {'value': ['is', 'save', 'as', 'allowed'], 'probability': 0.04515714943408966}, {'value': ['is', 'available'], 'probability': 0.040341027081012726}, {'value': ['is', 'singleton'], 'probability': 0.04018421098589897}]","[0.57788044, 0.99999994, 0.6806554, 0.8370681, 0.76596993, 0.5305004, 0.82793635, 0.8430273, 0.8872678, 0.8811584]",0.7644130921268026
326,326,"protected char[] protectedArray() {throw new ReadOnlyBufferException();}
","protected char[] [MASK]() {throw new ReadOnlyBufferException();}
",protectedArray,"[{'value': ['next'], 'probability': 0.07668258994817734}, {'value': ['flags'], 'probability': 0.07137507945299149}, {'value': ['size'], 'probability': 0.07087510824203491}, {'value': ['columns'], 'probability': 0.04712231829762459}, {'value': ['values'], 'probability': 0.04709769785404205}]","[0.2836602, 0.22655708, 0.3606411, 0.2525347, 0.3180483]",0.0903621673685219,"[{'value': ['protected', 'array'], 'probability': 0.9836055636405945}, {'value': ['protected', 'array', 'offset'], 'probability': 0.012173007242381573}, {'value': ['get', 'char', 'array'], 'probability': 0.001648847246542573}, {'value': ['compact'], 'probability': 0.0010400766041129827}, {'value': ['get', 'default', 'cipher', 'suites'], 'probability': 0.0006960975588299334}, {'value': ['encode'], 'probability': 0.00024927224148996174}, {'value': ['get', 'argument', 'names'], 'probability': 0.0001953200699063018}, {'value': ['as', 'char', 'array'], 'probability': 0.00014557514805346727}, {'value': ['get', 'name', 'char', 'array'], 'probability': 0.00012329683522693813}, {'value': ['discard', 'read', 'bytes'], 'probability': 0.00012295196938794106}]","[0.8261062, 0.7159846, 0.45093194, 0.33619207, 0.3444467, 0.011665243, 0.43010196, 0.49384004, 0.5029665, 0.22877795]",0.8228602411806649
327,327,"protected int protectedArrayOffset() {throw new ReadOnlyBufferException();}
","protected int [MASK]() {throw new ReadOnlyBufferException();}
",protectedArrayOffset,"[{'value': ['start'], 'probability': 0.1419827789068222}, {'value': ['size'], 'probability': 0.10140947252511978}, {'value': ['read'], 'probability': 0.09343908727169037}, {'value': ['offset'], 'probability': 0.048165567219257355}, {'value': ['length'], 'probability': 0.036422278732061386}]","[0.19213618, 0.3606411, 0.26721576, 0.21463865, 0.2464916]",0.1081368267094309,"[{'value': ['protected', 'array', 'offset'], 'probability': 0.9990218877792358}, {'value': ['discard', 'read', 'bytes'], 'probability': 0.0005635993438772857}, {'value': ['compact'], 'probability': 0.0002453108027111739}, {'value': ['get', 'packet', 'buffer', 'size'], 'probability': 0.00011559274571482092}, {'value': ['get', 'max', 'inactive', 'interval'], 'probability': 2.731736094574444e-05}, {'value': ['size'], 'probability': 9.776339538802858e-06}, {'value': ['get', 'application', 'buffer', 'size'], 'probability': 5.8208911468682345e-06}, {'value': ['get', 'peer', 'port'], 'probability': 3.816890966845676e-06}, {'value': ['set', 'medium'], 'probability': 3.4530651191744255e-06}, {'value': ['get', 'ref'], 'probability': 3.416502522668452e-06}]","[0.7159846, 0.22877795, 0.33619207, 0.45579705, 0.3285482, 0.3606411, 0.5471818, 0.3903333, 0.3778538, 0.25769207]",0.7155677451187687
328,328,"protected boolean protectedHasArray() {return false;}
","protected boolean [MASK]() {return false;}
",protectedHasArray,"[{'value': ['is'], 'probability': 0.08759550750255585}, {'value': ['equals'], 'probability': 0.06421887874603271}, {'value': ['exists'], 'probability': 0.04425150528550148}, {'value': ['run'], 'probability': 0.04013219103217125}, {'value': ['test'], 'probability': 0.024869168177247047}]","[0.41159242, 0.07587409, 0.42007583, 0.28380114, 0.21206902]",0.0761787258518414,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.37012777, 0.4356073, 0.41754043, 0.42023128, 0.4424343, 0.24420536, 0.4565004, 0.33975843, 0.34859136, 0.4652882]",0.39564346962503827
329,329,"public CharBuffer put(char c) {throw new ReadOnlyBufferException();}
","public CharBuffer [MASK](char c) {throw new ReadOnlyBufferException();}
",put,"[{'value': ['read'], 'probability': 0.08464626967906952}, {'value': ['write'], 'probability': 0.04276736080646515}, {'value': ['process'], 'probability': 0.029514698311686516}, {'value': ['create'], 'probability': 0.028344999998807907}, {'value': ['generate'], 'probability': 0.02516895718872547}]","[0.5763633, 0.5574444, 0.5431552, 0.67969376, 0.4521689]",0.1193050321948569,"[{'value': ['put'], 'probability': 0.9849862456321716}, {'value': ['put', 'char'], 'probability': 0.014475874602794647}, {'value': ['put', 'char', 'array'], 'probability': 0.00018882565200328827}, {'value': ['set', 'char'], 'probability': 9.854888048721477e-05}, {'value': ['write', 'char'], 'probability': 5.536564640351571e-05}, {'value': ['set', 'bytes'], 'probability': 4.598442683345638e-05}, {'value': ['put', 'short'], 'probability': 4.42359087173827e-05}, {'value': ['protected', 'array', 'offset'], 'probability': 4.1001323552336544e-05}, {'value': ['add', 'char'], 'probability': 3.4748620237223804e-05}, {'value': ['compact'], 'probability': 2.9096896469127387e-05}]","[1.0, 0.6629484, 0.6964609, 0.5562715, 0.37163836, 0.5534743, 0.89370567, 0.52974224, 0.3955521, 0.27955118]",0.9948984933291557
330,330,"public CharBuffer put(int index, char c) {throw new ReadOnlyBufferException();}
","public CharBuffer [MASK](int index, char c) {throw new ReadOnlyBufferException();}
",put,"[{'value': ['read'], 'probability': 0.0694432482123375}, {'value': ['write'], 'probability': 0.04826188459992409}, {'value': ['update'], 'probability': 0.029489999637007713}, {'value': ['generate'], 'probability': 0.02676662988960743}, {'value': ['expand'], 'probability': 0.02662629634141922}]","[0.5763633, 0.5574444, 0.37657535, 0.4521689, 0.50073373]",0.1034687880751258,"[{'value': ['put'], 'probability': 0.9950709342956543}, {'value': ['put', 'char'], 'probability': 0.0032947505824267864}, {'value': ['set', 'bytes'], 'probability': 0.0007206337759271264}, {'value': ['put', 'long'], 'probability': 0.00034787209006026387}, {'value': ['put', 'short'], 'probability': 0.00020235621195752174}, {'value': ['put', 'float'], 'probability': 8.698054443811998e-05}, {'value': ['put', 'int'], 'probability': 7.971269951667637e-05}, {'value': ['set', 'int'], 'probability': 7.73337742430158e-05}, {'value': ['set', 'char'], 'probability': 7.34630084480159e-05}, {'value': ['put', 'double'], 'probability': 4.594454003381543e-05}]","[1.0, 0.6629484, 0.5534743, 0.90255356, 0.89370567, 0.82385653, 0.63844746, 0.5316909, 0.5562715, 0.8783067]",0.9983937445839816
331,331,"public final CharBuffer put(char[] src, int off, int len) {throw new ReadOnlyBufferException();}
","public final [MASK] put(char[] src, int off, int len) {throw new ReadOnlyBufferException();}
",CharBuffer,"[{'value': ['void'], 'probability': 0.9819387197494507}, {'value': ['String'], 'probability': 0.0060645039193332195}, {'value': ['double'], 'probability': 0.003704859409481287}, {'value': ['long'], 'probability': 0.0010447663953527808}, {'value': ['##bject'], 'probability': 0.0009408742189407349}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['put'], 'probability': 0.9980109333992004}, {'value': ['set', 'bytes'], 'probability': 0.0014152873773127794}, {'value': ['put', 'short'], 'probability': 0.00018338242080062628}, {'value': ['new', 'int', 'array'], 'probability': 8.055713260546327e-05}, {'value': ['put', 'byte', 'array'], 'probability': 7.650905899936333e-05}, {'value': ['put', 'bytes'], 'probability': 6.15790268057026e-05}, {'value': ['put', 'long'], 'probability': 5.633010368910618e-05}, {'value': ['test', 'put', 'char', 'buffer'], 'probability': 4.6849309001117945e-05}, {'value': ['append'], 'probability': 4.1348233935423195e-05}, {'value': ['put', 'string'], 'probability': 2.7339210646459833e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
332,332,"public final CharBuffer put(CharBuffer src) {throw new ReadOnlyBufferException();}
","public final [MASK] put([MASK] src) {throw new ReadOnlyBufferException();}
",CharBuffer,"[{'value': ['void'], 'probability': 0.9758191704750061}, {'value': ['String'], 'probability': 0.01876903511583805}, {'value': ['##bject'], 'probability': 0.0010722822044044733}, {'value': ['T'], 'probability': 0.0005763790686614811}, {'value': ['long'], 'probability': 0.00032729218946769834}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['put'], 'probability': 0.9969634413719177}, {'value': ['set', 'bytes'], 'probability': 0.0015069232322275639}, {'value': ['test', 'put', 'char', 'buffer'], 'probability': 0.0011719868052750826}, {'value': ['push'], 'probability': 0.0001825345680117607}, {'value': ['encode', 'loop'], 'probability': 5.5784905271138996e-05}, {'value': ['compact'], 'probability': 3.339593604323454e-05}, {'value': ['src'], 'probability': 2.6695710403146222e-05}, {'value': ['set', 'value'], 'probability': 2.473618405929301e-05}, {'value': ['add', 'source'], 'probability': 1.7812897567637265e-05}, {'value': ['put', 'string'], 'probability': 1.679176239122171e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
333,333,"public CharBuffer put(String src, int start, int end) {if ((start < 0) || (end < 0) || (long) start + (long) end > src.length()) {throw new IndexOutOfBoundsException();}throw new ReadOnlyBufferException();}
","public CharBuffer [MASK](String src, int start, int end) {if ((start < 0) || (end < 0) || (long) start + (long) end > src.length()) {throw new IndexOutOfBoundsException();}throw new ReadOnlyBufferException();}
",put,"[{'value': ['read'], 'probability': 0.10839957743883133}, {'value': ['write'], 'probability': 0.0943445935845375}, {'value': ['wrap'], 'probability': 0.03586946055293083}, {'value': ['generate'], 'probability': 0.027441784739494324}, {'value': ['fill'], 'probability': 0.02588253654539585}]","[0.5763633, 0.5574444, 0.51777744, 0.4521689, 0.57227623]",0.1608620857194742,"[{'value': ['put'], 'probability': 0.9919247031211853}, {'value': ['set', 'bytes'], 'probability': 0.00659558642655611}, {'value': ['set', 'string'], 'probability': 0.00033465868909843266}, {'value': ['protected', 'array', 'offset'], 'probability': 0.00029787709354422987}, {'value': ['put', 'if', 'absent'], 'probability': 0.00020849741122219712}, {'value': ['set', 'int'], 'probability': 0.00018486649787519127}, {'value': ['test', 'put', 'char', 'buffer'], 'probability': 0.00012280108057893813}, {'value': ['put', 'string'], 'probability': 0.00011635635019047186}, {'value': ['put', 'byte', 'array'], 'probability': 0.00010806268255691975}, {'value': ['put', 'int'], 'probability': 0.00010659969120752066}]","[1.0, 0.5534743, 0.70574933, 0.52974224, 0.8817487, 0.5316909, 0.69508964, 0.83003473, 0.6746638, 0.63844746]",0.9965742099347809
334,334,"public CharBuffer slice() {return new ReadOnlyCharArrayBuffer(remaining(), backingArray, offset + position);}public static boolean left() {return Gdx.input.isButtonPressed(Buttons.LEFT);}
","public CharBuffer slice() [MASK] new ReadOnlyCharArrayBuffer(remaining(), backingArray, offset + position);}public static boolean left() [MASK] Gdx.input.isButtonPressed(Buttons.LEFT);}
",{return,"[{'value': ['{'], 'probability': 0.9936990737915039}, {'value': ['return'], 'probability': 0.00487750256434083}, {'value': ['='], 'probability': 0.0011508617317304015}, {'value': [';'], 'probability': 9.810146002564579e-05}, {'value': [','], 'probability': 7.89447731222026e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['slice'], 'probability': 0.9999899864196777}, {'value': ['put', 'bytes'], 'probability': 2.3148354557633866e-06}, {'value': ['put'], 'probability': 1.7890185972646577e-06}, {'value': ['put', 'int'], 'probability': 1.425079176442523e-06}, {'value': ['copy', 'to'], 'probability': 9.86664190349984e-07}, {'value': ['put', 'short'], 'probability': 8.742160275687638e-07}, {'value': ['item'], 'probability': 8.711849091014301e-07}, {'value': ['position'], 'probability': 7.424372370223864e-07}, {'value': ['offset'], 'probability': 7.253369176396518e-07}, {'value': ['add', 'byte'], 'probability': 3.5952626831203816e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
335,335,"public static boolean left(int button) {return button == Buttons.LEFT;}
","public static boolean [MASK](int button) {return button == Buttons.LEFT;}
",left,"[{'value': ['equals'], 'probability': 0.1534714698791504}, {'value': ['matches'], 'probability': 0.08686649054288864}, {'value': ['push'], 'probability': 0.08515190333127975}, {'value': ['buttons'], 'probability': 0.041667867451906204}, {'value': ['button'], 'probability': 0.035326626151800156}]","[0.05559653, 0.37635538, 0.45692852, 0.21989304, 0.29042575]",0.0995557213552537,"[{'value': ['is', 'matching'], 'probability': 0.3574248254299164}, {'value': ['is', 'left', 'click'], 'probability': 0.2539587914943695}, {'value': ['is', 'left'], 'probability': 0.19693408906459808}, {'value': ['is', 'label'], 'probability': 0.041890837252140045}, {'value': ['is', 'redirect'], 'probability': 0.03721906244754791}, {'value': ['is', 'button', 'pressed'], 'probability': 0.036031730473041534}, {'value': ['is', 'default'], 'probability': 0.02458355389535427}, {'value': ['is', 'key'], 'probability': 0.02066253125667572}, {'value': ['get', 'buttons'], 'probability': 0.019411539658904076}, {'value': ['left'], 'probability': 0.011882909573614597}]","[0.5124359, 0.7432537, 0.864851, 0.5182751, 0.481669, 0.57461226, 0.4830161, 0.5746536, 0.51365155, 1.0]",0.6481760152293895
336,336,"public static boolean right() {return Gdx.input.isButtonPressed(Buttons.RIGHT);}
","public static boolean [MASK]() {return Gdx.input.isButtonPressed(Buttons.RIGHT);}
",right,"[{'value': ['is'], 'probability': 0.0801839604973793}, {'value': ['equals'], 'probability': 0.07076770067214966}, {'value': ['run'], 'probability': 0.05857601761817932}, {'value': ['execute'], 'probability': 0.04680890589952469}, {'value': ['matches'], 'probability': 0.02947213128209114}]","[0.6222263, 0.1782023, 0.66234463, 0.28768954, 0.32611173]",0.1243786872756391,"[{'value': ['is', 'down'], 'probability': 0.7148005962371826}, {'value': ['is', 'button', 'pressed'], 'probability': 0.14024342596530914}, {'value': ['is', 'completed'], 'probability': 0.038098543882369995}, {'value': ['is', 'playing'], 'probability': 0.024281660094857216}, {'value': ['is', 'done'], 'probability': 0.01926025003194809}, {'value': ['is', 'button', 'down'], 'probability': 0.01850156858563423}, {'value': ['is', 'mouse', 'pressed'], 'probability': 0.01674521714448929}, {'value': ['last', 'entry'], 'probability': 0.01379777304828167}, {'value': ['has', 'next'], 'probability': 0.009713808074593544}, {'value': ['is', 'active'], 'probability': 0.004557196516543627}]","[0.72647685, 0.6790657, 0.5867515, 0.6442705, 0.7043139, 0.73315734, 0.6482984, 0.5910743, 0.6560249, 0.6185029]",0.7078512892026324
337,337,"public static boolean right(int button) {return button == Buttons.RIGHT;}
","public static boolean [MASK](int button) {return button == Buttons.RIGHT;}
",right,"[{'value': ['equals'], 'probability': 0.1548139750957489}, {'value': ['push'], 'probability': 0.07974066585302353}, {'value': ['matches'], 'probability': 0.07463254034519196}, {'value': ['buttons'], 'probability': 0.0378902330994606}, {'value': ['button'], 'probability': 0.03581307828426361}]","[0.1782023, 0.58030736, 0.32611173, 0.34932855, 0.42811996]",0.126769283062319,"[{'value': ['is', 'right'], 'probability': 0.3279583156108856}, {'value': ['is', 'default'], 'probability': 0.25798171758651733}, {'value': ['is', 'matching'], 'probability': 0.1529683917760849}, {'value': ['is', 'checked'], 'probability': 0.05187658593058586}, {'value': ['check'], 'probability': 0.05010082945227623}, {'value': ['is', 'true'], 'probability': 0.0416676364839077}, {'value': ['is', 'selected'], 'probability': 0.03838543966412544}, {'value': ['is', 'right', 'click'], 'probability': 0.03690583258867264}, {'value': ['is', 'document'], 'probability': 0.024558598175644875}, {'value': ['get', 'right'], 'probability': 0.01759660616517067}]","[0.8975301, 0.59358466, 0.60043603, 0.6459742, 0.5091005, 0.66032743, 0.6053797, 0.84862196, 0.5852403, 0.9307996]",0.7111742218116586
338,338,"public static boolean middle() {return Gdx.input.isButtonPressed(Buttons.MIDDLE);}
","public static boolean [MASK]() {return Gdx.input.isButtonPressed(Buttons.MIDDLE);}
",middle,"[{'value': ['is'], 'probability': 0.07941025495529175}, {'value': ['run'], 'probability': 0.07159390300512314}, {'value': ['equals'], 'probability': 0.07020887732505798}, {'value': ['execute'], 'probability': 0.04557725414633751}, {'value': ['matches'], 'probability': 0.0289138350635767}]","[0.5823636, 0.52145964, 0.09564298, 0.05697356, 0.24746898]",0.1000459349284562,"[{'value': ['is', 'down'], 'probability': 0.8445287942886353}, {'value': ['is', 'closed'], 'probability': 0.036221567541360855}, {'value': ['is', 'playing'], 'probability': 0.022455526515841484}, {'value': ['is', 'mouse', 'pressed'], 'probability': 0.020917342975735664}, {'value': ['is', 'completed'], 'probability': 0.017631547525525093}, {'value': ['is', 'connected'], 'probability': 0.017225807532668114}, {'value': ['is', 'button', 'pressed'], 'probability': 0.014928421005606651}, {'value': ['is', 'running'], 'probability': 0.011938887648284435}, {'value': ['is', 'stopped'], 'probability': 0.0073113106191158295}, {'value': ['test', 'schedule'], 'probability': 0.006840820424258709}]","[0.62823373, 0.56442887, 0.5734516, 0.5611429, 0.5723506, 0.5843515, 0.57658726, 0.62301695, 0.5956906, 0.4338348]",0.6191468340508482
339,339,"public static boolean middle(int button) {return button == Buttons.MIDDLE;}
","public static boolean [MASK](int button) {return button == Buttons.MIDDLE;}
",middle,"[{'value': ['equals'], 'probability': 0.15560166537761688}, {'value': ['push'], 'probability': 0.09155388176441193}, {'value': ['matches'], 'probability': 0.0619562529027462}, {'value': ['buttons'], 'probability': 0.03793281316757202}, {'value': ['button'], 'probability': 0.037148214876651764}]","[0.09564298, 0.53438264, 0.24746898, 0.13938229, 0.28130862]",0.0948765375661804,"[{'value': ['is', 'multiple'], 'probability': 0.1955171674489975}, {'value': ['can', 'reuse'], 'probability': 0.1430775225162506}, {'value': ['is', 'matching'], 'probability': 0.1388586461544037}, {'value': ['get', 'middle'], 'probability': 0.1282179057598114}, {'value': ['is', 'visible'], 'probability': 0.097927525639534}, {'value': ['is', 'key'], 'probability': 0.07018294930458069}, {'value': ['satisfied', 'by'], 'probability': 0.06708831340074539}, {'value': ['is', 'horizontal'], 'probability': 0.05859164148569107}, {'value': ['is', 'equal'], 'probability': 0.05107106268405914}, {'value': ['is', 'closed'], 'probability': 0.04946725815534592}]","[0.5596434, 0.26712704, 0.53380555, 0.8604547, 0.5726092, 0.6370744, 0.47442925, 0.5317001, 0.5556538, 0.56442887]",0.552155364001241
340,340,"public static boolean shift() {return Gdx.input.isKeyPressed(Keys.SHIFT_LEFT) || Gdx.input.isKeyPressed(Keys.SHIFT_RIGHT);}
","public static boolean [MASK]() {return Gdx.input.isKeyPressed(Keys.SHIFT_LEFT) || Gdx.input.isKeyPressed(Keys.SHIFT_RIGHT);}
",shift,"[{'value': ['execute'], 'probability': 0.061957988888025284}, {'value': ['run'], 'probability': 0.06088751554489136}, {'value': ['next'], 'probability': 0.05960680916905403}, {'value': ['equals'], 'probability': 0.0570802241563797}, {'value': ['is'], 'probability': 0.048219166696071625}]","[0.21218163, 0.40082282, 0.5408653, 0.24129681, 0.4675857]",0.1061105769528147,"[{'value': ['is', 'shift', 'down'], 'probability': 0.8286550641059875}, {'value': ['is', 'down'], 'probability': 0.08889064192771912}, {'value': ['test', 'var'], 'probability': 0.021263130009174347}, {'value': ['is', 'pressed'], 'probability': 0.01428712997585535}, {'value': ['is', 'integer'], 'probability': 0.010634927079081535}, {'value': ['is', 'full'], 'probability': 0.009836496785283089}, {'value': ['is', 'right', 'click'], 'probability': 0.007703808601945639}, {'value': ['is', 'commit'], 'probability': 0.006736493203788996}, {'value': ['is', 'long'], 'probability': 0.006142749916762114}, {'value': ['is', 'optional'], 'probability': 0.005849569570273161}]","[0.7596242, 0.52816486, 0.24701548, 0.51908636, 0.37096795, 0.55169886, 0.51392376, 0.4194331, 0.53534144, 0.4654691]",0.7112518722957046
341,341,"public static boolean shift(int keycode) {return keycode == Keys.SHIFT_LEFT || keycode == Keys.SHIFT_RIGHT;}
","public static boolean [MASK](int keycode) {return keycode == Keys.SHIFT_LEFT || keycode == Keys.SHIFT_RIGHT;}
",shift,"[{'value': ['matches'], 'probability': 0.12841612100601196}, {'value': ['contains'], 'probability': 0.12281442433595657}, {'value': ['equals'], 'probability': 0.11694194376468658}, {'value': ['key'], 'probability': 0.05275587737560272}, {'value': ['execute'], 'probability': 0.03163338452577591}]","[0.16883516, 0.22056231, 0.24129681, 0.5234344, 0.21218163]",0.1113133721439361,"[{'value': ['is', 'shift', 'down'], 'probability': 0.3607838451862335}, {'value': ['is', 'modifier'], 'probability': 0.23408062756061554}, {'value': ['key', 'up'], 'probability': 0.23021957278251648}, {'value': ['shift', 'right'], 'probability': 0.05530351772904396}, {'value': ['is', 'integer'], 'probability': 0.029349522665143013}, {'value': ['key', 'down'], 'probability': 0.02886519581079483}, {'value': ['is', 'valid', 'key'], 'probability': 0.025779815390706062}, {'value': ['apply'], 'probability': 0.013012201525270939}, {'value': ['is', 'long'], 'probability': 0.011522478424012661}, {'value': ['get', 'font', 'family'], 'probability': 0.011083320714533329}]","[0.7596242, 0.4125982, 0.550964, 0.8310319, 0.37096795, 0.547758, 0.50223833, 0.42893222, 0.53534144, 0.45438844]",0.5998755005742249
342,342,"public static boolean alt() {return Gdx.input.isKeyPressed(Keys.ALT_LEFT) || Gdx.input.isKeyPressed(Keys.ALT_RIGHT);}
","public static boolean [MASK]() {return Gdx.input.isKeyPressed(Keys.ALT_LEFT) || Gdx.input.isKeyPressed(Keys.ALT_RIGHT);}
",alt,"[{'value': ['next'], 'probability': 0.06438188999891281}, {'value': ['equals'], 'probability': 0.06275586038827896}, {'value': ['run'], 'probability': 0.05159159004688263}, {'value': ['is'], 'probability': 0.04883820563554764}, {'value': ['matches'], 'probability': 0.04688257351517677}]","[0.00065861957, 0.073186815, 0.10189647, 0.14448375, -0.086099856]",0.0129120497724601,"[{'value': ['key', 'down'], 'probability': 0.2555570900440216}, {'value': ['is', 'menu', 'showing'], 'probability': 0.1493958830833435}, {'value': ['has', 'failed'], 'probability': 0.0983382910490036}, {'value': ['is', 'full'], 'probability': 0.09593413025140762}, {'value': ['is', 'interrupted'], 'probability': 0.09241058677434921}, {'value': ['is', 'aborted'], 'probability': 0.08187420666217804}, {'value': ['is', 'multipolygon'], 'probability': 0.06343460083007812}, {'value': ['is', 'date'], 'probability': 0.0597953163087368}, {'value': ['is', 'cancelled'], 'probability': 0.054923202842473984}, {'value': ['is', 'update'], 'probability': 0.04833679646253586}]","[0.11151944, 0.106276914, -0.0033834863, 0.11073723, 0.039283857, -0.02246038, 0.14448375, 0.09659151, 0.07313332, 0.2273712]",0.08640708954202776
343,343,"private void logAction(int action) {String actionStr = """";if (action == MotionEvent.ACTION_HOVER_ENTER)actionStr = ""HOVER_ENTER"";else if (action == MotionEvent.ACTION_HOVER_MOVE)actionStr = ""HOVER_MOVE"";else if (action == MotionEvent.ACTION_HOVER_EXIT)actionStr = ""HOVER_EXIT"";else if (action == MotionEvent.ACTION_SCROLL)actionStr = ""SCROLL"";elseactionStr = ""UNKNOWN ("" + action + "")"";Gdx.app.log(""AndroidMouseHandler"", ""action "" + actionStr);}
","private void [MASK](int action) {String actionStr = """";if (action == MotionEvent.ACTION_HOVER_ENTER)actionStr = ""HOVER_ENTER"";else if (action == MotionEvent.ACTION_HOVER_MOVE)actionStr = ""HOVER_MOVE"";else if (action == MotionEvent.ACTION_HOVER_EXIT)actionStr = ""HOVER_EXIT"";else if (action == MotionEvent.ACTION_SCROLL)actionStr = ""SCROLL"";elseactionStr = ""UNKNOWN ("" + action + "")"";Gdx.app.log(""AndroidMouseHandler"", ""action "" + actionStr);}
",logAction,"[{'value': ['save'], 'probability': 0.17439958453178406}, {'value': ['run'], 'probability': 0.1343781054019928}, {'value': ['edit'], 'probability': 0.056632377207279205}, {'value': ['action'], 'probability': 0.044460587203502655}, {'value': ['execute'], 'probability': 0.04364732280373573}]","[0.2942448, 0.26410556, 0.47380242, 0.11336209, 0.15839888]",0.125592564123049,"[{'value': ['action', 'to', 'string'], 'probability': 0.7698838114738464}, {'value': ['on', 'hover'], 'probability': 0.1358078271150589}, {'value': ['on', 'hover', 'event'], 'probability': 0.025773948058485985}, {'value': ['dispatch', 'hover', 'event'], 'probability': 0.01914246939122677}, {'value': ['on', 'element', 'action'], 'probability': 0.013552985154092312}, {'value': ['web', 'service'], 'probability': 0.010854171589016914}, {'value': ['null', 'safe', 'to', 'string'], 'probability': 0.006434994284063578}, {'value': ['do'], 'probability': 0.0063772001303732395}, {'value': ['get', 'paste', 'action'], 'probability': 0.006115430500358343}, {'value': ['process', 'action'], 'probability': 0.006057063117623329}]","[0.26785505, 0.3042209, 0.28603998, 0.26796916, 0.2634968, 0.4568326, 0.32094386, 0.2667186, 0.3347873, 0.17845681]",0.27545900730796674
344,344,"private void postTouchEvent(AndroidInput input, int type, int x, int y, int scrollAmount, long timeStamp) {TouchEvent event = input.usedTouchEvents.obtain();event.timeStamp = timeStamp;event.x = x;event.y = y;event.type = type;event.scrollAmount = scrollAmount;input.touchEvents.add(event);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","private void [MASK](AndroidInput input, int type, int x, int y, int scrollAmount, long timeStamp) {TouchEvent event = input.usedTouchEvents.obtain();event.timeStamp = timeStamp;event.x = x;event.y = y;event.type = type;event.scrollAmount = scrollAmount;input.touchEvents.add(event);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",postTouchEvent,"[{'value': ['update'], 'probability': 0.24046577513217926}, {'value': ['add'], 'probability': 0.15546025335788727}, {'value': ['save'], 'probability': 0.050143927335739136}, {'value': ['put'], 'probability': 0.04273367300629616}, {'value': ['remove'], 'probability': 0.037785597145557404}]","[0.42028293, 0.376335, 0.43652627, 0.6028787, 0.43522045]",0.223666221134078,"[{'value': ['mouse', 'wheel'], 'probability': 0.22833500802516937}, {'value': ['scrolled'], 'probability': 0.1569991111755371}, {'value': ['update', 'mouse'], 'probability': 0.1135823130607605}, {'value': ['on', 'touch', 'move'], 'probability': 0.09922370314598083}, {'value': ['on', 'mouse', 'drag'], 'probability': 0.08737316727638245}, {'value': ['mouse', 'dragged'], 'probability': 0.07926896959543228}, {'value': ['on', 'pointer', 'drag'], 'probability': 0.06538233906030655}, {'value': ['scroll'], 'probability': 0.06491629779338837}, {'value': ['on', 'pointer', 'end'], 'probability': 0.05521230027079582}, {'value': ['set', 'list', 'page', 'down'], 'probability': 0.049706827849149704}]","[0.19394846, -0.034944907, 0.29793477, 0.6476854, 0.40178597, 0.18893637, 0.44927433, 0.09532647, 0.6121042, 0.7014842]",0.29121395549096224
345,345,"public static long getCPtr(btFace obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btFace obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.09154744446277618}, {'value': ['read'], 'probability': 0.053842198103666306}, {'value': ['run'], 'probability': 0.039980120956897736}, {'value': ['skip'], 'probability': 0.036656834185123444}, {'value': ['execute'], 'probability': 0.033211130648851395}]","[1.0, 0.5726487, 0.65114945, 0.49507433, 0.37713256]",0.1790859998410384,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
346,346,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
347,347,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btFace(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btFace(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8134593963623047}, {'value': ['clear'], 'probability': 0.017004989087581635}, {'value': ['start'], 'probability': 0.010784131474792957}, {'value': ['test'], 'probability': 0.010553865693509579}, {'value': ['flush'], 'probability': 0.007813142612576485}]","[0.13931048, 0.18840031, 0.15163165, 0.14537679, 0.120570555]",0.120638701268153,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
348,348,"public void setIndices(SWIGTYPE_p_btAlignedObjectArrayT_int_t value) {CollisionJNI.btFace_indices_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_int_t.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_btAlignedObjectArrayT_int_t value) {CollisionJNI.btFace_indices_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_int_t.getCPtr(value));}
",setIndices,"[{'value': ['set'], 'probability': 0.7115659117698669}, {'value': ['put'], 'probability': 0.07072748988866806}, {'value': ['add'], 'probability': 0.0198077242821455}, {'value': ['apply'], 'probability': 0.011450217105448246}, {'value': ['setup'], 'probability': 0.01078957598656416}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35182503]",0.7873611412498838,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
349,349,"public SWIGTYPE_p_btAlignedObjectArrayT_int_t getIndices() {long cPtr = CollisionJNI.btFace_indices_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_int_t(cPtr, false);}
","public SWIGTYPE_p_btAlignedObjectArrayT_int_t [MASK]() {long cPtr = CollisionJNI.btFace_indices_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_int_t(cPtr, false);}
",getIndices,"[{'value': ['##x'], 'probability': 0.37207910418510437}, {'value': ['='], 'probability': 0.1714581996202469}, {'value': ['##s'], 'probability': 0.1557067632675171}, {'value': ['##b'], 'probability': 0.02148553542792797}, {'value': ['('], 'probability': 0.020234711468219757}]","[0.0, 0.22116649, 0.0, 0.0, 0.40611207]",0.0461383691087613,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
350,350,"public void setPlane(float[] value) {CollisionJNI.btFace_plane_set(swigCPtr, this, value);}
","public void [MASK](float[] value) {CollisionJNI.btFace_plane_set(swigCPtr, this, value);}
",setPlane,"[{'value': ['set'], 'probability': 0.4597277045249939}, {'value': ['put'], 'probability': 0.11919079720973969}, {'value': ['update'], 'probability': 0.021151768043637276}, {'value': ['save'], 'probability': 0.0196995846927166}, {'value': ['add'], 'probability': 0.017329253256320953}]","[1.0, 0.7944568, 0.41854778, 0.5413879, 0.5084879]",0.5827494993695932,"[{'value': ['set', 'value'], 'probability': 0.25540944933891296}, {'value': ['set', 'flags'], 'probability': 0.16589215397834778}, {'value': ['set'], 'probability': 0.15337571501731873}, {'value': ['set', 'code'], 'probability': 0.11340753734111786}, {'value': ['set', 'top'], 'probability': 0.07432285696268082}, {'value': ['set', 'id'], 'probability': 0.059061385691165924}, {'value': ['inject'], 'probability': 0.05445942282676697}, {'value': ['set', 'size'], 'probability': 0.05002741888165474}, {'value': ['set', 'range'], 'probability': 0.03996476158499718}, {'value': ['set', 'length'], 'probability': 0.034079283475875854}]","[0.8399167, 0.7786614, 1.0, 0.852165, 0.8966336, 0.7939222, 0.21771094, 0.8344828, 0.8546901, 0.82813084]",0.8232276682903195
351,351,"public float[] getPlane() {return CollisionJNI.btFace_plane_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btTriangleRaycastCallback_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public float[] [MASK]() {return CollisionJNI.btFace_plane_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btTriangleRaycastCallback_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",getPlane,"[{'value': ['destroy'], 'probability': 0.3405241370201111}, {'value': ['destroyed'], 'probability': 0.30898192524909973}, {'value': ['build'], 'probability': 0.0578998364508152}, {'value': ['create'], 'probability': 0.03240133821964264}, {'value': ['exists'], 'probability': 0.018053382635116577}]","[0.40928823, 0.32746348, 0.5626448, 0.62328804, 0.33321124]",0.2993408135540483,"[{'value': ['get', 'reserved'], 'probability': 0.15627117455005646}, {'value': ['get', 'data'], 'probability': 0.14780479669570923}, {'value': ['to', 'array'], 'probability': 0.13149015605449677}, {'value': ['get', 'flags'], 'probability': 0.13000832498073578}, {'value': ['get', 'keywords'], 'probability': 0.10896748304367065}, {'value': ['get', 'ids'], 'probability': 0.09203878045082092}, {'value': ['get', 'array'], 'probability': 0.06391582638025284}, {'value': ['get', 'x'], 'probability': 0.05879167839884758}, {'value': ['get', 'args'], 'probability': 0.05558566004037857}, {'value': ['get', 'value'], 'probability': 0.05512605980038643}]","[0.855474, 0.82370985, 0.69582117, 0.75727946, 0.7609473, 0.8027674, 0.8403326, 0.7925645, 0.8394565, 0.8500731]",0.7960143804809258
352,352,"public static long getCPtr(btTriangleRaycastCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btTriangleRaycastCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.06992431730031967}, {'value': ['read'], 'probability': 0.044803742319345474}, {'value': ['execute'], 'probability': 0.03676097095012665}, {'value': ['process'], 'probability': 0.03269236162304878}, {'value': ['replace'], 'probability': 0.027634814381599426}]","[1.0, 0.5726487, 0.37713256, 0.52250975, 0.4901826]",0.1400730647494561,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
353,353,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
354,354,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btTriangleRaycastCallback(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btTriangleRaycastCallback(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8045459389686584}, {'value': ['start'], 'probability': 0.017732661217451096}, {'value': ['test'], 'probability': 0.014414736069738865}, {'value': ['clear'], 'probability': 0.013316215947270393}, {'value': ['close'], 'probability': 0.008228487335145473}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.10496158]",0.1202385353147585,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
355,355,"protected void swigDirectorDisconnect() {swigCMemOwn = false;delete();}
","protected void [MASK]() {swigCMemOwn = false;delete();}
",swigDirectorDisconnect,"[{'value': ['run'], 'probability': 0.2597951889038086}, {'value': ['destroy'], 'probability': 0.042744945734739304}, {'value': ['clear'], 'probability': 0.0412781797349453}, {'value': ['remove'], 'probability': 0.0399308055639267}, {'value': ['hide'], 'probability': 0.03766871616244316}]","[-0.087563194, -0.15696473, -0.13124146, -0.053591672, -0.11020877]",-0.0411667356580585,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 1.374898084272047e-09}, {'value': ['delete', 'file'], 'probability': 7.658385037245807e-11}, {'value': ['delete', 'user'], 'probability': 7.463477058600176e-11}, {'value': ['abort'], 'probability': 4.3323098580794195e-11}, {'value': ['add', 'delete'], 'probability': 4.195608097057324e-11}, {'value': ['test', 'delete'], 'probability': 3.981910634553998e-11}, {'value': ['remove'], 'probability': 3.698968908949496e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.1723352283675723e-11}, {'value': ['delete', 'group'], 'probability': 1.1743549709064549e-11}]","[-0.05036918, -0.07227076, -0.12502779, -0.030638134, 0.05407105, -0.042249326, -0.13754319, -0.053591672, -0.22770803, -0.192311]",-0.05036918012532099
356,356,"public void swigReleaseOwnership() {swigCMemOwn = false;CollisionJNI.btTriangleRaycastCallback_change_ownership(this, swigCPtr, false);}
","public void [MASK]() {swigCMemOwn = false;CollisionJNI.btTriangleRaycastCallback_change_ownership(this, swigCPtr, false);}
",swigReleaseOwnership,"[{'value': ['run'], 'probability': 0.6885327100753784}, {'value': ['clear'], 'probability': 0.03339160233736038}, {'value': ['test'], 'probability': 0.03041238710284233}, {'value': ['setup'], 'probability': 0.011838830076158047}, {'value': ['close'], 'probability': 0.011438848450779915}]","[-0.087563194, -0.13124146, -0.15072986, -0.05206945, -0.20058393]",-0.072167431615402,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['destroy'], 'probability': 1.9466124545619579e-10}, {'value': ['update'], 'probability': 1.1577001857165925e-10}, {'value': ['move'], 'probability': 1.0214466078517503e-10}, {'value': ['abort'], 'probability': 5.741962114114152e-11}, {'value': ['do', 'delete'], 'probability': 5.2279860995874117e-11}, {'value': ['remove'], 'probability': 2.945415439326027e-11}, {'value': ['delete', 'file'], 'probability': 2.5761028726867252e-11}, {'value': ['finish'], 'probability': 1.7399859331135303e-11}, {'value': ['save'], 'probability': 1.5620383458925247e-11}]","[-0.05036918, -0.15696473, -0.20058964, -0.16200402, 0.05407105, -0.07227076, -0.053591672, -0.12502779, -0.015956704, -0.017662918]",-0.050369180076351515
357,357,"public void swigTakeOwnership() {swigCMemOwn = true;CollisionJNI.btTriangleRaycastCallback_change_ownership(this, swigCPtr, true);}
","public void [MASK]() {swigCMemOwn = true;CollisionJNI.btTriangleRaycastCallback_change_ownership(this, swigCPtr, true);}
",swigTakeOwnership,"[{'value': ['run'], 'probability': 0.6777809262275696}, {'value': ['clear'], 'probability': 0.031228866428136826}, {'value': ['test'], 'probability': 0.031169062480330467}, {'value': ['close'], 'probability': 0.01326516829431057}, {'value': ['setup'], 'probability': 0.012322789058089256}]","[-0.087563194, -0.13124146, -0.15072986, -0.20058393, -0.05206945]",-0.0714477139445061,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['update'], 'probability': 1.6694683135920485e-10}, {'value': ['destroy'], 'probability': 1.6196419205805057e-10}, {'value': ['move'], 'probability': 1.5943645015337182e-10}, {'value': ['abort'], 'probability': 6.830021270776143e-11}, {'value': ['do', 'delete'], 'probability': 5.4813178301804655e-11}, {'value': ['upload'], 'probability': 2.8569027352154386e-11}, {'value': ['finish'], 'probability': 2.5143404719374374e-11}, {'value': ['remove'], 'probability': 1.9486174826499614e-11}, {'value': ['save'], 'probability': 1.689471999799519e-11}]","[-0.05036918, -0.20058964, -0.15696473, -0.16200402, 0.05407105, -0.07227076, 0.043096792, -0.015956704, -0.053591672, -0.017662918]",-0.05036918008552081
358,358,"public void setFrom(btVector3 value) {CollisionJNI.btTriangleRaycastCallback_from_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btTriangleRaycastCallback_from_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setFrom,"[{'value': ['set'], 'probability': 0.6542577147483826}, {'value': ['put'], 'probability': 0.05686846002936363}, {'value': ['add'], 'probability': 0.021217264235019684}, {'value': ['execute'], 'probability': 0.017932841554284096}, {'value': ['update'], 'probability': 0.013914302922785282}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.41854778]",0.7223563717526565,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
359,359,"public btVector3 getFrom() {long cPtr = CollisionJNI.btTriangleRaycastCallback_from_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btTriangleRaycastCallback_from_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getFrom,"[{'value': ['get'], 'probability': 0.10128098726272583}, {'value': ['clone'], 'probability': 0.06265590339899063}, {'value': ['test'], 'probability': 0.036908719688653946}, {'value': ['build'], 'probability': 0.03291243314743042}, {'value': ['create'], 'probability': 0.02500041387975216}]","[1.0, 0.166604, 0.4599198, 0.5626448, 0.62328804]",0.1627952301321541,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
360,360,"public void setTo(btVector3 value) {CollisionJNI.btTriangleRaycastCallback_to_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btTriangleRaycastCallback_to_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setTo,"[{'value': ['set'], 'probability': 0.6840487122535706}, {'value': ['put'], 'probability': 0.04840541630983353}, {'value': ['update'], 'probability': 0.01993658021092415}, {'value': ['execute'], 'probability': 0.017264997586607933}, {'value': ['add'], 'probability': 0.01414504088461399}]","[1.0, 0.7944568, 0.41854778, 0.35167885, 0.5084879]",0.7441134511238681,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
361,361,"public btVector3 getTo() {long cPtr = CollisionJNI.btTriangleRaycastCallback_to_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btTriangleRaycastCallback_to_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getTo,"[{'value': ['get'], 'probability': 0.10081347078084946}, {'value': ['clone'], 'probability': 0.06524468958377838}, {'value': ['test'], 'probability': 0.03338270261883736}, {'value': ['build'], 'probability': 0.03250472620129585}, {'value': ['run'], 'probability': 0.027817483991384506}]","[1.0, 0.166604, 0.4599198, 0.5626448, 0.65114945]",0.1634388170886718,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
362,362,"public void setFlags(long value) {CollisionJNI.btTriangleRaycastCallback_flags_set(swigCPtr, this, value);}
","public void [MASK](long value) {CollisionJNI.btTriangleRaycastCallback_flags_set(swigCPtr, this, value);}
",setFlags,"[{'value': ['set'], 'probability': 0.48913469910621643}, {'value': ['put'], 'probability': 0.11783447861671448}, {'value': ['execute'], 'probability': 0.0356423482298851}, {'value': ['read'], 'probability': 0.02074345573782921}, {'value': ['run'], 'probability': 0.0146529171615839}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.67632943]",0.615193073890171,"[{'value': ['set', 'id'], 'probability': 0.26016372442245483}, {'value': ['set', 'ea'], 'probability': 0.2198936492204666}, {'value': ['set', 'flags'], 'probability': 0.1422407180070877}, {'value': ['set'], 'probability': 0.09099960327148438}, {'value': ['set', 'code'], 'probability': 0.05966061353683472}, {'value': ['set', 'value'], 'probability': 0.059029798954725266}, {'value': ['set', 'dirty'], 'probability': 0.05053127929568291}, {'value': ['set', 'size'], 'probability': 0.04212723299860954}, {'value': ['set', 'to'], 'probability': 0.03775933012366295}, {'value': ['extend'], 'probability': 0.03759397566318512}]","[0.7939222, 0.73357886, 0.7786614, 1.0, 0.852165, 0.8399167, 0.7950754, 0.8344828, 0.9136955, 0.5463553]",0.8004076758523968
363,363,"public long getFlags() {return CollisionJNI.btTriangleRaycastCallback_flags_get(swigCPtr, this);}
","public long [MASK]() {return CollisionJNI.btTriangleRaycastCallback_flags_get(swigCPtr, this);}
",getFlags,"[{'value': ['run'], 'probability': 0.19458328187465668}, {'value': ['get'], 'probability': 0.06318899989128113}, {'value': ['build'], 'probability': 0.045261234045028687}, {'value': ['execute'], 'probability': 0.038660671561956406}, {'value': ['id'], 'probability': 0.032786864787340164}]","[0.65114945, 1.0, 0.5626448, 0.37713256, 0.2945777]",0.2395962713052324,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
364,364,"public void setHitFraction(float value) {CollisionJNI.btTriangleRaycastCallback_hitFraction_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btTriangleRaycastCallback_hitFraction_set(swigCPtr, this, value);}
",setHitFraction,"[{'value': ['set'], 'probability': 0.6205455660820007}, {'value': ['put'], 'probability': 0.10911554843187332}, {'value': ['update'], 'probability': 0.01164793036878109}, {'value': ['add'], 'probability': 0.01103232055902481}, {'value': ['write'], 'probability': 0.01091719139367342}]","[1.0, 0.7944568, 0.41854778, 0.5084879, 0.46259418]",0.7227683992318747,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
365,365,"public float getHitFraction() {return CollisionJNI.btTriangleRaycastCallback_hitFraction_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btTriangleRaycastCallback_hitFraction_get(swigCPtr, this);}
",getHitFraction,"[{'value': ['run'], 'probability': 0.07133984565734863}, {'value': ['get'], 'probability': 0.04934300482273102}, {'value': ['build'], 'probability': 0.04251759126782417}, {'value': ['float'], 'probability': 0.038085926324129105}, {'value': ['start'], 'probability': 0.03350228816270828}]","[0.65114945, 1.0, 0.5626448, 0.2808844, 0.7199945]",0.1545374117022666,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
366,366,"public void processTriangle(btVector3 triangle, int partId, int triangleIndex) {if (getClass() == btTriangleRaycastCallback.class)CollisionJNI.btTriangleRaycastCallback_processTriangle(swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);elseCollisionJNI.btTriangleRaycastCallback_processTriangleSwigExplicitbtTriangleRaycastCallback(swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);}
","public void [MASK](btVector3 triangle, int partId, int triangleIndex) {if (getClass() == btTriangleRaycastCallback.class)CollisionJNI.btTriangleRaycastCallback_[MASK](swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);elseCollisionJNI.btTriangleRaycastCallback_[MASK]SwigExplicitbtTriangleRaycastCallback(swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);}
",processTriangle,"[{'value': ['add'], 'probability': 0.04778433218598366}, {'value': ['test'], 'probability': 0.042883750051259995}, {'value': ['apply'], 'probability': 0.034315016120672226}, {'value': ['setup'], 'probability': 0.03089793585240841}, {'value': ['navigate'], 'probability': 0.03058832883834839}]","[0.44585663, 0.4714813, 0.52126366, 0.43366188, 0.22840653]",0.0797968492070093,"[{'value': ['process', 'triangle'], 'probability': 0.907343864440918}, {'value': ['resolve', 'pick'], 'probability': 0.09264930337667465}, {'value': ['atan'], 'probability': 1.2616084177352604e-06}, {'value': ['expand', 'property'], 'probability': 1.0897422271227697e-06}, {'value': ['set', 'read', 'write'], 'probability': 9.004243679555657e-07}, {'value': ['create', 'content', 'provider'], 'probability': 8.515685294696596e-07}, {'value': ['print', 'short'], 'probability': 7.967281590026687e-07}, {'value': ['get', 'triangles'], 'probability': 7.277977829289739e-07}, {'value': ['is', 'read', 'write'], 'probability': 6.750777856723289e-07}, {'value': ['drop', 'to', 'frame'], 'probability': 6.006728767715686e-07}]","[0.82335734, 0.5912957, -0.34708092, 0.4724669, 0.48806924, 0.57178235, 0.41019613, 0.46484786, 0.53229076, 0.54464674]",0.8018537203764725
367,367,"public float reportHit(Vector3 hitNormalLocal, float hitFraction, int partId, int triangleIndex) {return CollisionJNI.btTriangleRaycastCallback_reportHit(swigCPtr, this, hitNormalLocal, hitFraction, partId, triangleIndex);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public float [MASK](Vector3 hitNormalLocal, float hitFraction, int partId, int triangleIndex) {return CollisionJNI.btTriangleRaycastCallback_[MASK](swigCPtr, this, hitNormalLocal, hitFraction, partId, triangleIndex);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",reportHit,"[{'value': ['destroy'], 'probability': 0.1612330824136734}, {'value': ['update'], 'probability': 0.0657975897192955}, {'value': ['save'], 'probability': 0.058072205632925034}, {'value': ['create'], 'probability': 0.05638936534523964}, {'value': ['generate'], 'probability': 0.042788974940776825}]","[0.27774274, 0.5244005, 0.34109223, 0.3896626, 0.34463644]",0.1358130502133202,"[{'value': ['process', 'triangle'], 'probability': 0.979393482208252}, {'value': ['resolve', 'pick'], 'probability': 0.020588718354701996}, {'value': ['create', 'content', 'provider'], 'probability': 5.285212409944506e-06}, {'value': ['atan'], 'probability': 4.9793179641710594e-06}, {'value': ['create', 'output', 'panel'], 'probability': 1.7768600173440063e-06}, {'value': ['expand', 'property'], 'probability': 1.431381747352134e-06}, {'value': ['with', 'port'], 'probability': 1.1152993693031021e-06}, {'value': ['test', 'work', 'for', 'broker'], 'probability': 1.1147186569360201e-06}, {'value': ['with', 'parameters'], 'probability': 1.0809542345668888e-06}, {'value': ['get', 'ui'], 'probability': 1.0289209058100823e-06}]","[0.3810555, 0.45933172, 0.44277856, -0.18503064, 0.6217307, 0.4347279, 0.47248757, 0.6212372, 0.43457073, 0.289689]",0.3826654576043466
368,368,"public static long getCPtr(btTypedConstraintFloatData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btTypedConstraintFloatData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.09393136203289032}, {'value': ['read'], 'probability': 0.04295798018574715}, {'value': ['execute'], 'probability': 0.04015848785638809}, {'value': ['skip'], 'probability': 0.03429608792066574}, {'value': ['match'], 'probability': 0.028596267104148865}]","[1.0, 0.5726487, 0.37713256, 0.49507433, 0.4692583]",0.1640744159755107,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
369,369,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
370,370,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btTypedConstraintFloatData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btTypedConstraintFloatData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.709172785282135}, {'value': ['test'], 'probability': 0.022953281179070473}, {'value': ['execute'], 'probability': 0.019418226554989815}, {'value': ['flush'], 'probability': 0.01822994463145733}, {'value': ['start'], 'probability': 0.01734553650021553}]","[0.13931048, 0.14537679, 0.33713183, 0.120570555, 0.15163165]",0.1135067039285613,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
371,371,"public void setRbA(btRigidBodyFloatData value) {DynamicsJNI.btTypedConstraintFloatData_rbA_set(swigCPtr, this, btRigidBodyFloatData.getCPtr(value), value);}
","public void [MASK](btRigidBodyFloatData value) {DynamicsJNI.btTypedConstraintFloatData_rbA_set(swigCPtr, this, btRigidBodyFloatData.getCPtr(value), value);}
",setRbA,"[{'value': ['set'], 'probability': 0.5899406671524048}, {'value': ['put'], 'probability': 0.04652636498212814}, {'value': ['get'], 'probability': 0.021340036764740944}, {'value': ['add'], 'probability': 0.019134795293211937}, {'value': ['execute'], 'probability': 0.014985350891947746}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.35167885]",0.6557807125878726,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
372,372,"public btRigidBodyFloatData getRbA() {long cPtr = DynamicsJNI.btTypedConstraintFloatData_rbA_get(swigCPtr, this);return (cPtr == 0) ? null : new btRigidBodyFloatData(cPtr, false);}
","public btRigidBodyFloatData [MASK]() {long cPtr = DynamicsJNI.btTypedConstraintFloatData_rbA_get(swigCPtr, this);return (cPtr == 0) ? null : new btRigidBodyFloatData(cPtr, false);}
",getRbA,"[{'value': ['get'], 'probability': 0.3485129475593567}, {'value': ['build'], 'probability': 0.142603799700737}, {'value': ['create'], 'probability': 0.09600719809532166}, {'value': ['clone'], 'probability': 0.03454519063234329}, {'value': ['resolve'], 'probability': 0.02984822355210781}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.5071028962371382,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
373,373,"public void setRbB(btRigidBodyFloatData value) {DynamicsJNI.btTypedConstraintFloatData_rbB_set(swigCPtr, this, btRigidBodyFloatData.getCPtr(value), value);}
","public void [MASK](btRigidBodyFloatData value) {DynamicsJNI.btTypedConstraintFloatData_rbB_set(swigCPtr, this, btRigidBodyFloatData.getCPtr(value), value);}
",setRbB,"[{'value': ['set'], 'probability': 0.6054771542549133}, {'value': ['put'], 'probability': 0.0373259037733078}, {'value': ['get'], 'probability': 0.020108506083488464}, {'value': ['add'], 'probability': 0.016627445816993713}, {'value': ['update'], 'probability': 0.014829897321760654}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.41854778]",0.6628690229356157,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
374,374,"public btRigidBodyFloatData getRbB() {long cPtr = DynamicsJNI.btTypedConstraintFloatData_rbB_get(swigCPtr, this);return (cPtr == 0) ? null : new btRigidBodyFloatData(cPtr, false);}
","public btRigidBodyFloatData [MASK]() {long cPtr = DynamicsJNI.btTypedConstraintFloatData_rbB_get(swigCPtr, this);return (cPtr == 0) ? null : new btRigidBodyFloatData(cPtr, false);}
",getRbB,"[{'value': ['get'], 'probability': 0.3663703203201294}, {'value': ['build'], 'probability': 0.13811877369880676}, {'value': ['create'], 'probability': 0.08781398087739944}, {'value': ['clone'], 'probability': 0.03460317477583885}, {'value': ['resolve'], 'probability': 0.026677263900637627}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.5159842348718334,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
375,375,"public void setName(String value) {DynamicsJNI.btTypedConstraintFloatData_name_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btTypedConstraintFloatData_name_set(swigCPtr, this, value);}
",setName,"[{'value': ['set'], 'probability': 0.5562244057655334}, {'value': ['put'], 'probability': 0.1524716168642044}, {'value': ['execute'], 'probability': 0.013858141377568245}, {'value': ['get'], 'probability': 0.013483056798577309}, {'value': ['read'], 'probability': 0.013314059004187584}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.4820371]",0.6974157744972538,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
376,376,"public String getName() {return DynamicsJNI.btTypedConstraintFloatData_name_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_name_get(swigCPtr, this);}
",getName,"[{'value': ['name'], 'probability': 0.6900362968444824}, {'value': ['get'], 'probability': 0.024324720725417137}, {'value': ['build'], 'probability': 0.016153519973158836}, {'value': ['value'], 'probability': 0.01244862750172615}, {'value': ['type'], 'probability': 0.010667155496776104}]","[0.47842693, 1.0, 0.5626448, 0.46303764, 0.4339052]",0.3739380812561266,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
377,377,"public void setObjectType(int value) {DynamicsJNI.btTypedConstraintFloatData_objectType_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraintFloatData_objectType_set(swigCPtr, this, value);}
",setObjectType,"[{'value': ['set'], 'probability': 0.6393793821334839}, {'value': ['put'], 'probability': 0.10290531069040298}, {'value': ['get'], 'probability': 0.014278711751103401}, {'value': ['accept'], 'probability': 0.011587274260818958}, {'value': ['read'], 'probability': 0.011322515085339546}]","[1.0, 0.7944568, 0.65028083, 0.44626972, 0.4820371]",0.7410472984342429,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
378,378,"public int getObjectType() {return DynamicsJNI.btTypedConstraintFloatData_objectType_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_objectType_get(swigCPtr, this);}
",getObjectType,"[{'value': ['get'], 'probability': 0.1667502373456955}, {'value': ['type'], 'probability': 0.06326669454574585}, {'value': ['sort'], 'probability': 0.05735517665743828}, {'value': ['value'], 'probability': 0.041163671761751175}, {'value': ['size'], 'probability': 0.022751584649086}]","[1.0, 0.4339052, 0.7483636, 0.46303764, 0.43109724]",0.2659929880271409,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
379,379,"public void setUserConstraintType(int value) {DynamicsJNI.btTypedConstraintFloatData_userConstraintType_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraintFloatData_userConstraintType_set(swigCPtr, this, value);}
",setUserConstraintType,"[{'value': ['set'], 'probability': 0.7692407965660095}, {'value': ['put'], 'probability': 0.07313423603773117}, {'value': ['get'], 'probability': 0.009400643408298492}, {'value': ['update'], 'probability': 0.005191568285226822}, {'value': ['add'], 'probability': 0.005150871817022562}]","[1.0, 0.7944568, 0.65028083, 0.41854778, 0.5084879]",0.8382479197302809,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
380,380,"public int getUserConstraintType() {return DynamicsJNI.btTypedConstraintFloatData_userConstraintType_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_userConstraintType_get(swigCPtr, this);}
",getUserConstraintType,"[{'value': ['get'], 'probability': 0.23920130729675293}, {'value': ['version'], 'probability': 0.03847748041152954}, {'value': ['size'], 'probability': 0.03596267104148865}, {'value': ['sort'], 'probability': 0.03270487114787102}, {'value': ['value'], 'probability': 0.023729240521788597}]","[1.0, 0.38924655, 0.43109724, 0.7483636, 0.46303764]",0.3051446092214562,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
381,381,"public void setUserConstraintId(int value) {DynamicsJNI.btTypedConstraintFloatData_userConstraintId_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraintFloatData_userConstraintId_set(swigCPtr, this, value);}
",setUserConstraintId,"[{'value': ['set'], 'probability': 0.7383367419242859}, {'value': ['put'], 'probability': 0.08134854584932327}, {'value': ['get'], 'probability': 0.009958000853657722}, {'value': ['save'], 'probability': 0.0071325418539345264}, {'value': ['execute'], 'probability': 0.0059655457735061646}]","[1.0, 0.7944568, 0.65028083, 0.5413879, 0.35167885]",0.8153995710406932,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
382,382,"public int getUserConstraintId() {return DynamicsJNI.btTypedConstraintFloatData_userConstraintId_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_userConstraintId_get(swigCPtr, this);}
",getUserConstraintId,"[{'value': ['get'], 'probability': 0.24465681612491608}, {'value': ['size'], 'probability': 0.04811343178153038}, {'value': ['version'], 'probability': 0.035711996257305145}, {'value': ['value'], 'probability': 0.024295957759022713}, {'value': ['start'], 'probability': 0.02337290532886982}]","[1.0, 0.43109724, 0.38924655, 0.46303764, 0.7199945]",0.3073774610703289,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
383,383,"public void setNeedsFeedback(int value) {DynamicsJNI.btTypedConstraintFloatData_needsFeedback_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraintFloatData_needsFeedback_set(swigCPtr, this, value);}
",setNeedsFeedback,"[{'value': ['set'], 'probability': 0.7230365872383118}, {'value': ['put'], 'probability': 0.09236112982034683}, {'value': ['get'], 'probability': 0.010692188516259193}, {'value': ['execute'], 'probability': 0.009923584759235382}, {'value': ['clear'], 'probability': 0.00696813128888607}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.6369313]",0.811294574066459,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
384,384,"public int getNeedsFeedback() {return DynamicsJNI.btTypedConstraintFloatData_needsFeedback_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_needsFeedback_get(swigCPtr, this);}
",getNeedsFeedback,"[{'value': ['get'], 'probability': 0.18826940655708313}, {'value': ['trim'], 'probability': 0.04038465768098831}, {'value': ['size'], 'probability': 0.03828030452132225}, {'value': ['start'], 'probability': 0.03163238987326622}, {'value': ['execute'], 'probability': 0.030490251258015633}]","[1.0, 0.29039297, 0.43109724, 0.7199945, 0.37713256]",0.2507733735676604,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
385,385,"public void setAppliedImpulse(float value) {DynamicsJNI.btTypedConstraintFloatData_appliedImpulse_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btTypedConstraintFloatData_appliedImpulse_set(swigCPtr, this, value);}
",setAppliedImpulse,"[{'value': ['set'], 'probability': 0.6795960068702698}, {'value': ['put'], 'probability': 0.11606309562921524}, {'value': ['get'], 'probability': 0.011884304694831371}, {'value': ['add'], 'probability': 0.011289011687040329}, {'value': ['value'], 'probability': 0.006626949179917574}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.47274652]",0.7884044484489989,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
386,386,"public float getAppliedImpulse() {return DynamicsJNI.btTypedConstraintFloatData_appliedImpulse_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_appliedImpulse_get(swigCPtr, this);}
",getAppliedImpulse,"[{'value': ['get'], 'probability': 0.10357705503702164}, {'value': ['float'], 'probability': 0.07339651137590408}, {'value': ['bar'], 'probability': 0.047167956829071045}, {'value': ['next'], 'probability': 0.03697153180837631}, {'value': ['run'], 'probability': 0.03469314053654671}]","[1.0, 0.2808844, 0.45318797, 0.6966621, 0.65114945]",0.1939160251804754,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
387,387,"public void setDbgDrawSize(float value) {DynamicsJNI.btTypedConstraintFloatData_dbgDrawSize_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btTypedConstraintFloatData_dbgDrawSize_set(swigCPtr, this, value);}
",setDbgDrawSize,"[{'value': ['set'], 'probability': 0.6553004384040833}, {'value': ['put'], 'probability': 0.1354902982711792}, {'value': ['get'], 'probability': 0.012982498854398727}, {'value': ['add'], 'probability': 0.008644003421068192}, {'value': ['value'], 'probability': 0.007894751615822315}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.47274652]",0.7795114819952949,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
388,388,"public float getDbgDrawSize() {return DynamicsJNI.btTypedConstraintFloatData_dbgDrawSize_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_dbgDrawSize_get(swigCPtr, this);}
",getDbgDrawSize,"[{'value': ['get'], 'probability': 0.11285065114498138}, {'value': ['float'], 'probability': 0.09606774151325226}, {'value': ['next'], 'probability': 0.04769746959209442}, {'value': ['bar'], 'probability': 0.039542436599731445}, {'value': ['run'], 'probability': 0.029756907373666763}]","[1.0, 0.2808844, 0.6966621, 0.45318797, 0.65114945]",0.2103599508979685,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
389,389,"public void setDisableCollisionsBetweenLinkedBodies(int value) {DynamicsJNI.btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_set(swigCPtr, this, value);}
",setDisableCollisionsBetweenLinkedBodies,"[{'value': ['set'], 'probability': 0.700541079044342}, {'value': ['put'], 'probability': 0.08785952627658844}, {'value': ['execute'], 'probability': 0.011137546971440315}, {'value': ['save'], 'probability': 0.010589107871055603}, {'value': ['get'], 'probability': 0.008944731205701828}]","[1.0, 0.7944568, 0.35167885, 0.5413879, 0.65028083]",0.7858079173700872,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
390,390,"public int getDisableCollisionsBetweenLinkedBodies() {return DynamicsJNI.btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_get(swigCPtr, this);}
",getDisableCollisionsBetweenLinkedBodies,"[{'value': ['get'], 'probability': 0.18109731376171112}, {'value': ['execute'], 'probability': 0.03894150257110596}, {'value': ['trim'], 'probability': 0.03794579952955246}, {'value': ['start'], 'probability': 0.036540523171424866}, {'value': ['size'], 'probability': 0.035199109464883804}]","[1.0, 0.37713256, 0.29039297, 0.7199945, 0.43109724]",0.2482858298313558,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
391,391,"public void setOverrideNumSolverIterations(int value) {DynamicsJNI.btTypedConstraintFloatData_overrideNumSolverIterations_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraintFloatData_overrideNumSolverIterations_set(swigCPtr, this, value);}
",setOverrideNumSolverIterations,"[{'value': ['set'], 'probability': 0.676949143409729}, {'value': ['put'], 'probability': 0.09862903505563736}, {'value': ['get'], 'probability': 0.01256325002759695}, {'value': ['execute'], 'probability': 0.011439710855484009}, {'value': ['accept'], 'probability': 0.007293198723345995}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.44626972]",0.7707531278025946,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
392,392,"public int getOverrideNumSolverIterations() {return DynamicsJNI.btTypedConstraintFloatData_overrideNumSolverIterations_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_overrideNumSolverIterations_get(swigCPtr, this);}
",getOverrideNumSolverIterations,"[{'value': ['get'], 'probability': 0.18365119397640228}, {'value': ['size'], 'probability': 0.04310065507888794}, {'value': ['trim'], 'probability': 0.0417153500020504}, {'value': ['execute'], 'probability': 0.03365577384829521}, {'value': ['run'], 'probability': 0.026442278176546097}]","[1.0, 0.43109724, 0.29039297, 0.37713256, 0.65114945]",0.2442561748157958,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
393,393,"public void setBreakingImpulseThreshold(float value) {DynamicsJNI.btTypedConstraintFloatData_breakingImpulseThreshold_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btTypedConstraintFloatData_breakingImpulseThreshold_set(swigCPtr, this, value);}
",setBreakingImpulseThreshold,"[{'value': ['set'], 'probability': 0.6445075273513794}, {'value': ['put'], 'probability': 0.1137368455529213}, {'value': ['get'], 'probability': 0.0114781204611063}, {'value': ['write'], 'probability': 0.009496178478002548}, {'value': ['add'], 'probability': 0.009451501071453094}]","[1.0, 0.7944568, 0.65028083, 0.46259418, 0.5084879]",0.7515293878226431,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
394,394,"public float getBreakingImpulseThreshold() {return DynamicsJNI.btTypedConstraintFloatData_breakingImpulseThreshold_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_breakingImpulseThreshold_get(swigCPtr, this);}
",getBreakingImpulseThreshold,"[{'value': ['get'], 'probability': 0.10706429928541183}, {'value': ['float'], 'probability': 0.09171425551176071}, {'value': ['next'], 'probability': 0.04602179303765297}, {'value': ['run'], 'probability': 0.03843577951192856}, {'value': ['bar'], 'probability': 0.03715310990810394}]","[1.0, 0.2808844, 0.6966621, 0.65114945, 0.45318797]",0.2067518211215089,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
395,395,"public void setIsEnabled(int value) {DynamicsJNI.btTypedConstraintFloatData_isEnabled_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraintFloatData_isEnabled_set(swigCPtr, this, value);}
",setIsEnabled,"[{'value': ['set'], 'probability': 0.7333428263664246}, {'value': ['put'], 'probability': 0.09373154491186142}, {'value': ['get'], 'probability': 0.009121107868850231}, {'value': ['execute'], 'probability': 0.009044578298926353}, {'value': ['clear'], 'probability': 0.005795971490442753}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.6369313]",0.8206121918788876,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
396,396,"public int getIsEnabled() {return DynamicsJNI.btTypedConstraintFloatData_isEnabled_get(swigCPtr, this);}public void play() {if (isPlaying())return;if (sound.getPaused()) {resume();return;}soundOptions.volume = (int) (volume * 100);soundOptions.pan = (int) (pan * 100);soundOptions.loops = 1;soundOptions.from = 0;sound.play(soundOptions);isPlaying = true;}
","public int [MASK]() {return DynamicsJNI.btTypedConstraintFloatData_isEnabled_get(swigCPtr, this);}public void play() {if (isPlaying())return;if (sound.getPaused()) {resume();return;}soundOptions.volume = (int) (volume * 100);soundOptions.pan = (int) (pan * 100);soundOptions.loops = 1;soundOptions.from = 0;sound.play(soundOptions);isPlaying = true;}
",getIsEnabled,"[{'value': ['resume'], 'probability': 0.32253584265708923}, {'value': ['start'], 'probability': 0.10140661895275116}, {'value': ['stop'], 'probability': 0.05025533586740494}, {'value': ['continue'], 'probability': 0.022553948685526848}, {'value': ['run'], 'probability': 0.01723124273121357}]","[0.44692224, 0.7199945, 0.6723754, 0.64348924, 0.65114945]",0.2766844367520013,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
397,397,"public void resume() {sound.resume();}
","public void [MASK]() {sound.[MASK]();}
",resume,"[{'value': ['run'], 'probability': 0.15559281408786774}, {'value': ['clear'], 'probability': 0.11668965965509415}, {'value': ['echo'], 'probability': 0.04748617112636566}, {'value': ['fade'], 'probability': 0.04643533378839493}, {'value': ['sound'], 'probability': 0.02491501346230507}]","[0.4456735, 0.46745658, 0.031105468, 0.2927368, 0.20626599]",0.1441004728129883,"[{'value': ['resume'], 'probability': 0.9602779746055603}, {'value': ['run'], 'probability': 0.03221149742603302}, {'value': ['real', 'run'], 'probability': 0.0057625602930784225}, {'value': ['start'], 'probability': 0.00039077704423107207}, {'value': ['play'], 'probability': 0.000344643194694072}, {'value': ['pulse'], 'probability': 0.00023601765860803425}, {'value': ['on', 'resume'], 'probability': 0.000210654063266702}, {'value': ['thread'], 'probability': 0.00020402537484187633}, {'value': ['step'], 'probability': 0.00020233688701409847}, {'value': ['exit', 'dumb', 'mode'], 'probability': 0.00015943823382258415}]","[1.0, 0.4456735, 0.40609658, 0.67066956, 0.40481701, 0.0899247, 0.8515481, 0.16820619, 0.61538255, 0.19951557]",0.977766790341663
398,398,"public void pause() {sound.pause();isPlaying = false;}
","public void [MASK]() {sound.[MASK]();isPlaying = false;}
",pause,"[{'value': ['run'], 'probability': 0.20436806976795197}, {'value': ['clear'], 'probability': 0.06488250941038132}, {'value': ['start'], 'probability': 0.034055013209581375}, {'value': ['sound'], 'probability': 0.031780410557985306}, {'value': ['stop'], 'probability': 0.03090149350464344}]","[0.23817183, 0.34623677, 0.45134813, 0.26111898, 0.42451242]",0.1079266299105165,"[{'value': ['pause'], 'probability': 0.9103357195854187}, {'value': ['stop'], 'probability': 0.08045288175344467}, {'value': ['play'], 'probability': 0.0027939158026129007}, {'value': ['unpause'], 'probability': 0.0023770341649651527}, {'value': ['on', 'pause'], 'probability': 0.0019133406458422542}, {'value': ['resume'], 'probability': 0.0006831053760834038}, {'value': ['pause', 'music'], 'probability': 0.0005880902172066271}, {'value': ['run'], 'probability': 0.0005136962281540036}, {'value': ['stop', 'playing'], 'probability': 0.00018763000844046474}, {'value': ['is', 'playing'], 'probability': 0.00015450782666448504}]","[1.0, 0.42451242, 0.3030129, 0.0, 0.736421, 0.41949198, 0.65850985, 0.23817183, 0.35677558, 0.23574835]",0.9476441190444943
399,399,"public void stop() {sound.stop();isPlaying = false;}
","public void [MASK]() {sound.[MASK]();isPlaying = false;}
",stop,"[{'value': ['run'], 'probability': 0.20436806976795197}, {'value': ['clear'], 'probability': 0.06488250941038132}, {'value': ['start'], 'probability': 0.034055013209581375}, {'value': ['sound'], 'probability': 0.031780410557985306}, {'value': ['stop'], 'probability': 0.03090149350464344}]","[0.631634, 0.61591697, 0.720769, 0.38500854, 1.0]",0.236731079696686,"[{'value': ['stop'], 'probability': 0.9669638872146606}, {'value': ['pause'], 'probability': 0.015962999314069748}, {'value': ['stop', 'animation'], 'probability': 0.005645540077239275}, {'value': ['stop', 'music'], 'probability': 0.0033958356361836195}, {'value': ['run'], 'probability': 0.0033736855257302523}, {'value': ['stop', 'thread'], 'probability': 0.0016822024481371045}, {'value': ['shutdown'], 'probability': 0.001542727928608656}, {'value': ['stop', 'play'], 'probability': 0.0004888303810730577}, {'value': ['on', 'destroy'], 'probability': 0.00047385384095832705}, {'value': ['disable'], 'probability': 0.0004704605380538851}]","[1.0, 0.42451242, 0.738902, 0.767639, 0.631634, 0.7959409, 0.376529, 0.85428613, 0.7011028, 0.29621992]",0.9854585864802594
400,400,"public boolean isPlaying() {isPlaying &= sound.getPlayState() == 1;return isPlaying;}
","public boolean [MASK]() {[MASK] &= sound.getPlayState() == 1;return [MASK];}
",isPlaying,"[{'value': ['is'], 'probability': 0.06196293234825134}, {'value': ['matches'], 'probability': 0.05525733157992363}, {'value': ['equals'], 'probability': 0.05415099859237671}, {'value': ['run'], 'probability': 0.038378745317459106}, {'value': ['supports'], 'probability': 0.024092786014080048}]","[0.99999994, 0.3614936, 0.3373858, 0.5624562, 0.5425134]",0.1348648992877485,"[{'value': ['is', 'playing'], 'probability': 0.9980986714363098}, {'value': ['is', 'running'], 'probability': 0.0013117437483742833}, {'value': ['get', 'current', 'state'], 'probability': 0.00014820201613474637}, {'value': ['get', 'state'], 'probability': 0.00013139717339072376}, {'value': ['is', 'active'], 'probability': 0.0001253657101187855}, {'value': ['is', 'ready'], 'probability': 8.645207708468661e-05}, {'value': ['is', 'paused'], 'probability': 6.268916331464425e-05}, {'value': ['is', 'alive'], 'probability': 2.4305290935444646e-05}, {'value': ['is', 'error'], 'probability': 6.0145644056319725e-06}, {'value': ['is', 'finished'], 'probability': 5.22893924426171e-06}]","[0.8780154, 0.90842825, 0.7604231, 0.70808315, 0.8986385, 0.8987537, 0.81504333, 0.8866284, 0.83718884, 0.85473543]",0.8780158720886881
401,401,"public void setLooping(boolean isLooping) {this.isLooping = isLooping;}
","public void [MASK](boolean isLooping) {this.isLooping = isLooping;}
",setLooping,"[{'value': ['apply'], 'probability': 0.17433974146842957}, {'value': ['update'], 'probability': 0.06703471392393112}, {'value': ['set'], 'probability': 0.06547180563211441}, {'value': ['run'], 'probability': 0.039265234023332596}, {'value': ['execute'], 'probability': 0.029617002233862877}]","[0.5010617, 0.41854778, 1.0, 0.67632943, 0.35167885]",0.2178559064073431,"[{'value': ['set', 'looping'], 'probability': 0.9994097948074341}, {'value': ['test', 'is', 'looping'], 'probability': 0.00041523261461406946}, {'value': ['set', 'speed'], 'probability': 4.758947397931479e-05}, {'value': ['set', 'web', 'xml'], 'probability': 3.731103424797766e-05}, {'value': ['is', 'looping'], 'probability': 3.5262302844785154e-05}, {'value': ['hex'], 'probability': 1.7841424778453074e-05}, {'value': ['is', 'numeric', 'string'], 'probability': 1.576534668856766e-05}, {'value': ['is', 'white'], 'probability': 1.3260895684652496e-05}, {'value': ['fade', 'in'], 'probability': 4.035799065604806e-06}, {'value': ['set', 'complete'], 'probability': 3.7776108001708053e-06}]","[0.80199075, 0.6692284, 0.86722636, 0.6897636, 0.5935591, 0.095312536, 0.6387582, 0.6292959, 0.61438084, 0.9206841]",0.8019093065406214
402,402,"public boolean isLooping() {return isLooping;}
","public boolean [MASK]() {return [MASK];}
",isLooping,"[{'value': ['equals'], 'probability': 0.09117130935192108}, {'value': ['is'], 'probability': 0.0804816484451294}, {'value': ['exists'], 'probability': 0.04379364103078842}, {'value': ['next'], 'probability': 0.03853735700249672}, {'value': ['run'], 'probability': 0.025117989629507065}]","[0.3373858, 0.99999994, 0.65599275, 0.6951459, 0.5624562]",0.1808867146316264,"[{'value': ['is', 'looping'], 'probability': 0.9999781847000122}, {'value': ['test', 'is', 'looping'], 'probability': 1.7091919289669022e-05}, {'value': ['is', 'critical'], 'probability': 1.1232091310375836e-06}, {'value': ['on', 'finish'], 'probability': 8.045883532759035e-07}, {'value': ['show', 'popup'], 'probability': 5.652516961163201e-07}, {'value': ['is', 'dragging'], 'probability': 5.066719381829898e-07}, {'value': ['is', 'white'], 'probability': 4.92519404815539e-07}, {'value': ['is', 'unsafe'], 'probability': 4.736051550935372e-07}, {'value': ['on', 'connection', 'lost'], 'probability': 3.583643319871044e-07}, {'value': ['show', 'tooltip'], 'probability': 3.304046174434916e-07}]","[0.80216557, 0.76743144, 0.9065237, 0.61640185, 0.4194263, 0.8568764, 0.8554993, 0.8174904, 0.69343233, 0.6088991]",0.8021646309979457
403,403,"public void setVolume(float volume) {sound.setVolume((int) (volume * 100));this.volume = volume;}
","public void [MASK](float volume) {sound.[MASK]((int) (volume * 100));this.volume = volume;}
",setVolume,"[{'value': ['fill'], 'probability': 0.05695756897330284}, {'value': ['echo'], 'probability': 0.056882552802562714}, {'value': ['render'], 'probability': 0.047391366213560104}, {'value': ['add'], 'probability': 0.03619007021188736}, {'value': ['record'], 'probability': 0.035552866756916046}]","[0.48556754, 0.17871216, 0.23491256, 0.5084879, 0.6275234]",0.0896676463254588,"[{'value': ['set', 'volume'], 'probability': 0.9999644756317139}, {'value': ['volume'], 'probability': 1.5335241187131032e-05}, {'value': ['set', 'volume', 'impl'], 'probability': 4.5970423343533184e-06}, {'value': ['set', 'music', 'volume'], 'probability': 3.4426971069478896e-06}, {'value': ['loop'], 'probability': 3.1740062240714906e-06}, {'value': ['play', 'sound'], 'probability': 3.131671519440715e-06}, {'value': ['set', 'exp'], 'probability': 1.908821332108346e-06}, {'value': ['update', 'volume'], 'probability': 1.3723545180255314e-06}, {'value': ['set', 'repeat'], 'probability': 1.3064512813798501e-06}, {'value': ['set', 'sound', 'volume'], 'probability': 1.1447745009718346e-06}]","[0.83329314, 0.42255268, 0.83329314, 0.78380626, 0.34620935, 0.6522428, 0.6557954, 0.53502905, 0.8907019, 0.79373085]",0.8332837466543432
404,404,"public float getVolume() {return volume;}
","public float [MASK]() {return volume;}
",getVolume,"[{'value': ['volume'], 'probability': 0.469793438911438}, {'value': ['size'], 'probability': 0.13296450674533844}, {'value': ['count'], 'probability': 0.08264289051294327}, {'value': ['scale'], 'probability': 0.02142786979675293}, {'value': ['state'], 'probability': 0.016480663791298866}]","[0.2961002, 0.43109724, 0.4437648, 0.34368768, 0.49234587]",0.2485792505651637,"[{'value': ['get', 'volume'], 'probability': 0.9998849630355835}, {'value': ['volume'], 'probability': 0.00010104774264618754}, {'value': ['get', 'percentage'], 'probability': 2.946303538919892e-06}, {'value': ['set', 'volume'], 'probability': 2.355925744268461e-06}, {'value': ['get', 'progress'], 'probability': 2.2265755887929117e-06}, {'value': ['get', 'radius'], 'probability': 2.0574359496094985e-06}, {'value': ['get', 'focus'], 'probability': 1.9207466266379924e-06}, {'value': ['get', 'accuracy'], 'probability': 1.067416292244161e-06}, {'value': ['get', 'price'], 'probability': 6.788651489841868e-07}, {'value': ['get', 'value'], 'probability': 6.139712809272169e-07}]","[0.81030923, 0.2961002, 0.8088893, 0.5548804, 0.8719993, 0.76990294, 0.90466774, 0.7972262, 0.8612438, 0.8500731]",0.8102568460301319
405,405,"public void setPan(float pan, float volume) {sound.setPan((int) (pan * 100));sound.setVolume((int) (volume * 100));this.pan = pan;this.volume = volume;}
","public void [MASK](float pan, float volume) {sound.[MASK]((int) (pan * 100));sound.setVolume((int) (volume * 100));this.pan = pan;this.volume = volume;}
",setPan,"[{'value': ['apply'], 'probability': 0.08167658001184464}, {'value': ['record'], 'probability': 0.05250267684459686}, {'value': ['process'], 'probability': 0.04462610185146332}, {'value': ['echo'], 'probability': 0.04160042852163315}, {'value': ['add'], 'probability': 0.03509989380836487}]","[0.5010617, 0.6275234, 0.55405426, 0.17871216, 0.5084879]",0.1238793185399955,"[{'value': ['set', 'pan'], 'probability': 0.999880313873291}, {'value': ['pan'], 'probability': 6.471134111052379e-05}, {'value': ['loop'], 'probability': 3.906992787960917e-05}, {'value': ['play'], 'probability': 5.4774309319327585e-06}, {'value': ['get', 'pan'], 'probability': 4.335195171734085e-06}, {'value': ['set', 'basic'], 'probability': 1.8674198827284272e-06}, {'value': ['set', 'debug', 'mode'], 'probability': 1.205969510920113e-06}, {'value': ['enter'], 'probability': 1.1445123391240486e-06}, {'value': ['set', 'run', 'time'], 'probability': 9.376223601975653e-07}, {'value': ['scroll'], 'probability': 9.208850428876758e-07}]","[0.7969024, 0.36097935, 0.34620935, 0.6728705, 0.6320662, 0.8749611, 0.7072402, 0.5920141, 0.9005068, 0.18262875]",0.7968545103153053
406,406,"public void setPosition(float position) {sound.setPosition((int) (position * 1000f));}
","public void [MASK](float position) {sound.[MASK]((int) (position * 1000f));}
",setPosition,"[{'value': ['update'], 'probability': 0.05372339487075806}, {'value': ['fill'], 'probability': 0.040774207562208176}, {'value': ['perform'], 'probability': 0.04063577950000763}, {'value': ['write'], 'probability': 0.03447556123137474}, {'value': ['paint'], 'probability': 0.028136389330029488}]","[0.41854778, 0.48556754, 0.498045, 0.46259418, 0.3280287]",0.0877006234589439,"[{'value': ['set', 'position'], 'probability': 0.9689863920211792}, {'value': ['restore', 'position'], 'probability': 0.012202323414385319}, {'value': ['move', 'to'], 'probability': 0.004484927281737328}, {'value': ['update', 'position'], 'probability': 0.003765861736610532}, {'value': ['move'], 'probability': 0.003500561462715268}, {'value': ['set', 'float'], 'probability': 0.0022234630305320024}, {'value': ['seek'], 'probability': 0.0019241477129980922}, {'value': ['play', 'sound'], 'probability': 0.0013686162419617176}, {'value': ['step'], 'probability': 0.0010120321530848742}, {'value': ['set', 'cursor', 'location'], 'probability': 0.0005317169707268476}]","[0.8780586, 0.62325525, 0.7490501, 0.6067127, 0.69789916, 0.85260206, 0.50184625, 0.6522428, 0.65358883, 0.7231598]",0.8713192620158893
407,407,"public float getPosition() {return sound.getPosition() / 1000f;}
","public float [MASK]() {return sound.[MASK]() / 1000f;}
",getPosition,"[{'value': ['sound'], 'probability': 0.07534530758857727}, {'value': ['drop'], 'probability': 0.06022883579134941}, {'value': ['get'], 'probability': 0.055924851447343826}, {'value': ['build'], 'probability': 0.052972979843616486}, {'value': ['size'], 'probability': 0.03737005591392517}]","[0.48640725, 0.5473199, 1.0, 0.5626448, 0.43109724]",0.1714528935570141,"[{'value': ['get', 'position'], 'probability': 0.8891885280609131}, {'value': ['get', 'float'], 'probability': 0.06854279339313507}, {'value': ['get', 'fps'], 'probability': 0.019731028005480766}, {'value': ['get', 'position', 'x'], 'probability': 0.004584095906466246}, {'value': ['get', 'progress'], 'probability': 0.004368371795862913}, {'value': ['get', 'z'], 'probability': 0.0034498614259064198}, {'value': ['get', 'pos'], 'probability': 0.003036526497453451}, {'value': ['get', 'radius'], 'probability': 0.0028456568252295256}, {'value': ['get', 'x'], 'probability': 0.0024876112584024668}, {'value': ['get', 'height'], 'probability': 0.0017656668787822127}]","[0.88500535, 0.84481704, 0.7648509, 0.8029298, 0.8719993, 0.8003988, 0.6599685, 0.76990294, 0.7925645, 0.8224554]",0.8778038741770996
408,408,"public void dispose() {sound.destruct();}
","public void [MASK]() {sound.destruct();}
",dispose,"[{'value': ['run'], 'probability': 0.1761074811220169}, {'value': ['stop'], 'probability': 0.09969241172075272}, {'value': ['destroy'], 'probability': 0.08567288517951965}, {'value': ['clear'], 'probability': 0.07140455394983292}, {'value': ['fail'], 'probability': 0.036380913108587265}]","[0.13288948, 0.22849083, 0.5099461, 0.20622805, 0.35851943]",0.1176390738384285,"[{'value': ['detach'], 'probability': 0.9560188055038452}, {'value': ['destruct'], 'probability': 0.028602346777915955}, {'value': ['finalize'], 'probability': 0.007824578322470188}, {'value': ['run'], 'probability': 0.002454072469845414}, {'value': ['unfreeze'], 'probability': 0.0017283327179029584}, {'value': ['attach', 'view'], 'probability': 0.0011407185811549425}, {'value': ['disconnect'], 'probability': 0.0006344358553178608}, {'value': ['unbind'], 'probability': 0.0005675332504324615}, {'value': ['reload', 'page'], 'probability': 0.0005397908971644938}, {'value': ['pop'], 'probability': 0.0004894159501418471}]","[0.34711117, 0.2543828, 0.33868343, 0.13288948, 0.43744376, 0.18874697, 0.1299079, 0.0, 0.13762556, -0.010967632]",0.3432196216779216
409,409,"public void setOnCompletionListener(OnCompletionListener listener) {onCompletionListener = listener;}
","public void [MASK](OnCompletionListener listener) {onCompletionListener = listener;}
",setOnCompletionListener,"[{'value': ['accept'], 'probability': 0.1945866048336029}, {'value': ['add'], 'probability': 0.06637228280305862}, {'value': ['run'], 'probability': 0.04909013584256172}, {'value': ['setup'], 'probability': 0.0371273048222065}, {'value': ['perform'], 'probability': 0.03200528025627136}]","[0.44626972, 0.5084879, 0.67632943, 0.35182503, 0.498045]",0.1827910997898157,"[{'value': ['set', 'on', 'completion', 'listener'], 'probability': 0.9999996423721313}, {'value': ['start', 'playing'], 'probability': 1.87441344223771e-07}, {'value': ['set', 'output', 'format'], 'probability': 8.612945379127268e-08}, {'value': ['test', 'await', 'timeout', 'broken', 'barrier'], 'probability': 2.816274680128572e-08}, {'value': ['update', 'started'], 'probability': 2.5227404165661937e-08}, {'value': ['set', 'balance'], 'probability': 2.0912059639499603e-08}, {'value': ['create', 'player'], 'probability': 1.629170398587121e-08}, {'value': ['ring'], 'probability': 1.1833976465425167e-08}, {'value': ['then', 'return'], 'probability': 9.976047543602817e-09}, {'value': ['set', 'zoom', 'change', 'listener'], 'probability': 5.283726789429011e-09}]","[0.82836807, 0.6823848, 0.78468025, 0.6636834, 0.6614375, 0.8857692, 0.71842307, 0.4972476, 0.7492541, 0.72473454]",0.8283680520371015
410,410,"public void onfinish() {if (isLooping)play();else if (onCompletionListener != null)onCompletionListener.onCompletion(this);}public void lerpAngleDeg() {assertEquals(10, MathUtils.lerpAngleDeg(10, 30, 0.0f), 0.01f);assertEquals(20, MathUtils.lerpAngleDeg(10, 30, 0.5f), 0.01f);assertEquals(30, MathUtils.lerpAngleDeg(10, 30, 1.0f), 0.01f);}
","public void [MASK]() {if (isLooping)play();else if (onCompletionListener != null)onCompletionListener.onCompletion(this);}public void lerpAngleDeg() {assertEquals(10, MathUtils.lerpAngleDeg(10, 30, 0.0f), 0.01f);assertEquals(20, MathUtils.lerpAngleDeg(10, 30, 0.5f), 0.01f);assertEquals(30, MathUtils.lerpAngleDeg(10, 30, 1.0f), 0.01f);}
",onfinish,"[{'value': ['run'], 'probability': 0.39008063077926636}, {'value': ['close'], 'probability': 0.08545096963644028}, {'value': ['clear'], 'probability': 0.04705577716231346}, {'value': ['flush'], 'probability': 0.03629252687096596}, {'value': ['start'], 'probability': 0.03595694154500961}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['on', 'completion'], 'probability': 0.9889344573020935}, {'value': ['play'], 'probability': 0.006229029037058353}, {'value': ['mute'], 'probability': 0.0013432963751256466}, {'value': ['warn'], 'probability': 0.0012057203566655517}, {'value': ['set', 'on', 'completion', 'listener'], 'probability': 0.00044865303789265454}, {'value': ['await', 'uninterruptibly'], 'probability': 0.0004207259917166084}, {'value': ['timeout'], 'probability': 0.000416994298575446}, {'value': ['sleep'], 'probability': 0.00038497138302773237}, {'value': ['hit'], 'probability': 0.0003400598361622542}, {'value': ['on', 'stop'], 'probability': 0.00027601461624726653}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
411,411,"public void lerpAngleDegCrossingZero() {assertEquals(350, MathUtils.lerpAngleDeg(350, 10, 0.0f), 0.01f);assertEquals(0, MathUtils.lerpAngleDeg(350, 10, 0.5f), 0.01f);assertEquals(10, MathUtils.lerpAngleDeg(350, 10, 1.0f), 0.01f);}
","public void [MASK]() {assertEquals(350, MathUtils.lerpAngleDeg(350, 10, 0.0f), 0.01f);assertEquals(0, MathUtils.lerpAngleDeg(350, 10, 0.5f), 0.01f);assertEquals(10, MathUtils.lerpAngleDeg(350, 10, 1.0f), 0.01f);}
",lerpAngleDegCrossingZero,"[{'value': ['run'], 'probability': 0.6165364384651184}, {'value': ['test'], 'probability': 0.18098758161067963}, {'value': ['start'], 'probability': 0.031491804867982864}, {'value': ['flush'], 'probability': 0.025788627564907074}, {'value': ['evaluate'], 'probability': 0.013906164094805717}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['test', 'max'], 'probability': 0.34989628195762634}, {'value': ['test', 'file'], 'probability': 0.17985661327838898}, {'value': ['test', 'get', 'value'], 'probability': 0.11611562967300415}, {'value': ['test', 'stmt'], 'probability': 0.0959770530462265}, {'value': ['test'], 'probability': 0.07830215245485306}, {'value': ['check'], 'probability': 0.07441790401935577}, {'value': ['test', 'format'], 'probability': 0.03668614476919174}, {'value': ['test', 'progress'], 'probability': 0.02506747655570507}, {'value': ['test', 'sum'], 'probability': 0.023892857134342194}, {'value': ['test', 'primitive', 'types'], 'probability': 0.01978784240782261}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
412,412,"public void lerpAngleDegCrossingZeroBackwards() {assertEquals(10, MathUtils.lerpAngleDeg(10, 350, 0.0f), 0.01f);assertEquals(0, MathUtils.lerpAngleDeg(10, 350, 0.5f), 0.01f);assertEquals(350, MathUtils.lerpAngleDeg(10, 350, 1.0f), 0.01f);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK]() {assertEquals(10, MathUtils.lerpAngleDeg(10, 350, 0.0f), 0.01f);assertEquals(0, MathUtils.lerpAngleDeg(10, 350, 0.5f), 0.01f);assertEquals(350, MathUtils.lerpAngleDeg(10, 350, 1.0f), 0.01f);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",lerpAngleDegCrossingZeroBackwards,"[{'value': ['destroy'], 'probability': 0.945000410079956}, {'value': ['rebuild'], 'probability': 0.008860278874635696}, {'value': ['destroyed'], 'probability': 0.00838153064250946}, {'value': ['run'], 'probability': 0.007654466666281223}, {'value': ['build'], 'probability': 0.0023217250127345324}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['test', 'max'], 'probability': 0.5175512433052063}, {'value': ['test', 'get', 'value'], 'probability': 0.19420263171195984}, {'value': ['test', 'progress'], 'probability': 0.07273685932159424}, {'value': ['test', 'stmt'], 'probability': 0.07123992592096329}, {'value': ['test', 'file'], 'probability': 0.042950987815856934}, {'value': ['test', 'format'], 'probability': 0.021995285525918007}, {'value': ['test', 'status'], 'probability': 0.020804550498723984}, {'value': ['test', 'sum'], 'probability': 0.02054186537861824}, {'value': ['handle', 'click'], 'probability': 0.01898837462067604}, {'value': ['get', 'default', 'width'], 'probability': 0.018988285213708878}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
413,413,"public static long getCPtr(RayResultCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](RayResultCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['evaluate'], 'probability': 0.1511453241109848}, {'value': ['get'], 'probability': 0.042391590774059296}, {'value': ['update'], 'probability': 0.03421304374933243}, {'value': ['execute'], 'probability': 0.029725119471549988}, {'value': ['accept'], 'probability': 0.028578463941812515}]","[0.40115592, 1.0, 0.36048478, 0.37713256, 0.6248777]",0.1444260687692442,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
414,414,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
415,415,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_RayResultCallback(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_RayResultCallback(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8057208061218262}, {'value': ['test'], 'probability': 0.016344619914889336}, {'value': ['clear'], 'probability': 0.01289365254342556}, {'value': ['start'], 'probability': 0.011760803870856762}, {'value': ['execute'], 'probability': 0.00811790768057108}]","[0.13931048, 0.14537679, 0.18840031, 0.15163165, 0.33713183]",0.1215707632644454,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
416,416,"protected void swigDirectorDisconnect() {swigCMemOwn = false;delete();}
","protected void [MASK]() {swigCMemOwn = false;delete();}
",swigDirectorDisconnect,"[{'value': ['run'], 'probability': 0.2597951889038086}, {'value': ['destroy'], 'probability': 0.042744945734739304}, {'value': ['clear'], 'probability': 0.0412781797349453}, {'value': ['remove'], 'probability': 0.0399308055639267}, {'value': ['hide'], 'probability': 0.03766871616244316}]","[-0.087563194, -0.15696473, -0.13124146, -0.053591672, -0.11020877]",-0.0411667356580585,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 1.374898084272047e-09}, {'value': ['delete', 'file'], 'probability': 7.658385037245807e-11}, {'value': ['delete', 'user'], 'probability': 7.463477058600176e-11}, {'value': ['abort'], 'probability': 4.3323098580794195e-11}, {'value': ['add', 'delete'], 'probability': 4.195608097057324e-11}, {'value': ['test', 'delete'], 'probability': 3.981910634553998e-11}, {'value': ['remove'], 'probability': 3.698968908949496e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.1723352283675723e-11}, {'value': ['delete', 'group'], 'probability': 1.1743549709064549e-11}]","[-0.05036918, -0.07227076, -0.12502779, -0.030638134, 0.05407105, -0.042249326, -0.13754319, -0.053591672, -0.22770803, -0.192311]",-0.05036918012532099
417,417,"public void swigReleaseOwnership() {swigCMemOwn = false;CollisionJNI.RayResultCallback_change_ownership(this, swigCPtr, false);}
","public void [MASK]() {swigCMemOwn = false;CollisionJNI.RayResultCallback_change_ownership(this, swigCPtr, false);}
",swigReleaseOwnership,"[{'value': ['run'], 'probability': 0.6688110828399658}, {'value': ['test'], 'probability': 0.046935029327869415}, {'value': ['clear'], 'probability': 0.031112555414438248}, {'value': ['setup'], 'probability': 0.01274739671498537}, {'value': ['execute'], 'probability': 0.012307149358093739}]","[-0.087563194, -0.15072986, -0.13124146, -0.05206945, 0.036525037]",-0.0699352333784264,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['destroy'], 'probability': 1.9466124545619579e-10}, {'value': ['update'], 'probability': 1.1577001857165925e-10}, {'value': ['move'], 'probability': 1.0214466078517503e-10}, {'value': ['abort'], 'probability': 5.741962114114152e-11}, {'value': ['do', 'delete'], 'probability': 5.2279860995874117e-11}, {'value': ['remove'], 'probability': 2.945415439326027e-11}, {'value': ['delete', 'file'], 'probability': 2.5761028726867252e-11}, {'value': ['finish'], 'probability': 1.7399859331135303e-11}, {'value': ['save'], 'probability': 1.5620383458925247e-11}]","[-0.05036918, -0.15696473, -0.20058964, -0.16200402, 0.05407105, -0.07227076, -0.053591672, -0.12502779, -0.015956704, -0.017662918]",-0.050369180076351515
418,418,"public void swigTakeOwnership() {swigCMemOwn = true;CollisionJNI.RayResultCallback_change_ownership(this, swigCPtr, true);}
","public void [MASK]() {swigCMemOwn = true;CollisionJNI.RayResultCallback_change_ownership(this, swigCPtr, true);}
",swigTakeOwnership,"[{'value': ['run'], 'probability': 0.6620219945907593}, {'value': ['test'], 'probability': 0.04162583872675896}, {'value': ['clear'], 'probability': 0.028578341007232666}, {'value': ['close'], 'probability': 0.014555269852280617}, {'value': ['setup'], 'probability': 0.013486983254551888}]","[-0.087563194, -0.15072986, -0.13124146, -0.20058393, -0.05206945]",-0.0716154938069927,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['update'], 'probability': 1.6694683135920485e-10}, {'value': ['destroy'], 'probability': 1.6196419205805057e-10}, {'value': ['move'], 'probability': 1.5943645015337182e-10}, {'value': ['abort'], 'probability': 6.830021270776143e-11}, {'value': ['do', 'delete'], 'probability': 5.4813178301804655e-11}, {'value': ['upload'], 'probability': 2.8569027352154386e-11}, {'value': ['finish'], 'probability': 2.5143404719374374e-11}, {'value': ['remove'], 'probability': 1.9486174826499614e-11}, {'value': ['save'], 'probability': 1.689471999799519e-11}]","[-0.05036918, -0.20058964, -0.15696473, -0.16200402, 0.05407105, -0.07227076, 0.043096792, -0.015956704, -0.053591672, -0.017662918]",-0.05036918008552081
419,419,"public void setClosestHitFraction(float value) {CollisionJNI.RayResultCallback_closestHitFraction_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.RayResultCallback_closestHitFraction_set(swigCPtr, this, value);}
",setClosestHitFraction,"[{'value': ['set'], 'probability': 0.5791788697242737}, {'value': ['put'], 'probability': 0.1282898187637329}, {'value': ['get'], 'probability': 0.011953496374189854}, {'value': ['update'], 'probability': 0.0116057638078928}, {'value': ['add'], 'probability': 0.011108282953500748}]","[1.0, 0.7944568, 0.65028083, 0.41854778, 0.5084879]",0.6993787095440893,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
420,420,"public float getClosestHitFraction() {return CollisionJNI.RayResultCallback_closestHitFraction_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.RayResultCallback_closestHitFraction_get(swigCPtr, this);}
",getClosestHitFraction,"[{'value': ['build'], 'probability': 0.07548568397760391}, {'value': ['get'], 'probability': 0.06037760525941849}, {'value': ['float'], 'probability': 0.03867451101541519}, {'value': ['run'], 'probability': 0.03404911980032921}, {'value': ['next'], 'probability': 0.03181087598204613}]","[0.5626448, 1.0, 0.2808844, 0.65114945, 0.6966621]",0.1580447957803663,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
421,421,"public void setCollisionObject(btCollisionObject value) {CollisionJNI.RayResultCallback_collisionObject_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);}
","public void [MASK](btCollisionObject value) {CollisionJNI.RayResultCallback_collisionObject_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);}
",setCollisionObject,"[{'value': ['set'], 'probability': 0.5746508836746216}, {'value': ['put'], 'probability': 0.05153660103678703}, {'value': ['execute'], 'probability': 0.024283507838845253}, {'value': ['save'], 'probability': 0.015110491774976254}, {'value': ['add'], 'probability': 0.015078878961503506}]","[1.0, 0.7944568, 0.35167885, 0.5413879, 0.5084879]",0.6399825466981592,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
422,422,"public btCollisionObject getCollisionObject() {return btCollisionObject.getInstance(CollisionJNI.RayResultCallback_collisionObject_get(swigCPtr, this), false);}
","public btCollisionObject [MASK]() {return btCollisionObject.getInstance(CollisionJNI.RayResultCallback_collisionObject_get(swigCPtr, this), false);}
",getCollisionObject,"[{'value': ['create'], 'probability': 0.2425844520330429}, {'value': ['build'], 'probability': 0.1695902794599533}, {'value': ['resolve'], 'probability': 0.10963991284370422}, {'value': ['upgrade'], 'probability': 0.050290390849113464}, {'value': ['update'], 'probability': 0.036649443209171295}]","[0.62328804, 0.5626448, 0.427468, 0.4226108, 0.36048478]",0.3279514546272324,"[{'value': ['instance'], 'probability': 0.24291475117206573}, {'value': ['get', 'flags'], 'probability': 0.15380139648914337}, {'value': ['stop', 'capture'], 'probability': 0.11797503381967545}, {'value': ['what'], 'probability': 0.09154746681451797}, {'value': ['get', 'options'], 'probability': 0.08183800429105759}, {'value': ['get', 'instance'], 'probability': 0.07271350175142288}, {'value': ['get', 'publisher'], 'probability': 0.06692762672901154}, {'value': ['get', 'c', 'ptr'], 'probability': 0.059888411313295364}, {'value': ['get', 'top'], 'probability': 0.056414585560560226}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05597924441099167}]","[0.56794554, 0.75727946, 0.64470273, 0.76382285, 0.88330656, 0.9335536, 0.7924022, 0.67619735, 0.8810721, 0.7738402]",0.7271421495210391
423,423,"public void setCollisionFilterGroup(short value) {CollisionJNI.RayResultCallback_collisionFilterGroup_set(swigCPtr, this, value);}
","public void [MASK](short value) {CollisionJNI.RayResultCallback_collisionFilterGroup_set(swigCPtr, this, value);}
",setCollisionFilterGroup,"[{'value': ['set'], 'probability': 0.7069989442825317}, {'value': ['put'], 'probability': 0.04884139075875282}, {'value': ['add'], 'probability': 0.01394248753786087}, {'value': ['save'], 'probability': 0.011235845275223255}, {'value': ['execute'], 'probability': 0.009371950291097164}]","[1.0, 0.7944568, 0.5084879, 0.5413879, 0.35167885]",0.7622697717846713,"[{'value': ['set'], 'probability': 0.22896961867809296}, {'value': ['set', 'top'], 'probability': 0.1505623161792755}, {'value': ['set', 'value'], 'probability': 0.10272873193025589}, {'value': ['set', 'reg'], 'probability': 0.10072064399719238}, {'value': ['set', 'indent'], 'probability': 0.08866950869560242}, {'value': ['set', 'graph', 'view'], 'probability': 0.0853496789932251}, {'value': ['set', 'flags'], 'probability': 0.07405400276184082}, {'value': ['set', 'id'], 'probability': 0.05670309439301491}, {'value': ['extend'], 'probability': 0.05667455121874809}, {'value': ['set', 'unused'], 'probability': 0.055567871779203415}]","[1.0, 0.8966336, 0.8399167, 0.7747321, 0.8148728, 0.75325966, 0.7786614, 0.7939222, 0.5463553, 0.8126343]",0.8436304237512692
424,424,"public short getCollisionFilterGroup() {return CollisionJNI.RayResultCallback_collisionFilterGroup_get(swigCPtr, this);}
","public short [MASK]() {return CollisionJNI.RayResultCallback_collisionFilterGroup_get(swigCPtr, this);}
",getCollisionFilterGroup,"[{'value': ['run'], 'probability': 0.7666292190551758}, {'value': ['##cut'], 'probability': 0.023095816373825073}, {'value': ['build'], 'probability': 0.020731961354613304}, {'value': ['get'], 'probability': 0.013721166178584099}, {'value': ['bar'], 'probability': 0.012536540627479553}]","[0.65114945, 0.0, 0.5626448, 1.0, 0.45318797]",0.5302575011040401,"[{'value': ['get', 'id'], 'probability': 0.283008337020874}, {'value': ['get', 'flag'], 'probability': 0.1749676913022995}, {'value': ['get', 'type'], 'probability': 0.13071909546852112}, {'value': ['get', 'flags'], 'probability': 0.08521464467048645}, {'value': ['get', 'graph', 'view'], 'probability': 0.08145115524530411}, {'value': ['get', 'len'], 'probability': 0.07598666846752167}, {'value': ['get', 'length'], 'probability': 0.06521369516849518}, {'value': ['get', 'x'], 'probability': 0.03748345002532005}, {'value': ['get', 'index'], 'probability': 0.03633987158536911}, {'value': ['size'], 'probability': 0.029615307226777077}]","[0.82231325, 0.7926441, 0.8542828, 0.75727946, 0.70718145, 0.7771981, 0.8075286, 0.7925645, 0.7092336, 0.43109724]",0.7851789399565088
425,425,"public void setCollisionFilterMask(short value) {CollisionJNI.RayResultCallback_collisionFilterMask_set(swigCPtr, this, value);}
","public void [MASK](short value) {CollisionJNI.RayResultCallback_collisionFilterMask_set(swigCPtr, this, value);}
",setCollisionFilterMask,"[{'value': ['set'], 'probability': 0.6708900332450867}, {'value': ['put'], 'probability': 0.05251550301909447}, {'value': ['save'], 'probability': 0.013394895009696484}, {'value': ['execute'], 'probability': 0.012175447307527065}, {'value': ['add'], 'probability': 0.01065887976437807}]","[1.0, 0.7944568, 0.5413879, 0.35167885, 0.5084879]",0.7295649234238366,"[{'value': ['set'], 'probability': 0.22896961867809296}, {'value': ['set', 'top'], 'probability': 0.1505623161792755}, {'value': ['set', 'value'], 'probability': 0.10272873193025589}, {'value': ['set', 'reg'], 'probability': 0.10072064399719238}, {'value': ['set', 'indent'], 'probability': 0.08866950869560242}, {'value': ['set', 'graph', 'view'], 'probability': 0.0853496789932251}, {'value': ['set', 'flags'], 'probability': 0.07405400276184082}, {'value': ['set', 'id'], 'probability': 0.05670309439301491}, {'value': ['extend'], 'probability': 0.05667455121874809}, {'value': ['set', 'unused'], 'probability': 0.055567871779203415}]","[1.0, 0.8966336, 0.8399167, 0.7747321, 0.8148728, 0.75325966, 0.7786614, 0.7939222, 0.5463553, 0.8126343]",0.8436304237512692
426,426,"public short getCollisionFilterMask() {return CollisionJNI.RayResultCallback_collisionFilterMask_get(swigCPtr, this);}
","public short [MASK]() {return CollisionJNI.RayResultCallback_collisionFilterMask_get(swigCPtr, this);}
",getCollisionFilterMask,"[{'value': ['run'], 'probability': 0.7648152112960815}, {'value': ['##cut'], 'probability': 0.02291468344628811}, {'value': ['bar'], 'probability': 0.01814710535109043}, {'value': ['build'], 'probability': 0.017088841646909714}, {'value': ['get'], 'probability': 0.01091507077217102}]","[0.65114945, 0.0, 0.45318797, 0.5626448, 1.0]",0.526763073705149,"[{'value': ['get', 'id'], 'probability': 0.283008337020874}, {'value': ['get', 'flag'], 'probability': 0.1749676913022995}, {'value': ['get', 'type'], 'probability': 0.13071909546852112}, {'value': ['get', 'flags'], 'probability': 0.08521464467048645}, {'value': ['get', 'graph', 'view'], 'probability': 0.08145115524530411}, {'value': ['get', 'len'], 'probability': 0.07598666846752167}, {'value': ['get', 'length'], 'probability': 0.06521369516849518}, {'value': ['get', 'x'], 'probability': 0.03748345002532005}, {'value': ['get', 'index'], 'probability': 0.03633987158536911}, {'value': ['size'], 'probability': 0.029615307226777077}]","[0.82231325, 0.7926441, 0.8542828, 0.75727946, 0.70718145, 0.7771981, 0.8075286, 0.7925645, 0.7092336, 0.43109724]",0.7851789399565088
427,427,"public void setFlags(long value) {CollisionJNI.RayResultCallback_flags_set(swigCPtr, this, value);}
","public void [MASK](long value) {CollisionJNI.RayResultCallback_flags_set(swigCPtr, this, value);}
",setFlags,"[{'value': ['set'], 'probability': 0.5093586444854736}, {'value': ['put'], 'probability': 0.11836094409227371}, {'value': ['execute'], 'probability': 0.03963642567396164}, {'value': ['read'], 'probability': 0.015278739854693413}, {'value': ['run'], 'probability': 0.013478054665029049}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.67632943]",0.6338111160226785,"[{'value': ['set', 'id'], 'probability': 0.26016372442245483}, {'value': ['set', 'ea'], 'probability': 0.2198936492204666}, {'value': ['set', 'flags'], 'probability': 0.1422407180070877}, {'value': ['set'], 'probability': 0.09099960327148438}, {'value': ['set', 'code'], 'probability': 0.05966061353683472}, {'value': ['set', 'value'], 'probability': 0.059029798954725266}, {'value': ['set', 'dirty'], 'probability': 0.05053127929568291}, {'value': ['set', 'size'], 'probability': 0.04212723299860954}, {'value': ['set', 'to'], 'probability': 0.03775933012366295}, {'value': ['extend'], 'probability': 0.03759397566318512}]","[0.7939222, 0.73357886, 0.7786614, 1.0, 0.852165, 0.8399167, 0.7950754, 0.8344828, 0.9136955, 0.5463553]",0.8004076758523968
428,428,"public long getFlags() {return CollisionJNI.RayResultCallback_flags_get(swigCPtr, this);}
","public long [MASK]() {return CollisionJNI.RayResultCallback_flags_get(swigCPtr, this);}
",getFlags,"[{'value': ['run'], 'probability': 0.11969548463821411}, {'value': ['flags'], 'probability': 0.07955816388130188}, {'value': ['build'], 'probability': 0.06257211416959763}, {'value': ['get'], 'probability': 0.05814646556973457}, {'value': ['execute'], 'probability': 0.04287786781787872}]","[0.65114945, 0.19713469, 0.5626448, 1.0, 0.37713256]",0.2031463022746682,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
429,429,"public boolean hasHit() {return CollisionJNI.RayResultCallback_hasHit(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.RayResultCallback_[MASK](swigCPtr, this);}
",hasHit,"[{'value': ['run'], 'probability': 0.15629440546035767}, {'value': ['execute'], 'probability': 0.15415138006210327}, {'value': ['supports'], 'probability': 0.03542574867606163}, {'value': ['exists'], 'probability': 0.031029261648654938}, {'value': ['is'], 'probability': 0.030632391571998596}]","[0.5908549, 0.13271262, 0.5250996, 0.48519647, 0.8292126]",0.1718632449145472,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.74008834, 0.75303835, 0.32269707, 0.6453192, 0.72880733, 0.72099584, 0.64538985, 0.68184, 0.6954603, 0.7977533]",0.6618821639305527
430,430,"public boolean needsCollision(btBroadphaseProxy proxy0) {return (getClass() == RayResultCallback.class) ? CollisionJNI.RayResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : CollisionJNI.RayResultCallback_needsCollisionSwigExplicitRayResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);}
","public boolean [MASK](btBroadphaseProxy proxy0) {return (getClass() == RayResultCallback.class) ? CollisionJNI.RayResultCallback_[MASK](swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : CollisionJNI.RayResultCallback_[MASK]SwigExplicitRayResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);}
",needsCollision,"[{'value': ['equals'], 'probability': 0.3666779696941376}, {'value': ['matches'], 'probability': 0.07861542701721191}, {'value': ['accepts'], 'probability': 0.050061918795108795}, {'value': ['supports'], 'probability': 0.037137918174266815}, {'value': ['match'], 'probability': 0.03319944813847542}]","[0.2667383, 0.33612767, 0.4398826, 0.5721297, 0.37727004]",0.1800261083567971,"[{'value': ['set', 'proxy'], 'probability': 0.9570410251617432}, {'value': ['proxy'], 'probability': 0.014090712182223797}, {'value': ['get', 'proxy'], 'probability': 0.00857083685696125}, {'value': ['proxy', 'for'], 'probability': 0.0045921690762043}, {'value': ['register', 'command'], 'probability': 0.0038685323670506477}, {'value': ['add'], 'probability': 0.0037402103189378977}, {'value': ['create', 'proxy'], 'probability': 0.003583797486498952}, {'value': ['and'], 'probability': 0.001651356229558587}, {'value': ['or'], 'probability': 0.001548128086142242}, {'value': ['xor'], 'probability': 0.001313336775638163}]","[0.48886395, 0.15701036, 0.5786064, 0.51615226, 0.47379032, 0.5224544, 0.5186547, 0.6201799, 0.5348215, -0.15701352]",0.4846962576036221
431,431,"public static long getCPtr(btBlock obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btBlock obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.10275416076183319}, {'value': ['execute'], 'probability': 0.054914750158786774}, {'value': ['run'], 'probability': 0.04993497207760811}, {'value': ['read'], 'probability': 0.0452742874622345}, {'value': ['skip'], 'probability': 0.03370009735226631}]","[1.0, 0.37713256, 0.65114945, 0.5726487, 0.49507433]",0.1985897462433172,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
432,432,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
433,433,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.delete_btBlock(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.[MASK]_btBlock(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8337898850440979}, {'value': ['start'], 'probability': 0.01213799323886633}, {'value': ['clear'], 'probability': 0.010552582331001759}, {'value': ['execute'], 'probability': 0.010153024457395077}, {'value': ['close'], 'probability': 0.009178820066154003}]","[0.13931048, 0.15163165, 0.18840031, 0.33713183, 0.10496158]",0.1243706133736613,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
434,434,"public void setPrevious(btBlock value) {LinearMathJNI.btBlock_previous_set(swigCPtr, this, btBlock.getCPtr(value), value);}
","public void [MASK](btBlock value) {LinearMathJNI.btBlock_previous_set(swigCPtr, this, btBlock.getCPtr(value), value);}
",setPrevious,"[{'value': ['set'], 'probability': 0.6965523958206177}, {'value': ['put'], 'probability': 0.05517415702342987}, {'value': ['add'], 'probability': 0.014615388587117195}, {'value': ['execute'], 'probability': 0.012159737758338451}, {'value': ['read'], 'probability': 0.011259956285357475}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.4820371]",0.757521666120329,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
435,435,"public btBlock getPrevious() {long cPtr = LinearMathJNI.btBlock_previous_get(swigCPtr, this);return (cPtr == 0) ? null : new btBlock(cPtr, false);}
","public btBlock [MASK]() {long cPtr = LinearMathJNI.btBlock_previous_get(swigCPtr, this);return (cPtr == 0) ? null : new btBlock(cPtr, false);}
",getPrevious,"[{'value': ['next'], 'probability': 0.10878665745258331}, {'value': ['get'], 'probability': 0.09071660786867142}, {'value': ['build'], 'probability': 0.06380093842744827}, {'value': ['start'], 'probability': 0.040206752717494965}, {'value': ['run'], 'probability': 0.03807174786925316}]","[0.6966621, 1.0, 0.5626448, 0.7199945, 0.65114945]",0.2561404550726689,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
436,436,"public void setAddress(java.nio.ByteBuffer value) {assert value.isDirect() : ""Buffer must be allocated direct."";{LinearMathJNI.btBlock_address_set(swigCPtr, this, value);}}
","public void [MASK](java.nio.ByteBuffer value) {assert value.isDirect() : ""Buffer must be allocated direct."";{LinearMathJNI.btBlock_address_set(swigCPtr, this, value);}}
",setAddress,"[{'value': ['set'], 'probability': 0.3210190534591675}, {'value': ['put'], 'probability': 0.1102038100361824}, {'value': ['apply'], 'probability': 0.06727994233369827}, {'value': ['write'], 'probability': 0.06515152752399445}, {'value': ['execute'], 'probability': 0.0334077849984169}]","[1.0, 0.7944568, 0.5010617, 0.46259418, 0.35167885]",0.4841701472031632,"[{'value': ['get', 'c', 'ptr'], 'probability': 0.36156246066093445}, {'value': ['clone'], 'probability': 0.3346470892429352}, {'value': ['dup'], 'probability': 0.09324507415294647}, {'value': ['set', 'to'], 'probability': 0.057662442326545715}, {'value': ['do', 'new'], 'probability': 0.03322523832321167}, {'value': ['get', 'copy'], 'probability': 0.03158662095665932}, {'value': ['get', 'last'], 'probability': 0.028515538200736046}, {'value': ['top'], 'probability': 0.021690208464860916}, {'value': ['get', 'signers'], 'probability': 0.019148152321577072}, {'value': ['what'], 'probability': 0.01871711201965809}]","[0.5129368, 0.17926283, -0.053811066, 0.9136955, 0.72707975, 0.6320299, 0.76464, 0.6455996, 0.47751373, 0.5966118]",0.3933555265013343
437,437,"public java.nio.ByteBuffer getAddress() {return LinearMathJNI.btBlock_address_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btPairCachingGhostObject_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public java.nio.ByteBuffer [MASK]() {return LinearMathJNI.btBlock_address_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btPairCachingGhostObject_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",getAddress,"[{'value': ['destroy'], 'probability': 0.28852224349975586}, {'value': ['destroyed'], 'probability': 0.13116341829299927}, {'value': ['create'], 'probability': 0.058636922389268875}, {'value': ['build'], 'probability': 0.04154543951153755}, {'value': ['copy'], 'probability': 0.016241740435361862}]","[0.40928823, 0.32746348, 0.62328804, 0.5626448, 0.4466728]",0.2282177472239885,"[{'value': ['get', 'keywords'], 'probability': 0.3902674913406372}, {'value': ['get', 'flags'], 'probability': 0.1653921902179718}, {'value': ['get', 'id'], 'probability': 0.11174400895833969}, {'value': ['get', 'value'], 'probability': 0.06489414721727371}, {'value': ['get', 'ids'], 'probability': 0.05163007602095604}, {'value': ['get', 'properties'], 'probability': 0.05122780054807663}, {'value': ['get', 'attributes'], 'probability': 0.04612896591424942}, {'value': ['get', 'name'], 'probability': 0.044803719967603683}, {'value': ['get', 'to'], 'probability': 0.03892369568347931}, {'value': ['get', 'options'], 'probability': 0.03498787060379982}]","[0.7609473, 0.75727946, 0.82231325, 0.8500731, 0.8027674, 0.80534285, 0.84504366, 0.8655689, 0.92994446, 0.88330656]",0.796840922747889
438,438,"public static long getCPtr(btPairCachingGhostObject obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btPairCachingGhostObject obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07825659215450287}, {'value': ['read'], 'probability': 0.05041636526584625}, {'value': ['process'], 'probability': 0.03647337481379509}, {'value': ['execute'], 'probability': 0.03177601471543312}, {'value': ['update'], 'probability': 0.03155433014035225}]","[1.0, 0.5726487, 0.52250975, 0.37713256, 0.36048478]",0.1495437781293148,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
439,439,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
440,440,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btPairCachingGhostObject(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btPairCachingGhostObject(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8084450960159302}, {'value': ['start'], 'probability': 0.014534562826156616}, {'value': ['clear'], 'probability': 0.013425874523818493}, {'value': ['test'], 'probability': 0.01146350521594286}, {'value': ['execute'], 'probability': 0.008667727001011372}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1219469066617762,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
441,441,"public void addOverlappingObjectInternal(btBroadphaseProxy otherProxy, btBroadphaseProxy thisProxy) {CollisionJNI.btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_0(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy, btBroadphaseProxy.getCPtr(thisProxy), thisProxy);}
","public void [MASK](btBroadphaseProxy otherProxy, btBroadphaseProxy thisProxy) {CollisionJNI.btPairCachingGhostObject_[MASK]__SWIG_0(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy, btBroadphaseProxy.getCPtr(thisProxy), thisProxy);}
",addOverlappingObjectInternal,"[{'value': ['execute'], 'probability': 0.08076495677232742}, {'value': ['run'], 'probability': 0.06764588505029678}, {'value': ['test'], 'probability': 0.06119648739695549}, {'value': ['apply'], 'probability': 0.05570940673351288}, {'value': ['setup'], 'probability': 0.048065196722745895}]","[0.24202506, 0.41304266, 0.30969554, 0.46110356, 0.25112122]",0.1041980563081453,"[{'value': ['equals'], 'probability': 0.9991922974586487}, {'value': ['are', 'equal'], 'probability': 0.00042802057578228414}, {'value': ['add', 'all'], 'probability': 0.0002619517908897251}, {'value': ['combine'], 'probability': 4.969789006281644e-05}, {'value': ['debug'], 'probability': 2.4006971216294914e-05}, {'value': ['copy', 'to'], 'probability': 1.5433748558280058e-05}, {'value': ['state', 'equals'], 'probability': 9.696188499219716e-06}, {'value': ['add', 'operation'], 'probability': 6.9579887167492416e-06}, {'value': ['update'], 'probability': 5.955781034572283e-06}, {'value': ['build'], 'probability': 5.807271918456536e-06}]","[0.20194106, 0.49162215, 0.8761935, 0.74683475, 0.1257411, 0.54338574, 0.34203753, 0.8099016, 0.5117927, 0.45754796]",0.2022810747752213
442,442,"public void addOverlappingObjectInternal(btBroadphaseProxy otherProxy) {CollisionJNI.btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_1(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy);}
","public void [MASK](btBroadphaseProxy otherProxy) {CollisionJNI.btPairCachingGhostObject_[MASK]__SWIG_1(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy);}
",addOverlappingObjectInternal,"[{'value': ['test'], 'probability': 0.07309114933013916}, {'value': ['execute'], 'probability': 0.051297467201948166}, {'value': ['apply'], 'probability': 0.04619258642196655}, {'value': ['setup'], 'probability': 0.04576226696372032}, {'value': ['set'], 'probability': 0.03549349680542946}]","[0.30969554, 0.24202506, 0.46110356, 0.25112122, 0.5084879]",0.0858907311753625,"[{'value': ['equals'], 'probability': 0.9999966621398926}, {'value': ['equal'], 'probability': 7.956935519359831e-07}, {'value': ['equals', 'ignore', 'case'], 'probability': 5.62249738322862e-07}, {'value': ['copy', 'to'], 'probability': 4.406365121667477e-07}, {'value': ['transmit'], 'probability': 4.398815747208573e-07}, {'value': ['add', 'all'], 'probability': 3.2566970276093343e-07}, {'value': ['are', 'equal'], 'probability': 2.6565638222564303e-07}, {'value': ['is', 'equals'], 'probability': 1.771711310993851e-07}, {'value': ['not', 'equals'], 'probability': 1.3134986431850848e-07}, {'value': ['assert', 'equals'], 'probability': 1.1608356231818107e-07}]","[0.20194106, 0.4176526, 0.46876997, 0.54338574, 0.26296836, 0.8761935, 0.49162215, 0.39263463, 0.466639, 0.281983]",0.2019419164911195
443,443,"public void removeOverlappingObjectInternal(btBroadphaseProxy otherProxy, btDispatcher dispatcher, btBroadphaseProxy thisProxy) {CollisionJNI.btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_0(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy, btDispatcher.getCPtr(dispatcher), dispatcher, btBroadphaseProxy.getCPtr(thisProxy), thisProxy);}
","public void [MASK](btBroadphaseProxy otherProxy, btDispatcher dispatcher, btBroadphaseProxy thisProxy) {CollisionJNI.btPairCachingGhostObject_[MASK]__SWIG_0(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy, btDispatcher.getCPtr(dispatcher), dispatcher, btBroadphaseProxy.getCPtr(thisProxy), thisProxy);}
",removeOverlappingObjectInternal,"[{'value': ['dispatch'], 'probability': 0.3411286175251007}, {'value': ['execute'], 'probability': 0.1381441205739975}, {'value': ['handle'], 'probability': 0.04296074062585831}, {'value': ['run'], 'probability': 0.03598488122224808}, {'value': ['send'], 'probability': 0.02478141337633133}]","[0.23980668, 0.31010044, 0.50302887, 0.32723948, 0.48531494]",0.1700564306868357,"[{'value': ['build'], 'probability': 0.5654987096786499}, {'value': ['update'], 'probability': 0.12174933403730392}, {'value': ['equals'], 'probability': 0.09108686447143555}, {'value': ['add', 'transition'], 'probability': 0.05895177647471428}, {'value': ['add', 'operation'], 'probability': 0.04367191717028618}, {'value': ['before'], 'probability': 0.04242486506700516}, {'value': ['setup'], 'probability': 0.02501188963651657}, {'value': ['initialize'], 'probability': 0.01762971095740795}, {'value': ['write'], 'probability': 0.017048543319106102}, {'value': ['attach', 'listeners'], 'probability': 0.016926344484090805}]","[0.42245853, 0.3102556, 0.04568455, 0.63681316, 0.6615053, 0.46176264, 0.16101128, 0.0886197, 0.3362492, 0.414909]",0.3852001059096286
444,444,"public void removeOverlappingObjectInternal(btBroadphaseProxy otherProxy, btDispatcher dispatcher) {CollisionJNI.btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_1(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy, btDispatcher.getCPtr(dispatcher), dispatcher);}
","public void [MASK](btBroadphaseProxy otherProxy, btDispatcher dispatcher) {CollisionJNI.btPairCachingGhostObject_[MASK]__SWIG_1(swigCPtr, this, btBroadphaseProxy.getCPtr(otherProxy), otherProxy, btDispatcher.getCPtr(dispatcher), dispatcher);}
",removeOverlappingObjectInternal,"[{'value': ['dispatch'], 'probability': 0.4050266742706299}, {'value': ['execute'], 'probability': 0.11719963699579239}, {'value': ['handle'], 'probability': 0.04372198507189751}, {'value': ['run'], 'probability': 0.0292208269238472}, {'value': ['send'], 'probability': 0.02117043361067772}]","[0.23980668, 0.31010044, 0.50302887, 0.32723948, 0.48531494]",0.1753017180449262,"[{'value': ['equals'], 'probability': 0.999927282333374}, {'value': ['transmit'], 'probability': 1.5929941582726315e-05}, {'value': ['assert', 'equals'], 'probability': 1.515697113063652e-05}, {'value': ['copy', 'to'], 'probability': 1.0259203008899931e-05}, {'value': ['is', 'equals'], 'probability': 9.33256251300918e-06}, {'value': ['are', 'equal'], 'probability': 7.415086656692438e-06}, {'value': ['equal'], 'probability': 3.9130140976340044e-06}, {'value': ['is', 'identical'], 'probability': 3.632514562923461e-06}, {'value': ['add', 'all'], 'probability': 3.6318806451163255e-06}, {'value': ['equivalent'], 'probability': 3.5094535633106716e-06}]","[0.04568455, 0.2779611, 0.25296208, 0.60963166, 0.27496684, 0.37085184, 0.27444753, 0.3513758, 0.66067475, 0.24008784]",0.045706652711593763
445,445,"public SpawnSide getSide() {return side;}
","public SpawnSide [MASK]() {return side;}
",getSide,"[{'value': ['side'], 'probability': 0.8357848525047302}, {'value': ['version'], 'probability': 0.01023040059953928}, {'value': ['profile'], 'probability': 0.005519902799278498}, {'value': ['face'], 'probability': 0.005506290588527918}, {'value': ['port'], 'probability': 0.003257625037804246}]","[0.53776777, 0.38924655, 0.3996082, 0.6276636, 0.27841628]",0.4600091752186551,"[{'value': ['get', 'side'], 'probability': 0.9926411509513855}, {'value': ['get', 'label', 'provider'], 'probability': 0.0035350159741938114}, {'value': ['get', 'sides'], 'probability': 0.0031685621943324804}, {'value': ['ide'], 'probability': 0.0002840642409864813}, {'value': ['side'], 'probability': 0.00014147184265311807}, {'value': ['get', 'type', 'string'], 'probability': 6.0946462326683104e-05}, {'value': ['get', 'start'], 'probability': 5.432630132418126e-05}, {'value': ['get', 'component'], 'probability': 4.3316751543898135e-05}, {'value': ['get', 'type'], 'probability': 3.6053461371921e-05}, {'value': ['get', 'return', 'value', 'evaluator', 'builder'], 'probability': 3.510139504214749e-05}]","[0.8808294, 0.7430809, 0.8621602, -0.020780388, 0.53776777, 0.77291083, 0.93239695, 0.8372139, 0.8542828, 0.7406743]",0.8799671203048814
446,446,"public void setSide(SpawnSide side) {this.side = side;}
","public void [MASK](SpawnSide side) {this.side = side;}
",setSide,"[{'value': ['paint'], 'probability': 0.06418856978416443}, {'value': ['apply'], 'probability': 0.04107935354113579}, {'value': ['check'], 'probability': 0.04002329334616661}, {'value': ['visit'], 'probability': 0.03897735849022865}, {'value': ['update'], 'probability': 0.03516814112663269}]","[0.3280287, 0.5010617, 0.53695804, 0.46053246, 0.41854778]",0.0957996986049581,"[{'value': ['set', 'side'], 'probability': 0.9999134540557861}, {'value': ['ide'], 'probability': 1.7507494703750126e-05}, {'value': ['enable', 'border', 'side'], 'probability': 1.7427899365429766e-05}, {'value': ['get', 'sides'], 'probability': 1.3860111721442081e-05}, {'value': ['set', 'url'], 'probability': 1.1325311788823456e-05}, {'value': ['get', 'side'], 'probability': 7.001784979365766e-06}, {'value': ['set', 'info'], 'probability': 5.975640306132846e-06}, {'value': ['set', 'begin'], 'probability': 5.31030445927172e-06}, {'value': ['set', 'items'], 'probability': 4.243363946443424e-06}, {'value': ['link', 'edge'], 'probability': 3.9324954741459806e-06}]","[0.88086444, 0.0014162402, 0.649862, 0.71298605, 0.7270879, 0.69886476, 0.8025115, 0.9044586, 0.83168256, 0.605586]",0.8808380742105207
447,447,"public void load(ParticleValue value) {super.load(value);EllipseSpawnShapeValue shape = (EllipseSpawnShapeValue) value;side = shape.side;}
","public void [MASK](ParticleValue value) {super.[MASK](value);EllipseSpawnShapeValue shape = (EllipseSpawnShapeValue) value;side = shape.side;}
",load,"[{'value': ['set'], 'probability': 0.15726888179779053}, {'value': ['evaluate'], 'probability': 0.10312853008508682}, {'value': ['put'], 'probability': 0.0786171555519104}, {'value': ['accept'], 'probability': 0.036359257996082306}, {'value': ['value'], 'probability': 0.03553895279765129}]","[0.3492521, 0.28247768, 0.4163285, 0.20572849, 0.45504722]",0.1404405939982187,"[{'value': ['load'], 'probability': 0.9722713828086853}, {'value': ['properties'], 'probability': 0.013562201522290707}, {'value': ['load', 'state'], 'probability': 0.004229418002068996}, {'value': ['source'], 'probability': 0.003011786611750722}, {'value': ['set', 'input'], 'probability': 0.002964179962873459}, {'value': ['set'], 'probability': 0.0014828740386292338}, {'value': ['set', 'reader'], 'probability': 0.0011290344409644604}, {'value': ['do', 'load'], 'probability': 0.0008116216049529612}, {'value': ['convert', 'to', 'map'], 'probability': 0.0003373586223460734}, {'value': ['cache'], 'probability': 0.00020024622790515423}]","[0.99999994, 0.2430334, 0.7131441, 0.32242712, 0.51097405, 0.3492521, 0.37860212, 0.78114104, 0.40119877, 0.3416841]",0.9828523891043014
448,448,"public SpawnShapeValue copy() {return new EllipseSpawnShapeValue(this);}
","public SpawnShapeValue [MASK]() {return new EllipseSpawnShapeValue(this);}
",copy,"[{'value': ['get'], 'probability': 0.44440728425979614}, {'value': ['create'], 'probability': 0.13629457354545593}, {'value': ['transform'], 'probability': 0.03550468757748604}, {'value': ['build'], 'probability': 0.03206556290388107}, {'value': ['value'], 'probability': 0.01674726791679859}]","[0.4466728, 0.3987844, 0.19225709, 0.28695282, 0.35649675]",0.2748544727401141,"[{'value': ['clone'], 'probability': 0.4972131848335266}, {'value': ['deep', 'copy'], 'probability': 0.4014216661453247}, {'value': ['get', 'targets'], 'probability': 0.06481998413801193}, {'value': ['build'], 'probability': 0.018500208854675293}, {'value': ['copy'], 'probability': 0.00890369527041912}, {'value': ['freeze'], 'probability': 0.002380130346864462}, {'value': ['get', 'receiver'], 'probability': 0.0020957153756171465}, {'value': ['get', 'copy'], 'probability': 0.0018739992519840598}, {'value': ['create', 'clone'], 'probability': 0.001539737917482853}, {'value': ['load'], 'probability': 0.0012515962589532137}]","[0.31505513, 0.7110269, 0.3454534, 0.28695282, 1.0, 0.20449531, 0.42718473, 0.8266022, 0.4436929, 0.3036527]",0.4826700901075551
449,449,"public void write(Json json) {super.write(json);json.writeValue(""side"", side);}
","public void [MASK](Json json) {super.[MASK](json);json.[MASK]Value(""side"", side);}
",write,"[{'value': ['evaluate'], 'probability': 0.15462671220302582}, {'value': ['test'], 'probability': 0.0731758177280426}, {'value': ['execute'], 'probability': 0.05729427933692932}, {'value': ['run'], 'probability': 0.05100706219673157}, {'value': ['do'], 'probability': 0.04113098606467247}]","[0.37596357, 0.26831806, 0.35316944, 0.43416244, 0.6421013]",0.1465586019861291,"[{'value': ['json'], 'probability': 0.8473955392837524}, {'value': ['to', 'json'], 'probability': 0.06339135020971298}, {'value': ['send', 'json'], 'probability': 0.03536175936460495}, {'value': ['as', 'json'], 'probability': 0.01726098731160164}, {'value': ['get', 'json'], 'probability': 0.010690477676689625}, {'value': ['process', 'json'], 'probability': 0.007216809317469597}, {'value': ['read', 'src'], 'probability': 0.007162286434322596}, {'value': ['saved'], 'probability': 0.004818084184080362}, {'value': ['render', 'json'], 'probability': 0.003575357375666499}, {'value': ['set', 'json'], 'probability': 0.003127395873889327}]","[0.041499805, 0.54155207, 0.44607335, 0.3818835, 0.54967725, 0.29897797, 0.50335765, 0.37870547, 0.21135208, 0.39602485]",0.10732008284768439
450,450,"public void read(Json json, JsonValue jsonData) {super.read(json, jsonData);side = json.readValue(""side"", SpawnSide.class, jsonData);}public FileHandle resolve(String fileName) {return Gdx.files.classpath(fileName);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btGImpactShapeInterface_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public void [MASK](Json json, JsonValue jsonData) {super.[MASK](json, jsonData);side = json.[MASK]Value(""side"", SpawnSide.class, jsonData);}public FileHandle resolve(String fileName) {return Gdx.files.classpath(fileName);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btGImpactShapeInterface_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",read,"[{'value': ['destroy'], 'probability': 0.21426457166671753}, {'value': ['execute'], 'probability': 0.05303693190217018}, {'value': ['save'], 'probability': 0.04273199290037155}, {'value': ['run'], 'probability': 0.03793969750404358}, {'value': ['create'], 'probability': 0.03189077228307724}]","[0.29272568, 0.33326143, 0.38445935, 0.4124058, 0.3972595]",0.1251400840204313,"[{'value': ['from', 'json'], 'probability': 0.35594794154167175}, {'value': ['initialize', 'content'], 'probability': 0.2261429727077484}, {'value': ['load'], 'probability': 0.08986779302358627}, {'value': ['open'], 'probability': 0.08897332102060318}, {'value': ['load', 'state'], 'probability': 0.055443454533815384}, {'value': ['parse'], 'probability': 0.051107946783304214}, {'value': ['saved'], 'probability': 0.04519328102469444}, {'value': ['set', 'json'], 'probability': 0.04207827150821686}, {'value': ['deserialize'], 'probability': 0.023360615596175194}, {'value': ['get', 'json'], 'probability': 0.021884450688958168}]","[0.38713735, 0.3412553, 0.32439876, 0.3492585, 0.447529, 0.21184428, 0.35393596, 0.41225854, 0.0, 0.5205484]",0.355574969907528
451,451,"public static long getCPtr(btGImpactShapeInterface obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btGImpactShapeInterface obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.06898373365402222}, {'value': ['read'], 'probability': 0.04591447860002518}, {'value': ['process'], 'probability': 0.04527412727475166}, {'value': ['execute'], 'probability': 0.04042501747608185}, {'value': ['update'], 'probability': 0.033275771886110306}]","[1.0, 0.5726487, 0.52250975, 0.37713256, 0.36048478]",0.1461737732056636,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
452,452,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
453,453,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btGImpactShapeInterface(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btGImpactShapeInterface(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8285195231437683}, {'value': ['test'], 'probability': 0.014738746918737888}, {'value': ['start'], 'probability': 0.01153614092618227}, {'value': ['clear'], 'probability': 0.010512514971196651}, {'value': ['execute'], 'probability': 0.009676845744252205}]","[0.13931048, 0.14537679, 0.15163165, 0.18840031, 0.33713183]",0.1245563013622472,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
454,454,"public void updateBound() {CollisionJNI.btGImpactShapeInterface_updateBound(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",updateBound,"[{'value': ['run'], 'probability': 0.6403318643569946}, {'value': ['test'], 'probability': 0.1266605705022812}, {'value': ['execute'], 'probability': 0.04426104575395584}, {'value': ['setup'], 'probability': 0.023465916514396667}, {'value': ['start'], 'probability': 0.011343373917043209}]","[0.3326079, 0.37940708, 0.2417731, 0.350659, 0.46057966]",0.2851895431928577,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.29131207, 0.31137508, 0.10052309, -0.098711416, 0.3326079, 0.50968987, 0.102491766, 0.30971196, 0.3813853, 0.40955213]",0.24186574464409655
455,455,"public void postUpdate() {CollisionJNI.btGImpactShapeInterface_postUpdate(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",postUpdate,"[{'value': ['run'], 'probability': 0.6403318643569946}, {'value': ['test'], 'probability': 0.1266605705022812}, {'value': ['execute'], 'probability': 0.04426104575395584}, {'value': ['setup'], 'probability': 0.023465916514396667}, {'value': ['start'], 'probability': 0.011343373917043209}]","[0.5558538, 0.40672445, 0.1260291, 0.21285045, 0.5572284]",0.4243406019299249,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.54251957, 0.114816114, 0.164332, -0.15869446, 0.5558538, 0.4321785, -0.06064662, 0.49633685, 0.3961251, 0.4490656]",0.3114653015488169
456,456,"public btAABB getLocalBox() {return new btAABB(CollisionJNI.btGImpactShapeInterface_getLocalBox(swigCPtr, this), false);}
","public btAABB [MASK]() {return new btAABB(CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this), false);}
",getLocalBox,"[{'value': ['clone'], 'probability': 0.19772619009017944}, {'value': ['build'], 'probability': 0.12248387187719345}, {'value': ['create'], 'probability': 0.0881398394703865}, {'value': ['get'], 'probability': 0.03135098144412041}, {'value': ['setup'], 'probability': 0.03133421391248703}]","[0.166604, 0.5626448, 0.62328804, 1.0, 0.37349153]",0.1998474369433895,"[{'value': ['copy'], 'probability': 0.3019181787967682}, {'value': ['edge', 'type'], 'probability': 0.17588894069194794}, {'value': ['parse'], 'probability': 0.08446554839611053}, {'value': ['get', 'statement', 'container'], 'probability': 0.07866345345973969}, {'value': ['get', 'elements'], 'probability': 0.07059407234191895}, {'value': ['float', 'val'], 'probability': 0.0675334632396698}, {'value': ['tags'], 'probability': 0.058855049312114716}, {'value': ['clone'], 'probability': 0.05528922751545906}, {'value': ['get', 'cd'], 'probability': 0.05449811741709709}, {'value': ['build'], 'probability': 0.05229397490620613}]","[0.4466728, 0.5832915, 0.04902999, 0.73810506, 0.82784235, 0.22965817, 0.2646367, 0.166604, 0.80065113, 0.5626448]",0.4714502995320333
457,457,"public int getShapeType() {return CollisionJNI.btGImpactShapeInterface_getShapeType(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",getShapeType,"[{'value': ['run'], 'probability': 0.0862632691860199}, {'value': ['execute'], 'probability': 0.0656946450471878}, {'value': ['get'], 'probability': 0.04565061256289482}, {'value': ['start'], 'probability': 0.04170762747526169}, {'value': ['build'], 'probability': 0.024950047954916954}]","[0.65114945, 0.37713256, 1.0, 0.7199945, 0.5626448]",0.1706637589922505,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
458,458,"public int getGImpactShapeType() {return CollisionJNI.btGImpactShapeInterface_getGImpactShapeType(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",getGImpactShapeType,"[{'value': ['run'], 'probability': 0.0862632691860199}, {'value': ['execute'], 'probability': 0.0656946450471878}, {'value': ['get'], 'probability': 0.04565061256289482}, {'value': ['start'], 'probability': 0.04170762747526169}, {'value': ['build'], 'probability': 0.024950047954916954}]","[0.65114945, 0.37713256, 1.0, 0.7199945, 0.5626448]",0.1706637589922505,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
459,459,"public btGImpactQuantizedBvh getBoxSet() {long cPtr = CollisionJNI.btGImpactShapeInterface_getBoxSet(swigCPtr, this);return (cPtr == 0) ? null : new btGImpactQuantizedBvh(cPtr, false);}
","public btGImpactQuantizedBvh [MASK]() {long cPtr = CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);return (cPtr == 0) ? null : new btGImpactQuantizedBvh(cPtr, false);}
",getBoxSet,"[{'value': ['get'], 'probability': 0.21697761118412018}, {'value': ['create'], 'probability': 0.09366275370121002}, {'value': ['build'], 'probability': 0.053326673805713654}, {'value': ['execute'], 'probability': 0.0397505946457386}, {'value': ['test'], 'probability': 0.036113444715738297}]","[1.0, 0.62328804, 0.5626448, 0.37713256, 0.4599198]",0.3369609919157873,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
460,460,"public boolean hasBoxSet() {return CollisionJNI.btGImpactShapeInterface_hasBoxSet(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",hasBoxSet,"[{'value': ['run'], 'probability': 0.19840066134929657}, {'value': ['execute'], 'probability': 0.1361439824104309}, {'value': ['is'], 'probability': 0.028793975710868835}, {'value': ['exists'], 'probability': 0.027356700971722603}, {'value': ['supports'], 'probability': 0.026797184720635414}]","[0.5908549, 0.13271262, 0.8292126, 0.48519647, 0.5250996]",0.1865149165843885,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.74008834, 0.75303835, 0.32269707, 0.6453192, 0.72880733, 0.72099584, 0.64538985, 0.68184, 0.6954603, 0.7977533]",0.6618821639305527
461,461,"public btPrimitiveManagerBase getPrimitiveManager() {long cPtr = CollisionJNI.btGImpactShapeInterface_getPrimitiveManager(swigCPtr, this);return (cPtr == 0) ? null : new btPrimitiveManagerBase(cPtr, false);}
","public btPrimitiveManagerBase [MASK]() {long cPtr = CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);return (cPtr == 0) ? null : new btPrimitiveManagerBase(cPtr, false);}
",getPrimitiveManager,"[{'value': ['get'], 'probability': 0.13325613737106323}, {'value': ['build'], 'probability': 0.11354680359363556}, {'value': ['clone'], 'probability': 0.09219235926866531}, {'value': ['create'], 'probability': 0.09042929112911224}, {'value': ['run'], 'probability': 0.07773636281490326}]","[1.0, 0.5626448, 0.166604, 0.62328804, 0.65114945]",0.3194837544783185,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
462,462,"public int getNumChildShapes() {return CollisionJNI.btGImpactShapeInterface_getNumChildShapes(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",getNumChildShapes,"[{'value': ['run'], 'probability': 0.0862632691860199}, {'value': ['execute'], 'probability': 0.0656946450471878}, {'value': ['get'], 'probability': 0.04565061256289482}, {'value': ['start'], 'probability': 0.04170762747526169}, {'value': ['build'], 'probability': 0.024950047954916954}]","[0.65114945, 0.37713256, 1.0, 0.7199945, 0.5626448]",0.1706637589922505,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
463,463,"public boolean childrenHasTransform() {return CollisionJNI.btGImpactShapeInterface_childrenHasTransform(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",childrenHasTransform,"[{'value': ['run'], 'probability': 0.19840066134929657}, {'value': ['execute'], 'probability': 0.1361439824104309}, {'value': ['is'], 'probability': 0.028793975710868835}, {'value': ['exists'], 'probability': 0.027356700971722603}, {'value': ['supports'], 'probability': 0.026797184720635414}]","[0.40975925, 0.18200059, 0.47220004, 0.26489532, 0.2720648]",0.1342085415466125,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.48159173, 0.48104328, 0.37601432, 0.4650542, 0.44049713, 0.5178666, 0.43759248, 0.5534833, 0.5064392, 0.46026897]",0.46546464349053696
464,464,"public boolean needsRetrieveTriangles() {return CollisionJNI.btGImpactShapeInterface_needsRetrieveTriangles(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",needsRetrieveTriangles,"[{'value': ['run'], 'probability': 0.19840066134929657}, {'value': ['execute'], 'probability': 0.1361439824104309}, {'value': ['is'], 'probability': 0.028793975710868835}, {'value': ['exists'], 'probability': 0.027356700971722603}, {'value': ['supports'], 'probability': 0.026797184720635414}]","[0.5110951, 0.34279618, 0.65654546, 0.4853253, 0.5721297]",0.1955841630950536,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.60861784, 0.49518168, 0.33668366, 0.636674, 0.636331, 0.6161682, 0.6466653, 0.6943742, 0.50228316, 0.65790296]",0.5584621381711861
465,465,"public boolean needsRetrieveTetrahedrons() {return CollisionJNI.btGImpactShapeInterface_needsRetrieveTetrahedrons(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",needsRetrieveTetrahedrons,"[{'value': ['run'], 'probability': 0.19840066134929657}, {'value': ['execute'], 'probability': 0.1361439824104309}, {'value': ['is'], 'probability': 0.028793975710868835}, {'value': ['exists'], 'probability': 0.027356700971722603}, {'value': ['supports'], 'probability': 0.026797184720635414}]","[0.5110951, 0.34279618, 0.65654546, 0.4853253, 0.5721297]",0.1955841630950536,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.60861784, 0.49518168, 0.33668366, 0.636674, 0.636331, 0.6161682, 0.6466653, 0.6943742, 0.50228316, 0.65790296]",0.5584621381711861
466,466,"public void getBulletTriangle(int prim_index, btTriangleShapeEx triangle) {CollisionJNI.btGImpactShapeInterface_getBulletTriangle(swigCPtr, this, prim_index, btTriangleShapeEx.getCPtr(triangle), triangle);}
","public void [MASK](int prim_index, btTriangleShapeEx triangle) {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this, prim_index, btTriangleShapeEx.getCPtr(triangle), triangle);}
",getBulletTriangle,"[{'value': ['apply'], 'probability': 0.06615035235881805}, {'value': ['add'], 'probability': 0.03438924625515938}, {'value': ['execute'], 'probability': 0.034117430448532104}, {'value': ['set'], 'probability': 0.03328460082411766}, {'value': ['setup'], 'probability': 0.03159911930561066}]","[0.57501197, 0.54842544, 0.37713256, 0.65028083, 0.37349153]",0.1032103169917726,"[{'value': ['add', 'triangle'], 'probability': 0.7734585404396057}, {'value': ['triangle'], 'probability': 0.14273391664028168}, {'value': ['add', 'neighbour'], 'probability': 0.05093491077423096}, {'value': ['move'], 'probability': 0.011071814224123955}, {'value': ['swap'], 'probability': 0.008523165248334408}, {'value': ['init', 'world'], 'probability': 0.003452960168942809}, {'value': ['stretch'], 'probability': 0.0031796484254300594}, {'value': ['get', 'triangle'], 'probability': 0.002693536691367626}, {'value': ['get', 'triangles'], 'probability': 0.00256727053783834}, {'value': ['add', 'edge'], 'probability': 0.0013842083280906081}]","[0.4816349, 0.14277625, 0.5133434, 0.7194599, 0.37135914, 0.3672869, 0.48999715, 0.78884125, 0.73811847, 0.6447028]",0.4379199934308792
467,467,"public void getBulletTetrahedron(int prim_index, btTetrahedronShapeEx tetrahedron) {CollisionJNI.btGImpactShapeInterface_getBulletTetrahedron(swigCPtr, this, prim_index, btTetrahedronShapeEx.getCPtr(tetrahedron), tetrahedron);}
","public void [MASK](int prim_index, btTetrahedronShapeEx tetrahedron) {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this, prim_index, btTetrahedronShapeEx.getCPtr(tetrahedron), tetrahedron);}
",getBulletTetrahedron,"[{'value': ['update'], 'probability': 0.06402289122343063}, {'value': ['test'], 'probability': 0.05447831377387047}, {'value': ['execute'], 'probability': 0.053572412580251694}, {'value': ['apply'], 'probability': 0.05175158008933067}, {'value': ['run'], 'probability': 0.04400908574461937}]","[0.36048478, 0.4599198, 0.37713256, 0.57501197, 0.65114945]",0.1267531048799354,"[{'value': ['flip', 'to'], 'probability': 0.6371227502822876}, {'value': ['get', 'incident'], 'probability': 0.35188615322113037}, {'value': ['visit'], 'probability': 0.005133010912686586}, {'value': ['get', 'adjacent'], 'probability': 0.004035999067127705}, {'value': ['get', 'neighbor'], 'probability': 0.00044609789620153606}, {'value': ['uninstalled'], 'probability': 0.0003853475209325552}, {'value': ['set', 'orientation'], 'probability': 0.0003150968987029046}, {'value': ['set', 'selection', 'to', 'widget'], 'probability': 0.00024149875389412045}, {'value': ['set', 'selection'], 'probability': 0.00022043257195036858}, {'value': ['set', 'plugin'], 'probability': 0.00021354750788304955}]","[0.7485414, 0.8248729, 0.43466046, 0.8203633, 0.8581863, -0.09635754, 0.5710084, 0.69658744, 0.6208937, 0.41286418]",0.7736350927939717
468,468,"public void lockChildShapes() {CollisionJNI.btGImpactShapeInterface_lockChildShapes(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",lockChildShapes,"[{'value': ['run'], 'probability': 0.6403318643569946}, {'value': ['test'], 'probability': 0.1266605705022812}, {'value': ['execute'], 'probability': 0.04426104575395584}, {'value': ['setup'], 'probability': 0.023465916514396667}, {'value': ['start'], 'probability': 0.011343373917043209}]","[0.30222976, 0.37050608, 0.11192921, 0.32040653, 0.31444246]",0.2564954331767137,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.27518564, 0.25685343, 0.124824665, -0.12763381, 0.30222976, 0.1936693, 0.17085196, 0.3818228, 0.38502303, 0.3057038]",0.2103543770903838
469,469,"public void unlockChildShapes() {CollisionJNI.btGImpactShapeInterface_unlockChildShapes(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this);}
",unlockChildShapes,"[{'value': ['run'], 'probability': 0.6403318643569946}, {'value': ['test'], 'probability': 0.1266605705022812}, {'value': ['execute'], 'probability': 0.04426104575395584}, {'value': ['setup'], 'probability': 0.023465916514396667}, {'value': ['start'], 'probability': 0.011343373917043209}]","[0.023686238, 0.15193775, 0.22899428, 0.2539942, 0.14909233]",0.0521985181617007,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.112473495, 0.44186154, 0.2510364, 0.0717912, 0.023686238, 0.17817998, 0.45592463, 0.23471685, 0.3961584, 0.29072896]",0.20245056930380015
470,470,"public void getPrimitiveTriangle(int index, btPrimitiveTriangle triangle) {CollisionJNI.btGImpactShapeInterface_getPrimitiveTriangle(swigCPtr, this, index, btPrimitiveTriangle.getCPtr(triangle), triangle);}
","public void [MASK](int index, btPrimitiveTriangle triangle) {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this, index, btPrimitiveTriangle.getCPtr(triangle), triangle);}
",getPrimitiveTriangle,"[{'value': ['paint'], 'probability': 0.06235111132264137}, {'value': ['set'], 'probability': 0.046698421239852905}, {'value': ['apply'], 'probability': 0.04168320074677467}, {'value': ['draw'], 'probability': 0.04148586839437485}, {'value': ['setup'], 'probability': 0.02617201954126358}]","[0.41529104, 0.65028083, 0.57501197, 0.558067, 0.37349153]",0.1131562081421918,"[{'value': ['add', 'triangle'], 'probability': 0.5654765963554382}, {'value': ['triangle'], 'probability': 0.3568613827228546}, {'value': ['swap'], 'probability': 0.022144369781017303}, {'value': ['move'], 'probability': 0.011762244626879692}, {'value': ['add', 'neighbour'], 'probability': 0.011621109209954739}, {'value': ['create', 'triangle'], 'probability': 0.010437918826937675}, {'value': ['get', 'triangles'], 'probability': 0.007298003416508436}, {'value': ['set'], 'probability': 0.005649741739034653}, {'value': ['get', 'triangle'], 'probability': 0.005155370570719242}, {'value': ['set', 'accessible'], 'probability': 0.003593208733946085}]","[0.4816349, 0.14277625, 0.37135914, 0.7194599, 0.5133434, 0.48141858, 0.73811847, 0.65028083, 0.78884125, 0.6202331]",0.36633730498757083
471,471,"public void getChildAabb(int child_index, Matrix4 t, Vector3 aabbMin, Vector3 aabbMax) {CollisionJNI.btGImpactShapeInterface_getChildAabb(swigCPtr, this, child_index, t, aabbMin, aabbMax);}
","public void [MASK](int child_index, Matrix4 t, Vector3 aabbMin, Vector3 aabbMax) {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this, child_index, t, aabbMin, aabbMax);}
",getChildAabb,"[{'value': ['run'], 'probability': 0.11090514808893204}, {'value': ['execute'], 'probability': 0.10571587830781937}, {'value': ['test'], 'probability': 0.09567736089229584}, {'value': ['apply'], 'probability': 0.04415808245539665}, {'value': ['navigate'], 'probability': 0.032939694821834564}]","[0.65114945, 0.37713256, 0.4599198, 0.57501197, 0.36563805]",0.1935240719893962,"[{'value': ['get', 'aabb'], 'probability': 0.9999289512634277}, {'value': ['get', 'bounding', 'sphere'], 'probability': 5.8813962823478505e-05}, {'value': ['process', 'all', 'triangles'], 'probability': 6.010081506246934e-06}, {'value': ['assert', 'values'], 'probability': 4.989065473637311e-06}, {'value': ['extend'], 'probability': 4.685307146701234e-07}, {'value': ['get', 'renderer', 'component'], 'probability': 2.2831270030110318e-07}, {'value': ['draw', 'events'], 'probability': 1.966865141866947e-07}, {'value': ['map', 'object'], 'probability': 1.4401480541437195e-07}, {'value': ['range', 'query'], 'probability': 1.2877997335181135e-07}, {'value': ['adjustment', 'value', 'changed'], 'probability': 1.0992279442234576e-07}]","[0.84482867, 0.66568637, 0.6084425, 0.40375122, 0.5252367, 0.67456216, 0.56652915, 0.40793642, 0.34413034, 0.5486963]",0.8448141436835713
472,472,"public btCollisionShape getChildShape(int index) {long cPtr = CollisionJNI.btGImpactShapeInterface_getChildShape__SWIG_0(swigCPtr, this, index);return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);}
","public btCollisionShape [MASK](int index) {long cPtr = CollisionJNI.btGImpactShapeInterface_[MASK]__SWIG_0(swigCPtr, this, index);return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);}
",getChildShape,"[{'value': ['create'], 'probability': 0.11529568582773209}, {'value': ['update'], 'probability': 0.07021812349557877}, {'value': ['get'], 'probability': 0.05702000856399536}, {'value': ['generate'], 'probability': 0.05160021781921387}, {'value': ['search'], 'probability': 0.026675444096326828}]","[0.62328804, 0.36048478, 1.0, 0.47366065, 0.53234327]",0.1928364804931197,"[{'value': ['check', 'index'], 'probability': 0.4331568479537964}, {'value': ['get', 'index'], 'probability': 0.11288488656282425}, {'value': ['at'], 'probability': 0.10007224231958389}, {'value': ['get', 'child'], 'probability': 0.09761865437030792}, {'value': ['get', 'position'], 'probability': 0.05283809080719948}, {'value': ['get', 'vertex'], 'probability': 0.04734574258327484}, {'value': ['get', 'column'], 'probability': 0.04459379240870476}, {'value': ['get', 'operand'], 'probability': 0.044001560658216476}, {'value': ['get', 'next'], 'probability': 0.0376058891415596}, {'value': ['aref'], 'probability': 0.029882265254855156}]","[0.49942204, 0.7092336, 0.5592328, 0.88529336, 0.88500535, 0.6914651, 0.8115386, 0.70533913, 0.926832, -0.1920684]",0.614615088548836
473,473,"public Matrix4 getChildTransform(int index) {return CollisionJNI.btGImpactShapeInterface_getChildTransform(swigCPtr, this, index);}
","public Matrix4 [MASK](int index) {return CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this, index);}
",getChildTransform,"[{'value': ['##3'], 'probability': 0.15807223320007324}, {'value': ['##4'], 'probability': 0.12458013743162155}, {'value': ['##x'], 'probability': 0.03065653145313263}, {'value': ['##2'], 'probability': 0.02695717290043831}, {'value': ['##9'], 'probability': 0.02690988779067993}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get'], 'probability': 0.39813748002052307}, {'value': ['get', 'index'], 'probability': 0.2604677677154541}, {'value': ['index'], 'probability': 0.14966222643852234}, {'value': ['y'], 'probability': 0.04360884800553322}, {'value': ['at'], 'probability': 0.03638919070363045}, {'value': ['get', 'x'], 'probability': 0.030363883823156357}, {'value': ['set', 'index'], 'probability': 0.024737674742937088}, {'value': ['get', 'value'], 'probability': 0.023842545226216316}, {'value': ['aref'], 'probability': 0.016569456085562706}, {'value': ['set'], 'probability': 0.016220886260271072}]","[1.0, 0.7092336, 0.24769717, 0.101747304, 0.5592328, 0.7925645, 0.49425027, 0.8500731, -0.1920684, 0.65028083]",0.7086535018830806
474,474,"public void setChildTransform(int index, Matrix4 transform) {CollisionJNI.btGImpactShapeInterface_setChildTransform(swigCPtr, this, index, transform);}
","public void [MASK](int index, Matrix4 transform) {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this, index, transform);}
",setChildTransform,"[{'value': ['transform'], 'probability': 0.3157690763473511}, {'value': ['run'], 'probability': 0.044658906757831573}, {'value': ['update'], 'probability': 0.04378773644566536}, {'value': ['execute'], 'probability': 0.0335647352039814}, {'value': ['read'], 'probability': 0.033132657408714294}]","[0.40315592, 0.67632943, 0.41854778, 0.35167885, 0.4820371]",0.2036107437918711,"[{'value': ['set', 'transform'], 'probability': 0.9333527684211731}, {'value': ['get', 'transform'], 'probability': 0.017857462167739868}, {'value': ['get', 'matrix'], 'probability': 0.011953096836805344}, {'value': ['add', 'transform'], 'probability': 0.01053956151008606}, {'value': ['set'], 'probability': 0.00662351306527853}, {'value': ['apply', 'matrix'], 'probability': 0.005552809219807386}, {'value': ['set', 'matrix'], 'probability': 0.00552912475541234}, {'value': ['move'], 'probability': 0.004147818777710199}, {'value': ['transform'], 'probability': 0.00266086682677269}, {'value': ['set', 'dirty'], 'probability': 0.0017829103162512183}]","[0.85847646, 0.659434, 0.5850217, 0.56202745, 1.0, 0.47890177, 0.751863, 0.69789916, 0.40315592, 0.7950754]",0.8447785013261879
475,475,"public void rayTest(Vector3 rayFrom, Vector3 rayTo, RayResultCallback resultCallback) {CollisionJNI.btGImpactShapeInterface_rayTest(swigCPtr, this, rayFrom, rayTo, RayResultCallback.getCPtr(resultCallback), resultCallback);}
","public void [MASK](Vector3 rayFrom, Vector3 rayTo, RayResultCallback resultCallback) {CollisionJNI.btGImpactShapeInterface_[MASK](swigCPtr, this, rayFrom, rayTo, RayResultCallback.getCPtr(resultCallback), resultCallback);}
",rayTest,"[{'value': ['run'], 'probability': 0.07836983352899551}, {'value': ['apply'], 'probability': 0.06635651737451553}, {'value': ['test'], 'probability': 0.06057967618107796}, {'value': ['execute'], 'probability': 0.060233909636735916}, {'value': ['process'], 'probability': 0.05983787775039673}]","[0.2900184, 0.10904424, 0.30581892, -0.0018691211, 0.20856087]",0.0608581565870288,"[{'value': ['copy', 'to'], 'probability': 0.24994422495365143}, {'value': ['generate', 'index'], 'probability': 0.17358098924160004}, {'value': ['get', 'bytes'], 'probability': 0.1037866473197937}, {'value': ['get', 'path'], 'probability': 0.09696978330612183}, {'value': ['delete', 'data'], 'probability': 0.08212892711162567}, {'value': ['execute'], 'probability': 0.07534877955913544}, {'value': ['get', 'min', 'max'], 'probability': 0.06845128536224365}, {'value': ['arraycopy'], 'probability': 0.054937250912189484}, {'value': ['send', 'email'], 'probability': 0.04851747676730156}, {'value': ['log', 'query'], 'probability': 0.046334657818078995}]","[0.3525906, 0.18489467, 0.2880272, 0.2834083, 0.2131968, -0.0018691211, 0.48288646, 0.0, 0.21606836, 0.0774422]",0.2420919396291566
476,476,"public void run() {new LwjglCanvasTest();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btScaledBvhTriangleMeshShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public void [MASK]() {new LwjglCanvasTest();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btScaledBvhTriangleMeshShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",run,"[{'value': ['destroy'], 'probability': 0.42369544506073}, {'value': ['run'], 'probability': 0.35589832067489624}, {'value': ['test'], 'probability': 0.024451542645692825}, {'value': ['start'], 'probability': 0.018076490610837936}, {'value': ['execute'], 'probability': 0.014551070518791676}]","[0.3379867, 1.0, 0.46093667, 0.7167411, 0.31249312]",0.5278756346044126,"[{'value': ['run'], 'probability': 0.4476921260356903}, {'value': ['main'], 'probability': 0.1972937136888504}, {'value': ['init'], 'probability': 0.09192473441362381}, {'value': ['start'], 'probability': 0.08833961188793182}, {'value': ['bar'], 'probability': 0.055664319545030594}, {'value': ['foo'], 'probability': 0.042712703347206116}, {'value': ['set', 'up'], 'probability': 0.023583337664604187}, {'value': ['on', 'module', 'load'], 'probability': 0.018804624676704407}, {'value': ['f'], 'probability': 0.018690181896090508}, {'value': ['ensure', 'styles', 'injected'], 'probability': 0.015294570475816727}]","[1.0, 0.5395776, -0.092921056, 0.7167411, 0.35584003, 0.00073464046, 0.72037995, 0.53984416, 0.18028586, 0.4584951]",0.6662838449406026
477,477,"public static long getCPtr(btScaledBvhTriangleMeshShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btScaledBvhTriangleMeshShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.06046149507164955}, {'value': ['read'], 'probability': 0.04157618060708046}, {'value': ['execute'], 'probability': 0.040815360844135284}, {'value': ['skip'], 'probability': 0.0380544438958168}, {'value': ['process'], 'probability': 0.03444059193134308}]","[1.0, 0.5726487, 0.37713256, 0.49507433, 0.52250975]",0.136498166323125,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
478,478,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
479,479,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btScaledBvhTriangleMeshShape(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btScaledBvhTriangleMeshShape(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8151853680610657}, {'value': ['clear'], 'probability': 0.014861173927783966}, {'value': ['start'], 'probability': 0.012470271438360214}, {'value': ['close'], 'probability': 0.008933170698583126}, {'value': ['test'], 'probability': 0.008666892535984516}]","[0.13931048, 0.18840031, 0.15163165, 0.10496158, 0.14537679]",0.1204522066421406,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
480,480,"public btBvhTriangleMeshShape getChildShape() {long cPtr = CollisionJNI.btScaledBvhTriangleMeshShape_getChildShape__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btBvhTriangleMeshShape(cPtr, false);}public void set(final ManifoldPoint cp) {localPoint.set(cp.localPoint);normalImpulse = cp.normalImpulse;tangentImpulse = cp.tangentImpulse;id.set(cp.id);}private int next(int idx) {return (idx + 1) % queue.length();}
","public btBvhTriangleMeshShape [MASK]() {long cPtr = CollisionJNI.btScaledBvhTriangleMeshShape_[MASK]__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btBvhTriangleMeshShape(cPtr, false);}public void set(final ManifoldPoint cp) {localPoint.set(cp.localPoint);normalImpulse = cp.normalImpulse;tangentImpulse = cp.tangentImpulse;id.set(cp.id);}private int next(int idx) {return (idx + 1) % queue.length();}
",getChildShape,"[{'value': ['get'], 'probability': 0.22018089890480042}, {'value': ['create'], 'probability': 0.11842918395996094}, {'value': ['build'], 'probability': 0.06182311847805977}, {'value': ['set'], 'probability': 0.04029426723718643}, {'value': ['start'], 'probability': 0.03577098995447159}]","[1.0, 0.62328804, 0.5626448, 0.65028083, 0.7199945]",0.3807383523614323,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
481,481,"public boolean put(T value) {int write = writeIndex.get();int read = readIndex.get();int next = next(write);if (next == read)return false;queue.set(write, value);writeIndex.set(next);return true;}
","public boolean [MASK](T value) {int write = writeIndex.get();int read = readIndex.get();int next = next(write);if (next == read)return false;queue.set(write, value);writeIndex.set(next);return true;}
",put,"[{'value': ['write'], 'probability': 0.17840364575386047}, {'value': ['read'], 'probability': 0.133720263838768}, {'value': ['equals'], 'probability': 0.12617036700248718}, {'value': ['next'], 'probability': 0.03798200935125351}, {'value': ['execute'], 'probability': 0.029915977269411087}]","[0.5574444, 0.5763633, 0.19143644, 0.75021744, 0.36595]",0.24011769116218,"[{'value': ['put'], 'probability': 0.7794370055198669}, {'value': ['set'], 'probability': 0.09175988286733627}, {'value': ['add'], 'probability': 0.04713381826877594}, {'value': ['offer'], 'probability': 0.026245005428791046}, {'value': ['set', 'property'], 'probability': 0.021226447075605392}, {'value': ['write'], 'probability': 0.012140192091464996}, {'value': ['expect'], 'probability': 0.006133743561804295}, {'value': ['set', 'value'], 'probability': 0.005568451248109341}, {'value': ['next'], 'probability': 0.005425770301371813}, {'value': ['add', 'value'], 'probability': 0.00492973905056715}]","[1.0, 0.7944568, 0.60947514, 0.5972167, 0.7288803, 0.5574444, 0.66634876, 0.75289106, 0.75021744, 0.66320133]",0.9345957022412259
482,482,"public void dispose() {stage.dispose();texture.dispose();batch.dispose();font.dispose();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btPolyhedralConvexShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public void [MASK]() {stage.[MASK]();texture.[MASK]();batch.[MASK]();font.[MASK]();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btPolyhedralConvexShape_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",dispose,"[{'value': ['destroy'], 'probability': 0.15227456390857697}, {'value': ['run'], 'probability': 0.11819478869438171}, {'value': ['clear'], 'probability': 0.062158599495887756}, {'value': ['execute'], 'probability': 0.0559346005320549}, {'value': ['finish'], 'probability': 0.055756717920303345}]","[0.5099461, 0.13288948, 0.20622805, 0.36579466, 0.15473744]",0.1352657418003962,"[{'value': ['dispose'], 'probability': 0.8859248757362366}, {'value': ['close'], 'probability': 0.030824271962046623}, {'value': ['stop'], 'probability': 0.02690931223332882}, {'value': ['destroy'], 'probability': 0.024756615981459618}, {'value': ['delete'], 'probability': 0.006753645371645689}, {'value': ['shutdown'], 'probability': 0.006016792729496956}, {'value': ['cancel'], 'probability': 0.005593525245785713}, {'value': ['finalize'], 'probability': 0.005288207437843084}, {'value': ['hide'], 'probability': 0.004415517672896385}, {'value': ['run'], 'probability': 0.003517280565574765}]","[0.99999994, 0.17637412, 0.22849083, 0.5099461, 0.3089048, 0.10550895, 0.31668118, 0.33868343, 0.4591369, 0.13288948]",0.9189126853250098
483,483,"public static long getCPtr(btPolyhedralConvexShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btPolyhedralConvexShape obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07508603483438492}, {'value': ['skip'], 'probability': 0.041004929691553116}, {'value': ['update'], 'probability': 0.040325380861759186}, {'value': ['match'], 'probability': 0.03532800078392029}, {'value': ['evaluate'], 'probability': 0.03479253128170967}]","[1.0, 0.49507433, 0.36048478, 0.4692583, 0.40115592]",0.1404583967459168,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
484,484,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
485,485,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btPolyhedralConvexShape(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btPolyhedralConvexShape(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8184168934822083}, {'value': ['start'], 'probability': 0.01471899077296257}, {'value': ['clear'], 'probability': 0.012081997469067574}, {'value': ['test'], 'probability': 0.010190948843955994}, {'value': ['execute'], 'probability': 0.008487599901854992}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1228651340669889,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
486,486,"public boolean initializePolyhedralFeatures(int shiftVerticesByMargin) {return CollisionJNI.btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0(swigCPtr, this, shiftVerticesByMargin);}
","public boolean [MASK](int shiftVerticesByMargin) {return CollisionJNI.btPolyhedralConvexShape_[MASK]__SWIG_0(swigCPtr, this, shiftVerticesByMargin);}
",initializePolyhedralFeatures,"[{'value': ['matches'], 'probability': 0.17285144329071045}, {'value': ['equals'], 'probability': 0.09998475760221481}, {'value': ['accepts'], 'probability': 0.04307502135634422}, {'value': ['execute'], 'probability': 0.03857668489217758}, {'value': ['supports'], 'probability': 0.03577057644724846}]","[-0.18260892, 0.03311419, 0.032493275, 0.21664008, -0.044485707]",-0.0200876751318159,"[{'value': ['is'], 'probability': 0.29459646344184875}, {'value': ['prob'], 'probability': 0.2470763623714447}, {'value': ['next', 'to'], 'probability': 0.20752766728401184}, {'value': ['parse'], 'probability': 0.062324777245521545}, {'value': ['has', 'state'], 'probability': 0.05000472813844681}, {'value': ['attach'], 'probability': 0.041303325444459915}, {'value': ['stop', 'capture'], 'probability': 0.025875026360154152}, {'value': ['is', 'visited'], 'probability': 0.025774037465453148}, {'value': ['height'], 'probability': 0.022759756073355675}, {'value': ['contains'], 'probability': 0.022757964208722115}]","[-0.2760725, 0.28716373, -0.14311756, 0.4540484, -0.3927431, 0.28781444, -0.07023217, -0.35815114, -0.110979296, -0.086116314]",-0.03506627263513146
487,487,"public boolean initializePolyhedralFeatures() {return CollisionJNI.btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btPolyhedralConvexShape_[MASK]__SWIG_1(swigCPtr, this);}
",initializePolyhedralFeatures,"[{'value': ['execute'], 'probability': 0.06806939840316772}, {'value': ['run'], 'probability': 0.058860745280981064}, {'value': ['matches'], 'probability': 0.05306257680058479}, {'value': ['is'], 'probability': 0.048198193311691284}, {'value': ['exists'], 'probability': 0.03620610386133194}]","[0.21664008, -0.23605645, -0.18260892, -0.2760725, 0.03870856]",-0.0207423075236458,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[-0.16584268, -0.4328135, -0.15470208, -0.24877988, -0.26609814, -0.26642123, -0.11779491, -0.14311756, -0.28627223, -0.3018074]",-0.23492935783380836
488,488,"public btConvexPolyhedron getConvexPolyhedron() {long cPtr = CollisionJNI.btPolyhedralConvexShape_getConvexPolyhedron(swigCPtr, this);return (cPtr == 0) ? null : new btConvexPolyhedron(cPtr, false);}
","public btConvexPolyhedron [MASK]() {long cPtr = CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this);return (cPtr == 0) ? null : new btConvexPolyhedron(cPtr, false);}
",getConvexPolyhedron,"[{'value': ['clone'], 'probability': 0.13411936163902283}, {'value': ['create'], 'probability': 0.08058378100395203}, {'value': ['get'], 'probability': 0.05372466892004013}, {'value': ['transform'], 'probability': 0.05237878859043121}, {'value': ['resolve'], 'probability': 0.038281142711639404}]","[0.166604, 0.62328804, 1.0, 0.33052462, 0.427468]",0.1599728401934492,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
489,489,"public int getNumVertices() {return CollisionJNI.btPolyhedralConvexShape_getNumVertices(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this);}
",getNumVertices,"[{'value': ['get'], 'probability': 0.0715850368142128}, {'value': ['size'], 'probability': 0.03663063794374466}, {'value': ['state'], 'probability': 0.033406153321266174}, {'value': ['length'], 'probability': 0.030105145648121834}, {'value': ['start'], 'probability': 0.02436893992125988}]","[1.0, 0.43109724, 0.49234587, 0.3304365, 0.7199945]",0.1313171265642884,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
490,490,"public int getNumEdges() {return CollisionJNI.btPolyhedralConvexShape_getNumEdges(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this);}
",getNumEdges,"[{'value': ['get'], 'probability': 0.0715850368142128}, {'value': ['size'], 'probability': 0.03663063794374466}, {'value': ['state'], 'probability': 0.033406153321266174}, {'value': ['length'], 'probability': 0.030105145648121834}, {'value': ['start'], 'probability': 0.02436893992125988}]","[1.0, 0.43109724, 0.49234587, 0.3304365, 0.7199945]",0.1313171265642884,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
491,491,"public void getEdge(int i, Vector3 pa, Vector3 pb) {CollisionJNI.btPolyhedralConvexShape_getEdge(swigCPtr, this, i, pa, pb);}
","public void [MASK](int i, Vector3 pa, Vector3 pb) {CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this, i, pa, pb);}
",getEdge,"[{'value': ['run'], 'probability': 0.0928988978266716}, {'value': ['read'], 'probability': 0.08280379325151443}, {'value': ['execute'], 'probability': 0.07627995312213898}, {'value': ['write'], 'probability': 0.06948263943195343}, {'value': ['scan'], 'probability': 0.052540164440870285}]","[0.65114945, 0.5726487, 0.37713256, 0.60768855, 0.28727266]",0.1939933626830329,"[{'value': ['set'], 'probability': 0.23005513846874237}, {'value': ['assign'], 'probability': 0.17625302076339722}, {'value': ['intersects', 'line'], 'probability': 0.14018064737319946}, {'value': ['cross'], 'probability': 0.13764536380767822}, {'value': ['add'], 'probability': 0.12222809344530106}, {'value': ['determinant'], 'probability': 0.060588136315345764}, {'value': ['equals'], 'probability': 0.03728453814983368}, {'value': ['add', 'data'], 'probability': 0.03495827317237854}, {'value': ['assert', 'equals'], 'probability': 0.03047044947743416}, {'value': ['set', 'linear', 'velocity'], 'probability': 0.030336378142237663}]","[0.65028083, 0.3074088, 0.36418915, 0.4741721, 0.54842544, -0.053460952, 0.22535908, 0.5831131, 0.35015377, 0.42752597]",0.43632190301002105
492,492,"public void getVertex(int i, Vector3 vtx) {CollisionJNI.btPolyhedralConvexShape_getVertex(swigCPtr, this, i, vtx);}
","public void [MASK](int i, Vector3 vtx) {CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this, i, vtx);}
",getVertex,"[{'value': ['execute'], 'probability': 0.12589901685714722}, {'value': ['run'], 'probability': 0.11722540110349655}, {'value': ['write'], 'probability': 0.07564397901296616}, {'value': ['read'], 'probability': 0.06640659272670746}, {'value': ['scan'], 'probability': 0.037589170038700104}]","[0.37713256, 0.65114945, 0.60768855, 0.5726487, 0.28727266]",0.2186058446244019,"[{'value': ['delete'], 'probability': 0.3175757825374603}, {'value': ['add', 'all'], 'probability': 0.30825209617614746}, {'value': ['get', 'vertex'], 'probability': 0.10748527944087982}, {'value': ['set', 'left'], 'probability': 0.1016705259680748}, {'value': ['add'], 'probability': 0.07764781266450882}, {'value': ['add', 'activity'], 'probability': 0.03184770047664642}, {'value': ['split'], 'probability': 0.0175442136824131}, {'value': ['set', 'bottom'], 'probability': 0.01610032096505165}, {'value': ['do', 'rename'], 'probability': 0.01209088321775198}, {'value': ['move'], 'probability': 0.009785315953195095}]","[0.277343, 0.7497388, 0.6914651, 0.7069004, 0.54842544, 0.5727481, 0.4370585, 0.67876035, 0.7270366, 0.7194599]",0.560630741947825
493,493,"public int getNumPlanes() {return CollisionJNI.btPolyhedralConvexShape_getNumPlanes(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this);}
",getNumPlanes,"[{'value': ['get'], 'probability': 0.0715850368142128}, {'value': ['size'], 'probability': 0.03663063794374466}, {'value': ['state'], 'probability': 0.033406153321266174}, {'value': ['length'], 'probability': 0.030105145648121834}, {'value': ['start'], 'probability': 0.02436893992125988}]","[1.0, 0.43109724, 0.49234587, 0.3304365, 0.7199945]",0.1313171265642884,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
494,494,"public void getPlane(Vector3 planeNormal, Vector3 planeSupport, int i) {CollisionJNI.btPolyhedralConvexShape_getPlane(swigCPtr, this, planeNormal, planeSupport, i);}
","public void [MASK](Vector3 planeNormal, Vector3 planeSupport, int i) {CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this, planeNormal, planeSupport, i);}
",getPlane,"[{'value': ['apply'], 'probability': 0.0648251622915268}, {'value': ['execute'], 'probability': 0.057010844349861145}, {'value': ['test'], 'probability': 0.049002695828676224}, {'value': ['write'], 'probability': 0.04498846083879471}, {'value': ['paint'], 'probability': 0.03968007490038872}]","[0.57501197, 0.37713256, 0.4599198, 0.60768855, 0.41529104]",0.1251309526842373,"[{'value': ['get', 'plane'], 'probability': 0.9573626518249512}, {'value': ['offset'], 'probability': 0.022597355768084526}, {'value': ['unfold'], 'probability': 0.00822868850082159}, {'value': ['set', 'position'], 'probability': 0.006595323793590069}, {'value': ['get', 'intersection'], 'probability': 0.0027738516218960285}, {'value': ['quick', 'reject'], 'probability': 0.0008924540597945452}, {'value': ['project', 'to', 'plane'], 'probability': 0.0008217384456656873}, {'value': ['get', 'plane', 'equation'], 'probability': 0.0002457530063111335}, {'value': ['left'], 'probability': 0.0002452762855682522}, {'value': ['jump'], 'probability': 0.00023691673413850367}]","[0.8206952, 0.30574188, 0.2054267, 0.6746676, 0.7591154, 0.6365428, 0.68374145, 0.7191548, 0.6125856, 0.526757]",0.8024393346954053
495,495,"public boolean isInside(Vector3 pt, float tolerance) {return CollisionJNI.btPolyhedralConvexShape_isInside(swigCPtr, this, pt, tolerance);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public boolean [MASK](Vector3 pt, float tolerance) {return CollisionJNI.btPolyhedralConvexShape_[MASK](swigCPtr, this, pt, tolerance);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",isInside,"[{'value': ['destroy'], 'probability': 0.31601089239120483}, {'value': ['destroyed'], 'probability': 0.061954088509082794}, {'value': ['equals'], 'probability': 0.055008336901664734}, {'value': ['matches'], 'probability': 0.027792613953351974}, {'value': ['create'], 'probability': 0.024072740226984024}]","[0.2876265, 0.29613453, 0.3373858, 0.3614936, 0.57730776]",0.1517431168844043,"[{'value': ['equals', 'exact'], 'probability': 0.6381721496582031}, {'value': ['equals'], 'probability': 0.1767565906047821}, {'value': ['is', 'flat'], 'probability': 0.060641467571258545}, {'value': ['same'], 'probability': 0.032306820154190063}, {'value': ['contains', 'point'], 'probability': 0.03159583359956741}, {'value': ['linearize'], 'probability': 0.014538955874741077}, {'value': ['intersects', 'line'], 'probability': 0.014457875862717628}, {'value': ['eq'], 'probability': 0.01179772149771452}, {'value': ['tolerance'], 'probability': 0.010818848386406898}, {'value': ['contains'], 'probability': 0.008913799189031124}]","[0.47101185, 0.3373858, 0.8767205, 0.7568843, 0.7495134, 0.0, 0.4886705, -0.060977653, 0.33568254, 0.59498084]",0.47680243024433655
496,496,"public static long getCPtr(btQuantizedBvhDoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btQuantizedBvhDoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.09021826088428497}, {'value': ['execute'], 'probability': 0.06523747742176056}, {'value': ['read'], 'probability': 0.05047183856368065}, {'value': ['run'], 'probability': 0.03292277827858925}, {'value': ['process'], 'probability': 0.03164670243859291}]","[1.0, 0.37713256, 0.5726487, 0.65114945, 0.52250975]",0.1816974307312986,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
497,497,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
498,498,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btQuantizedBvhDoubleData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btQuantizedBvhDoubleData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.812507152557373}, {'value': ['start'], 'probability': 0.014252492226660252}, {'value': ['test'], 'probability': 0.013292895630002022}, {'value': ['clear'], 'probability': 0.01246337965130806}, {'value': ['execute'], 'probability': 0.011618731543421745}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1235495169939531,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
499,499,"public void setBvhAabbMin(btVector3DoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMin_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMin_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setBvhAabbMin,"[{'value': ['set'], 'probability': 0.5947325229644775}, {'value': ['put'], 'probability': 0.048939067870378494}, {'value': ['execute'], 'probability': 0.021500924602150917}, {'value': ['get'], 'probability': 0.02021707594394684}, {'value': ['apply'], 'probability': 0.019765593111515045}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.6642244758800031,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
500,500,"public btVector3DoubleData getBvhAabbMin() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMin_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMin_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getBvhAabbMin,"[{'value': ['get'], 'probability': 0.39415186643600464}, {'value': ['build'], 'probability': 0.1511240303516388}, {'value': ['create'], 'probability': 0.09791100770235062}, {'value': ['clone'], 'probability': 0.03658928722143173}, {'value': ['resolve'], 'probability': 0.021370183676481247}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.5554387640584669,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
501,501,"public void setBvhAabbMax(btVector3DoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMax_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMax_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setBvhAabbMax,"[{'value': ['set'], 'probability': 0.6054961085319519}, {'value': ['put'], 'probability': 0.04885106533765793}, {'value': ['execute'], 'probability': 0.021335730329155922}, {'value': ['get'], 'probability': 0.01814408041536808}, {'value': ['apply'], 'probability': 0.01777597703039646}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.6725151022753539,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
502,502,"public btVector3DoubleData getBvhAabbMax() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMax_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_bvhAabbMax_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getBvhAabbMax,"[{'value': ['get'], 'probability': 0.3904128968715668}, {'value': ['build'], 'probability': 0.14828665554523468}, {'value': ['create'], 'probability': 0.10377895832061768}, {'value': ['clone'], 'probability': 0.03714296966791153}, {'value': ['resolve'], 'probability': 0.018107183277606964}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.5524582012321734,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
503,503,"public void setBvhQuantization(btVector3DoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_bvhQuantization_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_bvhQuantization_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setBvhQuantization,"[{'value': ['set'], 'probability': 0.7365906238555908}, {'value': ['put'], 'probability': 0.042366646230220795}, {'value': ['get'], 'probability': 0.017091603949666023}, {'value': ['add'], 'probability': 0.010505368001759052}, {'value': ['apply'], 'probability': 0.010327249765396118}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.5010617]",0.7918798770572224,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
504,504,"public btVector3DoubleData getBvhQuantization() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_bvhQuantization_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_bvhQuantization_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getBvhQuantization,"[{'value': ['get'], 'probability': 0.4705989956855774}, {'value': ['build'], 'probability': 0.11476831883192062}, {'value': ['create'], 'probability': 0.0842394009232521}, {'value': ['clone'], 'probability': 0.02430221065878868}, {'value': ['test'], 'probability': 0.015984388068318367}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.4599198]",0.5990785840216262,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
505,505,"public void setCurNodeIndex(int value) {CollisionJNI.btQuantizedBvhDoubleData_curNodeIndex_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btQuantizedBvhDoubleData_curNodeIndex_set(swigCPtr, this, value);}
",setCurNodeIndex,"[{'value': ['set'], 'probability': 0.6856375932693481}, {'value': ['put'], 'probability': 0.08234962821006775}, {'value': ['execute'], 'probability': 0.01785343326628208}, {'value': ['get'], 'probability': 0.012288238853216171}, {'value': ['apply'], 'probability': 0.0080986013635993}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.7693881935651785,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
506,506,"public int getCurNodeIndex() {return CollisionJNI.btQuantizedBvhDoubleData_curNodeIndex_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btQuantizedBvhDoubleData_curNodeIndex_get(swigCPtr, this);}
",getCurNodeIndex,"[{'value': ['get'], 'probability': 0.17105481028556824}, {'value': ['execute'], 'probability': 0.053728777915239334}, {'value': ['start'], 'probability': 0.03828439861536026}, {'value': ['run'], 'probability': 0.029685577377676964}, {'value': ['state'], 'probability': 0.027806337922811508}]","[1.0, 0.37713256, 0.7199945, 0.65114945, 0.49234587]",0.2519023210396898,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
507,507,"public void setUseQuantization(int value) {CollisionJNI.btQuantizedBvhDoubleData_useQuantization_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btQuantizedBvhDoubleData_useQuantization_set(swigCPtr, this, value);}
",setUseQuantization,"[{'value': ['set'], 'probability': 0.7098379731178284}, {'value': ['put'], 'probability': 0.08382808417081833}, {'value': ['execute'], 'probability': 0.01573323644697666}, {'value': ['get'], 'probability': 0.013313562609255314}, {'value': ['read'], 'probability': 0.006409720983356237}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.4820371]",0.7937160872950809,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
508,508,"public int getUseQuantization() {return CollisionJNI.btQuantizedBvhDoubleData_useQuantization_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btQuantizedBvhDoubleData_useQuantization_get(swigCPtr, this);}
",getUseQuantization,"[{'value': ['get'], 'probability': 0.16611243784427643}, {'value': ['execute'], 'probability': 0.05725819990038872}, {'value': ['compare'], 'probability': 0.0361776165664196}, {'value': ['run'], 'probability': 0.030484981834888458}, {'value': ['value'], 'probability': 0.030404789373278618}]","[1.0, 0.37713256, 0.46117607, 0.65114945, 0.46303764]",0.2383194616900782,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
509,509,"public void setNumContiguousLeafNodes(int value) {CollisionJNI.btQuantizedBvhDoubleData_numContiguousLeafNodes_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btQuantizedBvhDoubleData_numContiguousLeafNodes_set(swigCPtr, this, value);}
",setNumContiguousLeafNodes,"[{'value': ['set'], 'probability': 0.6691778898239136}, {'value': ['put'], 'probability': 0.07803448289632797}, {'value': ['execute'], 'probability': 0.0185238067060709}, {'value': ['get'], 'probability': 0.014016720466315746}, {'value': ['apply'], 'probability': 0.009352896362543106}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.7514885274483653,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
510,510,"public int getNumContiguousLeafNodes() {return CollisionJNI.btQuantizedBvhDoubleData_numContiguousLeafNodes_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btQuantizedBvhDoubleData_numContiguousLeafNodes_get(swigCPtr, this);}
",getNumContiguousLeafNodes,"[{'value': ['get'], 'probability': 0.1401979923248291}, {'value': ['execute'], 'probability': 0.053025465458631516}, {'value': ['start'], 'probability': 0.04371846467256546}, {'value': ['run'], 'probability': 0.033438436686992645}, {'value': ['size'], 'probability': 0.027845706790685654}]","[1.0, 0.37713256, 0.7199945, 0.65114945, 0.43109724]",0.2254503026236376,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
511,511,"public void setNumQuantizedContiguousNodes(int value) {CollisionJNI.btQuantizedBvhDoubleData_numQuantizedContiguousNodes_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btQuantizedBvhDoubleData_numQuantizedContiguousNodes_set(swigCPtr, this, value);}
",setNumQuantizedContiguousNodes,"[{'value': ['set'], 'probability': 0.7115832567214966}, {'value': ['put'], 'probability': 0.07295852899551392}, {'value': ['execute'], 'probability': 0.014691668562591076}, {'value': ['get'], 'probability': 0.01219336036592722}, {'value': ['apply'], 'probability': 0.008022358641028404}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.7866612088373207,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
512,512,"public int getNumQuantizedContiguousNodes() {return CollisionJNI.btQuantizedBvhDoubleData_numQuantizedContiguousNodes_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btQuantizedBvhDoubleData_numQuantizedContiguousNodes_get(swigCPtr, this);}
",getNumQuantizedContiguousNodes,"[{'value': ['get'], 'probability': 0.17530342936515808}, {'value': ['execute'], 'probability': 0.044765572994947433}, {'value': ['start'], 'probability': 0.04455598071217537}, {'value': ['run'], 'probability': 0.03250407055020332}, {'value': ['size'], 'probability': 0.026852954179048538}]","[1.0, 0.37713256, 0.7199945, 0.65114945, 0.43109724]",0.2570072872564111,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
513,513,"public void setContiguousNodesPtr(btOptimizedBvhNodeDoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_contiguousNodesPtr_set(swigCPtr, this, btOptimizedBvhNodeDoubleData.getCPtr(value), value);}
","public void [MASK](btOptimizedBvhNodeDoubleData value) {CollisionJNI.btQuantizedBvhDoubleData_contiguousNodesPtr_set(swigCPtr, this, btOptimizedBvhNodeDoubleData.getCPtr(value), value);}
",setContiguousNodesPtr,"[{'value': ['set'], 'probability': 0.6853012442588806}, {'value': ['put'], 'probability': 0.04635288566350937}, {'value': ['get'], 'probability': 0.018172334879636765}, {'value': ['apply'], 'probability': 0.01683778502047062}, {'value': ['add'], 'probability': 0.014850864186882973}]","[1.0, 0.7944568, 0.65028083, 0.5010617, 0.5084879]",0.7499319828773426,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
514,514,"public btOptimizedBvhNodeDoubleData getContiguousNodesPtr() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_contiguousNodesPtr_get(swigCPtr, this);return (cPtr == 0) ? null : new btOptimizedBvhNodeDoubleData(cPtr, false);}
","public btOptimizedBvhNodeDoubleData [MASK]() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_contiguousNodesPtr_get(swigCPtr, this);return (cPtr == 0) ? null : new btOptimizedBvhNodeDoubleData(cPtr, false);}
",getContiguousNodesPtr,"[{'value': ['get'], 'probability': 0.6446740031242371}, {'value': ['create'], 'probability': 0.05348479002714157}, {'value': ['build'], 'probability': 0.04699207469820976}, {'value': ['##s'], 'probability': 0.03987697884440422}, {'value': ['clone'], 'probability': 0.017563072964549065}]","[1.0, 0.62328804, 0.5626448, 0.0, 0.166604]",0.7073763565006693,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
515,515,"public void setQuantizedContiguousNodesPtr(btQuantizedBvhNodeData value) {CollisionJNI.btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_set(swigCPtr, this, btQuantizedBvhNodeData.getCPtr(value), value);}
","public void [MASK](btQuantizedBvhNodeData value) {CollisionJNI.btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_set(swigCPtr, this, btQuantizedBvhNodeData.getCPtr(value), value);}
",setQuantizedContiguousNodesPtr,"[{'value': ['set'], 'probability': 0.6787625551223755}, {'value': ['put'], 'probability': 0.043694645166397095}, {'value': ['execute'], 'probability': 0.018288159742951393}, {'value': ['get'], 'probability': 0.016571637243032455}, {'value': ['apply'], 'probability': 0.015036129392683506}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.7382178674756774,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
516,516,"public btQuantizedBvhNodeData getQuantizedContiguousNodesPtr() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_get(swigCPtr, this);return (cPtr == 0) ? null : new btQuantizedBvhNodeData(cPtr, false);}
","public btQuantizedBvhNodeData [MASK]() {long cPtr = CollisionJNI.btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_get(swigCPtr, this);return (cPtr == 0) ? null : new btQuantizedBvhNodeData(cPtr, false);}
",getQuantizedContiguousNodesPtr,"[{'value': ['get'], 'probability': 0.5131949782371521}, {'value': ['build'], 'probability': 0.067769356071949}, {'value': ['create'], 'probability': 0.04828992486000061}, {'value': ['clone'], 'probability': 0.03433290123939514}, {'value': ['##s'], 'probability': 0.025095215067267418}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.5871435836358065,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
517,517,"public void setTraversalMode(int value) {CollisionJNI.btQuantizedBvhDoubleData_traversalMode_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btQuantizedBvhDoubleData_traversalMode_set(swigCPtr, this, value);}
",setTraversalMode,"[{'value': ['set'], 'probability': 0.6755473613739014}, {'value': ['put'], 'probability': 0.08506494015455246}, {'value': ['execute'], 'probability': 0.015535461716353893}, {'value': ['get'], 'probability': 0.013068989850580692}, {'value': ['read'], 'probability': 0.009591926820576191}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.4820371]",0.7617134512709964,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
518,518,"public int getTraversalMode() {return CollisionJNI.btQuantizedBvhDoubleData_traversalMode_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btQuantizedBvhDoubleData_traversalMode_get(swigCPtr, this);}
",getTraversalMode,"[{'value': ['get'], 'probability': 0.11897781491279602}, {'value': ['execute'], 'probability': 0.057640016078948975}, {'value': ['start'], 'probability': 0.04154886677861214}, {'value': ['run'], 'probability': 0.03494996950030327}, {'value': ['state'], 'probability': 0.03205293416976929}]","[1.0, 0.37713256, 0.7199945, 0.65114945, 0.49234587]",0.2091694801884616,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
519,519,"public void setNumSubtreeHeaders(int value) {CollisionJNI.btQuantizedBvhDoubleData_numSubtreeHeaders_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btQuantizedBvhDoubleData_numSubtreeHeaders_set(swigCPtr, this, value);}
",setNumSubtreeHeaders,"[{'value': ['set'], 'probability': 0.6221041679382324}, {'value': ['put'], 'probability': 0.09164055436849594}, {'value': ['execute'], 'probability': 0.02653353102505207}, {'value': ['get'], 'probability': 0.01375016663223505}, {'value': ['apply'], 'probability': 0.009587526321411133}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.7179853211473105,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
520,520,"public int getNumSubtreeHeaders() {return CollisionJNI.btQuantizedBvhDoubleData_numSubtreeHeaders_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btQuantizedBvhDoubleData_numSubtreeHeaders_get(swigCPtr, this);}
",getNumSubtreeHeaders,"[{'value': ['get'], 'probability': 0.12931370735168457}, {'value': ['execute'], 'probability': 0.05947298929095268}, {'value': ['run'], 'probability': 0.04378297179937363}, {'value': ['start'], 'probability': 0.03762084245681763}, {'value': ['state'], 'probability': 0.03358013555407524}]","[1.0, 0.37713256, 0.65114945, 0.7199945, 0.49234587]",0.2238720065635614,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
521,521,"public void setSubTreeInfoPtr(btBvhSubtreeInfoData value) {CollisionJNI.btQuantizedBvhDoubleData_subTreeInfoPtr_set(swigCPtr, this, btBvhSubtreeInfoData.getCPtr(value), value);}
","public void [MASK](btBvhSubtreeInfoData value) {CollisionJNI.btQuantizedBvhDoubleData_subTreeInfoPtr_set(swigCPtr, this, btBvhSubtreeInfoData.getCPtr(value), value);}
",setSubTreeInfoPtr,"[{'value': ['set'], 'probability': 0.521682858467102}, {'value': ['put'], 'probability': 0.05563889816403389}, {'value': ['execute'], 'probability': 0.029006589204072952}, {'value': ['apply'], 'probability': 0.0251055508852005}, {'value': ['add'], 'probability': 0.021050862967967987}]","[1.0, 0.7944568, 0.35167885, 0.5010617, 0.5084879]",0.599370100365834,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
522,522,"public void dispose() {batchShader.dispose();scene.dispose();fbo.dispose();batch.dispose();}
","public void [MASK]() {batchShader.[MASK]();scene.[MASK]();fbo.[MASK]();batch.[MASK]();}
",dispose,"[{'value': ['run'], 'probability': 0.37792304158210754}, {'value': ['execute'], 'probability': 0.07405229657888412}, {'value': ['flush'], 'probability': 0.07397718727588654}, {'value': ['finish'], 'probability': 0.04096648842096329}, {'value': ['clear'], 'probability': 0.039776649326086044}]","[0.13288948, 0.36579466, 0.23337094, 0.15473744, 0.20622805]",0.1091161672781625,"[{'value': ['render'], 'probability': 0.317507803440094}, {'value': ['close'], 'probability': 0.2265225350856781}, {'value': ['dispose'], 'probability': 0.18512526154518127}, {'value': ['create'], 'probability': 0.10454820841550827}, {'value': ['release'], 'probability': 0.06266545504331589}, {'value': ['run'], 'probability': 0.025499563664197922}, {'value': ['destroy'], 'probability': 0.021864309906959534}, {'value': ['delete'], 'probability': 0.02070472203195095}, {'value': ['cancel'], 'probability': 0.01887969672679901}, {'value': ['deactivate'], 'probability': 0.016682466492056847}]","[0.38757586, 0.17637412, 0.99999994, 0.29225767, 0.087096326, 0.13288948, 0.5099461, 0.3089048, 0.31668118, 0.49225855]",0.4192742326375896
523,523,"private void calculateOffsets() {int idx = 0;for (int y = -1; y <= 1; y++) {for (int x = -1; x <= 1; x++) {offsets[idx++] = x / (float) Gdx.graphics.getWidth();offsets[idx++] = y / (float) Gdx.graphics.getHeight();}}System.out.println(Arrays.toString(offsets));}
","private void [MASK]() {int idx = 0;for (int y = -1; y <= 1; y++) {for (int x = -1; x <= 1; x++) {offsets[idx++] = x / (float) Gdx.graphics.getWidth();offsets[idx++] = y / (float) Gdx.graphics.getHeight();}}System.out.println(Arrays.toString(offsets));}
",calculateOffsets,"[{'value': ['run'], 'probability': 0.24750865995883942}, {'value': ['paint'], 'probability': 0.1925637125968933}, {'value': ['start'], 'probability': 0.07279948145151138}, {'value': ['update'], 'probability': 0.04436773434281349}, {'value': ['trim'], 'probability': 0.023793403059244156}]","[0.18425731, 0.16560245, 0.23255967, 0.2135093, 0.20389111]",0.1087487132368941,"[{'value': ['calculate', 'offsets'], 'probability': 0.8534565567970276}, {'value': ['get', 'offsets'], 'probability': 0.08244919031858444}, {'value': ['get', 'line', 'offsets'], 'probability': 0.043319907039403915}, {'value': ['set', 'offsets'], 'probability': 0.007585307117551565}, {'value': ['test', 'get', 'offset'], 'probability': 0.0041617597453296185}, {'value': ['split', 'path'], 'probability': 0.002388011198490858}, {'value': ['list', 'roots'], 'probability': 0.001910399878397584}, {'value': ['layout', 'major', 'axis'], 'probability': 0.0017796256579458714}, {'value': ['shift', 'rows'], 'probability': 0.0016061242204159498}, {'value': ['split', 'params'], 'probability': 0.001343134674243629}]","[0.8485228, 0.45885074, 0.39840505, 0.45230046, 0.3858204, 0.2658467, 0.13907266, 0.28369552, 0.29254252, 0.14379385]",0.7863730139286642
524,524,"public static long getCPtr(btTransform obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btTransform obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.0997287705540657}, {'value': ['update'], 'probability': 0.04363634064793587}, {'value': ['read'], 'probability': 0.036595314741134644}, {'value': ['process'], 'probability': 0.035195957869291306}, {'value': ['execute'], 'probability': 0.0337611585855484}]","[1.0, 0.36048478, 0.5726487, 0.52250975, 0.37713256]",0.1675379303296797,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
525,525,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
526,526,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.delete_btTransform(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.[MASK]_btTransform(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8376973271369934}, {'value': ['start'], 'probability': 0.012846081517636776}, {'value': ['test'], 'probability': 0.010520052164793015}, {'value': ['clear'], 'probability': 0.008797649294137955}, {'value': ['execute'], 'probability': 0.008784905076026917}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1247964109861434,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
527,527,"public void mult(Matrix4 t1, Matrix4 t2) {LinearMathJNI.btTransform_mult(swigCPtr, this, t1, t2);}
","public void [MASK](Matrix4 t1, Matrix4 t2) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, t1, t2);}
",mult,"[{'value': ['run'], 'probability': 0.13103699684143066}, {'value': ['test'], 'probability': 0.12969540059566498}, {'value': ['execute'], 'probability': 0.07859629392623901}, {'value': ['apply'], 'probability': 0.04611853137612343}, {'value': ['update'], 'probability': 0.029215756803750992}]","[-0.33360848, -0.20092158, -0.15412746, -0.2664134, -0.23956849]",-0.1011732743525498,"[{'value': ['set', 'transform'], 'probability': 0.6003448963165283}, {'value': ['add'], 'probability': 0.18173791468143463}, {'value': ['set'], 'probability': 0.1045529842376709}, {'value': ['assign'], 'probability': 0.04740464687347412}, {'value': ['cross'], 'probability': 0.03350361809134483}, {'value': ['apply', 'matrix'], 'probability': 0.009324661456048489}, {'value': ['set', 'matrix'], 'probability': 0.008030591532588005}, {'value': ['apply', 'to'], 'probability': 0.007193682249635458}, {'value': ['apply'], 'probability': 0.004111160524189472}, {'value': ['add', 'transform'], 'probability': 0.003795868717133999}]","[-0.2600584, -0.15021372, -0.33070755, -0.12413108, -0.18804637, -0.13516924, -0.1717138, -0.40193206, -0.2664134, -0.15062284]",-0.2373831015491769
528,528,"public Matrix3 getBasis() {return LinearMathJNI.btTransform_getBasis__SWIG_0(swigCPtr, this);}
","public Matrix3 [MASK]() {return LinearMathJNI.btTransform_[MASK]__SWIG_0(swigCPtr, this);}
",getBasis,"[{'value': ['run'], 'probability': 0.06772907078266144}, {'value': ['get'], 'probability': 0.04821029305458069}, {'value': ['##3'], 'probability': 0.033037204295396805}, {'value': ['execute'], 'probability': 0.029195686802268028}, {'value': ['cache'], 'probability': 0.027927294373512268}]","[0.65114945, 1.0, 0.0, 0.37713256, 0.12606809]",0.1068434251383809,"[{'value': ['get', 'matrix'], 'probability': 0.9352105855941772}, {'value': ['get', 'transform'], 'probability': 0.022360265254974365}, {'value': ['get', 'projection', 'matrix'], 'probability': 0.013571036979556084}, {'value': ['get', 'grid', 'data'], 'probability': 0.006749656051397324}, {'value': ['get', 'content', 'display', 'matrix'], 'probability': 0.0047050598077476025}, {'value': ['get', 'v'], 'probability': 0.004204688128083944}, {'value': ['get', 'map'], 'probability': 0.003957801498472691}, {'value': ['get', 'reserved'], 'probability': 0.0033486082684248686}, {'value': ['get', 'a', 'float'], 'probability': 0.003296655137091875}, {'value': ['get', 'coordinates'], 'probability': 0.002595685888081789}]","[0.73254496, 0.8550423, 0.5902986, 0.7318544, 0.67133385, 0.7306482, 0.8157612, 0.855474, 0.84568125, 0.75148135]",0.7342161141668144
529,529,"public Vector3 getOrigin() {return LinearMathJNI.btTransform_getOrigin__SWIG_0(swigCPtr, this);}
","public Vector3 [MASK]() {return LinearMathJNI.btTransform_[MASK]__SWIG_0(swigCPtr, this);}
",getOrigin,"[{'value': ['clone'], 'probability': 0.04184229299426079}, {'value': ['get'], 'probability': 0.037141699343919754}, {'value': ['##MP'], 'probability': 0.02595868706703186}, {'value': ['##d'], 'probability': 0.025573130697011948}, {'value': ['build'], 'probability': 0.023423433303833008}]","[0.166604, 1.0, 0.0, 0.0, 0.5626448]",0.0572918650856774,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.855474, 0.7318544, 0.90257215, 0.7609473, 0.6988793, 0.7657608, 0.85035914, 0.82370985, 0.62151444, 0.7876274]",0.8057931458994694
530,530,"public Quaternion getRotation() {return LinearMathJNI.btTransform_getRotation(swigCPtr, this);}
","public Quaternion [MASK]() {return LinearMathJNI.btTransform_[MASK](swigCPtr, this);}
",getRotation,"[{'value': ['resolve'], 'probability': 0.061417050659656525}, {'value': ['method'], 'probability': 0.0431799553334713}, {'value': ['build'], 'probability': 0.03893929347395897}, {'value': ['test'], 'probability': 0.02783210761845112}, {'value': ['run'], 'probability': 0.024252384901046753}]","[0.427468, 0.32441333, 0.5626448, 0.4599198, 0.65114945]",0.0907634319811653,"[{'value': ['get', 'inverse'], 'probability': 0.22549648582935333}, {'value': ['get', 'scale'], 'probability': 0.16421012580394745}, {'value': ['get', 'transform'], 'probability': 0.15730395913124084}, {'value': ['get', 'rotation'], 'probability': 0.13906261324882507}, {'value': ['get', 'orientation'], 'probability': 0.093526192009449}, {'value': ['get', 'value'], 'probability': 0.06389474868774414}, {'value': ['get', 'a'], 'probability': 0.04717908054590225}, {'value': ['get', 'width'], 'probability': 0.04214506596326828}, {'value': ['get', 'bottom'], 'probability': 0.03738677501678467}, {'value': ['invert', 'local'], 'probability': 0.029794886708259583}]","[0.68535674, 0.82746357, 0.8550423, 0.8306247, 0.8159136, 0.8500731, 0.89627117, 0.7625303, 0.8802582, 0.39327568]",0.7901080719941657
531,531,"public void setFromOpenGLMatrix(float[] m) {LinearMathJNI.btTransform_setFromOpenGLMatrix(swigCPtr, this, m);}
","public void [MASK](float[] m) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, m);}
",setFromOpenGLMatrix,"[{'value': ['update'], 'probability': 0.07578565180301666}, {'value': ['save'], 'probability': 0.04352327436208725}, {'value': ['execute'], 'probability': 0.03299149125814438}, {'value': ['run'], 'probability': 0.032911043614149094}, {'value': ['write'], 'probability': 0.03226642310619354}]","[0.41854778, 0.5413879, 0.35167885, 0.67632943, 0.46259418]",0.1040702677797991,"[{'value': ['m'], 'probability': 0.27716198563575745}, {'value': ['set', 'flags'], 'probability': 0.20074492692947388}, {'value': ['set', 'transform'], 'probability': 0.15654531121253967}, {'value': ['set', 'variant'], 'probability': 0.09207934141159058}, {'value': ['set'], 'probability': 0.07219922542572021}, {'value': ['set', 'size'], 'probability': 0.04645134508609772}, {'value': ['resize'], 'probability': 0.04355679824948311}, {'value': ['get', 'scale'], 'probability': 0.03806772828102112}, {'value': ['set', 'transformation'], 'probability': 0.03804192692041397}, {'value': ['r'], 'probability': 0.0351514033973217}]","[0.37020186, 0.7786614, 0.85847646, 0.76128364, 1.0, 0.8344828, -0.12730242, 0.71960074, 0.85066366, 0.25792137]",0.637645105710106
532,532,"public void getOpenGLMatrix(float[] m) {LinearMathJNI.btTransform_getOpenGLMatrix(swigCPtr, this, m);}
","public void [MASK](float[] m) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, m);}
",getOpenGLMatrix,"[{'value': ['update'], 'probability': 0.07578565180301666}, {'value': ['save'], 'probability': 0.04352327436208725}, {'value': ['execute'], 'probability': 0.03299149125814438}, {'value': ['run'], 'probability': 0.032911043614149094}, {'value': ['write'], 'probability': 0.03226642310619354}]","[0.36048478, 0.62758213, 0.37713256, 0.65114945, 0.60768855]",0.1081141127512368,"[{'value': ['m'], 'probability': 0.27716198563575745}, {'value': ['set', 'flags'], 'probability': 0.20074492692947388}, {'value': ['set', 'transform'], 'probability': 0.15654531121253967}, {'value': ['set', 'variant'], 'probability': 0.09207934141159058}, {'value': ['set'], 'probability': 0.07219922542572021}, {'value': ['set', 'size'], 'probability': 0.04645134508609772}, {'value': ['resize'], 'probability': 0.04355679824948311}, {'value': ['get', 'scale'], 'probability': 0.03806772828102112}, {'value': ['set', 'transformation'], 'probability': 0.03804192692041397}, {'value': ['r'], 'probability': 0.0351514033973217}]","[0.25537565, 0.5020095, 0.5965608, 0.46680352, 0.65028083, 0.62304664, -0.025137851, 0.82746357, 0.5328666, 0.26394212]",0.44377310836037076
533,533,"public void setOrigin(Vector3 origin) {LinearMathJNI.btTransform_setOrigin(swigCPtr, this, origin);}
","public void [MASK](Vector3 origin) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, origin);}
",setOrigin,"[{'value': ['execute'], 'probability': 0.12853731215000153}, {'value': ['visit'], 'probability': 0.057957250624895096}, {'value': ['read'], 'probability': 0.05314258486032486}, {'value': ['test'], 'probability': 0.04257971793413162}, {'value': ['apply'], 'probability': 0.03010532632470131}]","[0.35167885, 0.46053246, 0.4820371, 0.5425338, 0.5010617]",0.1356973083824199,"[{'value': ['set', 'origin'], 'probability': 0.8449290990829468}, {'value': ['get', 'origin'], 'probability': 0.04940764233469963}, {'value': ['move', 'by'], 'probability': 0.026220565661787987}, {'value': ['copy', 'to'], 'probability': 0.016668250784277916}, {'value': ['set', 'handlers'], 'probability': 0.012453217059373856}, {'value': ['moveto'], 'probability': 0.011322520673274994}, {'value': ['start', 'capture'], 'probability': 0.010140241123735905}, {'value': ['origin'], 'probability': 0.01001743134111166}, {'value': ['set', 'destination'], 'probability': 0.009873897768557072}, {'value': ['read', 'fields'], 'probability': 0.0089671416208148}]","[0.80866706, 0.62617767, 0.7448758, 0.6930786, 0.782886, 0.0, 0.7119248, 0.31613454, 0.79793954, 0.58887804]",0.7785824862622175
534,534,"public Vector3 invXform(Vector3 inVec) {return LinearMathJNI.btTransform_invXform(swigCPtr, this, inVec);}
","public Vector3 [MASK](Vector3 inVec) {return LinearMathJNI.btTransform_[MASK](swigCPtr, this, inVec);}
",invXform,"[{'value': ['get'], 'probability': 0.06456625461578369}, {'value': ['read'], 'probability': 0.06215858459472656}, {'value': ['generate'], 'probability': 0.04185158386826515}, {'value': ['create'], 'probability': 0.03510624170303345}, {'value': ['execute'], 'probability': 0.03252576291561127}]","[-0.21883781, -0.22096764, -0.08654037, -0.23538208, -0.24961239]",-0.0478686386373997,"[{'value': ['load', 'inputs'], 'probability': 0.9717622995376587}, {'value': ['read', 'u', 'long'], 'probability': 0.011957725510001183}, {'value': ['unpack', 'long'], 'probability': 0.004883676301687956}, {'value': ['execute', 'op'], 'probability': 0.0024344197008758783}, {'value': ['deserialize', 'from'], 'probability': 0.0023982233833521605}, {'value': ['get', 'max', 'size', 'in', 'bytes'], 'probability': 0.0017566336318850517}, {'value': ['read', 'script'], 'probability': 0.0015304661355912685}, {'value': ['as'], 'probability': 0.0013937577605247498}, {'value': ['for', 'value'], 'probability': 0.0009477484272792935}, {'value': ['rename', 'object'], 'probability': 0.0009350788313895464}]","[-0.08011572, -0.26687592, -0.27709228, -0.18078557, -0.3211741, -0.23116961, -0.24839973, -0.3464731, -0.30397624, -0.13186467]",-0.08528879360741433
535,535,"public void setBasis(Matrix3 basis) {LinearMathJNI.btTransform_setBasis(swigCPtr, this, basis);}
","public void [MASK](Matrix3 basis) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, basis);}
",setBasis,"[{'value': ['test'], 'probability': 0.22593329846858978}, {'value': ['setup'], 'probability': 0.07782234996557236}, {'value': ['apply'], 'probability': 0.06358292698860168}, {'value': ['set'], 'probability': 0.03354524075984955}, {'value': ['write'], 'probability': 0.0239995289593935}]","[0.5425338, 0.35182503, 0.5010617, 1.0, 0.46259418]",0.2264625561347367,"[{'value': ['basis'], 'probability': 0.5998495817184448}, {'value': ['get', 'basis'], 'probability': 0.3642854690551758}, {'value': ['set', 'basis'], 'probability': 0.008326355367898941}, {'value': ['add'], 'probability': 0.0057526384480297565}, {'value': ['init'], 'probability': 0.005125869996845722}, {'value': ['set', 'input'], 'probability': 0.004260370507836342}, {'value': ['mul'], 'probability': 0.0036962637677788734}, {'value': ['paths'], 'probability': 0.0036719965282827616}, {'value': ['get', 'matrix'], 'probability': 0.003368334611877799}, {'value': ['y'], 'probability': 0.0016630744794383645}]","[0.5384437, 0.7128896, 0.87073827, 0.5084879, -0.2256778, 0.82371736, -0.084845886, 0.38411397, 0.5850217, 0.110969886]",0.5984602723564388
536,536,"public void setRotation(Quaternion q) {LinearMathJNI.btTransform_setRotation(swigCPtr, this, q);}
","public void [MASK](Quaternion q) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, q);}
",setRotation,"[{'value': ['test'], 'probability': 0.1020546555519104}, {'value': ['run'], 'probability': 0.06775502860546112}, {'value': ['execute'], 'probability': 0.050386182963848114}, {'value': ['start'], 'probability': 0.04549790173768997}, {'value': ['accept'], 'probability': 0.026739848777651787}]","[0.5425338, 0.67632943, 0.35167885, 0.71166486, 0.44626972]",0.1632250190535598,"[{'value': ['add'], 'probability': 0.4393690526485443}, {'value': ['apply', 'to'], 'probability': 0.1419554352760315}, {'value': ['set', 'quaternion'], 'probability': 0.12303861975669861}, {'value': ['set', 'defaults'], 'probability': 0.06642729789018631}, {'value': ['set', 'identity'], 'probability': 0.05550510063767433}, {'value': ['normalize', 'cp'], 'probability': 0.04352753981947899}, {'value': ['set'], 'probability': 0.03792862594127655}, {'value': ['parse'], 'probability': 0.03753403574228287}, {'value': ['get', 'scale'], 'probability': 0.030166810378432274}, {'value': ['get', 'rotation'], 'probability': 0.024547390639781952}]","[0.5084879, 0.6994001, 0.6837368, 0.71523726, 0.8274706, 0.04597914, 1.0, 0.018554753, 0.71960074, 0.6273431]",0.5779977569060215
537,537,"public void setIdentity() {LinearMathJNI.btTransform_setIdentity(swigCPtr, this);}
","public void [MASK]() {LinearMathJNI.btTransform_[MASK](swigCPtr, this);}
",setIdentity,"[{'value': ['run'], 'probability': 0.6720533967018127}, {'value': ['test'], 'probability': 0.061788324266672134}, {'value': ['execute'], 'probability': 0.05789472162723541}, {'value': ['setup'], 'probability': 0.01739760860800743}, {'value': ['start'], 'probability': 0.01242262963205576}]","[0.67632943, 0.5425338, 0.35167885, 0.35182503, 0.71166486]",0.5233737607265725,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.6369313, 0.2694865, 0.36267975, -0.20974311, 0.67632943, 0.523722, 0.008925546, 0.6222062, 0.5712808, 0.5978372]",0.4182787614637767
538,538,"public Matrix4 inverse() {return LinearMathJNI.btTransform_inverse(swigCPtr, this);}
","public Matrix4 [MASK]() {return LinearMathJNI.btTransform_[MASK](swigCPtr, this);}
",inverse,"[{'value': ['##4'], 'probability': 0.20712104439735413}, {'value': ['##3'], 'probability': 0.1933591216802597}, {'value': ['##2'], 'probability': 0.05427420139312744}, {'value': ['run'], 'probability': 0.04031816124916077}, {'value': ['##9'], 'probability': 0.03648428991436958}]","[0.0, 0.0, 0.0, -0.021394888, 0.0]",-0.0008626025418361,"[{'value': ['get', 'matrix'], 'probability': 0.9352105855941772}, {'value': ['get', 'transform'], 'probability': 0.022360265254974365}, {'value': ['get', 'projection', 'matrix'], 'probability': 0.013571036979556084}, {'value': ['get', 'grid', 'data'], 'probability': 0.006749656051397324}, {'value': ['get', 'content', 'display', 'matrix'], 'probability': 0.0047050598077476025}, {'value': ['get', 'v'], 'probability': 0.004204688128083944}, {'value': ['get', 'map'], 'probability': 0.003957801498472691}, {'value': ['get', 'reserved'], 'probability': 0.0033486082684248686}, {'value': ['get', 'a', 'float'], 'probability': 0.003296655137091875}, {'value': ['get', 'coordinates'], 'probability': 0.002595685888081789}]","[0.40302613, 0.24141781, 0.4473062, 0.1728372, 0.32089093, 0.12866272, 0.155924, -0.00056889164, 0.10890223, 0.29074252]",0.3933291681767239
539,539,"public Matrix4 inverseTimes(Matrix4 t) {return LinearMathJNI.btTransform_inverseTimes(swigCPtr, this, t);}
","public Matrix4 [MASK](Matrix4 t) {return LinearMathJNI.btTransform_[MASK](swigCPtr, this, t);}
",inverseTimes,"[{'value': ['get'], 'probability': 0.09429184347391129}, {'value': ['create'], 'probability': 0.05775967985391617}, {'value': ['run'], 'probability': 0.036396175622940063}, {'value': ['transform'], 'probability': 0.028634758666157722}, {'value': ['split'], 'probability': 0.027553409337997437}]","[-0.010026363, 0.14610934, -0.021394888, 0.45167962, 0.12924123]",0.0232099058205679,"[{'value': ['map'], 'probability': 0.2297578752040863}, {'value': ['y'], 'probability': 0.21186301112174988}, {'value': ['get'], 'probability': 0.12440989911556244}, {'value': ['x'], 'probability': 0.10087413340806961}, {'value': ['get', 'x'], 'probability': 0.09429711848497391}, {'value': ['set'], 'probability': 0.06907042115926743}, {'value': ['is'], 'probability': 0.05968130752444267}, {'value': ['r'], 'probability': 0.03905307874083519}, {'value': ['eq'], 'probability': 0.03674254193902016}, {'value': ['get', 'scale'], 'probability': 0.03425062447786331}]","[0.26669124, 0.27223414, -0.010026363, 0.34569207, 0.21564801, 0.13827136, 0.17786968, 0.12168098, 0.24706718, 0.15385523]",0.21217523936007923
540,540,"public static Matrix4 getIdentity() {return LinearMathJNI.btTransform_getIdentity();}
","public static Matrix4 [MASK]() {return LinearMathJNI.btTransform_[MASK]();}
",getIdentity,"[{'value': ['##4'], 'probability': 0.2588803470134735}, {'value': ['##3'], 'probability': 0.1579500436782837}, {'value': ['##2'], 'probability': 0.1377405971288681}, {'value': ['##1'], 'probability': 0.0558512918651104}, {'value': ['##9'], 'probability': 0.030310532078146935}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'inverse', 'matrix'], 'probability': 0.3051575720310211}, {'value': ['get', 'model', 'view', 'matrix'], 'probability': 0.2777172029018402}, {'value': ['get', 'content', 'display', 'matrix'], 'probability': 0.2542742192745209}, {'value': ['get', 'projection', 'matrix'], 'probability': 0.09234548360109329}, {'value': ['get', 'matrix'], 'probability': 0.040558356791734695}, {'value': ['get', 'expire', 'time'], 'probability': 0.015063129365444183}, {'value': ['get', 'transform'], 'probability': 0.004356019664555788}, {'value': ['standard'], 'probability': 0.0041427165269851685}, {'value': ['invert', 'affine', 'local'], 'probability': 0.0032291486859321594}, {'value': ['star'], 'probability': 0.0031561236828565598}]","[0.51237065, 0.70480084, 0.67133385, 0.5902986, 0.73254496, 0.8394357, 0.8550423, 0.42058122, 0.24910688, 0.45713216]",0.62737284872016
541,541,"public void serialize(btTransformFloatData dataOut) {LinearMathJNI.btTransform_serialize(swigCPtr, this, btTransformFloatData.getCPtr(dataOut), dataOut);}
","public void [MASK](btTransformFloatData dataOut) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, btTransformFloatData.getCPtr(dataOut), dataOut);}
",serialize,"[{'value': ['run'], 'probability': 0.1136593297123909}, {'value': ['execute'], 'probability': 0.10728749632835388}, {'value': ['read'], 'probability': 0.05328192934393883}, {'value': ['setup'], 'probability': 0.03896189481019974}, {'value': ['navigate'], 'probability': 0.03429847210645676}]","[-0.19198567, 0.20434979, 0.055586524, -0.14060996, 0.2270642]",0.0053744967049253,"[{'value': ['encode'], 'probability': 0.7391362190246582}, {'value': ['open'], 'probability': 0.14267775416374207}, {'value': ['merge'], 'probability': 0.028272416442632675}, {'value': ['do', 'open'], 'probability': 0.02125668153166771}, {'value': ['set', 'destination'], 'probability': 0.01406372431665659}, {'value': ['decode'], 'probability': 0.013328631408512592}, {'value': ['initialize'], 'probability': 0.01070419978350401}, {'value': ['set', 'coordinates'], 'probability': 0.010636528953909874}, {'value': ['append', 'path'], 'probability': 0.010169482789933681}, {'value': ['bind'], 'probability': 0.009754299186170101}]","[0.28375697, -0.17774145, 0.12850563, -0.17010337, -0.12264026, 0.29145458, 0.56510156, -0.04055786, 0.2747511, 0.18442205]",0.19676309598449884
542,542,"public void serializeFloat(btTransformFloatData dataOut) {LinearMathJNI.btTransform_serializeFloat(swigCPtr, this, btTransformFloatData.getCPtr(dataOut), dataOut);}
","public void [MASK](btTransformFloatData dataOut) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, btTransformFloatData.getCPtr(dataOut), dataOut);}
",serializeFloat,"[{'value': ['run'], 'probability': 0.1136593297123909}, {'value': ['execute'], 'probability': 0.10728749632835388}, {'value': ['read'], 'probability': 0.05328192934393883}, {'value': ['setup'], 'probability': 0.03896189481019974}, {'value': ['navigate'], 'probability': 0.03429847210645676}]","[-0.19198567, 0.20434979, 0.055586524, -0.14060996, 0.2270642]",0.0053744967049253,"[{'value': ['encode'], 'probability': 0.7391362190246582}, {'value': ['open'], 'probability': 0.14267775416374207}, {'value': ['merge'], 'probability': 0.028272416442632675}, {'value': ['do', 'open'], 'probability': 0.02125668153166771}, {'value': ['set', 'destination'], 'probability': 0.01406372431665659}, {'value': ['decode'], 'probability': 0.013328631408512592}, {'value': ['initialize'], 'probability': 0.01070419978350401}, {'value': ['set', 'coordinates'], 'probability': 0.010636528953909874}, {'value': ['append', 'path'], 'probability': 0.010169482789933681}, {'value': ['bind'], 'probability': 0.009754299186170101}]","[0.28375697, -0.17774145, 0.12850563, -0.17010337, -0.12264026, 0.29145458, 0.56510156, -0.04055786, 0.2747511, 0.18442205]",0.19676309598449884
543,543,"public void deSerialize(btTransformFloatData dataIn) {LinearMathJNI.btTransform_deSerialize(swigCPtr, this, btTransformFloatData.getCPtr(dataIn), dataIn);}
","public void [MASK](btTransformFloatData dataIn) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, btTransformFloatData.getCPtr(dataIn), dataIn);}
",deSerialize,"[{'value': ['run'], 'probability': 0.0906248390674591}, {'value': ['execute'], 'probability': 0.08385784924030304}, {'value': ['read'], 'probability': 0.07064711302518845}, {'value': ['setup'], 'probability': 0.03719285503029823}, {'value': ['write'], 'probability': 0.03317365050315857}]","[0.28573224, -0.0216024, 0.24778362, 0.03732678, 0.1771647]",0.0488535940323928,"[{'value': ['decode'], 'probability': 0.4909344017505646}, {'value': ['open'], 'probability': 0.15429091453552246}, {'value': ['set'], 'probability': 0.10569395869970322}, {'value': ['set', 'log'], 'probability': 0.07275214046239853}, {'value': ['document'], 'probability': 0.05361665040254593}, {'value': ['intersect'], 'probability': 0.045907486230134964}, {'value': ['inject'], 'probability': 0.028613058850169182}, {'value': ['encode'], 'probability': 0.01931687258183956}, {'value': ['set', 'objects'], 'probability': 0.01563255861401558}, {'value': ['set', 'password'], 'probability': 0.01324201188981533}]","[-0.100018084, 0.2578946, 0.2900249, 0.16377755, 0.14877644, 0.039873555, 0.009066114, -0.05642719, 0.22824079, 0.10675627]",0.047215979366872114
544,544,"public void deSerializeDouble(btTransformDoubleData dataIn) {LinearMathJNI.btTransform_deSerializeDouble(swigCPtr, this, btTransformDoubleData.getCPtr(dataIn), dataIn);}
","public void [MASK](btTransformDoubleData dataIn) {LinearMathJNI.btTransform_[MASK](swigCPtr, this, btTransformDoubleData.getCPtr(dataIn), dataIn);}
",deSerializeDouble,"[{'value': ['run'], 'probability': 0.08511076122522354}, {'value': ['read'], 'probability': 0.08142077922821045}, {'value': ['execute'], 'probability': 0.06684619933366776}, {'value': ['setup'], 'probability': 0.03392362594604492}, {'value': ['set'], 'probability': 0.03373592346906662}]","[0.28573224, 0.24778362, -0.0216024, 0.03732678, 0.2900249]",0.0541001029482552,"[{'value': ['decode'], 'probability': 0.4909344017505646}, {'value': ['open'], 'probability': 0.15429091453552246}, {'value': ['set'], 'probability': 0.10569395869970322}, {'value': ['set', 'log'], 'probability': 0.07275214046239853}, {'value': ['document'], 'probability': 0.05361665040254593}, {'value': ['intersect'], 'probability': 0.045907486230134964}, {'value': ['inject'], 'probability': 0.028613058850169182}, {'value': ['encode'], 'probability': 0.01931687258183956}, {'value': ['set', 'objects'], 'probability': 0.01563255861401558}, {'value': ['set', 'password'], 'probability': 0.01324201188981533}]","[-0.100018084, 0.2578946, 0.2900249, 0.16377755, 0.14877644, 0.039873555, 0.009066114, -0.05642719, 0.22824079, 0.10675627]",0.047215979366872114
545,545,"public void deSerializeFloat(btTransformFloatData dataIn) {LinearMathJNI.btTransform_deSerializeFloat(swigCPtr, this, btTransformFloatData.getCPtr(dataIn), dataIn);}public static void copyStream(InputStream input, OutputStream output) {copyStream(input, output, new byte[DEFAULT_BUFFER_SIZE]);}
","public void deSerializeFloat(btTransformFloatData [MASK] {LinearMathJNI.btTransform_deSerializeFloat(swigCPtr, this, btTransformFloatData.getCPtr([MASK], [MASK];}public static void copyStream(InputStream input, OutputStream output) {copyStream(input, output, new byte[DEFAULT_BUFFER_SIZE]);}
",dataIn),"[{'value': [')'], 'probability': 0.9999973773956299}, {'value': [','], 'probability': 1.4522174751618877e-06}, {'value': [']'], 'probability': 4.0724114569457015e-07}, {'value': ['{'], 'probability': 2.4328988956767716e-07}, {'value': [';'], 'probability': 1.7171699084883585e-07}]","[0.38715547, 0.43709102, 0.29904377, 0.14105368, 0.37751]",0.3871553135526006,"[{'value': ['decode'], 'probability': 0.4909344017505646}, {'value': ['open'], 'probability': 0.15429091453552246}, {'value': ['set'], 'probability': 0.10569395869970322}, {'value': ['set', 'log'], 'probability': 0.07275214046239853}, {'value': ['document'], 'probability': 0.05361665040254593}, {'value': ['intersect'], 'probability': 0.045907486230134964}, {'value': ['inject'], 'probability': 0.028613058850169182}, {'value': ['encode'], 'probability': 0.01931687258183956}, {'value': ['set', 'objects'], 'probability': 0.01563255861401558}, {'value': ['set', 'password'], 'probability': 0.01324201188981533}]","[0.31964967, 0.36428803, 0.47148952, 0.5864916, 0.59585387, 0.109161146, 0.110277854, 0.3072417, 0.53789353, 0.5541916]",0.36743206776671444
546,546,"public static void copyStream(InputStream input, OutputStream output, int bufferSize) {copyStream(input, output, new byte[bufferSize]);}
","public static void [MASK](InputStream input, OutputStream output, int bufferSize) {[MASK](input, output, new byte[bufferSize]);}
",copyStream,"[{'value': ['write'], 'probability': 0.2195957601070404}, {'value': ['run'], 'probability': 0.156612828373909}, {'value': ['output'], 'probability': 0.13021591305732727}, {'value': ['execute'], 'probability': 0.07452582567930222}, {'value': ['read'], 'probability': 0.06452305614948273}]","[0.59803283, 0.28752774, 0.27141255, 0.27587637, 0.7205266]",0.278748731348106,"[{'value': ['copy', 'stream'], 'probability': 0.9797042608261108}, {'value': ['buffer'], 'probability': 0.0069265225902199745}, {'value': ['write'], 'probability': 0.0031427480280399323}, {'value': ['copy', 'bytes'], 'probability': 0.0027544605545699596}, {'value': ['copy'], 'probability': 0.0025718114338815212}, {'value': ['pack'], 'probability': 0.00147882045712322}, {'value': ['append'], 'probability': 0.001178364153020084}, {'value': ['compress'], 'probability': 0.0008504308061674237}, {'value': ['copy', 'stream', 'and', 'close'], 'probability': 0.0007129589794203639}, {'value': ['out'], 'probability': 0.000679587188642472}]","[0.78573024, 0.08894553, 0.59803283, 0.75079304, 1.0, 0.3156731, 0.11656992, 0.2393351, 0.6092868, 0.39670256]",0.7784303690228689
547,547,"public static void copyStream(InputStream input, OutputStream output, byte[] buffer) {int bytesRead;while ((bytesRead = input.read(buffer)) != -1) {output.write(buffer, 0, bytesRead);}}
","public static void [MASK](InputStream input, OutputStream output, byte[] buffer) {int bytesRead;while ((bytesRead = input.read(buffer)) != -1) {output.write(buffer, 0, bytesRead);}}
",copyStream,"[{'value': ['write'], 'probability': 0.8989531993865967}, {'value': ['read'], 'probability': 0.08971063047647476}, {'value': ['output'], 'probability': 0.0018635615706443787}, {'value': ['run'], 'probability': 0.0013045837404206395}, {'value': ['process'], 'probability': 0.0011065060971304774}]","[0.59803283, 0.7205266, 0.27141255, 0.28752774, 0.37075275]",0.6035335594029317,"[{'value': ['copy'], 'probability': 0.7519917488098145}, {'value': ['transfer'], 'probability': 0.13977497816085815}, {'value': ['copy', 'data'], 'probability': 0.050849296152591705}, {'value': ['copy', 'to'], 'probability': 0.02280445396900177}, {'value': ['copy', 'bytes'], 'probability': 0.02099490724503994}, {'value': ['copy', 'stream'], 'probability': 0.006158027797937393}, {'value': ['pipe'], 'probability': 0.0023045698180794716}, {'value': ['to', 'byte', 'array'], 'probability': 0.0017757881432771683}, {'value': ['write', 'to'], 'probability': 0.0017465173732489347}, {'value': ['append'], 'probability': 0.0015996984438970685}]","[1.0, 0.40018466, 0.82942796, 0.7977572, 0.75079304, 0.78573024, 0.22041258, 0.48112684, 0.5596341, 0.11656992]",0.8914233980525855
548,548,"public static void copyStream(InputStream input, ByteBuffer output) {copyStream(input, output, new byte[DEFAULT_BUFFER_SIZE]);}
","public static void [MASK](InputStream input, ByteBuffer output) {[MASK](input, output, new byte[DEFAULT_BUFFER_SIZE]);}
",copyStream,"[{'value': ['output'], 'probability': 0.19545379281044006}, {'value': ['write'], 'probability': 0.15995143353939056}, {'value': ['read'], 'probability': 0.12405139952898026}, {'value': ['run'], 'probability': 0.1127600222826004}, {'value': ['process'], 'probability': 0.059323981404304504}]","[0.27141255, 0.59803283, 0.7205266, 0.28752774, 0.37075275]",0.2925033152737137,"[{'value': ['copy', 'stream'], 'probability': 0.9700759053230286}, {'value': ['buffer'], 'probability': 0.006807810161262751}, {'value': ['compress'], 'probability': 0.006104396656155586}, {'value': ['to', 'buffered', 'input', 'stream'], 'probability': 0.00409359484910965}, {'value': ['to', 'byte', 'array'], 'probability': 0.003166979644447565}, {'value': ['to', 'bytes'], 'probability': 0.002688470296561718}, {'value': ['crypt'], 'probability': 0.0020806770771741867}, {'value': ['read', 'bytes'], 'probability': 0.0019399129087105393}, {'value': ['copy', 'bytes'], 'probability': 0.0015548234805464745}, {'value': ['append'], 'probability': 0.001487433910369873}]","[0.78573024, 0.08894553, 0.2393351, 0.43417794, 0.48112684, 0.45399582, 0.1871237, 0.5961924, 0.75079304, 0.11656992]",0.7716927623646269
549,549,"public static void copyStream(InputStream input, ByteBuffer output, int bufferSize) {copyStream(input, output, new byte[bufferSize]);}
","public static void [MASK](InputStream input, ByteBuffer output, int bufferSize) {[MASK](input, output, new byte[bufferSize]);}
",copyStream,"[{'value': ['write'], 'probability': 0.24449709057807922}, {'value': ['output'], 'probability': 0.14333820343017578}, {'value': ['run'], 'probability': 0.10403311997652054}, {'value': ['read'], 'probability': 0.08494159579277039}, {'value': ['execute'], 'probability': 0.06249942630529404}]","[0.59803283, 0.27141255, 0.28752774, 0.7205266, 0.27587637]",0.2934782751355713,"[{'value': ['copy', 'stream'], 'probability': 0.9032688140869141}, {'value': ['buffer'], 'probability': 0.039183519780635834}, {'value': ['write'], 'probability': 0.02223413623869419}, {'value': ['append'], 'probability': 0.018835561349987984}, {'value': ['copy', 'bytes'], 'probability': 0.00421734806150198}, {'value': ['compress'], 'probability': 0.0031388169154524803}, {'value': ['add', 'output'], 'probability': 0.00278476276434958}, {'value': ['inflate'], 'probability': 0.002484164433553815}, {'value': ['put', 'bytes'], 'probability': 0.002055093180388212}, {'value': ['copy'], 'probability': 0.0017978305695578456}]","[0.78573024, 0.08894553, 0.59803283, 0.11656992, 0.75079304, 0.2393351, 0.3695256, 0.09291911, 0.47154227, 1.0]",0.7366475702930232
550,550,"public static int copyStream(InputStream input, ByteBuffer output, byte[] buffer) {int startPosition = output.position(), total = 0, bytesRead;while ((bytesRead = input.read(buffer)) != -1) {BufferUtils.copy(buffer, 0, output, bytesRead);total += bytesRead;output.position(startPosition + total);}output.position(startPosition);return total;}
","public static int [MASK](InputStream input, ByteBuffer output, byte[] buffer) {int startPosition = output.position(), total = 0, bytesRead;while ((bytesRead = input.read(buffer)) != -1) {BufferUtils.copy(buffer, 0, output, bytesRead);total += bytesRead;output.position(startPosition + total);}output.position(startPosition);return total;}
",copyStream,"[{'value': ['read'], 'probability': 0.7258921265602112}, {'value': ['write'], 'probability': 0.10961098223924637}, {'value': ['copy'], 'probability': 0.04270709306001663}, {'value': ['position'], 'probability': 0.022277934476733208}, {'value': ['compare'], 'probability': 0.009570734575390816}]","[0.7205266, 0.59803283, 1.0, 0.31806153, 0.388827]",0.6420897416425864,"[{'value': ['transfer'], 'probability': 0.30663350224494934}, {'value': ['copy', 'to'], 'probability': 0.28301146626472473}, {'value': ['copy'], 'probability': 0.1459556370973587}, {'value': ['read'], 'probability': 0.11748966574668884}, {'value': ['write'], 'probability': 0.055073332041502}, {'value': ['to', 'byte', 'array'], 'probability': 0.026819489896297455}, {'value': ['get', 'bytes'], 'probability': 0.020628388971090317}, {'value': ['receive'], 'probability': 0.020613813772797585}, {'value': ['copy', 'data'], 'probability': 0.01553906686604023}, {'value': ['append'], 'probability': 0.008235666900873184}]","[0.40018466, 0.7977572, 1.0, 0.7205266, 0.59803283, 0.48112684, 0.4596816, 0.48554945, 0.82942796, 0.11656992]",0.6582738466214512
551,551,"public static byte[] copyStreamToByteArray(InputStream input) {return copyStreamToByteArray(input, input.available());}
","public static byte[] [MASK](InputStream input) {return [MASK](input, input.available());}
",copyStreamToByteArray,"[{'value': ['read'], 'probability': 0.14663469791412354}, {'value': ['get'], 'probability': 0.05237444117665291}, {'value': ['contains'], 'probability': 0.04167903959751129}, {'value': ['generate'], 'probability': 0.030089106410741806}, {'value': ['next'], 'probability': 0.02669769525527954}]","[0.7205266, 0.4466728, 0.48047602, 0.28430542, 0.38787416]",0.1679840562576241,"[{'value': ['compute'], 'probability': 0.27466118335723877}, {'value': ['encrypt'], 'probability': 0.12029030919075012}, {'value': ['decode', 'base'], 'probability': 0.1099512055516243}, {'value': ['read', 'input', 'stream'], 'probability': 0.08973322808742523}, {'value': ['stream', 'to', 'byte', 'array'], 'probability': 0.08863800019025803}, {'value': ['to', 'byte', 'array'], 'probability': 0.0729375034570694}, {'value': ['test', 'available'], 'probability': 0.069436214864254}, {'value': ['data'], 'probability': 0.061194319278001785}, {'value': ['load', 'data'], 'probability': 0.06113108992576599}, {'value': ['available'], 'probability': 0.05202685296535492}]","[0.17262277, 0.21412066, 0.33294088, 0.5967625, 0.4603174, 0.48112684, 0.49971586, 0.50351334, 0.48483884, 0.53749526]",0.36233334318650856
552,552,"public static byte[] copyStreamToByteArray(InputStream input, int estimatedSize) {ByteArrayOutputStream baos = new OptimizedByteArrayOutputStream(Math.max(0, estimatedSize));copyStream(input, baos);return baos.toByteArray();}
","public static byte[] [MASK](InputStream input, int estimatedSize) {ByteArrayOutputStream baos = new OptimizedByteArrayOutputStream(Math.max(0, estimatedSize));copyStream(input, baos);return baos.toByteArray();}
",copyStreamToByteArray,"[{'value': ['read'], 'probability': 0.37939372658729553}, {'value': ['write'], 'probability': 0.15287023782730103}, {'value': ['copy'], 'probability': 0.04543812945485115}, {'value': ['columns'], 'probability': 0.02722994238138199}, {'value': ['compare'], 'probability': 0.023580770939588547}]","[0.7205266, 0.59803283, 1.0, 0.32752708, 0.388827]",0.4283101972611868,"[{'value': ['object', 'to', 'byte', 'buffer'], 'probability': 0.7023911476135254}, {'value': ['estimated', 'size'], 'probability': 0.1618850976228714}, {'value': ['get', 'blob'], 'probability': 0.04467257112264633}, {'value': ['inflate'], 'probability': 0.03852173313498497}, {'value': ['generate', 'random'], 'probability': 0.018897274509072304}, {'value': ['get', 'estimated', 'size'], 'probability': 0.01794985868036747}, {'value': ['compress'], 'probability': 0.005402533803135157}, {'value': ['get', 'buffer'], 'probability': 0.0036558927968144417}, {'value': ['serialize'], 'probability': 0.0034238435328006744}, {'value': ['read'], 'probability': 0.003200107952579856}]","[0.4571973, 0.34626392, 0.38482288, 0.09291911, 0.42033303, 0.43943405, 0.2393351, 0.35660192, 0.14265017, 0.7205266]",0.4191785542336446
553,553,"public static String copyStreamToString(InputStream input) {return copyStreamToString(input, input.available(), null);}
","public static String [MASK](InputStream input) {return [MASK](input, input.available(), null);}
",copyStreamToString,"[{'value': ['get'], 'probability': 0.09339893609285355}, {'value': ['read'], 'probability': 0.07172983139753342}, {'value': ['extract'], 'probability': 0.060445673763751984}, {'value': ['output'], 'probability': 0.0529409758746624}, {'value': ['input'], 'probability': 0.052222248166799545}]","[0.4466728, 0.7205266, 0.3151352, 0.27141255, 0.35913798]",0.1455744121627767,"[{'value': ['input'], 'probability': 0.21296346187591553}, {'value': ['apply'], 'probability': 0.17969529330730438}, {'value': ['get', 'input', 'stream'], 'probability': 0.14900317788124084}, {'value': ['read'], 'probability': 0.12781725823879242}, {'value': ['available'], 'probability': 0.10987728834152222}, {'value': ['transform'], 'probability': 0.08462558686733246}, {'value': ['decode'], 'probability': 0.04954087361693382}, {'value': ['deserialize'], 'probability': 0.04953482747077942}, {'value': ['invoke'], 'probability': 0.02027764543890953}, {'value': ['data'], 'probability': 0.016664497554302216}]","[0.35913798, 0.38936093, 0.46463424, 0.7205266, 0.53749526, 0.19225709, 0.26405537, 0.0, 0.21899015, 0.50351334]",0.4090186327314543
554,554,"public static String copyStreamToString(InputStream input, int estimatedSize) {return copyStreamToString(input, estimatedSize, null);}
","public static String [MASK](InputStream input, int estimatedSize) {return [MASK](input, estimatedSize, null);}
",copyStreamToString,"[{'value': ['format'], 'probability': 0.07208645343780518}, {'value': ['read'], 'probability': 0.0477493591606617}, {'value': ['generate'], 'probability': 0.04458218812942505}, {'value': ['extract'], 'probability': 0.04240331053733826}, {'value': ['transform'], 'probability': 0.042349401861429214}]","[0.48529658, 0.7205266, 0.28430542, 0.3151352, 0.19225709]",0.1035676982851223,"[{'value': ['estimated', 'size'], 'probability': 0.6311396956443787}, {'value': ['object', 'to', 'byte', 'buffer'], 'probability': 0.2325906604528427}, {'value': ['get', 'estimated', 'size'], 'probability': 0.11039003729820251}, {'value': ['size', 'of'], 'probability': 0.008874128572642803}, {'value': ['set', 'estimated', 'size'], 'probability': 0.005396575666964054}, {'value': ['generate', 'string'], 'probability': 0.0045050960034132}, {'value': ['to', 'input', 'stream'], 'probability': 0.004119649063795805}, {'value': ['generate', 'random'], 'probability': 0.0010403862688690424}, {'value': ['get', 'blob'], 'probability': 0.000985141028650105}, {'value': ['create', 'feature', 'writer'], 'probability': 0.0009585794759914279}]","[0.34626392, 0.4571973, 0.43943405, 0.39181075, 0.41390547, 0.3012678, 0.45859924, 0.42033303, 0.38482288, 0.5271432]",0.38366874983925947
555,555,"public static String copyStreamToString(InputStream input, int estimatedSize, String charset) {InputStreamReader reader = charset == null ? new InputStreamReader(input) : new InputStreamReader(input, charset);StringWriter writer = new StringWriter(Math.max(0, estimatedSize));char[] buffer = new char[DEFAULT_BUFFER_SIZE];int charsRead;while ((charsRead = reader.read(buffer)) != -1) {writer.write(buffer, 0, charsRead);}return writer.toString();}
","public static String [MASK](InputStream input, int estimatedSize, String charset) {InputStreamReader reader = charset == null ? new InputStreamReader(input) : new InputStreamReader(input, charset);StringWriter writer = new StringWriter(Math.max(0, estimatedSize));char[] buffer = new char[DEFAULT_BUFFER_SIZE];int charsRead;while ((charsRead = reader.read(buffer)) != -1) {writer.write(buffer, 0, charsRead);}return writer.toString();}
",copyStreamToString,"[{'value': ['read'], 'probability': 0.6060905456542969}, {'value': ['write'], 'probability': 0.2813142240047455}, {'value': ['format'], 'probability': 0.006582552567124367}, {'value': ['execute'], 'probability': 0.0043447683565318584}, {'value': ['get'], 'probability': 0.0041990987956523895}]","[0.7205266, 0.59803283, 0.48529658, 0.27587637, 0.4466728]",0.6112082201071539,"[{'value': ['to', 'string'], 'probability': 0.6726521849632263}, {'value': ['object', 'to', 'byte', 'buffer'], 'probability': 0.10358218848705292}, {'value': ['read', 'string'], 'probability': 0.059469714760780334}, {'value': ['buffer'], 'probability': 0.04365747794508934}, {'value': ['generate', 'string'], 'probability': 0.028843535110354424}, {'value': ['get', 'random', 'string'], 'probability': 0.027257539331912994}, {'value': ['read', 'fully'], 'probability': 0.019135907292366028}, {'value': ['to', 'input', 'stream'], 'probability': 0.018672099336981773}, {'value': ['get', 'byte', 'array'], 'probability': 0.013584953732788563}, {'value': ['read', 'body'], 'probability': 0.013144418597221375}]","[0.39393824, 0.4571973, 0.57593226, 0.08894553, 0.3012678, 0.4671379, 0.64573854, 0.45859924, 0.48636645, 0.6675962]",0.4081994705973939
556,556,"public static void closeQuietly(Closeable c) {if (c != null) {try {c.close();} catch (Exception ignored) {}}}
","public static void [MASK](Closeable c) {if (c != null) {try {c.close();} catch (Exception ignored) {}}}
",closeQuietly,"[{'value': ['close'], 'probability': 0.20450857281684875}, {'value': ['visit'], 'probability': 0.10061940550804138}, {'value': ['run'], 'probability': 0.07318354398012161}, {'value': ['accept'], 'probability': 0.06059541925787926}, {'value': ['navigate'], 'probability': 0.03964027762413025}]","[1.0, 0.5367465, 0.5948943, 0.46804908, 0.1849077]",0.3377435821134139,"[{'value': ['close'], 'probability': 0.8127222061157227}, {'value': ['close', 'quietly'], 'probability': 0.13378524780273438}, {'value': ['close', 'silently'], 'probability': 0.02756868302822113}, {'value': ['close', 'stream'], 'probability': 0.009994490072131157}, {'value': ['close', 'safely'], 'probability': 0.00581295695155859}, {'value': ['safe', 'close'], 'probability': 0.004671947099268436}, {'value': ['stop'], 'probability': 0.0018711620941758156}, {'value': ['dispose'], 'probability': 0.0016438094899058342}, {'value': ['disconnect'], 'probability': 0.0011337489122524858}, {'value': ['ensure', 'closed'], 'probability': 0.0007957894122228026}]","[1.0, 0.8857772, 0.8051254, 0.8120786, 0.8274007, 0.86236584, 0.5339641, 0.17637412, 0.058303338, 0.6913876]",0.9722826181209414
557,557,"public synchronized byte[] toByteArray() {if (count == buf.length)return buf;return super.toByteArray();}
","public synchronized byte[] [MASK]() {if (count == buf.length)return buf;return super.[MASK]();}
",toByteArray,"[{'value': ['count'], 'probability': 0.8764675855636597}, {'value': ['counts'], 'probability': 0.03178185597062111}, {'value': ['size'], 'probability': 0.0056619225069880486}, {'value': ['values'], 'probability': 0.004924331326037645}, {'value': ['next'], 'probability': 0.003169028554111719}]","[0.41786298, 0.32707378, 0.45955554, 0.40528005, 0.73751295]",0.3835732710799318,"[{'value': ['to', 'byte', 'array'], 'probability': 0.9302024245262146}, {'value': ['to', 'array'], 'probability': 0.04262309893965721}, {'value': ['get', 'bytes'], 'probability': 0.00801072083413601}, {'value': ['get', 'byte', 'array'], 'probability': 0.005085284821689129}, {'value': ['to', 'bytes'], 'probability': 0.004597915336489677}, {'value': ['get', 'buffer'], 'probability': 0.003187724156305194}, {'value': ['get', 'data'], 'probability': 0.002578146755695343}, {'value': ['as', 'byte', 'array'], 'probability': 0.001476992154493928}, {'value': ['get', 'content'], 'probability': 0.0011437064968049526}, {'value': ['get', 'encoded'], 'probability': 0.0010939915664494038}]","[0.72012085, 0.8564837, 0.55387473, 0.5496694, 0.7641612, 0.6715366, 0.71899724, 0.5252677, 0.68594176, 0.5915428]",0.7233116889010597
558,558,"public byte[] getBuffer() {return buf;}public int read() {return dis.read();}
","public byte[] [MASK]() {return buf;}public int read() {return dis.read();}
",getBuffer,"[{'value': ['read'], 'probability': 0.5209325551986694}, {'value': ['b'], 'probability': 0.2243601232767105}, {'value': ['get'], 'probability': 0.03558139130473137}, {'value': ['bar'], 'probability': 0.029535727575421333}, {'value': ['bits'], 'probability': 0.009061194956302643}]","[0.5726487, 0.27764845, 1.0, 0.45318797, 0.35345045]",0.412773904071506,"[{'value': ['get', 'data'], 'probability': 0.7325431108474731}, {'value': ['get', 'buf'], 'probability': 0.07934178411960602}, {'value': ['get', 'buffer'], 'probability': 0.06753057986497879}, {'value': ['get', 'byte', 'array'], 'probability': 0.030927838757634163}, {'value': ['get', 'internal', 'buffer'], 'probability': 0.023318588733673096}, {'value': ['get', 'raw', 'data'], 'probability': 0.01953684724867344}, {'value': ['buffer'], 'probability': 0.015299969352781773}, {'value': ['get', 'content'], 'probability': 0.012208975851535797}, {'value': ['get', 'bytes'], 'probability': 0.010576412081718445}, {'value': ['get', 'signature'], 'probability': 0.008715896867215633}]","[0.82370985, 0.61199886, 0.7848379, 0.6962588, 0.72758454, 0.77037233, 0.17766908, 0.8431866, 0.7375703, 0.85901654]",0.7868120102849046
559,559,"public int read(byte b[], int off, int len) {return dis.read(b, off, len);}
","public int [MASK](byte b[], int off, int len) {return dis.[MASK](b, off, len);}
",read,"[{'value': ['compare'], 'probability': 0.2599860429763794}, {'value': ['read'], 'probability': 0.07153885811567307}, {'value': ['get'], 'probability': 0.041350677609443665}, {'value': ['transform'], 'probability': 0.029459955170750618}, {'value': ['translate'], 'probability': 0.02095746248960495}]","[0.49443805, 0.99999994, 0.5726487, 0.18695955, 0.51473916]",0.2400607049832689,"[{'value': ['read'], 'probability': 0.9998656511306763}, {'value': ['read', 'fully'], 'probability': 9.814526129048318e-05}, {'value': ['read', 'line'], 'probability': 1.5378922398667783e-05}, {'value': ['read', 'string'], 'probability': 9.625517122913152e-06}, {'value': ['get'], 'probability': 2.7098233204014832e-06}, {'value': ['deserialize'], 'probability': 2.1044211280241143e-06}, {'value': ['buffer'], 'probability': 2.002982228077599e-06}, {'value': ['read', 'or', 'throw'], 'probability': 1.5470396874661674e-06}, {'value': ['read', 'buffer'], 'probability': 1.5287768064808915e-06}, {'value': ['perform', 'io'], 'probability': 1.1780047088905121e-06}]","[0.99999994, 0.8293457, 0.8467882, 0.7958906, 0.5726487, 0.0, 0.08653828, 0.7888693, 0.7314873, 0.30345643]",0.9999720923152537
560,560,"public int read(byte b[]) {return dis.read(b);}
","public int [MASK](byte b[]) {return dis.[MASK](b);}
",read,"[{'value': ['compare'], 'probability': 0.15951745212078094}, {'value': ['read'], 'probability': 0.09061645716428757}, {'value': ['get'], 'probability': 0.0856180489063263}, {'value': ['split'], 'probability': 0.042116500437259674}, {'value': ['offset'], 'probability': 0.03578334301710129}]","[0.49443805, 0.99999994, 0.5726487, 0.2450231, 0.06905545]",0.2313075653518891,"[{'value': ['read'], 'probability': 0.923819899559021}, {'value': ['next', 'char'], 'probability': 0.021224049851298332}, {'value': ['parse'], 'probability': 0.013614698313176632}, {'value': ['parse', 'string'], 'probability': 0.012555085122585297}, {'value': ['read', 'string'], 'probability': 0.010561497882008553}, {'value': ['read', 'buffer'], 'probability': 0.0047121052630245686}, {'value': ['read', 'value'], 'probability': 0.003602705430239439}, {'value': ['decode'], 'probability': 0.003429015865549445}, {'value': ['read', 'unsigned', 'byte'], 'probability': 0.003369710175320506}, {'value': ['read', 'fully'], 'probability': 0.0031111836433410645}]","[0.99999994, 0.29840633, 0.21184428, 0.33587033, 0.7958906, 0.7314873, 0.7871069, 0.22994432, 0.6707073, 0.8293457]",0.9575714865552082
561,561,"public final void readFully(byte b[]) {dis.readFully(b);}
","public final [MASK] readFully(byte b[]) {dis.readFully(b);}
",void,"[{'value': ['void'], 'probability': 0.9611853957176208}, {'value': ['String'], 'probability': 0.00790842529386282}, {'value': ['double'], 'probability': 0.005472742486745119}, {'value': ['long'], 'probability': 0.004747397731989622}, {'value': ['T'], 'probability': 0.0029246893245726824}]","[1.0, 0.0, 0.14729977, 0.23130237, 0.0]",0.9630896137343962,"[{'value': ['read', 'fully'], 'probability': 0.9999370574951172}, {'value': ['read', 'byte', 'array'], 'probability': 3.0573348340112716e-05}, {'value': ['test', 'read', 'fully'], 'probability': 1.3639593817060813e-05}, {'value': ['read', 'all'], 'probability': 5.502417934621917e-06}, {'value': ['read', 'opaque'], 'probability': 3.521741973600001e-06}, {'value': ['load', 'class', 'data'], 'probability': 3.4724105262284866e-06}, {'value': ['read', 'bytes'], 'probability': 2.5803806238400284e-06}, {'value': ['read', 'block', 'data'], 'probability': 1.2633349797397386e-06}, {'value': ['main'], 'probability': 1.2229489811943495e-06}, {'value': ['read', 'array'], 'probability': 1.2054468925271067e-06}]","[0.2663047, 0.26630342, 0.28755406, 0.3007772, 0.34323558, 0.2608503, 0.2308994, 0.28642058, 0.1958346, 0.23261724]",0.2663052491481877
562,562,"public final void readFully(byte b[], int off, int len) {dis.readFully(b, off, len);}
","public final [MASK] readFully(byte b[], int off, int len) {dis.readFully(b, off, len);}
",void,"[{'value': ['void'], 'probability': 0.954531192779541}, {'value': ['double'], 'probability': 0.010755904950201511}, {'value': ['String'], 'probability': 0.0061720977537333965}, {'value': ['T'], 'probability': 0.005118005443364382}, {'value': ['long'], 'probability': 0.003965912852436304}]","[1.0, 0.14729977, 0.0, 0.0, 0.23130237]",0.9570328600924104,"[{'value': ['read', 'fully'], 'probability': 0.9998445510864258}, {'value': ['read'], 'probability': 0.00012982729822397232}, {'value': ['set', 'input'], 'probability': 8.941354280977976e-06}, {'value': ['read', 'byte', 'array'], 'probability': 6.06294315730338e-06}, {'value': ['read', 'all'], 'probability': 4.171934506302932e-06}, {'value': ['process', 'bytes'], 'probability': 2.593327280919766e-06}, {'value': ['unread'], 'probability': 2.3578804757562466e-06}, {'value': ['read', 'string'], 'probability': 5.423430025075504e-07}, {'value': ['load', 'class', 'data'], 'probability': 4.953805614604789e-07}, {'value': ['read', 'object'], 'probability': 4.5140888005335e-07}]","[0.2663047, 0.20274286, 0.30357876, 0.26630342, 0.3007772, 0.35786363, 0.24002083, 0.17369662, 0.2608503, 0.39563766]",0.26629710460758693
563,563,"public int skipBytes(int n) {return dis.skipBytes(n);}
","public int [MASK](int n) {return dis.[MASK](n);}
",skipBytes,"[{'value': ['compare'], 'probability': 0.1818845123052597}, {'value': ['get'], 'probability': 0.07465892285108566}, {'value': ['read'], 'probability': 0.03395171836018562}, {'value': ['split'], 'probability': 0.03079434111714363}, {'value': ['next'], 'probability': 0.027042482048273087}]","[0.22810635, 0.49507433, 0.33486244, 0.23896307, 0.41536683]",0.1084111440084053,"[{'value': ['skip', 'bytes'], 'probability': 0.9987152814865112}, {'value': ['skip'], 'probability': 0.0011573401279747486}, {'value': ['skip', 'int'], 'probability': 5.9633617638610303e-05}, {'value': ['test', 'skip', 'bytes', 'i'], 'probability': 3.401121648494154e-05}, {'value': ['get', 'skip', 'bytes'], 'probability': 1.079664161807159e-05}, {'value': ['test', 'skip', 'bytes'], 'probability': 1.013026758300839e-05}, {'value': ['skip', 'fully'], 'probability': 5.374442025640747e-06}, {'value': ['document'], 'probability': 3.1460256195714464e-06}, {'value': ['parse', 'node'], 'probability': 2.869930085580563e-06}, {'value': ['write', 'size'], 'probability': 1.4012397286933265e-06}]","[0.5265433, 1.0, 0.5468743, 0.5399771, 0.61621016, 0.49824414, 0.6831929, -0.048836187, 0.08788734, 0.24496394]",0.5270909715444418
564,564,"public void write(int b) {dos.write(b);}
","public void [MASK](int b) {dos.[MASK](b);}
",write,"[{'value': ['dos'], 'probability': 0.2893212139606476}, {'value': ['execute'], 'probability': 0.1188049241900444}, {'value': ['test'], 'probability': 0.03480405732989311}, {'value': ['consume'], 'probability': 0.02775776945054531}, {'value': ['add'], 'probability': 0.02244880422949791}]","[0.179932, 0.35316944, 0.26831806, 0.2743825, 0.45824197]",0.1212582003831766,"[{'value': ['write'], 'probability': 0.9832656383514404}, {'value': ['write', 'byte'], 'probability': 0.008783919736742973}, {'value': ['mark'], 'probability': 0.004877894185483456}, {'value': ['append', 'byte'], 'probability': 0.0013362511526793242}, {'value': ['send'], 'probability': 0.0009286197600886226}, {'value': ['write', 'message'], 'probability': 0.0002466042642481625}, {'value': ['write', 'data'], 'probability': 0.00021691512665711343}, {'value': ['collect'], 'probability': 0.0001363589835818857}, {'value': ['write', 'hdr'], 'probability': 0.0001210120171890594}, {'value': ['print'], 'probability': 8.680482278577983e-05}]","[1.0, 0.7422802, 0.29689136, 0.14565966, 0.5595454, 0.851363, 0.8013066, 0.5250464, 0.7808133, 0.54266113]",0.9925451689507528
565,565,"public void write(byte b[]) {dos.write(b);}
","public void [MASK](byte b[]) {dos.[MASK](b);}
",write,"[{'value': ['execute'], 'probability': 0.1663435399532318}, {'value': ['dos'], 'probability': 0.059931378811597824}, {'value': ['test'], 'probability': 0.048309940844774246}, {'value': ['read'], 'probability': 0.028038956224918365}, {'value': ['perform'], 'probability': 0.024570351466536522}]","[0.35316944, 0.179932, 0.26831806, 0.74154025, 0.51392853]",0.1159128766402564,"[{'value': ['write'], 'probability': 0.9952452778816223}, {'value': ['send'], 'probability': 0.00205844989977777}, {'value': ['write', 'bytes'], 'probability': 0.0016495309537276626}, {'value': ['print'], 'probability': 0.0007081066141836345}, {'value': ['write', 'direct'], 'probability': 0.00012406382302287966}, {'value': ['put', 'bytes'], 'probability': 5.6456014135619625e-05}, {'value': ['write', 'field', 'inst', 'content'], 'probability': 5.3927607950754464e-05}, {'value': ['buffer'], 'probability': 4.131052264710888e-05}, {'value': ['write', 'packet'], 'probability': 3.288041625637561e-05}, {'value': ['append'], 'probability': 3.0056078685447574e-05}]","[1.0, 0.5595454, 0.7501614, 0.54266113, 0.84849197, 0.48075452, 0.69111437, 0.11280382, 0.7388424, 0.12791875]",0.9982212273919883
566,566,"public void write(byte b[], int off, int len) {dos.write(b, off, len);}
","public void [MASK](byte b[], int off, int len) {dos.[MASK](b, off, len);}
",write,"[{'value': ['execute'], 'probability': 0.2933991253376007}, {'value': ['perform'], 'probability': 0.049983058124780655}, {'value': ['test'], 'probability': 0.04481153190135956}, {'value': ['read'], 'probability': 0.0273249801248312}, {'value': ['dos'], 'probability': 0.025834430009126663}]","[0.35316944, 0.51392853, 0.26831806, 0.74154025, 0.179932]",0.1662420813361452,"[{'value': ['write'], 'probability': 0.9968493580818176}, {'value': ['process', 'bytes'], 'probability': 0.0012586588272824883}, {'value': ['write', 'direct'], 'probability': 0.0004855635925196111}, {'value': ['write', 'byte', 'array'], 'probability': 0.00041577874799259007}, {'value': ['read', 'fully'], 'probability': 0.0003791163908317685}, {'value': ['add', 'bytes'], 'probability': 0.00016755265824031085}, {'value': ['real', 'write', 'bytes'], 'probability': 0.00016146809502970427}, {'value': ['append'], 'probability': 0.00011601076403167099}, {'value': ['set', 'off'], 'probability': 0.00010541194205870852}, {'value': ['pipe'], 'probability': 6.105699139880016e-05}]","[1.0, 0.35483032, 0.84849197, 0.68392426, 0.6885936, 0.41045162, 0.74288684, 0.12791875, 0.46109185, 0.12992284]",0.9985134855182861
567,567,"public long getFilePointer() {return pos;}
","public long [MASK]() {return pos;}
",getFilePointer,"[{'value': ['get'], 'probability': 0.1668098121881485}, {'value': ['id'], 'probability': 0.03434882313013077}, {'value': ['f'], 'probability': 0.0280644278973341}, {'value': ['test'], 'probability': 0.02703762613236904}, {'value': ['count'], 'probability': 0.025700798258185387}]","[1.0, 0.2945777, 0.23515049, 0.4599198, 0.4437648]",0.2073678225858794,"[{'value': ['get', 'pos'], 'probability': 0.588441789150238}, {'value': ['get', 'position'], 'probability': 0.23278328776359558}, {'value': ['position'], 'probability': 0.11082484573125839}, {'value': ['get', 'file', 'pointer'], 'probability': 0.021340981125831604}, {'value': ['pos'], 'probability': 0.01990169659256935}, {'value': ['current'], 'probability': 0.0093926340341568}, {'value': ['get', 'stream', 'position'], 'probability': 0.005335570778697729}, {'value': ['get', 'start', 'position'], 'probability': 0.004373741336166859}, {'value': ['seek', 'internal'], 'probability': 0.0038748790975660086}, {'value': ['length'], 'probability': 0.0037305490113794804}]","[0.6599685, 0.88500535, 0.5401049, 0.7442341, -0.05180933, 0.49881056, 0.8434052, 0.88125086, 0.5913549, 0.3304365]",0.6856398293160842
568,568,"public void seek(long pos) {if (pos < 0) {throw new IllegalArgumentException();}this.pos = (int) pos;}
","public void [MASK](long pos) {if (pos < 0) {throw new IllegalArgumentException();}this.pos = (int) pos;}
",seek,"[{'value': ['save'], 'probability': 0.05900545418262482}, {'value': ['main'], 'probability': 0.04182445630431175}, {'value': ['update'], 'probability': 0.04134984314441681}, {'value': ['run'], 'probability': 0.03927440568804741}, {'value': ['read'], 'probability': 0.038756441324949265}]","[0.48139173, 0.34416533, 0.33834425, 0.43565318, 0.3211035]",0.0863445958530316,"[{'value': ['set', 'pos'], 'probability': 0.8714132308959961}, {'value': ['set', 'position'], 'probability': 0.11750411242246628}, {'value': ['set', 'index'], 'probability': 0.0038161003030836582}, {'value': ['seek'], 'probability': 0.0034299097023904324}, {'value': ['seek', 'internal'], 'probability': 0.0028276483062654734}, {'value': ['pos'], 'probability': 0.0006133558345027268}, {'value': ['set', 'string'], 'probability': 0.00014482093683909625}, {'value': ['position'], 'probability': 0.00010953343007713556}, {'value': ['skip', 'to'], 'probability': 7.303224265342578e-05}, {'value': ['set', 'write', 'position'], 'probability': 6.828993355156854e-05}]","[0.25715655, 0.5622064, 0.3609607, 0.99999994, 0.8170563, -0.09772006, 0.3709476, 0.48914403, 0.6685134, 0.60635406]",0.29740649605260433
569,569,"public long length() {return len;}
","public long [MASK]() {return len;}
",length,"[{'value': ['get'], 'probability': 0.1224789097905159}, {'value': ['bar'], 'probability': 0.10783758014440536}, {'value': ['f'], 'probability': 0.07918360084295273}, {'value': ['strip'], 'probability': 0.07857683300971985}, {'value': ['le'], 'probability': 0.0480949804186821}]","[0.3304365, 0.28815565, 0.34387305, 0.297615, 0.18214786]",0.1309206574155317,"[{'value': ['get', 'len'], 'probability': 0.9175216555595398}, {'value': ['get', 'length'], 'probability': 0.05889903008937836}, {'value': ['length'], 'probability': 0.02111963741481304}, {'value': ['get', 'total', 'length'], 'probability': 0.0006053742836229503}, {'value': ['get', 'size'], 'probability': 0.0005492344498634338}, {'value': ['size'], 'probability': 0.00046404768363572657}, {'value': ['get', 'file', 'size'], 'probability': 0.0003609243722166866}, {'value': ['capacity'], 'probability': 0.00021707183623220772}, {'value': ['get', 'remaining'], 'probability': 0.00015286215057130903}, {'value': ['get', 'stream', 'length'], 'probability': 0.00011018788063665852}]","[0.18017453, 0.82353365, 1.0, 0.7890646, 0.56652945, 0.62106156, 0.5243184, 0.4504132, 0.41975537, 0.779733]",0.2364531359321666
570,570,"public void close() {if (data != null) {flush();data = null;}}
","public void [MASK]() {if (data != null) {flush();data = null;}}
",close,"[{'value': ['flush'], 'probability': 0.9333741664886475}, {'value': ['close'], 'probability': 0.012763431295752525}, {'value': ['run'], 'probability': 0.010203707031905651}, {'value': ['clear'], 'probability': 0.008386882953345776}, {'value': ['test'], 'probability': 0.0060875448398292065}]","[0.23173186, 1.0, 0.5948943, 0.6670826, 0.409312]",0.2432125406943634,"[{'value': ['dispose'], 'probability': 0.45724600553512573}, {'value': ['close'], 'probability': 0.2201288491487503}, {'value': ['flush'], 'probability': 0.12173189967870712}, {'value': ['disconnect'], 'probability': 0.11190194636583328}, {'value': ['release'], 'probability': 0.0370170995593071}, {'value': ['stop'], 'probability': 0.026320042088627815}, {'value': ['free'], 'probability': 0.009428657591342926}, {'value': ['flush', 'data'], 'probability': 0.006554788909852505}, {'value': ['close', 'connection'], 'probability': 0.004957468714565039}, {'value': ['close', 'output', 'stream'], 'probability': 0.004713103640824556}]","[0.17637412, 1.0, 0.23173186, 0.058303338, 0.386632, 0.5339641, 0.45826697, 0.44611123, 0.8813275, 0.713984]",0.37885382174380205
571,571,"void consolidate() {if (newData == null) {return;}if (data.length() < newDataPos) {StringBuilder filler = new StringBuilder();while (data.length() + filler.length() < newDataPos) {filler.append('\0');}data += filler.toString();}int p2 = newDataPos + newData.length();data = data.substring(0, newDataPos) + newData.toString() + (p2 < data.length() ? data.substring(p2) : """");newData = null;}
","void consolidate() [MASK] (newData == null) {return;}if (data.length() < newDataPos) {StringBuilder filler = new StringBuilder();while (data.length() + filler.length() < newDataPos) {filler.append('\0');}data += filler.toString();}int p2 = newDataPos + newData.length();data = data.substring(0, newDataPos) + newData.toString() + (p2 < data.length() ? data.substring(p2) : """");newData = null;}
",{if,"[{'value': ['if'], 'probability': 0.9909204244613647}, {'value': ['while'], 'probability': 0.006277223117649555}, {'value': ['{'], 'probability': 0.0011052823392674327}, {'value': ['##if'], 'probability': 0.00024386974109802395}, {'value': ['return'], 'probability': 0.00019946023530792445}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['write', 'length'], 'probability': 0.9064423441886902}, {'value': ['write', 'value'], 'probability': 0.08231505006551743}, {'value': ['write', 'tag'], 'probability': 0.005305490456521511}, {'value': ['write', 'field'], 'probability': 0.003539399476721883}, {'value': ['convert', 'data'], 'probability': 0.0008637005812488496}, {'value': ['get', 'content', 'size'], 'probability': 0.0004092965682502836}, {'value': ['send', 'response'], 'probability': 0.0003200633218511939}, {'value': ['to', 'pdf'], 'probability': 0.000305385299725458}, {'value': ['get', 'checkin', 'comment'], 'probability': 0.00026410751161165535}, {'value': ['check', 'range'], 'probability': 0.00023524780408479273}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
572,572,"void flush() {if (!dirty) {return;}consolidate();File.LocalStorage.setItem(name, btoa(data));dirty = false;}
","void flush() [MASK] (!dirty) {return;}consolidate();File.LocalStorage.setItem(name, btoa(data));dirty = false;}
",{if,"[{'value': ['if'], 'probability': 0.870118260383606}, {'value': ['{'], 'probability': 0.12806758284568787}, {'value': ['while'], 'probability': 0.0006406332249753177}, {'value': [';'], 'probability': 0.0005538173136301339}, {'value': ['('], 'probability': 0.0001347788784187287}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['delete'], 'probability': 0.5057337880134583}, {'value': ['update'], 'probability': 0.3204703629016876}, {'value': ['clear'], 'probability': 0.0589568130671978}, {'value': ['save'], 'probability': 0.036502812057733536}, {'value': ['close'], 'probability': 0.02079891413450241}, {'value': ['run'], 'probability': 0.017691852524876595}, {'value': ['invalidate'], 'probability': 0.013830930925905704}, {'value': ['remove'], 'probability': 0.010011953301727772}, {'value': ['flush'], 'probability': 0.00854843482375145}, {'value': ['refresh'], 'probability': 0.007454044185578823}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
573,573,"public final boolean readBoolean() {return dis.readBoolean();}
","public final [MASK] readBoolean() {return dis.readBoolean();}
",boolean,"[{'value': ['String'], 'probability': 0.891448438167572}, {'value': ['long'], 'probability': 0.029199572280049324}, {'value': ['void'], 'probability': 0.013387279585003853}, {'value': ['Short'], 'probability': 0.00369443790987134}, {'value': ['Long'], 'probability': 0.0033528355415910482}]","[0.0, -0.07843863, 0.16551133, 0.0, 0.0]",-7.462812790433315e-05,"[{'value': ['read', 'bool'], 'probability': 0.4108853042125702}, {'value': ['test', 'write', 'boolean', 'z'], 'probability': 0.3643173277378082}, {'value': ['read', 'boolean'], 'probability': 0.1411580741405487}, {'value': ['read', 'boolean', 'array'], 'probability': 0.03816976770758629}, {'value': ['test', 'read', 'boolean'], 'probability': 0.024706710129976273}, {'value': ['read', 'abstract', 'interface'], 'probability': 0.007157566025853157}, {'value': ['test', 'print', 'z'], 'probability': 0.007151956669986248}, {'value': ['consume', 'endian'], 'probability': 0.0026376452296972275}, {'value': ['is', 'default'], 'probability': 0.002079037018120289}, {'value': ['get', 'value', 'as', 'boolean'], 'probability': 0.0017366100801154971}]","[0.05270379, 0.6011556, 0.7785824, 0.68241674, 0.6182272, 0.25444528, 0.18166721, -0.0043283803, 0.22770682, 0.44841334]",0.39625305355663987
574,574,"public final byte readByte() {return dis.readByte();}
","public final [MASK] readByte() {return dis.readByte();}
",byte,"[{'value': ['String'], 'probability': 0.5426133275032043}, {'value': ['long'], 'probability': 0.2313849925994873}, {'value': ['short'], 'probability': 0.03959447890520096}, {'value': ['Block'], 'probability': 0.029494665563106537}, {'value': ['Long'], 'probability': 0.013035187497735023}]","[0.0, 0.041541476, 0.15249231, 0.0, 0.0]",0.0156499278038986,"[{'value': ['read', 'byte'], 'probability': 0.9845986366271973}, {'value': ['get'], 'probability': 0.010455350391566753}, {'value': ['parse'], 'probability': 0.0019974776078015566}, {'value': ['byte', 'value'], 'probability': 0.0008147174958139658}, {'value': ['peek'], 'probability': 0.000722438155207783}, {'value': ['read'], 'probability': 0.0004455186426639557}, {'value': ['next', 'byte'], 'probability': 0.00029911872115917504}, {'value': ['get', 'value'], 'probability': 0.00029149744659662247}, {'value': ['read', 'value'], 'probability': 0.0001924018288264051}, {'value': ['read', 'bytes'], 'probability': 0.00018287255079485476}]","[0.7831174, 0.008644018, 0.4064839, 0.7739571, 0.11208729, 0.21959703, 0.7128503, 0.16961575, 0.30751652, 0.6398709]",0.7732068611729725
575,575,"public final int readUnsignedByte() {return dis.readUnsignedByte();}
","public final [MASK] readUnsignedByte() {return dis.readUnsignedByte();}
",int,"[{'value': ['String'], 'probability': 0.48889243602752686}, {'value': ['long'], 'probability': 0.2762495279312134}, {'value': ['short'], 'probability': 0.02728719264268875}, {'value': ['float'], 'probability': 0.02373799867928028}, {'value': ['Block'], 'probability': 0.016981763765215874}]","[0.0, 0.028398475, -0.01114769, 0.07377654, 0.0]",0.0092921835427988,"[{'value': ['read', 'unsigned', 'byte'], 'probability': 0.9998325109481812}, {'value': ['read', 'byte'], 'probability': 5.2293504268163815e-05}, {'value': ['read', 'int'], 'probability': 2.8285119697102346e-05}, {'value': ['get', 'ui'], 'probability': 2.080240665236488e-05}, {'value': ['test', 'unsigned', 'byte'], 'probability': 1.807389344321564e-05}, {'value': ['read', 'field'], 'probability': 1.1237381841056049e-05}, {'value': ['read', 'octet'], 'probability': 1.1038596312573645e-05}, {'value': ['read'], 'probability': 1.0235139598080423e-05}, {'value': ['test', 'read', 'unsigned', 'byte'], 'probability': 9.175445484288502e-06}, {'value': ['get', 'instance', 'class', 'name'], 'probability': 6.278760793065885e-06}]","[0.1653422, 0.16483884, 0.7581079, 0.0881887, 0.15496825, 0.0741016, 0.13634485, 0.048014, 0.1395072, 0.009813165]",0.16535337643076067
576,576,"public final short readShort() {return dis.readShort();}
","public final [MASK] readShort() {return dis.readShort();}
",short,"[{'value': ['String'], 'probability': 0.7120510339736938}, {'value': ['long'], 'probability': 0.13444337248802185}, {'value': ['void'], 'probability': 0.03288210555911064}, {'value': ['Long'], 'probability': 0.010487863793969154}, {'value': ['short'], 'probability': 0.010369078256189823}]","[0.0, 0.82193786, 0.2045382, 0.0, 0.99999994]",0.1275988219479762,"[{'value': ['read', 'short'], 'probability': 0.9906037449836731}, {'value': ['get', 'message', 'type'], 'probability': 0.0022447174414992332}, {'value': ['decode', 'short'], 'probability': 0.0017860197694972157}, {'value': ['byte', 'array', 'to', 'short', 'array'], 'probability': 0.0012981394538655877}, {'value': ['parse', 'short'], 'probability': 0.0011034664930775762}, {'value': ['read', 'short', 'array'], 'probability': 0.0010706082684919238}, {'value': ['byte', 'array', 'to', 'short'], 'probability': 0.0007981224334798753}, {'value': ['get', 'short'], 'probability': 0.0004529679717961699}, {'value': ['bytes', 'to', 'short'], 'probability': 0.0004074090102221817}, {'value': ['check', 'short'], 'probability': 0.00023483089171350002}]","[0.86806184, 0.6061101, 0.71226776, 0.7409124, 0.75262475, 0.8343535, 0.7944494, 0.87722754, 0.7861253, 0.8574092]",0.8667765939280068
577,577,"public final int readUnsignedShort() {return dis.readUnsignedShort();}
","public final [MASK] readUnsignedShort() {return dis.readUnsignedShort();}
",int,"[{'value': ['String'], 'probability': 0.5977048873901367}, {'value': ['long'], 'probability': 0.23820015788078308}, {'value': ['void'], 'probability': 0.03534736856818199}, {'value': ['Long'], 'probability': 0.013471067883074284}, {'value': ['short'], 'probability': 0.01043046172708273}]","[0.0, 0.028398475, -0.009351521, 0.0, -0.01114769]",0.00631769394566,"[{'value': ['get', 'access'], 'probability': 0.5372856855392456}, {'value': ['read', 'unsigned', 'short'], 'probability': 0.32401466369628906}, {'value': ['test', 'read', 'unsigned', 'short'], 'probability': 0.0657527893781662}, {'value': ['read', 'u', 'short'], 'probability': 0.050496019423007965}, {'value': ['read', 'word'], 'probability': 0.017696987837553024}, {'value': ['read', 'unsigned', 'int'], 'probability': 0.0012734674382954836}, {'value': ['read', 'int'], 'probability': 0.0012448672205209732}, {'value': ['read', 'short'], 'probability': 0.00099729944486171}, {'value': ['get', 'u'], 'probability': 0.0007749839569441974}, {'value': ['read', 'utf'], 'probability': 0.0004631746851373464}]","[0.0892269, 0.056228645, 0.051111538, 0.15382165, 0.019463712, 0.6243629, 0.7581079, 0.021277022, 0.19714996, 0.048014]",0.07956689391317065
578,578,"public final char readChar() {return dis.readChar();}
","public final [MASK] readChar() {return dis.readChar();}
",char,"[{'value': ['String'], 'probability': 0.5319722890853882}, {'value': ['long'], 'probability': 0.1777401566505432}, {'value': ['void'], 'probability': 0.06364260613918304}, {'value': ['Long'], 'probability': 0.02148726023733616}, {'value': ['double'], 'probability': 0.020579272881150246}]","[0.0, -0.046802614, -0.13917476, 0.0, -0.13358574]",-0.0199252456370521,"[{'value': ['read', 'char'], 'probability': 0.9362727999687195}, {'value': ['get', 'char'], 'probability': 0.023770945146679878}, {'value': ['next', 'char'], 'probability': 0.01563415117561817}, {'value': ['test', 'read', 'char'], 'probability': 0.011554580181837082}, {'value': ['read', 'char', 'array'], 'probability': 0.0057641672901809216}, {'value': ['read', 'unicode', 'escape'], 'probability': 0.0024552277754992247}, {'value': ['test', 'write', 'chars', 'ljava', 'lang', 'string'], 'probability': 0.0014124891022220254}, {'value': ['read', 'wchar'], 'probability': 0.0013075378956273198}, {'value': ['get', 'line', 'comment'], 'probability': 0.0009790915064513683}, {'value': ['read', 'object'], 'probability': 0.0008489702013321221}]","[0.6479244, 0.6029776, 0.65701026, 0.37537768, 0.4420511, -0.06983135, -0.074519746, -0.09710982, -0.13999553, -0.10232499]",0.6374969010616827
579,579,"public final int readInt() {return dis.readInt();}
","public final [MASK] readInt() {return dis.readInt();}
",int,"[{'value': ['String'], 'probability': 0.6903719902038574}, {'value': ['long'], 'probability': 0.17970742285251617}, {'value': ['double'], 'probability': 0.013850188814103603}, {'value': ['float'], 'probability': 0.012167817912995815}, {'value': ['void'], 'probability': 0.011294581927359104}]","[0.0, 0.028398475, -0.006145916, 0.07377654, -0.009351521]",0.0058103726264557,"[{'value': ['read', 'int'], 'probability': 0.9926996827125549}, {'value': ['skip', 'int'], 'probability': 0.002397602191194892}, {'value': ['test', 'read', 'int'], 'probability': 0.0012677686754614115}, {'value': ['decode', 'int'], 'probability': 0.0008766096434555948}, {'value': ['skip', 'string'], 'probability': 0.0007242013816721737}, {'value': ['load', 'int'], 'probability': 0.0005893142079003155}, {'value': ['read', 'int', 'array'], 'probability': 0.0005457536317408085}, {'value': ['read', 'id'], 'probability': 0.0004576322971843183}, {'value': ['get', 'sequence', 'number'], 'probability': 0.00024193408899009228}, {'value': ['get', 'int'], 'probability': 0.0001994908816413954}]","[0.7581079, 0.80076855, 0.5450577, 0.77071315, -0.0007867202, 0.7465888, 0.6567582, 0.12948318, 0.018306462, 0.7213287]",0.7568654348369102
580,580,"public final long readLong() {return dis.readLong();}
","public final [MASK] readLong() {return dis.readLong();}
",long,"[{'value': ['String'], 'probability': 0.8001680374145508}, {'value': ['long'], 'probability': 0.08919468522071838}, {'value': ['Long'], 'probability': 0.014606291428208351}, {'value': ['short'], 'probability': 0.011749633587896824}, {'value': ['void'], 'probability': 0.009742125868797302}]","[0.0, 1.0, 0.0, 0.82193786, 0.23130237]",0.1011055306566915,"[{'value': ['read', 'long'], 'probability': 0.7421738505363464}, {'value': ['test', 'read', 'long'], 'probability': 0.16822397708892822}, {'value': ['read', 'longlong'], 'probability': 0.04823891445994377}, {'value': ['read', 'long', 'array'], 'probability': 0.008890683762729168}, {'value': ['read', 'date'], 'probability': 0.0061494288966059685}, {'value': ['get', 'long'], 'probability': 0.006023269146680832}, {'value': ['read', 'long', 'le'], 'probability': 0.005499710328876972}, {'value': ['decode', 'long'], 'probability': 0.0052889385260641575}, {'value': ['new', 'node', 'id'], 'probability': 0.005172297358512878}, {'value': ['next', 'long'], 'probability': 0.0043389275670051575}]","[0.8592227, 0.7976907, 0.44214627, 0.82917404, 0.5564273, 0.906537, 0.74233943, 0.7262092, 0.39371595, 0.91557574]",0.8233984889319323
581,581,"public final float readFloat() {return dis.readFloat();}
","public final [MASK] readFloat() {return dis.readFloat();}
",float,"[{'value': ['String'], 'probability': 0.4262028932571411}, {'value': ['long'], 'probability': 0.188203364610672}, {'value': ['float'], 'probability': 0.09565228223800659}, {'value': ['Long'], 'probability': 0.07241563498973846}, {'value': ['void'], 'probability': 0.047481637448072433}]","[0.0, 0.31141275, 1.0, 0.0, 0.22919214]",0.1651436278749281,"[{'value': ['read', 'float'], 'probability': 0.9076830744743347}, {'value': ['test', 'write', 'float', 'f'], 'probability': 0.03519529849290848}, {'value': ['test', 'read', 'float'], 'probability': 0.0332486554980278}, {'value': ['get', 'float'], 'probability': 0.011454125866293907}, {'value': ['next', 'float'], 'probability': 0.004328779876232147}, {'value': ['test', 'read', 'write', 'float'], 'probability': 0.0027925947215408087}, {'value': ['read', 'floats'], 'probability': 0.001801979378797114}, {'value': ['read', 'vector'], 'probability': 0.0017468479927629232}, {'value': ['read', 'float', 'array'], 'probability': 0.0009841579012572765}, {'value': ['decode', 'from', 'stream'], 'probability': 0.0007645137375220656}]","[0.7511868, 0.5235553, 0.5701767, 0.7508107, 0.77749, 0.5200041, 0.6534329, 0.25570244, 0.66301054, 0.3337755]",0.7351732908130976
582,582,"public final double readDouble() {return dis.readDouble();}
","public final [MASK] readDouble() {return dis.readDouble();}
",double,"[{'value': ['String'], 'probability': 0.6151750683784485}, {'value': ['long'], 'probability': 0.15801021456718445}, {'value': ['void'], 'probability': 0.05219327285885811}, {'value': ['Long'], 'probability': 0.03336590155959129}, {'value': ['Short'], 'probability': 0.01194669771939516}]","[0.0, 0.56460696, 0.14729977, 0.0, 0.0]",0.0969017245277985,"[{'value': ['read', 'double'], 'probability': 0.9873675107955933}, {'value': ['test', 'read', 'double'], 'probability': 0.010493675246834755}, {'value': ['parse', 'double'], 'probability': 0.0005260219913907349}, {'value': ['read', 'df'], 'probability': 0.0005224374472163618}, {'value': ['decode', 'double'], 'probability': 0.00045263406354933977}, {'value': ['get', 'double'], 'probability': 0.0002675055293366313}, {'value': ['get', 'double', 'array'], 'probability': 0.00010084540554089472}, {'value': ['read', 'coordinate'], 'probability': 0.00010022793867392465}, {'value': ['read', 'doubles'], 'probability': 9.127841622103006e-05}, {'value': ['bytes', 'to', 'double'], 'probability': 7.783192268107086e-05}]","[0.8172243, 0.74531925, 0.78047657, 0.23197575, 0.735801, 0.8721349, 0.80349934, 0.33102444, 0.594957, 0.7412971]",0.8160461616056044
583,583,"public final String readLine() {return dis.readLine();}
","public final [MASK] readLine() {return dis.readLine();}
",String,"[{'value': ['String'], 'probability': 0.5628323554992676}, {'value': ['long'], 'probability': 0.1736033856868744}, {'value': ['void'], 'probability': 0.028941458091139793}, {'value': ['short'], 'probability': 0.02583693526685238}, {'value': ['line'], 'probability': 0.02267143875360489}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['read', 'line'], 'probability': 0.6081022620201111}, {'value': ['get', 'line'], 'probability': 0.3826601505279541}, {'value': ['first', 'line'], 'probability': 0.002567023504525423}, {'value': ['next'], 'probability': 0.0019233673810958862}, {'value': ['read', 'title'], 'probability': 0.0012383966241031885}, {'value': ['next', 'line'], 'probability': 0.0010089220013469458}, {'value': ['read', 'first', 'line'], 'probability': 0.0009096632129512727}, {'value': ['test', 'read', 'line'], 'probability': 0.0006326353759504855}, {'value': ['read', 'n'], 'probability': 0.00048488908214494586}, {'value': ['read', 'input'], 'probability': 0.0004726377665065229}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
584,584,"public final String readUTF() {return dis.readUTF();}
","public final [MASK] readUTF() {return dis.readUTF();}
",String,"[{'value': ['String'], 'probability': 0.5588594675064087}, {'value': ['long'], 'probability': 0.15430478751659393}, {'value': ['Long'], 'probability': 0.03363722935318947}, {'value': ['short'], 'probability': 0.02547055296599865}, {'value': ['double'], 'probability': 0.0221471656113863}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['read', 'utf'], 'probability': 0.9915653467178345}, {'value': ['test', 'write', 'utf', 'ljava', 'lang', 'string'], 'probability': 0.003372295992448926}, {'value': ['read', 'string'], 'probability': 0.0026696755085140467}, {'value': ['get', 'property', 'string'], 'probability': 0.001778940437361598}, {'value': ['read', 'string', 'array'], 'probability': 0.00022845345665700734}, {'value': ['read', 'class'], 'probability': 0.00015906394401099533}, {'value': ['extract'], 'probability': 8.348431583726779e-05}, {'value': ['test', 'read', 'utf'], 'probability': 5.869711094419472e-05}, {'value': ['read', 'c', 'string'], 'probability': 4.7168501623673365e-05}, {'value': ['get', 'message', 'type'], 'probability': 3.6782821553060785e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
585,585,"public final void writeBoolean(boolean v) {dos.writeBoolean(v);}
","public final [MASK] writeBoolean(boolean v) {dos.writeBoolean(v);}
",void,"[{'value': ['void'], 'probability': 0.9873095154762268}, {'value': ['T'], 'probability': 0.0028599670622497797}, {'value': ['double'], 'probability': 0.0019920102786272764}, {'value': ['String'], 'probability': 0.0009954929118975997}, {'value': ['Block'], 'probability': 0.0009718557121232152}]","[1.0, 0.0, 0.14729977, 0.0, 0.0]",0.9876029381252148,"[{'value': ['write', 'boolean'], 'probability': 0.9990271329879761}, {'value': ['put', 'boolean'], 'probability': 0.00038557694642804563}, {'value': ['write', 'bool'], 'probability': 0.0003438791318330914}, {'value': ['test', 'write', 'boolean'], 'probability': 0.00010619284148560837}, {'value': ['write'], 'probability': 6.287470750976354e-05}, {'value': ['write', 'boolean', 'array'], 'probability': 2.7330586817697622e-05}, {'value': ['test', 'write', 'boolean', 'z'], 'probability': 1.6228270396823063e-05}, {'value': ['write', 'short'], 'probability': 1.3397449947660789e-05}, {'value': ['write', 'payload'], 'probability': 9.352659617434256e-06}, {'value': ['write', 'byte'], 'probability': 8.081648957158905e-06}]","[0.27246907, 0.31654024, 0.080589764, 0.30962592, 0.23281288, 0.28359824, 0.29925904, 0.24812882, 0.25409493, 0.27601263]",0.27242181444217706
586,586,"public final void writeByte(int v) {dos.writeByte(v);}
","public final [MASK] writeByte(int v) {dos.writeByte(v);}
",void,"[{'value': ['void'], 'probability': 0.9343679547309875}, {'value': ['long'], 'probability': 0.015395516529679298}, {'value': ['double'], 'probability': 0.010081241838634014}, {'value': ['Block'], 'probability': 0.009177123196423054}, {'value': ['T'], 'probability': 0.005033168010413647}]","[1.0, 0.23130237, 0.14729977, 0.0, 0.0]",0.9394139386941396,"[{'value': ['write', 'byte'], 'probability': 0.9979752898216248}, {'value': ['append', 'byte'], 'probability': 0.001175088807940483}, {'value': ['write'], 'probability': 0.0003659078502096236}, {'value': ['write', 'int'], 'probability': 0.00010434222349431366}, {'value': ['write', 'tag'], 'probability': 9.261981176678091e-05}, {'value': ['write', 'short'], 'probability': 8.371045987587422e-05}, {'value': ['send'], 'probability': 7.187309529399499e-05}, {'value': ['mark'], 'probability': 6.69333094265312e-05}, {'value': ['emit'], 'probability': 3.351269697304815e-05}, {'value': ['write', 'number'], 'probability': 3.056258356082253e-05}]","[0.27601263, 0.19254804, 0.23281288, 0.14809893, 0.28781593, 0.24812882, 0.17046128, 0.09545663, 0.13693906, 0.26460448]",0.2758594319341658
587,587,"public final void writeShort(int v) {dos.writeShort(v);}
","public final [MASK] writeShort(int v) {dos.writeShort(v);}
",void,"[{'value': ['void'], 'probability': 0.9738897085189819}, {'value': ['long'], 'probability': 0.005459510255604982}, {'value': ['double'], 'probability': 0.004301826469600201}, {'value': ['Block'], 'probability': 0.004209623206406832}, {'value': ['T'], 'probability': 0.003608815371990204}]","[1.0, 0.23130237, 0.14729977, 0.0, 0.0]",0.975786164191122,"[{'value': ['write', 'short'], 'probability': 0.9902099370956421}, {'value': ['write', 'char'], 'probability': 0.002953871851786971}, {'value': ['write', 'index'], 'probability': 0.0026878691278398037}, {'value': ['write'], 'probability': 0.001724875415675342}, {'value': ['write', 'data'], 'probability': 0.0006592361605726182}, {'value': ['write', 'byte'], 'probability': 0.0006137775490060449}, {'value': ['write', 'int'], 'probability': 0.0004102059465367347}, {'value': ['write', 'number'], 'probability': 0.0003796463133767247}, {'value': ['write', 'footer'], 'probability': 0.00018702882516663522}, {'value': ['to', 'data'], 'probability': 0.00017353582370560616}]","[0.24812882, 0.079567544, 0.12702428, 0.23281288, 0.22054863, 0.27601263, 0.14809893, 0.26460448, 0.22340757, 0.26568222]",0.2472415536291516
588,588,"public final void writeChar(int v) {dos.writeChar(v);}
","public final [MASK] writeChar(int v) {dos.writeChar(v);}
",void,"[{'value': ['void'], 'probability': 0.9742127656936646}, {'value': ['double'], 'probability': 0.006948527414351702}, {'value': ['long'], 'probability': 0.0043495092540979385}, {'value': ['Block'], 'probability': 0.002673021052032709}, {'value': ['T'], 'probability': 0.0021456792019307613}]","[1.0, 0.14729977, 0.23130237, 0.0, 0.0]",0.9762423339395347,"[{'value': ['write', 'char'], 'probability': 0.9925112724304199}, {'value': ['write'], 'probability': 0.0030288854613900185}, {'value': ['write', 'short'], 'probability': 0.0027340378146618605}, {'value': ['write', 'byte'], 'probability': 0.0009079007431864738}, {'value': ['write', 'char', 'array'], 'probability': 0.0006286290008574724}, {'value': ['write', 'number'], 'probability': 8.610989607404917e-05}, {'value': ['write', 'int'], 'probability': 5.222430991125293e-05}, {'value': ['write', 'character'], 'probability': 2.886769470933359e-05}, {'value': ['test', 'write', 'char'], 'probability': 1.1279896170890424e-05}, {'value': ['write', 'token'], 'probability': 1.0873623068619054e-05}]","[0.079567544, 0.23281288, 0.24812882, 0.27601263, 0.14962298, 0.26460448, 0.14809893, 0.3263906, 0.19414473, 0.3122558]",0.08074541773733064
589,589,"public final void writeInt(int v) {dos.writeInt(v);}
","public final [MASK] writeInt(int v) {dos.writeInt(v);}
",void,"[{'value': ['void'], 'probability': 0.8990377187728882}, {'value': ['long'], 'probability': 0.03544255346059799}, {'value': ['double'], 'probability': 0.022180801257491112}, {'value': ['T'], 'probability': 0.007127630989998579}, {'value': ['float'], 'probability': 0.005033654626458883}]","[1.0, 0.23130237, 0.14729977, 0.0, 0.22919214]",0.9116565661446628,"[{'value': ['write', 'int'], 'probability': 0.9835831522941589}, {'value': ['write', 'byte'], 'probability': 0.013618231751024723}, {'value': ['write', 'float'], 'probability': 0.0007333180983550847}, {'value': ['write', 'long'], 'probability': 0.0005699617322534323}, {'value': ['write'], 'probability': 0.0005140677094459534}, {'value': ['write', 'short'], 'probability': 0.0004655513621401042}, {'value': ['write', 'integer'], 'probability': 0.00017973269859794527}, {'value': ['start', 'vector'], 'probability': 0.0001351494574919343}, {'value': ['write', 'number'], 'probability': 0.00012675549078267068}, {'value': ['write', 'header'], 'probability': 7.408772216876969e-05}]","[0.14809893, 0.27601263, 0.29085952, 0.2730673, 0.23281288, 0.24812882, 0.25616923, 0.26653364, 0.26460448, 0.21235472]",0.1501618819499321
590,590,"public final void writeLong(long v) {dos.writeLong(v);}
","public final [MASK] writeLong(long v) {dos.writeLong(v);}
",void,"[{'value': ['void'], 'probability': 0.941311240196228}, {'value': ['long'], 'probability': 0.024623140692710876}, {'value': ['double'], 'probability': 0.014700639992952347}, {'value': ['Long'], 'probability': 0.004140270408242941}, {'value': ['T'], 'probability': 0.002721658907830715}]","[1.0, 0.23130237, 0.14729977, 0.0, 0.0]",0.9491720317274056,"[{'value': ['write', 'long'], 'probability': 0.997431218624115}, {'value': ['write', 'byte'], 'probability': 0.0012869350612163544}, {'value': ['write', 'int'], 'probability': 0.0007973375031724572}, {'value': ['write', 'double'], 'probability': 0.0001402747875545174}, {'value': ['put', 'long'], 'probability': 0.0001150923635577783}, {'value': ['write', 'float'], 'probability': 5.619948206003755e-05}, {'value': ['write'], 'probability': 5.025855716667138e-05}, {'value': ['encode', 'long'], 'probability': 4.987115244148299e-05}, {'value': ['pack', 'long'], 'probability': 4.265315146767534e-05}, {'value': ['write', 'short'], 'probability': 3.0265406167018227e-05}]","[0.2730673, 0.27601263, 0.14809893, 0.22756758, 0.28484127, 0.29085952, 0.23281288, 0.2466188, 0.15674877, 0.24812882]",0.27295839172242575
591,591,"public final void writeFloat(float v) {dos.writeFloat(v);}
","public final [MASK] writeFloat(float v) {dos.writeFloat(v);}
",void,"[{'value': ['void'], 'probability': 0.9505426287651062}, {'value': ['double'], 'probability': 0.01199833769351244}, {'value': ['float'], 'probability': 0.009925035759806633}, {'value': ['long'], 'probability': 0.005781172309070826}, {'value': ['Double'], 'probability': 0.0029210650827735662}]","[1.0, 0.14729977, 0.22919214, 0.23130237, 0.0]",0.9559219201003348,"[{'value': ['write', 'float'], 'probability': 0.9995424747467041}, {'value': ['append', 'float'], 'probability': 0.0003340101975481957}, {'value': ['write', 'vector'], 'probability': 2.4771054086158983e-05}, {'value': ['write'], 'probability': 2.2337630070978776e-05}, {'value': ['write', 'number'], 'probability': 1.7973694411921315e-05}, {'value': ['test', 'write', 'float'], 'probability': 1.56507649080595e-05}, {'value': ['write', 'real'], 'probability': 1.539525510452222e-05}, {'value': ['write', 'floats'], 'probability': 1.1029175766452681e-05}, {'value': ['write', 'f'], 'probability': 1.0663675311661791e-05}, {'value': ['write', 'float', 'array'], 'probability': 5.621945547318319e-06}]","[0.29085952, 0.22719501, 0.2777721, 0.23281288, 0.26460448, 0.32721636, 0.3230314, 0.24302118, 0.21995898, 0.29706845]",0.2908359573246137
592,592,"public final void writeDouble(double v) {dos.writeDouble(v);}
","public final [MASK] writeDouble(double v) {dos.writeDouble(v);}
",void,"[{'value': ['void'], 'probability': 0.7529341578483582}, {'value': ['double'], 'probability': 0.15823228657245636}, {'value': ['long'], 'probability': 0.026590699329972267}, {'value': ['Double'], 'probability': 0.019340626895427704}, {'value': ['float'], 'probability': 0.01254269853234291}]","[1.0, 0.14729977, 0.23130237, 0.0, 0.22919214]",0.7852669162686315,"[{'value': ['write', 'double'], 'probability': 0.9975802898406982}, {'value': ['write', 'float'], 'probability': 0.0009401874849572778}, {'value': ['write', 'double', 'array'], 'probability': 0.0008938946994021535}, {'value': ['write', 'real'], 'probability': 0.00031026513897813857}, {'value': ['put', 'double'], 'probability': 0.00013078050687909126}, {'value': ['append', 'double'], 'probability': 4.978906872565858e-05}, {'value': ['write', 'number'], 'probability': 4.874445585301146e-05}, {'value': ['save', 'to', 'stream'], 'probability': 2.492378916940652e-05}, {'value': ['write', 'df'], 'probability': 1.4250365893531125e-05}, {'value': ['test', 'write', 'double'], 'probability': 6.8569511313398834e-06}]","[0.22756758, 0.29085952, 0.2453722, 0.3230314, 0.24281415, 0.20777908, 0.26460448, 0.3130573, 0.079398155, 0.2655468]",0.2276757105407429
593,593,"public final void writeBytes(String s) {dos.writeBytes(s);}
","public final [MASK] writeBytes(String s) {dos.writeBytes(s);}
",void,"[{'value': ['void'], 'probability': 0.6477766036987305}, {'value': ['dos'], 'probability': 0.17121292650699615}, {'value': ['long'], 'probability': 0.04114525392651558}, {'value': ['double'], 'probability': 0.03032700903713703}, {'value': ['String'], 'probability': 0.012197012081742287}]","[1.0, 0.08358926, 0.23130237, 0.14729977, 0.0]",0.6760723220060558,"[{'value': ['write', 'bytes'], 'probability': 0.9783443212509155}, {'value': ['write', 'string'], 'probability': 0.017859255895018578}, {'value': ['write'], 'probability': 0.0014257384464144707}, {'value': ['write', 'atom'], 'probability': 0.0012264640536159277}, {'value': ['write', 'input', 'file'], 'probability': 0.00029715095297433436}, {'value': ['add', 'tag'], 'probability': 0.00023418795899488032}, {'value': ['print'], 'probability': 0.00017139391275122762}, {'value': ['write', 'chars'], 'probability': 0.000154160923557356}, {'value': ['write', 'byte'], 'probability': 0.00014377766638062894}, {'value': ['write', 'newline'], 'probability': 0.00014357145118992776}]","[0.2535389, 0.18753292, 0.23281288, 0.26061568, 0.33584085, 0.25208795, 0.14974634, 0.17949097, 0.27601263, 0.2421394]",0.25233572372823126
594,594,"public final void writeChars(String s) {dos.writeChars(s);}
","public final [MASK] writeChars(String s) {dos.writeChars(s);}
",void,"[{'value': ['void'], 'probability': 0.7792946100234985}, {'value': ['dos'], 'probability': 0.09976549446582794}, {'value': ['double'], 'probability': 0.0320219062268734}, {'value': ['long'], 'probability': 0.018622735515236855}, {'value': ['Double'], 'probability': 0.007796915248036385}]","[1.0, 0.08358926, 0.14729977, 0.23130237, 0.0]",0.7966582362958514,"[{'value': ['write', 'chars'], 'probability': 0.9895690083503723}, {'value': ['write', 'string'], 'probability': 0.008851872757077217}, {'value': ['characters'], 'probability': 0.001351773738861084}, {'value': ['test', 'write', 'chars', 'ljava', 'lang', 'string'], 'probability': 6.198720802785829e-05}, {'value': ['write', 'method'], 'probability': 5.297144525684416e-05}, {'value': ['write'], 'probability': 4.261053618392907e-05}, {'value': ['save', 'internal'], 'probability': 2.400056655460503e-05}, {'value': ['note'], 'probability': 1.6187934306799434e-05}, {'value': ['test', 'write', 'chars'], 'probability': 1.5035951946629211e-05}, {'value': ['print', 'err'], 'probability': 1.4626699339714833e-05}]","[0.17949097, 0.18753292, 0.25980982, 0.20300566, 0.2551546, 0.23281288, 0.34052643, 0.15300694, 0.26509726, 0.099782005]",0.1796820379363635
595,595,"public final void writeUTF(String str) {dos.writeUTF(str);}
","public final [MASK] writeUTF(String str) {dos.writeUTF(str);}
",void,"[{'value': ['void'], 'probability': 0.8916694521903992}, {'value': ['double'], 'probability': 0.015776854008436203}, {'value': ['String'], 'probability': 0.01550128310918808}, {'value': ['long'], 'probability': 0.015293448232114315}, {'value': ['Double'], 'probability': 0.006329036317765713}]","[1.0, 0.14729977, 0.0, 0.23130237, 0.0]",0.8975307898577828,"[{'value': ['write', 'utf'], 'probability': 0.9988603591918945}, {'value': ['test', 'write', 'utf'], 'probability': 0.0008211578824557364}, {'value': ['write', 'string'], 'probability': 0.0002809988509397954}, {'value': ['write', 'bytes'], 'probability': 1.4058695342100691e-05}, {'value': ['write', 'chars'], 'probability': 1.3690709238289855e-05}, {'value': ['write', 'string', 'array'], 'probability': 3.095102329098154e-06}, {'value': ['store', 'string'], 'probability': 1.9585345398809295e-06}, {'value': ['write'], 'probability': 1.7735884512148914e-06}, {'value': ['encode', 'string'], 'probability': 1.5632678014299017e-06}, {'value': ['write', 'tag'], 'probability': 1.4003984460941865e-06}]","[0.23281288, 0.28265795, 0.18753292, 0.2535389, 0.17949097, 0.20668957, 0.11319232, 0.23281288, 0.12031665, 0.28781593]",0.2328402475396469
596,596,"public int read() {if (pos >= len) {return -1;} else {consolidate();return data.charAt(pos++);}}
","public int [MASK]() {if (pos >= len) {return -1;} else {consolidate();return data.charAt(pos++);}}
",read,"[{'value': ['size'], 'probability': 0.2082349807024002}, {'value': ['get'], 'probability': 0.09800181537866592}, {'value': ['compare'], 'probability': 0.06358855962753296}, {'value': ['divide'], 'probability': 0.057591311633586884}, {'value': ['length'], 'probability': 0.04734761640429497}]","[0.28599972, 0.5726487, 0.49443805, 0.27616334, 0.310966]",0.1777444698765955,"[{'value': ['read'], 'probability': 0.9964894652366638}, {'value': ['get'], 'probability': 0.0016026700614020228}, {'value': ['next'], 'probability': 0.0008652874385006726}, {'value': ['peek'], 'probability': 0.0008003035909496248}, {'value': ['parse'], 'probability': 9.507243521511555e-05}, {'value': ['get', 'next'], 'probability': 6.550761463586241e-05}, {'value': ['consume'], 'probability': 3.6108423955738544e-05}, {'value': ['process'], 'probability': 1.8902012016042136e-05}, {'value': ['pop'], 'probability': 1.3420915820461232e-05}, {'value': ['get', 'index'], 'probability': 1.3343296814127825e-05}]","[0.99999994, 0.5726487, 0.48554757, 0.24956368, 0.21184428, 0.57607687, 0.21197909, 0.32488367, 0.3516319, 0.48789856]",0.9981099398533799
597,597,"public static long getCPtr(btRotationalLimitMotor2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btRotationalLimitMotor2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08345511555671692}, {'value': ['read'], 'probability': 0.04878680780529976}, {'value': ['skip'], 'probability': 0.045526936650276184}, {'value': ['run'], 'probability': 0.039531562477350235}, {'value': ['update'], 'probability': 0.03499934822320938}]","[1.0, 0.5726487, 0.49507433, 0.65114945, 0.36048478]",0.1722897230989746,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
598,598,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
599,599,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btRotationalLimitMotor2(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btRotationalLimitMotor2(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8382529020309448}, {'value': ['start'], 'probability': 0.01348917093127966}, {'value': ['test'], 'probability': 0.010508913546800613}, {'value': ['clear'], 'probability': 0.008071022108197212}, {'value': ['execute'], 'probability': 0.007960735820233822}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1245549513280591,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
600,600,"public void setLoLimit(float value) {DynamicsJNI.btRotationalLimitMotor2_loLimit_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_loLimit_set(swigCPtr, this, value);}
",setLoLimit,"[{'value': ['set'], 'probability': 0.6790344715118408}, {'value': ['put'], 'probability': 0.1084679588675499}, {'value': ['value'], 'probability': 0.00862809456884861}, {'value': ['save'], 'probability': 0.008604748174548149}, {'value': ['update'], 'probability': 0.008352186530828476}]","[1.0, 0.7944568, 0.47274652, 0.5413879, 0.41854778]",0.7774407743380857,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
601,601,"public float getLoLimit() {return DynamicsJNI.btRotationalLimitMotor2_loLimit_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_loLimit_get(swigCPtr, this);}
",getLoLimit,"[{'value': ['get'], 'probability': 0.06971893459558487}, {'value': ['run'], 'probability': 0.06358657032251358}, {'value': ['next'], 'probability': 0.03161238133907318}, {'value': ['float'], 'probability': 0.029573829844594002}, {'value': ['f'], 'probability': 0.026475902646780014}]","[1.0, 0.65114945, 0.6966621, 0.2808844, 0.23515049]",0.1476790922445846,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
602,602,"public void setHiLimit(float value) {DynamicsJNI.btRotationalLimitMotor2_hiLimit_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_hiLimit_set(swigCPtr, this, value);}
",setHiLimit,"[{'value': ['set'], 'probability': 0.6316286325454712}, {'value': ['put'], 'probability': 0.13709336519241333}, {'value': ['accept'], 'probability': 0.01032346673309803}, {'value': ['save'], 'probability': 0.009330647066235542}, {'value': ['value'], 'probability': 0.009161430411040783}]","[1.0, 0.7944568, 0.44626972, 0.5413879, 0.47274652]",0.7545329705491184,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
603,603,"public float getHiLimit() {return DynamicsJNI.btRotationalLimitMotor2_hiLimit_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_hiLimit_get(swigCPtr, this);}
",getHiLimit,"[{'value': ['get'], 'probability': 0.08213979750871658}, {'value': ['float'], 'probability': 0.04955551400780678}, {'value': ['run'], 'probability': 0.04836219921708107}, {'value': ['next'], 'probability': 0.043998438864946365}, {'value': ['bar'], 'probability': 0.03283685818314552}]","[1.0, 0.2808844, 0.65114945, 0.6966621, 0.45318797]",0.1730835023183871,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
604,604,"public void setBounce(float value) {DynamicsJNI.btRotationalLimitMotor2_bounce_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_bounce_set(swigCPtr, this, value);}
",setBounce,"[{'value': ['set'], 'probability': 0.627159833908081}, {'value': ['put'], 'probability': 0.11583711951971054}, {'value': ['accept'], 'probability': 0.010926621966063976}, {'value': ['update'], 'probability': 0.010249409824609756}, {'value': ['get'], 'probability': 0.009364556521177292}]","[1.0, 0.7944568, 0.44626972, 0.41854778, 0.65028083]",0.7344430987541897,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
605,605,"public float getBounce() {return DynamicsJNI.btRotationalLimitMotor2_bounce_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_bounce_get(swigCPtr, this);}
",getBounce,"[{'value': ['get'], 'probability': 0.09549223631620407}, {'value': ['float'], 'probability': 0.045383017510175705}, {'value': ['build'], 'probability': 0.03716367483139038}, {'value': ['bar'], 'probability': 0.035896267741918564}, {'value': ['run'], 'probability': 0.02696080505847931}]","[1.0, 0.2808844, 0.5626448, 0.45318797, 0.65114945]",0.1629728351450813,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
606,606,"public void setStopERP(float value) {DynamicsJNI.btRotationalLimitMotor2_stopERP_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_stopERP_set(swigCPtr, this, value);}
",setStopERP,"[{'value': ['set'], 'probability': 0.7302438616752625}, {'value': ['put'], 'probability': 0.08917996287345886}, {'value': ['get'], 'probability': 0.009157728403806686}, {'value': ['add'], 'probability': 0.0075484393164515495}, {'value': ['update'], 'probability': 0.007035147864371538}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.41854778]",0.8138314184963309,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
607,607,"public float getStopERP() {return DynamicsJNI.btRotationalLimitMotor2_stopERP_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_stopERP_get(swigCPtr, this);}
",getStopERP,"[{'value': ['get'], 'probability': 0.1051890179514885}, {'value': ['run'], 'probability': 0.04382384568452835}, {'value': ['next'], 'probability': 0.04242083430290222}, {'value': ['start'], 'probability': 0.037867434322834015}, {'value': ['bar'], 'probability': 0.02994680590927601}]","[1.0, 0.65114945, 0.6966621, 0.7199945, 0.45318797]",0.2041137558725437,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
608,608,"public void setStopCFM(float value) {DynamicsJNI.btRotationalLimitMotor2_stopCFM_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_stopCFM_set(swigCPtr, this, value);}
",setStopCFM,"[{'value': ['set'], 'probability': 0.5978229641914368}, {'value': ['put'], 'probability': 0.10980992019176483}, {'value': ['save'], 'probability': 0.02666022814810276}, {'value': ['accept'], 'probability': 0.011308358982205391}, {'value': ['update'], 'probability': 0.010508371517062187}]","[1.0, 0.7944568, 0.5413879, 0.44626972, 0.41854778]",0.7089405589094904,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
609,609,"public float getStopCFM() {return DynamicsJNI.btRotationalLimitMotor2_stopCFM_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_stopCFM_get(swigCPtr, this);}
",getStopCFM,"[{'value': ['start'], 'probability': 0.10359024256467819}, {'value': ['run'], 'probability': 0.060002051293849945}, {'value': ['stop'], 'probability': 0.05473094806075096}, {'value': ['get'], 'probability': 0.054309066385030746}, {'value': ['bar'], 'probability': 0.03413304686546326}]","[0.7199945, 0.65114945, 0.6723754, 1.0, 0.45318797]",0.2202322009254953,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
610,610,"public void setMotorERP(float value) {DynamicsJNI.btRotationalLimitMotor2_motorERP_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_motorERP_set(swigCPtr, this, value);}
",setMotorERP,"[{'value': ['set'], 'probability': 0.7515745759010315}, {'value': ['put'], 'probability': 0.07697384804487228}, {'value': ['get'], 'probability': 0.009796389378607273}, {'value': ['add'], 'probability': 0.0077165355905890465}, {'value': ['accept'], 'probability': 0.006645304150879383}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.44626972]",0.8259867384607263,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
611,611,"public float getMotorERP() {return DynamicsJNI.btRotationalLimitMotor2_motorERP_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_motorERP_get(swigCPtr, this);}
",getMotorERP,"[{'value': ['get'], 'probability': 0.13095304369926453}, {'value': ['next'], 'probability': 0.04026986286044121}, {'value': ['float'], 'probability': 0.0370299406349659}, {'value': ['run'], 'probability': 0.0334005281329155}, {'value': ['start'], 'probability': 0.028089739382267}]","[1.0, 0.6966621, 0.2808844, 0.65114945, 0.7199945]",0.2113818571908925,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
612,612,"public void setMotorCFM(float value) {DynamicsJNI.btRotationalLimitMotor2_motorCFM_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_motorCFM_set(swigCPtr, this, value);}
",setMotorCFM,"[{'value': ['set'], 'probability': 0.713707685470581}, {'value': ['put'], 'probability': 0.08818439394235611}, {'value': ['get'], 'probability': 0.009981718845665455}, {'value': ['accept'], 'probability': 0.008967853151261806}, {'value': ['add'], 'probability': 0.00734278280287981}]","[1.0, 0.7944568, 0.65028083, 0.44626972, 0.5084879]",0.7979930929569881,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
613,613,"public float getMotorCFM() {return DynamicsJNI.btRotationalLimitMotor2_motorCFM_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_motorCFM_get(swigCPtr, this);}
",getMotorCFM,"[{'value': ['get'], 'probability': 0.10323652625083923}, {'value': ['float'], 'probability': 0.037375710904598236}, {'value': ['next'], 'probability': 0.03407663106918335}, {'value': ['start'], 'probability': 0.033027105033397675}, {'value': ['build'], 'probability': 0.03103872947394848}]","[1.0, 0.2808844, 0.6966621, 0.7199945, 0.5626448]",0.1787177907395881,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
614,614,"public void setEnableMotor(boolean value) {DynamicsJNI.btRotationalLimitMotor2_enableMotor_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {DynamicsJNI.btRotationalLimitMotor2_enableMotor_set(swigCPtr, this, value);}
",setEnableMotor,"[{'value': ['set'], 'probability': 0.7430070638656616}, {'value': ['put'], 'probability': 0.07693298906087875}, {'value': ['accept'], 'probability': 0.012107869610190392}, {'value': ['execute'], 'probability': 0.009881995618343353}, {'value': ['apply'], 'probability': 0.008525200188159943}]","[1.0, 0.7944568, 0.44626972, 0.35167885, 0.5010617]",0.8172773141663818,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
615,615,"public boolean getEnableMotor() {return DynamicsJNI.btRotationalLimitMotor2_enableMotor_get(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_enableMotor_get(swigCPtr, this);}
",getEnableMotor,"[{'value': ['run'], 'probability': 0.08766573667526245}, {'value': ['supports'], 'probability': 0.05659224092960358}, {'value': ['enable'], 'probability': 0.05521699786186218}, {'value': ['is'], 'probability': 0.04687783867120743}, {'value': ['exists'], 'probability': 0.042903341352939606}]","[0.65114945, 0.28394556, 0.50338316, 0.60187685, 0.33321124]",0.1434584806008003,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
616,616,"public void setTargetVelocity(float value) {DynamicsJNI.btRotationalLimitMotor2_targetVelocity_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_targetVelocity_set(swigCPtr, this, value);}
",setTargetVelocity,"[{'value': ['set'], 'probability': 0.6066279411315918}, {'value': ['put'], 'probability': 0.10306435823440552}, {'value': ['add'], 'probability': 0.013748323544859886}, {'value': ['get'], 'probability': 0.012378867715597153}, {'value': ['accept'], 'probability': 0.012050287798047066}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.44626972]",0.7089263941826816,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
617,617,"public float getTargetVelocity() {return DynamicsJNI.btRotationalLimitMotor2_targetVelocity_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_targetVelocity_get(swigCPtr, this);}
",getTargetVelocity,"[{'value': ['get'], 'probability': 0.08857336640357971}, {'value': ['run'], 'probability': 0.05823454260826111}, {'value': ['next'], 'probability': 0.03650520369410515}, {'value': ['build'], 'probability': 0.03172074630856514}, {'value': ['start'], 'probability': 0.027822963893413544}]","[1.0, 0.65114945, 0.6966621, 0.5626448, 0.7199945]",0.1898044426706961,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
618,618,"public void setMaxMotorForce(float value) {DynamicsJNI.btRotationalLimitMotor2_maxMotorForce_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_maxMotorForce_set(swigCPtr, this, value);}
",setMaxMotorForce,"[{'value': ['set'], 'probability': 0.6867669224739075}, {'value': ['put'], 'probability': 0.11894746869802475}, {'value': ['get'], 'probability': 0.00970154907554388}, {'value': ['add'], 'probability': 0.007691505365073681}, {'value': ['accept'], 'probability': 0.007278185337781906}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.44626972]",0.7947333478537936,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
619,619,"public float getMaxMotorForce() {return DynamicsJNI.btRotationalLimitMotor2_maxMotorForce_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_maxMotorForce_get(swigCPtr, this);}
",getMaxMotorForce,"[{'value': ['get'], 'probability': 0.10220921784639359}, {'value': ['next'], 'probability': 0.04424707591533661}, {'value': ['run'], 'probability': 0.041076768189668655}, {'value': ['float'], 'probability': 0.03916560858488083}, {'value': ['bar'], 'probability': 0.0317700132727623}]","[1.0, 0.6966621, 0.65114945, 0.2808844, 0.45318797]",0.1851803907757845,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
620,620,"public void setServoMotor(boolean value) {DynamicsJNI.btRotationalLimitMotor2_servoMotor_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {DynamicsJNI.btRotationalLimitMotor2_servoMotor_set(swigCPtr, this, value);}
",setServoMotor,"[{'value': ['set'], 'probability': 0.7329468131065369}, {'value': ['put'], 'probability': 0.07257460802793503}, {'value': ['execute'], 'probability': 0.013027007691562176}, {'value': ['accept'], 'probability': 0.010577255859971046}, {'value': ['apply'], 'probability': 0.00967126339673996}]","[1.0, 0.7944568, 0.35167885, 0.44626972, 0.5010617]",0.8047517340530501,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
621,621,"public boolean getServoMotor() {return DynamicsJNI.btRotationalLimitMotor2_servoMotor_get(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_servoMotor_get(swigCPtr, this);}
",getServoMotor,"[{'value': ['run'], 'probability': 0.13581620156764984}, {'value': ['execute'], 'probability': 0.07822166383266449}, {'value': ['is'], 'probability': 0.07768306881189346}, {'value': ['matches'], 'probability': 0.03579077124595642}, {'value': ['exists'], 'probability': 0.031881336122751236}]","[0.65114945, 0.37713256, 0.60187685, 0.38072872, 0.33321124]",0.1889420172502596,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
622,622,"public void setServoTarget(float value) {DynamicsJNI.btRotationalLimitMotor2_servoTarget_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_servoTarget_set(swigCPtr, this, value);}
",setServoTarget,"[{'value': ['set'], 'probability': 0.6756637096405029}, {'value': ['put'], 'probability': 0.1176416203379631}, {'value': ['add'], 'probability': 0.009565450251102448}, {'value': ['value'], 'probability': 0.008536596782505512}, {'value': ['get'], 'probability': 0.008507338352501392}]","[1.0, 0.7944568, 0.5084879, 0.47274652, 0.65028083]",0.7835566135493989,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
623,623,"public float getServoTarget() {return DynamicsJNI.btRotationalLimitMotor2_servoTarget_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_servoTarget_get(swigCPtr, this);}
",getServoTarget,"[{'value': ['get'], 'probability': 0.09547517448663712}, {'value': ['float'], 'probability': 0.05297791585326195}, {'value': ['next'], 'probability': 0.0419938750565052}, {'value': ['run'], 'probability': 0.03594380244612694}, {'value': ['id'], 'probability': 0.03145721182227135}]","[1.0, 0.2808844, 0.6966621, 0.65114945, 0.2945777]",0.1722827661489187,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
624,624,"public void setEnableSpring(boolean value) {DynamicsJNI.btRotationalLimitMotor2_enableSpring_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {DynamicsJNI.btRotationalLimitMotor2_enableSpring_set(swigCPtr, this, value);}
",setEnableSpring,"[{'value': ['set'], 'probability': 0.781581699848175}, {'value': ['put'], 'probability': 0.06189955770969391}, {'value': ['execute'], 'probability': 0.010236796922981739}, {'value': ['apply'], 'probability': 0.009075148031115532}, {'value': ['accept'], 'probability': 0.0076695955358445644}]","[1.0, 0.7944568, 0.35167885, 0.5010617, 0.44626972]",0.8423282052571166,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
625,625,"public boolean getEnableSpring() {return DynamicsJNI.btRotationalLimitMotor2_enableSpring_get(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_enableSpring_get(swigCPtr, this);}
",getEnableSpring,"[{'value': ['run'], 'probability': 0.11030159890651703}, {'value': ['execute'], 'probability': 0.0666578933596611}, {'value': ['is'], 'probability': 0.05723758041858673}, {'value': ['supports'], 'probability': 0.033390969038009644}, {'value': ['exists'], 'probability': 0.03267073631286621}]","[0.65114945, 0.37713256, 0.60187685, 0.28394556, 0.33321124]",0.1517791369023713,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
626,626,"public void setSpringStiffness(float value) {DynamicsJNI.btRotationalLimitMotor2_springStiffness_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_springStiffness_set(swigCPtr, this, value);}
",setSpringStiffness,"[{'value': ['set'], 'probability': 0.6531163454055786}, {'value': ['put'], 'probability': 0.10355525463819504}, {'value': ['accept'], 'probability': 0.01164784375578165}, {'value': ['add'], 'probability': 0.011289520189166069}, {'value': ['get'], 'probability': 0.010432220995426178}]","[1.0, 0.7944568, 0.44626972, 0.5084879, 0.65028083]",0.7531090570850748,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
627,627,"public float getSpringStiffness() {return DynamicsJNI.btRotationalLimitMotor2_springStiffness_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_springStiffness_get(swigCPtr, this);}
",getSpringStiffness,"[{'value': ['get'], 'probability': 0.08039117604494095}, {'value': ['float'], 'probability': 0.06377169489860535}, {'value': ['bar'], 'probability': 0.05003779008984566}, {'value': ['run'], 'probability': 0.03733794391155243}, {'value': ['start'], 'probability': 0.0301086213439703}]","[1.0, 0.2808844, 0.45318797, 0.65114945, 0.7199945]",0.166970797020274,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
628,628,"public void setSpringStiffnessLimited(boolean value) {DynamicsJNI.btRotationalLimitMotor2_springStiffnessLimited_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {DynamicsJNI.btRotationalLimitMotor2_springStiffnessLimited_set(swigCPtr, this, value);}
",setSpringStiffnessLimited,"[{'value': ['set'], 'probability': 0.7874038219451904}, {'value': ['put'], 'probability': 0.04084815829992294}, {'value': ['apply'], 'probability': 0.011743105947971344}, {'value': ['accept'], 'probability': 0.009039871394634247}, {'value': ['execute'], 'probability': 0.008980641141533852}]","[1.0, 0.7944568, 0.5010617, 0.44626972, 0.35167885]",0.8329324610423823,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
629,629,"public boolean getSpringStiffnessLimited() {return DynamicsJNI.btRotationalLimitMotor2_springStiffnessLimited_get(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_springStiffnessLimited_get(swigCPtr, this);}
",getSpringStiffnessLimited,"[{'value': ['run'], 'probability': 0.11346156895160675}, {'value': ['is'], 'probability': 0.0741160660982132}, {'value': ['execute'], 'probability': 0.044966574758291245}, {'value': ['test'], 'probability': 0.040151357650756836}, {'value': ['apply'], 'probability': 0.025878524407744408}]","[0.65114945, 0.60187685, 0.37713256, 0.4599198, 0.57501197]",0.1687944089024807,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
630,630,"public void setSpringDamping(float value) {DynamicsJNI.btRotationalLimitMotor2_springDamping_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_springDamping_set(swigCPtr, this, value);}
",setSpringDamping,"[{'value': ['set'], 'probability': 0.6135982275009155}, {'value': ['put'], 'probability': 0.09351710975170135}, {'value': ['accept'], 'probability': 0.011945920065045357}, {'value': ['paint'], 'probability': 0.009576707147061825}, {'value': ['cast'], 'probability': 0.009234032593667507}]","[1.0, 0.7944568, 0.44626972, 0.3280287, 0.512155]",0.7010953226058971,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
631,631,"public float getSpringDamping() {return DynamicsJNI.btRotationalLimitMotor2_springDamping_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_springDamping_get(swigCPtr, this);}
",getSpringDamping,"[{'value': ['get'], 'probability': 0.0991852730512619}, {'value': ['float'], 'probability': 0.042827118188142776}, {'value': ['start'], 'probability': 0.040689483284950256}, {'value': ['bar'], 'probability': 0.036561962217092514}, {'value': ['run'], 'probability': 0.03101012483239174}]","[1.0, 0.2808844, 0.7199945, 0.45318797, 0.65114945]",0.1772726126910911,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
632,632,"public void setSpringDampingLimited(boolean value) {DynamicsJNI.btRotationalLimitMotor2_springDampingLimited_set(swigCPtr, this, value);}
","public void [MASK](boolean value) {DynamicsJNI.btRotationalLimitMotor2_springDampingLimited_set(swigCPtr, this, value);}
",setSpringDampingLimited,"[{'value': ['set'], 'probability': 0.72477126121521}, {'value': ['put'], 'probability': 0.05005296692252159}, {'value': ['apply'], 'probability': 0.018072986975312233}, {'value': ['accept'], 'probability': 0.011138989590108395}, {'value': ['execute'], 'probability': 0.009232081472873688}]","[1.0, 0.7944568, 0.5010617, 0.44626972, 0.35167885]",0.7818095828766429,"[{'value': ['set', 'dirty'], 'probability': 0.32172736525535583}, {'value': ['set', 'top'], 'probability': 0.24994267523288727}, {'value': ['set', 'code'], 'probability': 0.13101725280284882}, {'value': ['set', 'handled'], 'probability': 0.09020894020795822}, {'value': ['set', 'all'], 'probability': 0.05960730090737343}, {'value': ['set', 'value'], 'probability': 0.04242868721485138}, {'value': ['set', 'result'], 'probability': 0.02896830439567566}, {'value': ['set', 'flags'], 'probability': 0.02867007814347744}, {'value': ['set', 'enabled'], 'probability': 0.02480601705610752}, {'value': ['extend'], 'probability': 0.02262340858578682}]","[0.7950754, 0.8966336, 0.852165, 0.85435724, 0.918451, 0.8399167, 0.903226, 0.7786614, 0.89065737, 0.5463553]",0.8419497307873629
633,633,"public boolean getSpringDampingLimited() {return DynamicsJNI.btRotationalLimitMotor2_springDampingLimited_get(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_springDampingLimited_get(swigCPtr, this);}
",getSpringDampingLimited,"[{'value': ['is'], 'probability': 0.09695340692996979}, {'value': ['run'], 'probability': 0.08876358717679977}, {'value': ['matches'], 'probability': 0.03661400452256203}, {'value': ['execute'], 'probability': 0.03500142693519592}, {'value': ['apply'], 'probability': 0.02948700450360775}]","[0.60187685, 0.65114945, 0.38072872, 0.37713256, 0.57501197]",0.1602479343129736,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
634,634,"public void setEquilibriumPoint(float value) {DynamicsJNI.btRotationalLimitMotor2_equilibriumPoint_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_equilibriumPoint_set(swigCPtr, this, value);}
",setEquilibriumPoint,"[{'value': ['set'], 'probability': 0.6365416646003723}, {'value': ['put'], 'probability': 0.11595690250396729}, {'value': ['add'], 'probability': 0.010679827071726322}, {'value': ['get'], 'probability': 0.009899490512907505}, {'value': ['accept'], 'probability': 0.008515553548932076}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.44626972]",0.7443326572504709,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
635,635,"public float getEquilibriumPoint() {return DynamicsJNI.btRotationalLimitMotor2_equilibriumPoint_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_equilibriumPoint_get(swigCPtr, this);}
",getEquilibriumPoint,"[{'value': ['get'], 'probability': 0.11950167268514633}, {'value': ['next'], 'probability': 0.04474719241261482}, {'value': ['float'], 'probability': 0.03451472520828247}, {'value': ['start'], 'probability': 0.030133547261357307}, {'value': ['build'], 'probability': 0.029800495132803917}]","[1.0, 0.6966621, 0.2808844, 0.7199945, 0.5626448]",0.1988330752108864,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
636,636,"public void setCurrentLimitError(float value) {DynamicsJNI.btRotationalLimitMotor2_currentLimitError_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_currentLimitError_set(swigCPtr, this, value);}
",setCurrentLimitError,"[{'value': ['set'], 'probability': 0.6870328187942505}, {'value': ['put'], 'probability': 0.10229580849409103}, {'value': ['get'], 'probability': 0.00975203886628151}, {'value': ['add'], 'probability': 0.009411263279616833}, {'value': ['save'], 'probability': 0.008898439817130566}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.5413879]",0.7842470024734688,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
637,637,"public float getCurrentLimitError() {return DynamicsJNI.btRotationalLimitMotor2_currentLimitError_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_currentLimitError_get(swigCPtr, this);}
",getCurrentLimitError,"[{'value': ['get'], 'probability': 0.08131099492311478}, {'value': ['next'], 'probability': 0.05412380024790764}, {'value': ['run'], 'probability': 0.041297007352113724}, {'value': ['float'], 'probability': 0.03564390167593956}, {'value': ['id'], 'probability': 0.029869798570871353}]","[1.0, 0.6966621, 0.65114945, 0.2808844, 0.2945777]",0.1647183120817902,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
638,638,"public void setCurrentLimitErrorHi(float value) {DynamicsJNI.btRotationalLimitMotor2_currentLimitErrorHi_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_currentLimitErrorHi_set(swigCPtr, this, value);}
",setCurrentLimitErrorHi,"[{'value': ['set'], 'probability': 0.7043207287788391}, {'value': ['put'], 'probability': 0.0988704189658165}, {'value': ['get'], 'probability': 0.009823511354625225}, {'value': ['add'], 'probability': 0.0089931795373559}, {'value': ['update'], 'probability': 0.008420567959547043}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.41854778]",0.797354377432047,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
639,639,"public float getCurrentLimitErrorHi() {return DynamicsJNI.btRotationalLimitMotor2_currentLimitErrorHi_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_currentLimitErrorHi_get(swigCPtr, this);}
",getCurrentLimitErrorHi,"[{'value': ['get'], 'probability': 0.09071798622608185}, {'value': ['next'], 'probability': 0.05198829993605614}, {'value': ['run'], 'probability': 0.04124946892261505}, {'value': ['id'], 'probability': 0.035484328866004944}, {'value': ['float'], 'probability': 0.028791524469852448}]","[1.0, 0.6966621, 0.65114945, 0.2945777, 0.2808844]",0.1723358161662751,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
640,640,"public void setCurrentPosition(float value) {DynamicsJNI.btRotationalLimitMotor2_currentPosition_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btRotationalLimitMotor2_currentPosition_set(swigCPtr, this, value);}
",setCurrentPosition,"[{'value': ['set'], 'probability': 0.5834665894508362}, {'value': ['put'], 'probability': 0.12132634222507477}, {'value': ['accept'], 'probability': 0.014050840400159359}, {'value': ['update'], 'probability': 0.011907803826034069}, {'value': ['write'], 'probability': 0.01098212506622076}]","[1.0, 0.7944568, 0.44626972, 0.41854778, 0.46259418]",0.6961898412431095,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
641,641,"public float getCurrentPosition() {return DynamicsJNI.btRotationalLimitMotor2_currentPosition_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_currentPosition_get(swigCPtr, this);}
",getCurrentPosition,"[{'value': ['get'], 'probability': 0.08558525890111923}, {'value': ['next'], 'probability': 0.04816443845629692}, {'value': ['start'], 'probability': 0.046973664313554764}, {'value': ['run'], 'probability': 0.046810880303382874}, {'value': ['float'], 'probability': 0.0342845618724823}]","[1.0, 0.6966621, 0.7199945, 0.65114945, 0.2808844]",0.1930712554773634,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
642,642,"public void setCurrentLimit(int value) {DynamicsJNI.btRotationalLimitMotor2_currentLimit_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btRotationalLimitMotor2_currentLimit_set(swigCPtr, this, value);}
",setCurrentLimit,"[{'value': ['set'], 'probability': 0.7539855241775513}, {'value': ['put'], 'probability': 0.06655202805995941}, {'value': ['execute'], 'probability': 0.008034266531467438}, {'value': ['read'], 'probability': 0.007628819439560175}, {'value': ['save'], 'probability': 0.007477198727428913}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.5413879]",0.8174091547015977,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
643,643,"public int getCurrentLimit() {return DynamicsJNI.btRotationalLimitMotor2_currentLimit_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_currentLimit_get(swigCPtr, this);}
",getCurrentLimit,"[{'value': ['get'], 'probability': 0.13130196928977966}, {'value': ['start'], 'probability': 0.0534508153796196}, {'value': ['run'], 'probability': 0.045014433562755585}, {'value': ['next'], 'probability': 0.037345584481954575}, {'value': ['state'], 'probability': 0.034017227590084076}]","[1.0, 0.7199945, 0.65114945, 0.6966621, 0.49234587]",0.2418628811892842,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
644,644,"public boolean isLimited() {return DynamicsJNI.btRotationalLimitMotor2_isLimited(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btRotationalLimitMotor2_[MASK](swigCPtr, this);}
",isLimited,"[{'value': ['run'], 'probability': 0.21290212869644165}, {'value': ['execute'], 'probability': 0.07558051496744156}, {'value': ['is'], 'probability': 0.03742923587560654}, {'value': ['matches'], 'probability': 0.026991194114089012}, {'value': ['exists'], 'probability': 0.026784798130393028}]","[0.5624562, 0.18233117, 0.99999994, 0.3614936, 0.65599275]",0.1982858148678346,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.8641179, 0.63416743, 0.3612789, 0.6951459, 0.88997865, 0.8539344, 0.6734348, 0.70599496, 0.6717117, 0.8542719]",0.7114059817178761
645,645,"public PerformanceCounter add(final String name) {PerformanceCounter result = new PerformanceCounter(name);counters.add(result);return result;}
","public PerformanceCounter [MASK](final String name) {PerformanceCounter result = new PerformanceCounter(name);counters.[MASK](result);return result;}
",add,"[{'value': ['evaluate'], 'probability': 0.15603064000606537}, {'value': ['transform'], 'probability': 0.1255045384168625}, {'value': ['perform'], 'probability': 0.12278935313224792}, {'value': ['create'], 'probability': 0.1207103431224823}, {'value': ['generate'], 'probability': 0.030699914321303368}]","[0.33404627, 0.34067583, 0.30545208, 0.60979056, 0.5112783]",0.2216883073290596,"[{'value': ['delete', 'counter'], 'probability': 0.3114601969718933}, {'value': ['get', 'counter'], 'probability': 0.22279125452041626}, {'value': ['add', 'node'], 'probability': 0.14707091450691223}, {'value': ['add', 'counter'], 'probability': 0.10393701493740082}, {'value': ['register', 'counter'], 'probability': 0.06715709716081619}, {'value': ['create', 'counter'], 'probability': 0.06105184927582741}, {'value': ['increment', 'counter'], 'probability': 0.03129308298230171}, {'value': ['get', 'counters'], 'probability': 0.02238754741847515}, {'value': ['add', 'tag'], 'probability': 0.01743532158434391}, {'value': ['counter'], 'probability': 0.015415670350193977}]","[0.5451757, 0.5365603, 0.7639855, 0.8505048, 0.40992597, 0.5607039, 0.3080836, 0.5027875, 0.8282326, 0.3507525]",0.5926065490133893
646,646,"public void tick() {final long t = TimeUtils.nanoTime();if (lastTick > 0L)tick((t - lastTick) * nano2seconds);lastTick = t;}
","public void [MASK]() {final long t = TimeUtils.nanoTime();if (lastTick > 0L)[MASK]((t - lastTick) * nano2seconds);lastTick = t;}
",tick,"[{'value': ['run'], 'probability': 0.5864279866218567}, {'value': ['start'], 'probability': 0.08403706550598145}, {'value': ['sleep'], 'probability': 0.0832873210310936}, {'value': ['test'], 'probability': 0.05289703235030174}, {'value': ['wait'], 'probability': 0.021411972120404243}]","[0.16832066, 0.18051195, 0.34030384, 0.04479854, 0.26985613]",0.1503684947571234,"[{'value': ['tick'], 'probability': 0.7666404843330383}, {'value': ['update'], 'probability': 0.2043578326702118}, {'value': ['consume'], 'probability': 0.010095237754285336}, {'value': ['updated'], 'probability': 0.008869663812220097}, {'value': ['receive', 'event'], 'probability': 0.0032763343770056963}, {'value': ['timeout'], 'probability': 0.002848690375685692}, {'value': ['step'], 'probability': 0.0012596064480021596}, {'value': ['force'], 'probability': 0.0008978783152997494}, {'value': ['iterate'], 'probability': 0.0008811703301034868}, {'value': ['fast', 'forward'], 'probability': 0.0008730823756195605}]","[1.0, -0.0069697574, 0.23822169, -0.02856897, 0.07801039, 0.24802186, 0.157515, -0.014413996, 0.16662827, 0.1540568]",0.7687965899238322
647,647,"public void tick(final float deltaTime) {for (int i = 0; i < counters.size; i++) counters.get(i).tick(deltaTime);}
","public void [MASK](final float deltaTime) {for (int i = 0; i < counters.size; i++) counters.get(i).[MASK](deltaTime);}
",tick,"[{'value': ['update'], 'probability': 0.10747740417718887}, {'value': ['execute'], 'probability': 0.07585598528385162}, {'value': ['run'], 'probability': 0.07364951819181442}, {'value': ['save'], 'probability': 0.07339730113744736}, {'value': ['start'], 'probability': 0.0481235571205616}]","[-0.0069697574, 0.15920499, 0.16832066, 0.14034422, 0.18051195]",0.0427120591212145,"[{'value': ['update'], 'probability': 0.9876168370246887}, {'value': ['consider'], 'probability': 0.008145255036652088}, {'value': ['tick'], 'probability': 0.0015175912994891405}, {'value': ['print'], 'probability': 0.001015515998005867}, {'value': ['add', 'delta'], 'probability': 0.0008509799372404814}, {'value': ['render'], 'probability': 0.0002903470303863287}, {'value': ['update', 'progress'], 'probability': 0.00022669856844004244}, {'value': ['set', 'tick', 'position'], 'probability': 0.00015170781989581883}, {'value': ['clear', 'status'], 'probability': 9.747338481247425e-05}, {'value': ['update', 'status'], 'probability': 8.759643242228776e-05}]","[-0.0069697574, 0.059630685, 1.0, 0.21948628, 0.062517926, 0.031173855, 0.0242461, 0.5226358, 0.02100127, -0.029298473]",-0.004510741638601588
648,648,"public void activateParticles(int startIndex, int count) {for (int i = startIndex * colorChannel.strideSize, c = i + count * colorChannel.strideSize; i < c; i += colorChannel.strideSize) {colorChannel.data[i + ParticleChannels.RedOffset] = MathUtils.random();colorChannel.data[i + ParticleChannels.GreenOffset] = MathUtils.random();colorChannel.data[i + ParticleChannels.BlueOffset] = MathUtils.random();colorChannel.data[i + ParticleChannels.AlphaOffset] = MathUtils.random();}}
","public void [MASK](int startIndex, int count) {for (int i = startIndex * colorChannel.strideSize, c = i + count * colorChannel.strideSize; i < c; i += colorChannel.strideSize) {colorChannel.data[i + ParticleChannels.RedOffset] = MathUtils.random();colorChannel.data[i + ParticleChannels.GreenOffset] = MathUtils.random();colorChannel.data[i + ParticleChannels.BlueOffset] = MathUtils.random();colorChannel.data[i + ParticleChannels.AlphaOffset] = MathUtils.random();}}
",activateParticles,"[{'value': ['count'], 'probability': 0.18416768312454224}, {'value': ['skip'], 'probability': 0.09856244176626205}, {'value': ['start'], 'probability': 0.05988042429089546}, {'value': ['min'], 'probability': 0.05758177489042282}, {'value': ['write'], 'probability': 0.04328332841396332}]","[0.07831817, 0.16370445, 0.26856747, -0.13417916, 0.16232085]",0.0459402337272778,"[{'value': ['do', 'filtering'], 'probability': 0.8441323041915894}, {'value': ['set', 'marker'], 'probability': 0.038627203553915024}, {'value': ['download', 'finished'], 'probability': 0.03209269046783447}, {'value': ['sub', 'list'], 'probability': 0.030101433396339417}, {'value': ['copy', 'list'], 'probability': 0.013614675030112267}, {'value': ['create', 'query', 'builder'], 'probability': 0.009145822376012802}, {'value': ['get', 'pad'], 'probability': 0.008888451382517815}, {'value': ['find', 'tests'], 'probability': 0.00862186960875988}, {'value': ['produce', 'image'], 'probability': 0.007560765370726585}, {'value': ['set', 'mapper'], 'probability': 0.007214704994112253}]","[0.38201746, 0.2929159, 0.18433681, 0.18686032, 0.23192878, 0.38394213, 0.32199103, 0.29293016, 0.27922484, 0.35745466]",0.362075220681576
649,649,"public Random copy() {return new Random();}
","public Random [MASK]() {return new Random();}
",copy,"[{'value': ['clone'], 'probability': 0.36659058928489685}, {'value': ['create'], 'probability': 0.05748875066637993}, {'value': ['get'], 'probability': 0.054704904556274414}, {'value': ['build'], 'probability': 0.04160872474312782}, {'value': ['next'], 'probability': 0.025200173258781433}]","[0.31505513, 0.3987844, 0.4466728, 0.28695282, 0.38787416]",0.1845712930723423,"[{'value': ['get', 'random'], 'probability': 0.7281043529510498}, {'value': ['initial', 'value'], 'probability': 0.2274562567472458}, {'value': ['random'], 'probability': 0.02681601792573929}, {'value': ['create', 'random'], 'probability': 0.005281736608594656}, {'value': ['create', 'workspace'], 'probability': 0.0034086303785443306}, {'value': ['create'], 'probability': 0.0030697821639478207}, {'value': ['create', 'instance'], 'probability': 0.002883815672248602}, {'value': ['generate', 'random'], 'probability': 0.001073336461558938}, {'value': ['instance'], 'probability': 0.0009805888403207064}, {'value': ['get', 'new', 'instance'], 'probability': 0.0009254803881049156}]","[0.51920927, 0.42931998, 0.4028615, 0.4887755, 0.39049786, 0.3987844, 0.4915105, 0.42033303, 0.5028891, 0.526784]",0.4944792540914146
650,650,"public void set(Single colorInfluencer) {this.colorValue.load(colorInfluencer.colorValue);this.alphaValue.load(colorInfluencer.alphaValue);}
","public void [MASK](Single colorInfluencer) {this.colorValue.load(colorInfluencer.colorValue);this.alphaValue.load(colorInfluencer.alphaValue);}
",set,"[{'value': ['load'], 'probability': 0.9080416560173035}, {'value': ['add'], 'probability': 0.010292365215718746}, {'value': ['execute'], 'probability': 0.009844936430454254}, {'value': ['test'], 'probability': 0.00649675028398633}, {'value': ['update'], 'probability': 0.006000935565680265}]","[0.3492521, 0.5084879, 0.35167885, 0.5425338, 0.41854778]",0.3318676434202385,"[{'value': ['set', 'alpha', 'value'], 'probability': 0.8416411876678467}, {'value': ['restore', 'value'], 'probability': 0.07292662560939789}, {'value': ['build', 'internal'], 'probability': 0.02501937747001648}, {'value': ['load', 'program'], 'probability': 0.02266913838684559}, {'value': ['load', 'configurations'], 'probability': 0.009232474491000175}, {'value': ['update', 'color'], 'probability': 0.008732398971915245}, {'value': ['initialize', 'component'], 'probability': 0.006526607554405928}, {'value': ['compute', 'path', 'interpolation'], 'probability': 0.00457420852035284}, {'value': ['save', 'values'], 'probability': 0.004502674099057913}, {'value': ['fload'], 'probability': 0.004175323992967606}]","[0.7358135, 0.5765527, 0.63877404, 0.5815531, 0.33053917, 0.4736661, 0.23204012, 0.3488101, 0.59587455, 0.0]",0.7034829571210968
651,651,"public Single copy() {return new Single(this);}
","public Single [MASK]() {return new Single(this);}
",copy,"[{'value': ['get'], 'probability': 0.23078034818172455}, {'value': ['clone'], 'probability': 0.2152334451675415}, {'value': ['create'], 'probability': 0.059756312519311905}, {'value': ['Single'], 'probability': 0.030931266024708748}, {'value': ['apply'], 'probability': 0.0226915180683136}]","[0.4466728, 0.31505513, 0.3987844, 0.0, 0.38936093]",0.2035587809776391,"[{'value': ['deep', 'copy'], 'probability': 0.496559202671051}, {'value': ['build'], 'probability': 0.20625968277454376}, {'value': ['derive'], 'probability': 0.07470159232616425}, {'value': ['single'], 'probability': 0.05047977343201637}, {'value': ['clone'], 'probability': 0.048592571169137955}, {'value': ['append'], 'probability': 0.03588729724287987}, {'value': ['to', 'stream'], 'probability': 0.02685471996665001}, {'value': ['iterable'], 'probability': 0.02607285976409912}, {'value': ['get', 'single'], 'probability': 0.0193933192640543}, {'value': ['iterator'], 'probability': 0.015198927372694016}]","[0.7110269, 0.28695282, 0.1808632, 0.44771206, 0.31505513, 0.11656992, 0.4197073, 0.0, 0.50899684, -0.1069142]",0.4873749178173264
652,652,"public void write(Json json) {json.writeValue(""alpha"", alphaValue);json.writeValue(""color"", colorValue);}
","public void [MASK](Json json) {json.[MASK]Value(""alpha"", alphaValue);json.[MASK]Value(""color"", colorValue);}
",write,"[{'value': ['evaluate'], 'probability': 0.217704176902771}, {'value': ['value'], 'probability': 0.18737711012363434}, {'value': ['test'], 'probability': 0.0683664083480835}, {'value': ['execute'], 'probability': 0.04082554578781128}, {'value': ['add'], 'probability': 0.03221040219068527}]","[0.37596357, 0.45588973, 0.26831806, 0.35316944, 0.45824197]",0.2147945749002906,"[{'value': ['to', 'json'], 'probability': 0.5226841568946838}, {'value': ['json'], 'probability': 0.2578635513782501}, {'value': ['restore', 'value'], 'probability': 0.06864956766366959}, {'value': ['serialize', 'to', 'json'], 'probability': 0.05143311992287636}, {'value': ['write', 'json'], 'probability': 0.025284985080361366}, {'value': ['write', 'value'], 'probability': 0.022131996229290962}, {'value': ['on', 'value'], 'probability': 0.019238701090216637}, {'value': ['write', 'tree'], 'probability': 0.01883678138256073}, {'value': ['set', 'json'], 'probability': 0.00815070141106844}, {'value': ['map', 'to', 'json'], 'probability': 0.005726449657231569}]","[0.54155207, 0.041499805, 0.45685962, 0.49807805, 0.75238246, 0.8349697, 0.48938698, 0.73757803, 0.39602485, 0.50999707]",0.41770354200147164
653,653,"public void read(Json json, JsonValue jsonData) {alphaValue = json.readValue(""alpha"", ScaledNumericValue.class, jsonData);colorValue = json.readValue(""color"", GradientColorValue.class, jsonData);}
","public void [MASK](Json json, JsonValue jsonData) {alphaValue = json.[MASK]Value(""alpha"", ScaledNumericValue.class, jsonData);colorValue = json.[MASK]Value(""color"", GradientColorValue.class, jsonData);}
",read,"[{'value': ['evaluate'], 'probability': 0.3750963807106018}, {'value': ['test'], 'probability': 0.07535966485738754}, {'value': ['value'], 'probability': 0.05757211893796921}, {'value': ['execute'], 'probability': 0.029879217967391014}, {'value': ['update'], 'probability': 0.025752045214176178}]","[0.30015728, 0.38063776, 0.3197642, 0.33326143, 0.3623474]",0.1789709230789545,"[{'value': ['parse'], 'probability': 0.2741016447544098}, {'value': ['parse', 'json'], 'probability': 0.17767834663391113}, {'value': ['restore', 'value'], 'probability': 0.12366729974746704}, {'value': ['from', 'json'], 'probability': 0.10100343823432922}, {'value': ['set', 'json'], 'probability': 0.08859554678201675}, {'value': ['decode'], 'probability': 0.06868039816617966}, {'value': ['deserialize'], 'probability': 0.06188447028398514}, {'value': ['parse', 'value'], 'probability': 0.04410990700125694}, {'value': ['initialize', 'content'], 'probability': 0.03352189436554909}, {'value': ['load'], 'probability': 0.026757072657346725}]","[0.21184428, 0.1513731, 0.32208365, 0.38713735, 0.41225854, 0.22994432, 0.0, 0.37796876, 0.3412553, 0.32439876]",0.25300459680294324
654,654,"public void allocateChannels() {colorChannel = controller.particles.addChannel(ParticleChannels.Color);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK]() {colorChannel = controller.particles.addChannel(ParticleChannels.Color);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",allocateChannels,"[{'value': ['destroy'], 'probability': 0.8523046374320984}, {'value': ['run'], 'probability': 0.036331143230199814}, {'value': ['clear'], 'probability': 0.006206416059285402}, {'value': ['hide'], 'probability': 0.004784032702445984}, {'value': ['rebuild'], 'probability': 0.004413600545376539}]","[0.2563466, 0.20610183, 0.10584831, 0.16506144, 0.360484]",0.2290109528816469,"[{'value': ['initialize'], 'probability': 0.6681064963340759}, {'value': ['initialise'], 'probability': 0.14785142242908478}, {'value': ['init', 'cache'], 'probability': 0.12501975893974304}, {'value': ['run'], 'probability': 0.016382265836000443}, {'value': ['start', 'loading'], 'probability': 0.014510354027152061}, {'value': ['set', 'up'], 'probability': 0.006867141928523779}, {'value': ['fixup'], 'probability': 0.00615257304161787}, {'value': ['setup', 'suite'], 'probability': 0.005822800565510988}, {'value': ['on', 'connected'], 'probability': 0.004839015658944845}, {'value': ['setup', 'client'], 'probability': 0.004448167979717255}]","[0.34498814, 0.0, 0.11005337, 0.20610183, 0.18342763, 0.28115574, 0.0, 0.09044908, 0.15524484, 0.08732321]",0.2538827419412353
655,655,"public static long getCPtr(LocalConvexResult obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](LocalConvexResult obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07321528345346451}, {'value': ['execute'], 'probability': 0.060356978327035904}, {'value': ['update'], 'probability': 0.04613585025072098}, {'value': ['process'], 'probability': 0.03991537168622017}, {'value': ['read'], 'probability': 0.039785511791706085}]","[1.0, 0.37713256, 0.36048478, 0.52250975, 0.5726487]",0.156248430064957,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 3.696456829516137e-08}, {'value': ['get', 'flags'], 'probability': 2.1177587683496313e-08}, {'value': ['get', 'type'], 'probability': 1.1565183477557639e-08}, {'value': ['get', 'id'], 'probability': 6.556832410353763e-09}, {'value': ['get', 'first'], 'probability': 5.5927706910097186e-09}, {'value': ['get', 'base'], 'probability': 4.847022339049545e-09}, {'value': ['get', 'count'], 'probability': 3.337921050672321e-09}, {'value': ['height'], 'probability': 1.7357447701371598e-09}, {'value': ['get', 'last'], 'probability': 1.7220400660988844e-09}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8991456, 0.8330182, 0.85928994, 0.30686238, 0.8998977]",0.6761974112612926
656,656,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
657,657,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_LocalConvexResult(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_LocalConvexResult(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8350220918655396}, {'value': ['start'], 'probability': 0.01271039992570877}, {'value': ['test'], 'probability': 0.010263612493872643}, {'value': ['clear'], 'probability': 0.009692412801086903}, {'value': ['execute'], 'probability': 0.008843222633004189}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1245541031087737,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
658,658,"public void setHitCollisionObject(btCollisionObject value) {CollisionJNI.LocalConvexResult_hitCollisionObject_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);}
","public void [MASK](btCollisionObject value) {CollisionJNI.LocalConvexResult_hitCollisionObject_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);}
",setHitCollisionObject,"[{'value': ['set'], 'probability': 0.7372239828109741}, {'value': ['put'], 'probability': 0.07260715961456299}, {'value': ['execute'], 'probability': 0.012453100644052029}, {'value': ['add'], 'probability': 0.010174127295613289}, {'value': ['get'], 'probability': 0.009728284552693367}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.65028083]",0.8107862625387182,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
659,659,"public btCollisionObject getHitCollisionObject() {return btCollisionObject.getInstance(CollisionJNI.LocalConvexResult_hitCollisionObject_get(swigCPtr, this), false);}
","public btCollisionObject [MASK]() {return btCollisionObject.getInstance(CollisionJNI.LocalConvexResult_hitCollisionObject_get(swigCPtr, this), false);}
",getHitCollisionObject,"[{'value': ['create'], 'probability': 0.1889624446630478}, {'value': ['build'], 'probability': 0.12787386775016785}, {'value': ['get'], 'probability': 0.08784804493188858}, {'value': ['resolve'], 'probability': 0.06524752080440521}, {'value': ['update'], 'probability': 0.06379809230566025}]","[0.62328804, 0.5626448, 1.0, 0.427468, 0.36048478]",0.3284631085176079,"[{'value': ['instance'], 'probability': 0.24291475117206573}, {'value': ['get', 'flags'], 'probability': 0.15380139648914337}, {'value': ['stop', 'capture'], 'probability': 0.11797503381967545}, {'value': ['what'], 'probability': 0.09154746681451797}, {'value': ['get', 'options'], 'probability': 0.08183800429105759}, {'value': ['get', 'instance'], 'probability': 0.07271350175142288}, {'value': ['get', 'publisher'], 'probability': 0.06692762672901154}, {'value': ['get', 'c', 'ptr'], 'probability': 0.059888411313295364}, {'value': ['get', 'top'], 'probability': 0.056414585560560226}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05597924441099167}]","[0.56794554, 0.75727946, 0.64470273, 0.76382285, 0.88330656, 0.9335536, 0.7924022, 0.67619735, 0.8810721, 0.7738402]",0.7271421495210391
660,660,"public void setLocalShapeInfo(LocalShapeInfo value) {CollisionJNI.LocalConvexResult_localShapeInfo_set(swigCPtr, this, LocalShapeInfo.getCPtr(value), value);}
","public void [MASK](LocalShapeInfo value) {CollisionJNI.LocalConvexResult_localShapeInfo_set(swigCPtr, this, LocalShapeInfo.getCPtr(value), value);}
",setLocalShapeInfo,"[{'value': ['set'], 'probability': 0.6639736294746399}, {'value': ['put'], 'probability': 0.06930974870920181}, {'value': ['execute'], 'probability': 0.024063967168331146}, {'value': ['add'], 'probability': 0.016335563734173775}, {'value': ['apply'], 'probability': 0.01503389235585928}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.5010617]",0.7433393610174909,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
661,661,"public LocalShapeInfo getLocalShapeInfo() {long cPtr = CollisionJNI.LocalConvexResult_localShapeInfo_get(swigCPtr, this);return (cPtr == 0) ? null : new LocalShapeInfo(cPtr, false);}
","public LocalShapeInfo [MASK]() {long cPtr = CollisionJNI.LocalConvexResult_localShapeInfo_get(swigCPtr, this);return (cPtr == 0) ? null : new LocalShapeInfo(cPtr, false);}
",getLocalShapeInfo,"[{'value': ['get'], 'probability': 0.14026278257369995}, {'value': ['create'], 'probability': 0.12184149771928787}, {'value': ['build'], 'probability': 0.10693133622407913}, {'value': ['resolve'], 'probability': 0.04631572961807251}, {'value': ['run'], 'probability': 0.04209982976317406}]","[1.0, 0.62328804, 0.5626448, 0.427468, 0.65114945]",0.3235812618894254,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
662,662,"public void setHitFraction(float value) {CollisionJNI.LocalConvexResult_hitFraction_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.LocalConvexResult_hitFraction_set(swigCPtr, this, value);}
",setHitFraction,"[{'value': ['set'], 'probability': 0.6043990254402161}, {'value': ['put'], 'probability': 0.13858884572982788}, {'value': ['add'], 'probability': 0.011957448907196522}, {'value': ['write'], 'probability': 0.011793720535933971}, {'value': ['get'], 'probability': 0.010891181416809559}]","[1.0, 0.7944568, 0.5084879, 0.46259418, 0.65028083]",0.7331201244269757,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
663,663,"public float getHitFraction() {return CollisionJNI.LocalConvexResult_hitFraction_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.LocalConvexResult_hitFraction_get(swigCPtr, this);}
",getHitFraction,"[{'value': ['run'], 'probability': 0.08611971884965897}, {'value': ['build'], 'probability': 0.06734166294336319}, {'value': ['get'], 'probability': 0.053967125713825226}, {'value': ['start'], 'probability': 0.031710512936115265}, {'value': ['execute'], 'probability': 0.031169025227427483}]","[0.65114945, 0.5626448, 1.0, 0.7199945, 0.37713256]",0.1825196174046761,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
664,664,"public void getHitNormalLocal(Vector3 out) {CollisionJNI.LocalConvexResult_getHitNormalLocal(swigCPtr, this, out);}
","public void [MASK](Vector3 out) {CollisionJNI.LocalConvexResult_[MASK](swigCPtr, this, out);}
",getHitNormalLocal,"[{'value': ['execute'], 'probability': 0.29794448614120483}, {'value': ['run'], 'probability': 0.20651280879974365}, {'value': ['write'], 'probability': 0.04348666965961456}, {'value': ['read'], 'probability': 0.040239691734313965}, {'value': ['perform'], 'probability': 0.018444081768393517}]","[0.37713256, 0.65114945, 0.60768855, 0.5726487, 0.48567584]",0.3052626737687808,"[{'value': ['move', 'by'], 'probability': 0.1456991285085678}, {'value': ['apply', 'to'], 'probability': 0.13811470568180084}, {'value': ['commit'], 'probability': 0.13291384279727936}, {'value': ['pack'], 'probability': 0.12505285441875458}, {'value': ['grow'], 'probability': 0.10811270773410797}, {'value': ['join'], 'probability': 0.08405705541372299}, {'value': ['dump'], 'probability': 0.08206189423799515}, {'value': ['add'], 'probability': 0.07132095098495483}, {'value': ['write'], 'probability': 0.058067139238119125}, {'value': ['set', 'length'], 'probability': 0.05459972098469734}]","[0.666364, 0.7557856, 0.4108641, 0.534551, 0.54974, 0.54880774, 0.39289546, 0.54842544, 0.60768855, 0.56594074]",0.5660383688696651
665,665,"public void setHitNormalLocal(Vector3 value) {CollisionJNI.LocalConvexResult_setHitNormalLocal(swigCPtr, this, value);}
","public void [MASK](Vector3 value) {CollisionJNI.LocalConvexResult_[MASK](swigCPtr, this, value);}
",setHitNormalLocal,"[{'value': ['execute'], 'probability': 0.2096429169178009}, {'value': ['set'], 'probability': 0.04170406609773636}, {'value': ['read'], 'probability': 0.0358496718108654}, {'value': ['put'], 'probability': 0.031356193125247955}, {'value': ['update'], 'probability': 0.026882905513048172}]","[0.35167885, 1.0, 0.4820371, 0.7944568, 0.41854778]",0.1688748380286719,"[{'value': ['set', 'top'], 'probability': 0.19824789464473724}, {'value': ['set', 'to'], 'probability': 0.19038696587085724}, {'value': ['set'], 'probability': 0.1473822444677353}, {'value': ['set', 'code'], 'probability': 0.1406930834054947}, {'value': ['set', 'bits'], 'probability': 0.06668204814195633}, {'value': ['pack'], 'probability': 0.0569336824119091}, {'value': ['parse', 'language'], 'probability': 0.05581534653902054}, {'value': ['extend'], 'probability': 0.05416199192404747}, {'value': ['set', 'dirty'], 'probability': 0.04590877518057823}, {'value': ['set', 'value'], 'probability': 0.04378799721598625}]","[0.8966336, 0.9136955, 1.0, 0.852165, 0.81719714, 0.459913, 0.29473856, 0.5463553, 0.7950754, 0.8399167]",0.8189861571631645
666,666,"public void getHitPointLocal(Vector3 out) {CollisionJNI.LocalConvexResult_getHitPointLocal(swigCPtr, this, out);}
","public void [MASK](Vector3 out) {CollisionJNI.LocalConvexResult_[MASK](swigCPtr, this, out);}
",getHitPointLocal,"[{'value': ['execute'], 'probability': 0.29794448614120483}, {'value': ['run'], 'probability': 0.20651280879974365}, {'value': ['write'], 'probability': 0.04348666965961456}, {'value': ['read'], 'probability': 0.040239691734313965}, {'value': ['perform'], 'probability': 0.018444081768393517}]","[0.37713256, 0.65114945, 0.60768855, 0.5726487, 0.48567584]",0.3052626737687808,"[{'value': ['move', 'by'], 'probability': 0.1456991285085678}, {'value': ['apply', 'to'], 'probability': 0.13811470568180084}, {'value': ['commit'], 'probability': 0.13291384279727936}, {'value': ['pack'], 'probability': 0.12505285441875458}, {'value': ['grow'], 'probability': 0.10811270773410797}, {'value': ['join'], 'probability': 0.08405705541372299}, {'value': ['dump'], 'probability': 0.08206189423799515}, {'value': ['add'], 'probability': 0.07132095098495483}, {'value': ['write'], 'probability': 0.058067139238119125}, {'value': ['set', 'length'], 'probability': 0.05459972098469734}]","[0.666364, 0.7557856, 0.4108641, 0.534551, 0.54974, 0.54880774, 0.39289546, 0.54842544, 0.60768855, 0.56594074]",0.5660383688696651
667,667,"protected void processDir(Entry entryDir, ArrayList<Entry> value) {if (!entryDir.outputDir.exists()) {if (!entryDir.outputDir.mkdirs())throw new Exception(""Couldn't create output directory '"" + entryDir.outputDir + ""'"");}}
","protected void [MASK](Entry entryDir, ArrayList<Entry> value) {if (!entryDir.outputDir.exists()) {if (!entryDir.outputDir.mkdirs())throw new Exception(""Couldn't create output directory '"" + entryDir.outputDir + ""'"");}}
",processDir,"[{'value': ['write'], 'probability': 0.0895608440041542}, {'value': ['read'], 'probability': 0.08542109280824661}, {'value': ['execute'], 'probability': 0.0537940114736557}, {'value': ['save'], 'probability': 0.04567106068134308}, {'value': ['visit'], 'probability': 0.03835640102624893}]","[0.35321146, 0.32488367, 0.34692144, 0.38235566, 0.3790191]",0.1100485285151378,"[{'value': ['create', 'project'], 'probability': 0.3084501624107361}, {'value': ['load', 'catalog'], 'probability': 0.22078821063041687}, {'value': ['cleanup', 'cache'], 'probability': 0.20847468078136444}, {'value': ['replace', 'all'], 'probability': 0.10226991772651672}, {'value': ['on', 'created'], 'probability': 0.04285170137882233}, {'value': ['write', 'response'], 'probability': 0.0366317555308342}, {'value': ['convert', 'to', 'object'], 'probability': 0.023378726094961166}, {'value': ['check', 'admin'], 'probability': 0.022383084520697594}, {'value': ['read', 'page'], 'probability': 0.019727736711502075}, {'value': ['install', 'file'], 'probability': 0.01504404004663229}]","[0.6618989, 0.29667583, 0.3563154, 0.61535, 0.58667725, 0.5392016, 0.54856586, 0.25941432, 0.34342557, 0.45915866]",0.4840857756389426
668,668,"public static void process(String inputDirectory, String outputDirectory, boolean recursive, boolean flatten) {GdxNativesLoader.load();ETC1FileProcessor processor = new ETC1FileProcessor();processor.setRecursive(recursive);processor.setFlattenOutput(flatten);processor.process(new File(inputDirectory), new File(outputDirectory));}
","public static void [MASK](String inputDirectory, String outputDirectory, boolean recursive, boolean flatten) {GdxNativesLoader.load();ETC1FileProcessor [MASK]or = new ETC1FileProcessor();[MASK]or.setRecursive(recursive);[MASK]or.setFlattenOutput(flatten);[MASK]or.[MASK](new File(inputDirectory), new File(outputDirectory));}
",process,"[{'value': ['load'], 'probability': 0.4817434251308441}, {'value': ['read'], 'probability': 0.07420658320188522}, {'value': ['write'], 'probability': 0.07228443026542664}, {'value': ['run'], 'probability': 0.03771413490176201}, {'value': ['execute'], 'probability': 0.03275580331683159}]","[0.33857468, 0.32488367, 0.35321146, 0.40769973, 0.34692144]",0.2394860546411329,"[{'value': ['set', 'recursive'], 'probability': 0.2590334713459015}, {'value': ['find', 'files'], 'probability': 0.18214334547519684}, {'value': ['resolve', 'files'], 'probability': 0.1268792748451233}, {'value': ['is', 'flatten'], 'probability': 0.07800406962633133}, {'value': ['refresh', 'files'], 'probability': 0.0766703262925148}, {'value': ['set', 'flatten'], 'probability': 0.06928522884845734}, {'value': ['reconfigure'], 'probability': 0.06695735454559326}, {'value': ['set', 'paths'], 'probability': 0.05450788885354996}, {'value': ['add', 'output'], 'probability': 0.05347064137458801}, {'value': ['collect', 'files'], 'probability': 0.033048346638679504}]","[0.4762193, 0.5437963, 0.5959384, 0.54954857, 0.39631128, 0.44440752, 0.09880519, 0.49710193, 0.49298453, 0.41683397]",0.47590864800310906
669,669,"public static void main(String[] args) {if (args.length != 2) {System.out.println(""ETC1Compressor <input-dir> <output-dir>"");System.exit(-1);}ETC1Compressor.process(args[0], args[1], true, false);}protected static long getCPtr(SWIGTYPE_p_f_p_void__void obj) {return (obj == null) ? 0 : obj.swigCPtr;}public void invalidate() {super.invalidate();sizeInvalid = true;}
","public static void [MASK](String[] args) {if (args.length != 2) {System.out.println(""ETC1Compressor <input-dir> <output-dir>"");System.exit(-1);}ETC1Compressor.process(args[0], args[1], true, false);}protected static long getCPtr(SWIGTYPE_p_f_p_void__void obj) {return (obj == null) ? 0 : obj.swigCPtr;}public void invalidate() {super.invalidate();sizeInvalid = true;}
",main,"[{'value': ['process'], 'probability': 0.7043325901031494}, {'value': ['write'], 'probability': 0.12219591438770294}, {'value': ['read'], 'probability': 0.03154992312192917}, {'value': ['execute'], 'probability': 0.012415377423167229}, {'value': ['start'], 'probability': 0.006687413901090622}]","[0.44772333, 0.24654444, 0.31214994, 0.05924642, 0.4708951]",0.35920579862044,"[{'value': ['main'], 'probability': 0.9996333122253418}, {'value': ['check', 'arguments'], 'probability': 0.00020812221919186413}, {'value': ['on', 'command'], 'probability': 4.3500735046109185e-05}, {'value': ['execute', 'command'], 'probability': 4.129638182348572e-05}, {'value': ['run'], 'probability': 3.6396519135450944e-05}, {'value': ['run', 'command'], 'probability': 1.3280772691359743e-05}, {'value': ['process'], 'probability': 7.106821158231469e-06}, {'value': ['perform'], 'probability': 6.362905423884513e-06}, {'value': ['invoke', 'command'], 'probability': 5.477326340042055e-06}, {'value': ['do', 'command'], 'probability': 5.107342985866126e-06}]","[0.99999994, 0.43809807, 0.6616455, 0.32296717, 0.5395776, 0.60326254, 0.44772333, 0.30608046, 0.35559112, 0.515809]",0.9998039117229042
670,670,"public void add(Actor actor) {addActor(actor);}
","public void [MASK](Actor actor) {[MASK]Actor(actor);}
",add,"[{'value': ['cast'], 'probability': 0.24367162585258484}, {'value': ['perform'], 'probability': 0.14528070390224457}, {'value': ['add'], 'probability': 0.08345793187618256}, {'value': ['create'], 'probability': 0.042476724833250046}, {'value': ['accept'], 'probability': 0.02499348297715187}]","[0.35819936, 0.30545208, 1.0, 0.60979056, 0.3790286]",0.2504923953513304,"[{'value': ['add', 'actor'], 'probability': 0.9987896084785461}, {'value': ['new', 'game'], 'probability': 0.0003830015193670988}, {'value': ['show'], 'probability': 0.0003042542957700789}, {'value': ['init'], 'probability': 0.00019776920089498162}, {'value': ['apply', 'to'], 'probability': 7.830308459233493e-05}, {'value': ['populate'], 'probability': 6.509407830890268e-05}, {'value': ['set', 'configuration'], 'probability': 5.9951806179014966e-05}, {'value': ['attach'], 'probability': 4.861568595515564e-05}, {'value': ['resort'], 'probability': 3.935967106372118e-05}, {'value': ['update', 'type'], 'probability': 3.39545622409787e-05}]","[0.73221976, 0.5236518, 0.38071436, -0.12278596, 0.5735546, 0.095464684, 0.44690028, 0.38023338, 0.20147768, 0.5627741]",0.7317490394529308
671,671,"public void layout() {if (sizeInvalid)computeSize();float width = getWidth(), height = getHeight();Array<Actor> children = getChildren();for (int i = 0, n = children.size; i < n; i++) {Actor child = children.get(i);child.setBounds(0, 0, width, height);if (child instanceof Layout)((Layout) child).validate();}}
","public void [MASK]() {if (sizeInvalid)computeSize();float width = getWidth(), height = getHeight();Array<Actor> children = getChildren();for (int i = 0, n = children.size; i < n; i++) {Actor child = children.get(i);child.setBounds(0, 0, width, height);if (child instanceof Layout)((Layout) child).validate();}}
",layout,"[{'value': ['run'], 'probability': 0.21150973439216614}, {'value': ['expand'], 'probability': 0.08940968662500381}, {'value': ['test'], 'probability': 0.07795045524835587}, {'value': ['close'], 'probability': 0.05393994227051735}, {'value': ['flush'], 'probability': 0.03452136367559433}]","[0.17352708, 0.121628046, 0.18571787, 0.15566446, 0.05398062]",0.0723142000971909,"[{'value': ['init'], 'probability': 0.4249393939971924}, {'value': ['get', 'size'], 'probability': 0.3794998228549957}, {'value': ['refresh'], 'probability': 0.14088185131549835}, {'value': ['reset'], 'probability': 0.03055661916732788}, {'value': ['size'], 'probability': 0.010033400729298592}, {'value': ['start'], 'probability': 0.004130820278078318}, {'value': ['show'], 'probability': 0.003919693175703287}, {'value': ['get', 'row'], 'probability': 0.0028184016700834036}, {'value': ['layout'], 'probability': 0.0016236492665484548}, {'value': ['update', 'size'], 'probability': 0.0015963290352374315}]","[-0.017736224, 0.32339236, 0.18336417, 0.20704663, 0.40483034, 0.21965244, 0.27696988, 0.21114478, 0.99999994, 0.5048645]",0.1564293283719314
672,672,"public float getPrefWidth() {if (sizeInvalid)computeSize();return prefWidth;}
","public float [MASK]() {if (sizeInvalid)computeSize();return prefWidth;}
",getPrefWidth,"[{'value': ['size'], 'probability': 0.8428938984870911}, {'value': ['count'], 'probability': 0.03281637281179428}, {'value': ['next'], 'probability': 0.016287215054035187}, {'value': ['expand'], 'probability': 0.015325714834034443}, {'value': ['get'], 'probability': 0.010297994129359722}]","[0.43109724, 0.4437648, 0.6966621, 0.47652406, 1.0]",0.4068797357373003,"[{'value': ['compute', 'size'], 'probability': 0.8160111904144287}, {'value': ['get', 'size'], 'probability': 0.14109355211257935}, {'value': ['size'], 'probability': 0.02463153563439846}, {'value': ['get', 'size', 'internal'], 'probability': 0.005423911847174168}, {'value': ['get', 'width'], 'probability': 0.004646862391382456}, {'value': ['get', 'initial', 'size'], 'probability': 0.0025456829462200403}, {'value': ['get', 'height'], 'probability': 0.002015626523643732}, {'value': ['get', 'length'], 'probability': 0.0017118050018325448}, {'value': ['width'], 'probability': 0.0011623851023614407}, {'value': ['set', 'size'], 'probability': 0.0007574488990940154}]","[0.4036914, 0.83762157, 0.43109724, 0.77791893, 0.7625303, 0.79926676, 0.8224554, 0.8075286, 0.19666797, 0.62304664]",0.4717563307001226
673,673,"public float getPrefHeight() {if (sizeInvalid)computeSize();return prefHeight;}
","public float [MASK]() {if (sizeInvalid)computeSize();return prefHeight;}
",getPrefHeight,"[{'value': ['size'], 'probability': 0.8858472108840942}, {'value': ['count'], 'probability': 0.026169927790760994}, {'value': ['expand'], 'probability': 0.012233425863087177}, {'value': ['next'], 'probability': 0.012125786393880844}, {'value': ['get'], 'probability': 0.007542388513684273}]","[0.43109724, 0.4437648, 0.47652406, 0.6966621, 1.0]",0.415319066303426,"[{'value': ['compute', 'size'], 'probability': 0.8116281032562256}, {'value': ['get', 'size'], 'probability': 0.11851941049098969}, {'value': ['size'], 'probability': 0.04882272705435753}, {'value': ['get', 'size', 'internal'], 'probability': 0.008288374170660973}, {'value': ['get', 'height'], 'probability': 0.003244975581765175}, {'value': ['set', 'size'], 'probability': 0.0026109192986041307}, {'value': ['get', 'maximum', 'size'], 'probability': 0.0025505786761641502}, {'value': ['dispose'], 'probability': 0.002476711990311742}, {'value': ['close'], 'probability': 0.0012126499786973}, {'value': ['release'], 'probability': 0.0006456152186729014}]","[0.4036914, 0.83762157, 0.43109724, 0.77791893, 0.8224554, 0.62304664, 0.755931, 0.25758386, 0.6033417, 0.46739787]",0.46231172221039557
674,674,"public float getMinWidth() {if (sizeInvalid)computeSize();return minWidth;}
","public float [MASK]() {if (sizeInvalid)computeSize();return minWidth;}
",getMinWidth,"[{'value': ['size'], 'probability': 0.8467831611633301}, {'value': ['count'], 'probability': 0.0392095223069191}, {'value': ['expand'], 'probability': 0.01616031490266323}, {'value': ['next'], 'probability': 0.014191906899213791}, {'value': ['get'], 'probability': 0.00902304146438837}]","[0.43109724, 0.4437648, 0.47652406, 0.6966621, 1.0]",0.4090564733900267,"[{'value': ['get', 'size'], 'probability': 0.6430548429489136}, {'value': ['size'], 'probability': 0.16228702664375305}, {'value': ['compute', 'size'], 'probability': 0.11996963620185852}, {'value': ['width'], 'probability': 0.02919229492545128}, {'value': ['get', 'width'], 'probability': 0.01199391484260559}, {'value': ['get', 'length'], 'probability': 0.010389236733317375}, {'value': ['get', 'size', 'internal'], 'probability': 0.008382674306631088}, {'value': ['get', 'height'], 'probability': 0.006704815663397312}, {'value': ['sample'], 'probability': 0.004113553091883659}, {'value': ['finish'], 'probability': 0.0039119841530919075}]","[0.83762157, 0.43109724, 0.4036914, 0.19666797, 0.7625303, 0.8075286, 0.77791893, 0.8224554, 0.35456446, 0.52801555]",0.6958648865471903
675,675,"public float getMinHeight() {if (sizeInvalid)computeSize();return minHeight;}
","public float [MASK]() {if (sizeInvalid)computeSize();return minHeight;}
",getMinHeight,"[{'value': ['size'], 'probability': 0.8690630793571472}, {'value': ['count'], 'probability': 0.030128270387649536}, {'value': ['expand'], 'probability': 0.015082282945513725}, {'value': ['next'], 'probability': 0.01345147006213665}, {'value': ['get'], 'probability': 0.008042518049478531}]","[0.43109724, 0.4437648, 0.47652406, 0.6966621, 1.0]",0.4126212787428083,"[{'value': ['get', 'size'], 'probability': 0.8021331429481506}, {'value': ['compute', 'size'], 'probability': 0.12659288942813873}, {'value': ['size'], 'probability': 0.04414278641343117}, {'value': ['get', 'height'], 'probability': 0.009267878718674183}, {'value': ['set', 'size'], 'probability': 0.008569376543164253}, {'value': ['width'], 'probability': 0.003344422671943903}, {'value': ['update', 'size'], 'probability': 0.001841225428506732}, {'value': ['get', 'size', 'internal'], 'probability': 0.0015971279935911298}, {'value': ['get', 'width'], 'probability': 0.0012618680484592915}, {'value': ['get', 'initial', 'size'], 'probability': 0.0012493215035647154}]","[0.83762157, 0.4036914, 0.43109724, 0.8224554, 0.62304664, 0.19666797, 0.5032227, 0.77791893, 0.7625303, 0.79926676]",0.7597673319790336
676,676,"public float getMaxWidth() {if (sizeInvalid)computeSize();return maxWidth;}
","public float [MASK]() {if (sizeInvalid)computeSize();return maxWidth;}
",getMaxWidth,"[{'value': ['size'], 'probability': 0.8612021207809448}, {'value': ['count'], 'probability': 0.03366518020629883}, {'value': ['expand'], 'probability': 0.014431680552661419}, {'value': ['next'], 'probability': 0.014417195692658424}, {'value': ['get'], 'probability': 0.008856885135173798}]","[0.43109724, 0.4437648, 0.47652406, 0.6966621, 1.0]",0.4119791211695393,"[{'value': ['get', 'size'], 'probability': 0.4609118103981018}, {'value': ['size'], 'probability': 0.3851165175437927}, {'value': ['width'], 'probability': 0.07176746428012848}, {'value': ['get', 'width'], 'probability': 0.043339285999536514}, {'value': ['compute', 'size'], 'probability': 0.027603037655353546}, {'value': ['get', 'size', 'internal'], 'probability': 0.0036673324648290873}, {'value': ['get', 'height'], 'probability': 0.0029450147412717342}, {'value': ['set', 'size'], 'probability': 0.0022915354929864407}, {'value': ['get', 'maximum', 'size'], 'probability': 0.0012755081988871098}, {'value': ['get', 'length'], 'probability': 0.0010824663331732154}]","[0.83762157, 0.43109724, 0.19666797, 0.7625303, 0.4036914, 0.77791893, 0.8224554, 0.62304664, 0.755931, 0.8075286]",0.6189384140553621
677,677,"public float getMaxHeight() {if (sizeInvalid)computeSize();return maxHeight;}public Writer getWriter() {return writer;}
","public float [MASK]() {if (sizeInvalid)computeSize();return maxHeight;}public Writer getWriter() {return writer;}
",getMaxHeight,"[{'value': ['size'], 'probability': 0.8943861722946167}, {'value': ['count'], 'probability': 0.020300697535276413}, {'value': ['next'], 'probability': 0.013790637254714966}, {'value': ['expand'], 'probability': 0.010850388556718826}, {'value': ['get'], 'probability': 0.0066343857906758785}]","[0.43109724, 0.4437648, 0.6966621, 0.47652406, 1.0]",0.4159884164441341,"[{'value': ['get', 'size'], 'probability': 0.6104511022567749}, {'value': ['compute', 'size'], 'probability': 0.31315749883651733}, {'value': ['get', 'height'], 'probability': 0.04066021740436554}, {'value': ['size'], 'probability': 0.023035742342472076}, {'value': ['set', 'size'], 'probability': 0.005507476162165403}, {'value': ['get', 'width'], 'probability': 0.002222491893917322}, {'value': ['width'], 'probability': 0.0018405559239909053}, {'value': ['get', 'maximum', 'size'], 'probability': 0.0016046266537159681}, {'value': ['height'], 'probability': 0.000761602190323174}, {'value': ['get', 'size', 'internal'], 'probability': 0.0007586966385133564}]","[0.83762157, 0.4036914, 0.8224554, 0.43109724, 0.62304664, 0.7625303, 0.19666797, 0.755931, 0.30686238, 0.77791893]",0.6886428690154567
678,678,"public void setOutputType(OutputType outputType) {this.outputType = outputType;}
","public void [MASK](OutputType outputType) {this.outputType = outputType;}
",setOutputType,"[{'value': ['output'], 'probability': 0.4492426812648773}, {'value': ['write'], 'probability': 0.0999559760093689}, {'value': ['generate'], 'probability': 0.04655114561319351}, {'value': ['run'], 'probability': 0.03547109663486481}, {'value': ['read'], 'probability': 0.02553391642868519}]","[0.41990075, 0.46259418, 0.41179195, 0.67632943, 0.4820371]",0.2903442182176044,"[{'value': ['set', 'output', 'type'], 'probability': 0.9999998807907104}, {'value': ['on', 'line', 'available'], 'probability': 1.418364803384975e-07}, {'value': ['get', 'output', 'type'], 'probability': 1.7444845568093115e-08}, {'value': ['case', 'output', 'type'], 'probability': 1.419958284287759e-08}, {'value': ['notify', 'line'], 'probability': 8.883398905368267e-09}, {'value': ['create', 'input', 'output', 'buffer', 'for'], 'probability': 6.320080458976918e-09}, {'value': ['get', 'output', 'type', 'bytes'], 'probability': 5.0671911111521695e-09}, {'value': ['notify', 'text', 'available'], 'probability': 1.5517237494933056e-09}, {'value': ['set', 'writer'], 'probability': 1.3845928847899813e-09}, {'value': ['create', 'output', 'type'], 'probability': 1.2758704093229767e-09}]","[0.7846323, 0.73287755, 0.6705799, 0.6241137, 0.5299376, 0.71527815, 0.6192514, 0.53349215, 0.7430619, 0.6512979]",0.7846323460274003
679,679,"public void setQuoteLongValues(boolean quoteLongValues) {this.quoteLongValues = quoteLongValues;}
","public void [MASK](boolean quoteLongValues) {this.quoteLongValues = quoteLongValues;}
",setQuoteLongValues,"[{'value': ['set'], 'probability': 0.07936464250087738}, {'value': ['write'], 'probability': 0.04462818428874016}, {'value': ['visit'], 'probability': 0.037058766931295395}, {'value': ['accept'], 'probability': 0.031053924933075905}, {'value': ['read'], 'probability': 0.029406031593680382}]","[1.0, 0.46259418, 0.46053246, 0.44626972, 0.4820371]",0.1451093703690366,"[{'value': ['set', 'family', 'flag'], 'probability': 0.49046528339385986}, {'value': ['set', 'friend', 'flag'], 'probability': 0.13846826553344727}, {'value': ['set', 'show', 'logical', 'structure'], 'probability': 0.13336850702762604}, {'value': ['set', 'discriminator'], 'probability': 0.07116962969303131}, {'value': ['set', 'update', 'locks', 'on', 'demand'], 'probability': 0.06317413598299026}, {'value': ['set', 'extended', 'arc', 'surface', 'support'], 'probability': 0.04124941676855087}, {'value': ['set', 'override', 'by', 'name'], 'probability': 0.031380992382764816}, {'value': ['set', 'gml', 'prefixing'], 'probability': 0.01631915010511875}, {'value': ['set', 'error', 'page'], 'probability': 0.007511560805141926}, {'value': ['set', 'is', 'abortable'], 'probability': 0.006893088109791279}]","[0.7708584, 0.7864717, 0.8295754, 0.8042778, 0.83763963, 0.8087432, 0.7887988, 0.5369938, 0.77354413, 0.8921909]",0.7866144325842056
680,680,"public JsonWriter name(String name) {if (current == null || current.array)throw new IllegalStateException(""Current item must be an object."");if (!current.needsComma)current.needsComma = true;elsewriter.write(',');writer.write(outputType.quoteName(name));writer.write(':');named = true;return this;}
","public JsonWriter [MASK](String [MASK]) {if (current == null || current.array)throw new IllegalStateException(""Current item must be an object."");if (!current.needsComma)current.needsComma = true;elsewriter.write(',');writer.write(outputType.quoteName([MASK]));writer.write(':');[MASK]d = true;return this;}
",name,"[{'value': ['write'], 'probability': 0.8945123553276062}, {'value': ['read'], 'probability': 0.020764185115695}, {'value': ['create'], 'probability': 0.013299219310283661}, {'value': ['process'], 'probability': 0.008979243226349354}, {'value': ['execute'], 'probability': 0.007533418480306864}]","[0.4830831, 0.5472748, 0.4426617, 0.35781324, 0.14135273]",0.4536523330762201,"[{'value': ['add', 'record'], 'probability': 0.7765694260597229}, {'value': ['add', 'animation'], 'probability': 0.05599869787693024}, {'value': ['add', 'association'], 'probability': 0.048390280455350876}, {'value': ['build', 'payload'], 'probability': 0.028968051075935364}, {'value': ['visit'], 'probability': 0.020066998898983}, {'value': ['add', 'modifier'], 'probability': 0.018720312044024467}, {'value': ['add', 'token'], 'probability': 0.018662521615624428}, {'value': ['add', 'reference'], 'probability': 0.011117978021502495}, {'value': ['attribute'], 'probability': 0.010854952037334442}, {'value': ['append', 'child'], 'probability': 0.010650777257978916}]","[0.4272828, 0.39128333, 0.49501574, 0.24259317, 0.38441628, 0.30555242, 0.35876405, 0.58370507, 0.33127546, 0.45042375]",0.4197200395252376
681,681,"public JsonWriter object() {requireCommaOrName();stack.add(current = new JsonObject(false));return this;}
","public JsonWriter [MASK]() {requireCommaOrName();stack.add(current = new JsonObject(false));return this;}
",object,"[{'value': ['stack'], 'probability': 0.9518865942955017}, {'value': ['create'], 'probability': 0.003554359544068575}, {'value': ['build'], 'probability': 0.0027695985045284033}, {'value': ['execute'], 'probability': 0.0027382662519812584}, {'value': ['list'], 'probability': 0.0024161150213330984}]","[0.34850386, 0.4262441, 0.3091646, 0.15417431, 0.32471415]",0.3353141540830393,"[{'value': ['flush'], 'probability': 0.521726131439209}, {'value': ['next'], 'probability': 0.29306289553642273}, {'value': ['start'], 'probability': 0.04180567339062691}, {'value': ['create', 'root'], 'probability': 0.030780917033553123}, {'value': ['object'], 'probability': 0.029971512034535408}, {'value': ['enter', 'state'], 'probability': 0.026286667212843895}, {'value': ['end', 'node'], 'probability': 0.015954377129673958}, {'value': ['advance'], 'probability': 0.01488114520907402}, {'value': ['run'], 'probability': 0.014395156875252724}, {'value': ['next', 'object'], 'probability': 0.01113546546548605}]","[0.07558974, 0.30091196, 0.30092937, 0.4349642, 1.0, 0.3772221, 0.46776956, 0.27589914, 0.1851025, 0.80389255]",0.2166648130664426
682,682,"public JsonWriter array() {requireCommaOrName();stack.add(current = new JsonObject(true));return this;}
","public JsonWriter [MASK]() {requireCommaOrName();stack.add(current = new JsonObject(true));return this;}
",array,"[{'value': ['stack'], 'probability': 0.9473896026611328}, {'value': ['create'], 'probability': 0.004002744797617197}, {'value': ['execute'], 'probability': 0.0030925741884857416}, {'value': ['build'], 'probability': 0.0030063316226005554}, {'value': ['list'], 'probability': 0.0025413939729332924}]","[0.38384268, 0.5084018, 0.22045356, 0.3941442, 0.3615879]",0.3684691983608219,"[{'value': ['flush'], 'probability': 0.5225543975830078}, {'value': ['next'], 'probability': 0.29277387261390686}, {'value': ['start'], 'probability': 0.042481403797864914}, {'value': ['create', 'root'], 'probability': 0.030898837372660637}, {'value': ['object'], 'probability': 0.029950464144349098}, {'value': ['enter', 'state'], 'probability': 0.025756103917956352}, {'value': ['end', 'node'], 'probability': 0.01519385538995266}, {'value': ['advance'], 'probability': 0.015111804008483887}, {'value': ['run'], 'probability': 0.014531119726598263}, {'value': ['next', 'object'], 'probability': 0.010748133063316345}]","[0.20876986, 0.27618605, 0.2571868, 0.43875942, 0.43403128, 0.2610674, 0.28849795, 0.33854467, 0.250707, 0.43971053]",0.2520285350387995
683,683,"public JsonWriter value(Object value) {if (quoteLongValues && (value instanceof Long || value instanceof Double || value instanceof BigDecimal || value instanceof BigInteger)) {value = value.toString();} else if (value instanceof Number) {Number number = (Number) value;long longValue = number.longValue();if (number.doubleValue() == longValue)value = longValue;}requireCommaOrName();writer.write(outputType.quoteValue(value));return this;}
","public JsonWriter [MASK](Object [MASK]) {if (quoteLongValues && ([MASK] instanceof Long || [MASK] instanceof Double || [MASK] instanceof BigDecimal || [MASK] instanceof BigInteger)) {[MASK] = [MASK].toString();} else if ([MASK] instanceof Number) {Number number = (Number) [MASK];long longValue = number.longValue();if (number.doubleValue() == longValue)[MASK] = longValue;}requireCommaOrName();writer.write(outputType.quoteValue([MASK]));return this;}
",value,"[{'value': ['write'], 'probability': 0.8299287557601929}, {'value': ['create'], 'probability': 0.031746890395879745}, {'value': ['process'], 'probability': 0.01694713532924652}, {'value': ['read'], 'probability': 0.016767308115959167}, {'value': ['execute'], 'probability': 0.012252597138285637}]","[0.45588973, 0.47249615, 0.4304379, 0.3197642, 0.18980543]",0.4083381648345959,"[{'value': ['write'], 'probability': 0.5036042332649231}, {'value': ['quote', 'value'], 'probability': 0.17523376643657684}, {'value': ['on', 'value'], 'probability': 0.09889884293079376}, {'value': ['write', 'event'], 'probability': 0.05201810970902443}, {'value': ['write', 'value'], 'probability': 0.04982929676771164}, {'value': ['write', 'big', 'integer'], 'probability': 0.03126334026455879}, {'value': ['write', 'field'], 'probability': 0.02924063242971897}, {'value': ['case', 'value'], 'probability': 0.024754438549280167}, {'value': ['append', 'number'], 'probability': 0.01884423941373825}, {'value': ['writelow'], 'probability': 0.016312995925545692}]","[0.45588973, 0.8416785, 0.8570115, 0.52526957, 0.8704375, 0.60417277, 0.52620584, 0.8579604, 0.45479164, 0.0]",0.5966163369503371
684,684,"public JsonWriter json(String json) {requireCommaOrName();writer.write(json);return this;}
","public JsonWriter [MASK](String [MASK]) {requireCommaOrName();writer.write([MASK]);return this;}
",json,"[{'value': ['write'], 'probability': 0.9547160863876343}, {'value': ['create'], 'probability': 0.007632645778357983}, {'value': ['writer'], 'probability': 0.005661437753587961}, {'value': ['process'], 'probability': 0.005295067559927702}, {'value': ['read'], 'probability': 0.004007506649941206}]","[0.041499805, -0.06593903, -0.028352275, 0.0046931757, 0.042674683]",0.039152596978853,"[{'value': ['value'], 'probability': 0.3949759304523468}, {'value': ['object'], 'probability': 0.24452893435955048}, {'value': ['write'], 'probability': 0.12685619294643402}, {'value': ['get', 'json'], 'probability': 0.0549490861594677}, {'value': ['array'], 'probability': 0.05443880334496498}, {'value': ['json'], 'probability': 0.03760659322142601}, {'value': ['on', 'value'], 'probability': 0.0243991632014513}, {'value': ['test', 'writer'], 'probability': 0.02401662804186344}, {'value': ['key'], 'probability': 0.02012968435883522}, {'value': ['to', 'json'], 'probability': 0.01809900812804699}]","[-0.002248204, 0.3021509, 0.041499805, 0.54608834, 0.073982306, 1.0, -0.10441515, -0.08459644, -0.090792425, 0.53318715]",0.1531454872559567
685,685,"private void requireCommaOrName() {if (current == null)return;if (current.array) {if (!current.needsComma)current.needsComma = true;elsewriter.write(',');} else {if (!named)throw new IllegalStateException(""Name must be set."");named = false;}}
","private void [MASK]() {if (current == null)return;if (current.array) {if (!current.needsComma)current.needsComma = true;elsewriter.write(',');} else {if (!named)throw new IllegalStateException(""Name must be set."");named = false;}}
",requireCommaOrName,"[{'value': ['write'], 'probability': 0.4192085266113281}, {'value': ['run'], 'probability': 0.21484589576721191}, {'value': ['read'], 'probability': 0.0712529793381691}, {'value': ['start'], 'probability': 0.030419478192925453}, {'value': ['next'], 'probability': 0.024918055161833763}]","[0.48339206, 0.4268716, 0.35857195, 0.52660036, 0.5169875]",0.3488042347702921,"[{'value': ['visit'], 'probability': 0.8238126039505005}, {'value': ['read', 'array'], 'probability': 0.05474453419446945}, {'value': ['visit', 'end'], 'probability': 0.039734888821840286}, {'value': ['add', 'token'], 'probability': 0.0318434052169323}, {'value': ['build', 'payload'], 'probability': 0.01638820394873619}, {'value': ['perform', 'add'], 'probability': 0.009809885174036026}, {'value': ['start', 'element'], 'probability': 0.00962564256042242}, {'value': ['insert', 'row'], 'probability': 0.0056217992678284645}, {'value': ['add', 'record'], 'probability': 0.00486182002350688}, {'value': ['visit', 'node'], 'probability': 0.00355713302269578}]","[0.31770775, 0.5399851, 0.44814137, 0.50987095, 0.46502241, 0.6404211, 0.5621303, 0.38847777, 0.49564505, 0.33335415]",0.35042942739365707
686,686,"public JsonWriter object(String name) {return name(name).object();}
","public JsonWriter [MASK](String name) {return name(name).[MASK]();}
",object,"[{'value': ['write'], 'probability': 0.228489950299263}, {'value': ['create'], 'probability': 0.17701350152492523}, {'value': ['generate'], 'probability': 0.028858408331871033}, {'value': ['get'], 'probability': 0.02687712013721466}, {'value': ['build'], 'probability': 0.025725964456796646}]","[0.33324808, 0.4262441, 0.36781594, 0.3802476, 0.3091646]",0.1803829000875442,"[{'value': ['property'], 'probability': 0.6109750866889954}, {'value': ['value'], 'probability': 0.23160116374492645}, {'value': ['prop'], 'probability': 0.12411054968833923}, {'value': ['object'], 'probability': 0.01275105681270361}, {'value': ['name'], 'probability': 0.012279283255338669}, {'value': ['key'], 'probability': 0.003508219961076975}, {'value': ['field'], 'probability': 0.0017405248945578933}, {'value': ['get', 'annotation'], 'probability': 0.0011499966494739056}, {'value': ['get', 'property'], 'probability': 0.0009762286790646613}, {'value': ['get', 'descriptor'], 'probability': 0.0009078519069589674}]","[0.3790681, 0.5032355, 0.017288549, 1.0, 0.47205025, 0.35433516, 0.36578155, 0.46294674, 0.4534168, 0.44739407]",0.3721052103773981
687,687,"public JsonWriter array(String name) {return name(name).array();}
","public JsonWriter [MASK](String name) {return name(name).[MASK]();}
",array,"[{'value': ['write'], 'probability': 0.228489950299263}, {'value': ['create'], 'probability': 0.17701350152492523}, {'value': ['generate'], 'probability': 0.028858408331871033}, {'value': ['get'], 'probability': 0.02687712013721466}, {'value': ['build'], 'probability': 0.025725964456796646}]","[0.22693059, 0.5084018, 0.44795194, 0.2993992, 0.3941442]",0.1729592517832771,"[{'value': ['property'], 'probability': 0.5226861834526062}, {'value': ['value'], 'probability': 0.3652077913284302}, {'value': ['prop'], 'probability': 0.08266138285398483}, {'value': ['name'], 'probability': 0.011379416100680828}, {'value': ['key'], 'probability': 0.004733361303806305}, {'value': ['object'], 'probability': 0.004340168554335833}, {'value': ['field'], 'probability': 0.003388175740838051}, {'value': ['array'], 'probability': 0.0029457397758960724}, {'value': ['get', 'descriptor'], 'probability': 0.0013297320110723376}, {'value': ['for', 'name'], 'probability': 0.0013280465500429273}]","[0.25549906, 0.36418572, 0.036839437, 0.15496695, 0.4669371, 0.43403128, 0.3657035, 1.0, 0.3195926, 0.3090542]",0.28047209248481764
688,688,"public JsonWriter set(String name, Object value) {return name(name).value(value);}
","public JsonWriter [MASK](String name, Object value) {return name(name).value(value);}
",set,"[{'value': ['write'], 'probability': 0.20278513431549072}, {'value': ['create'], 'probability': 0.10995446890592575}, {'value': ['process'], 'probability': 0.04706317558884621}, {'value': ['execute'], 'probability': 0.03623722121119499}, {'value': ['build'], 'probability': 0.02467365376651287}]","[0.46259418, 0.66197675, 0.55405426, 0.35167885, 0.58275604]",0.2197926636541436,"[{'value': ['value'], 'probability': 0.5685574412345886}, {'value': ['property'], 'probability': 0.3446851074695587}, {'value': ['prop'], 'probability': 0.06947703659534454}, {'value': ['field'], 'probability': 0.005130666773766279}, {'value': ['attribute'], 'probability': 0.0044220383279025555}, {'value': ['object'], 'probability': 0.0019514976302161813}, {'value': ['key'], 'probability': 0.0017069349996745586}, {'value': ['get', 'property'], 'probability': 0.0016103918896988034}, {'value': ['get', 'field', 'value'], 'probability': 0.0013661080738529563}, {'value': ['name'], 'probability': 0.0010927196126431227}]","[0.47274652, 0.4546797, 0.24121056, 0.57489157, 0.11920303, 0.4070152, 0.6211497, 0.6601998, 0.70811737, 0.4360663]",0.45010176019051135
689,689,"public JsonWriter json(String name, String json) {return name(name).json(json);}
","public JsonWriter [MASK](String name, String [MASK]) {return name(name).[MASK]([MASK]);}
",json,"[{'value': ['write'], 'probability': 0.21255695819854736}, {'value': ['create'], 'probability': 0.12877608835697174}, {'value': ['process'], 'probability': 0.042278628796339035}, {'value': ['run'], 'probability': 0.02499382756650448}, {'value': ['render'], 'probability': 0.022395092993974686}]","[0.041499805, -0.06593903, 0.0046931757, -0.22054867, 0.15765645]",-0.0014535020341588,"[{'value': ['object'], 'probability': 0.24485023319721222}, {'value': ['property'], 'probability': 0.23839764297008514}, {'value': ['get', 'json'], 'probability': 0.20447938144207}, {'value': ['value'], 'probability': 0.09986954182386398}, {'value': ['to', 'json'], 'probability': 0.04824394732713699}, {'value': ['json'], 'probability': 0.04469382390379906}, {'value': ['key'], 'probability': 0.038564734160900116}, {'value': ['prop'], 'probability': 0.036952510476112366}, {'value': ['array'], 'probability': 0.027263760566711426}, {'value': ['from', 'json'], 'probability': 0.01668437011539936}]","[0.3021509, -0.0822636, 0.54608834, -0.002248204, 0.53318715, 1.0, -0.090792425, 0.004728319, 0.073982306, 0.5647438]",0.24433919351990693
690,690,"public JsonWriter pop() {if (named)throw new IllegalStateException(""Expected an object, array, or value since a name was set."");stack.pop().close();current = stack.size == 0 ? null : stack.peek();return this;}
","public JsonWriter [MASK]() {if (named)throw new IllegalStateException(""Expected an object, array, or value since a name was set."");stack.[MASK]().close();current = stack.size == 0 ? null : stack.peek();return this;}
",pop,"[{'value': ['list'], 'probability': 0.09848306328058243}, {'value': ['stack'], 'probability': 0.0928143560886383}, {'value': ['execute'], 'probability': 0.08760618418455124}, {'value': ['create'], 'probability': 0.07210563868284225}, {'value': ['run'], 'probability': 0.06784514337778091}]","[0.37232417, 0.2088181, -0.035261758, 0.34279326, 0.29980037]",0.0980171189543397,"[{'value': ['end', 'array'], 'probability': 0.4099596440792084}, {'value': ['pop'], 'probability': 0.21280699968338013}, {'value': ['close'], 'probability': 0.0896439403295517}, {'value': ['end', 'node'], 'probability': 0.0742063894867897}, {'value': ['end'], 'probability': 0.05870404466986656}, {'value': ['value'], 'probability': 0.04544389620423317}, {'value': ['release'], 'probability': 0.029284512624144554}, {'value': ['next'], 'probability': 0.02752208709716797}, {'value': ['peek'], 'probability': 0.027382126078009605}, {'value': ['content'], 'probability': 0.025046411901712418}]","[0.38465437, 1.0, 0.2801084, 0.24447359, 0.32716602, 0.25517714, 0.4193162, 0.29644474, 0.17697851, 0.37804893]",0.47930656915255326
691,691,"public void write(char[] cbuf, int off, int len) {writer.write(cbuf, off, len);}
","public void [MASK](char[] cbuf, int off, int len) {[MASK]r.[MASK](cbuf, off, len);}
",write,"[{'value': ['transform'], 'probability': 0.07218334823846817}, {'value': ['update'], 'probability': 0.042890530079603195}, {'value': ['run'], 'probability': 0.037728190422058105}, {'value': ['apply'], 'probability': 0.033739376813173294}, {'value': ['r'], 'probability': 0.027134742587804794}]","[0.32467926, 0.33396447, 0.43416244, 0.49031785, 0.35514525]",0.0803203054849923,"[{'value': ['write'], 'probability': 0.9966647028923035}, {'value': ['process', 'bytes'], 'probability': 0.0011961805867031217}, {'value': ['write', 'text'], 'probability': 0.0007205940200947225}, {'value': ['real', 'write', 'bytes'], 'probability': 0.0005265285726636648}, {'value': ['write', 'direct'], 'probability': 0.00023592951765749604}, {'value': ['set', 'off'], 'probability': 0.0002083329891320318}, {'value': ['buffer', 'to', 'string'], 'probability': 0.00015865048044361174}, {'value': ['append'], 'probability': 0.00011173765960847959}, {'value': ['unread'], 'probability': 9.234146273229271e-05}, {'value': ['write', 'byte', 'array'], 'probability': 8.49917414598167e-05}]","[1.0, 0.35483032, 0.87014854, 0.74288684, 0.84849197, 0.46109185, 0.5228139, 0.12791875, 0.28430608, 0.68392426]",0.998585183130626
692,692,"public void flush() {writer.flush();}
","public void [MASK]() {writer.[MASK]();}
",flush,"[{'value': ['run'], 'probability': 0.5428588390350342}, {'value': ['finish'], 'probability': 0.06530051678419113}, {'value': ['close'], 'probability': 0.06231137737631798}, {'value': ['start'], 'probability': 0.0460955873131752}, {'value': ['execute'], 'probability': 0.029692230746150017}]","[0.4192967, 0.27805644, 0.23173186, 0.26895574, 0.21352476]",0.2789533860973971,"[{'value': ['flush'], 'probability': 0.9894657135009766}, {'value': ['close'], 'probability': 0.004303894005715847}, {'value': ['end', 'document'], 'probability': 0.002671686001121998}, {'value': ['flush', 'buffer'], 'probability': 0.0008338006446138024}, {'value': ['finish', 'output'], 'probability': 0.0006673528696410358}, {'value': ['send', 'data'], 'probability': 0.0006110410904511809}, {'value': ['flush', 'cache'], 'probability': 0.0005281658377498388}, {'value': ['print'], 'probability': 0.000321094790706411}, {'value': ['end'], 'probability': 0.0003178470069542527}, {'value': ['done'], 'probability': 0.000279302621493116}]","[1.0, 0.23173186, 0.19780008, 0.77119005, 0.25501606, 0.26278678, 0.77147925, 0.19456598, 0.3185762, 0.2754182]",0.9926134271737168
693,693,"public void close() {while (stack.size > 0) pop();writer.close();}
","public void [MASK]() {while (stack.size > 0) pop();writer.[MASK]();}
",close,"[{'value': ['close'], 'probability': 0.24758003652095795}, {'value': ['run'], 'probability': 0.10861782729625702}, {'value': ['pop'], 'probability': 0.10656554251909256}, {'value': ['write'], 'probability': 0.09876420348882675}, {'value': ['start'], 'probability': 0.038217708468437195}]","[1.0, 0.5948943, 0.2801084, 0.36015147, 0.6072239]",0.4008228446469379,"[{'value': ['close'], 'probability': 0.5479183793067932}, {'value': ['clear'], 'probability': 0.2447229027748108}, {'value': ['release'], 'probability': 0.0886070728302002}, {'value': ['flush'], 'probability': 0.07264483720064163}, {'value': ['dispose'], 'probability': 0.026867186650633812}, {'value': ['destroy'], 'probability': 0.006850534118711948}, {'value': ['reset'], 'probability': 0.0037844800390303135}, {'value': ['shutdown'], 'probability': 0.0031488228123635054}, {'value': ['close', 'all'], 'probability': 0.002808516612276435}, {'value': ['finish'], 'probability': 0.0026472387835383415}]","[1.0, 0.6670826, 0.386632, 0.23173186, 0.17637412, 0.38703844, 0.17533866, 0.20094246, 0.87772, 0.5623554]",0.7749013971234036
694,694,"void close() {writer.write(array ? ']' : '}');}
","void close() [MASK](array ? ']' : '}');}
",{writer.write,"[{'value': ['{'], 'probability': 0.94707852602005}, {'value': ['return'], 'probability': 0.03657615929841995}, {'value': ['('], 'probability': 0.002302283188328147}, {'value': ['search'], 'probability': 0.0017223992617800832}, {'value': ['<'], 'probability': 0.0010193983325734735}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['to', 'string'], 'probability': 0.9977586269378662}, {'value': ['print'], 'probability': 0.001098020700737834}, {'value': ['to', 'json', 'string'], 'probability': 0.0003129269171040505}, {'value': ['get', 'string', 'representation'], 'probability': 0.00018369904137216508}, {'value': ['dump'], 'probability': 0.000149937070091255}, {'value': ['array', 'to', 'string'], 'probability': 0.00013433993444778025}, {'value': ['to', 'debug', 'string'], 'probability': 0.00013345909246709198}, {'value': ['end', 'graph'], 'probability': 9.263998072128743e-05}, {'value': ['node', 'to', 'string'], 'probability': 9.190581477014348e-05}, {'value': ['to', 'stream'], 'probability': 4.4366181100485846e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
695,695,"public boolean tap(float x, float y, int count, int button) {shoot(x, y);return true;}
","public boolean [MASK](float x, float y, int count, int button) {shoot(x, y);return true;}
",tap,"[{'value': ['shoots'], 'probability': 0.44437822699546814}, {'value': ['shoot'], 'probability': 0.16611647605895996}, {'value': ['misses'], 'probability': 0.013372124172747135}, {'value': ['count'], 'probability': 0.011122139170765877}, {'value': ['shot'], 'probability': 0.008448070846498013}]","[0.21051563, 0.3114449, 0.09715685, 0.090402566, 0.2828047]",0.149978512051498,"[{'value': ['shoot'], 'probability': 0.9557210206985474}, {'value': ['action'], 'probability': 0.015073432587087154}, {'value': ['add'], 'probability': 0.010087168775498867}, {'value': ['set'], 'probability': 0.003867177525535226}, {'value': ['has'], 'probability': 0.003566044382750988}, {'value': ['check'], 'probability': 0.003359842812642455}, {'value': ['handle', 'button', 'up'], 'probability': 0.0028698546811938286}, {'value': ['apply'], 'probability': 0.0023916687350720167}, {'value': ['move'], 'probability': 0.0018900614231824875}, {'value': ['tick'], 'probability': 0.0011738007888197899}]","[0.3114449, 0.2634459, 0.48107007, 0.43969464, 0.34324607, 0.46560457, 0.551815, 0.2730546, 0.36651674, 0.10628941]",0.3140210595952781
696,696,"public void dispose() {super.dispose();chassisVertexArray.dispose();chassisVertexArray = null;ground = null;}public static int floatToIntBits(float f) {return impl.floatToIntBits(f);}
","public void dispose() [MASK]();chassisVertexArray.dispose();chassisVertexArray = null;ground = null;}public static int floatToIntBits(float f) {return impl.floatToIntBits(f);}
",{super.dispose,"[{'value': ['build'], 'probability': 0.05082978308200836}, {'value': ['{'], 'probability': 0.04667121544480324}, {'value': ['##hards'], 'probability': 0.02909967489540577}, {'value': ['if'], 'probability': 0.024193240329623222}, {'value': ['restore'], 'probability': 0.02342173643410206}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['dispose'], 'probability': 0.9999699592590332}, {'value': ['hide'], 'probability': 1.2399115803418681e-05}, {'value': ['do', 'dispose'], 'probability': 6.755686172255082e-06}, {'value': ['on', 'dispose'], 'probability': 3.1817580747883767e-06}, {'value': ['dispose', 'ui', 'resources'], 'probability': 2.459075176375336e-06}, {'value': ['close', 'window'], 'probability': 1.4821517879681778e-06}, {'value': ['clean'], 'probability': 1.3967043059892603e-06}, {'value': ['dispose', 'internal'], 'probability': 1.0199306643698947e-06}, {'value': ['disconnect'], 'probability': 7.589535471197451e-07}, {'value': ['do', 'close'], 'probability': 4.933586410516e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
697,697,"public static float intBitsToFloat(int i) {return impl.intBitsToFloat(i);}
","public static float [MASK](int i) {return impl.[MASK](i);}
",intBitsToFloat,"[{'value': ['value'], 'probability': 0.04646541178226471}, {'value': ['get'], 'probability': 0.03828486427664757}, {'value': ['strip'], 'probability': 0.032917093485593796}, {'value': ['update'], 'probability': 0.02966073714196682}, {'value': ['transform'], 'probability': 0.022141937166452408}]","[0.02937332, 0.018191759, 0.058487546, 0.21420693, 0.09803838]",0.0125108476922324,"[{'value': ['int', 'bits', 'to', 'float'], 'probability': 0.7659297585487366}, {'value': ['exp'], 'probability': 0.09036445617675781}, {'value': ['swap'], 'probability': 0.034251049160957336}, {'value': ['exponent'], 'probability': 0.029629746451973915}, {'value': ['get', 'float'], 'probability': 0.02240881137549877}, {'value': ['f'], 'probability': 0.01730659417808056}, {'value': ['r'], 'probability': 0.012597265653312206}, {'value': ['i'], 'probability': 0.012030051089823246}, {'value': ['re'], 'probability': 0.007898872718214989}, {'value': ['int', 'to', 'float'], 'probability': 0.007583301048725843}]","[0.5113602, 0.2792079, 0.04570868, 0.16126423, 0.05365039, 0.30912587, 0.028810956, -0.018657386, 0.066722706, 0.58260757]",0.43487602322375235
698,698,"public static String newString(byte[] b) {return impl.createString(b, 0, b.length);}
","public static String [MASK](byte[] b) {return impl.createString(b, 0, b.length);}
",newString,"[{'value': ['create'], 'probability': 0.14433971047401428}, {'value': ['format'], 'probability': 0.08427686989307404}, {'value': ['replace'], 'probability': 0.06727897375822067}, {'value': ['get'], 'probability': 0.06669667363166809}, {'value': ['generate'], 'probability': 0.051110658794641495}]","[0.6427982, 0.44350123, 0.6061198, 0.61076814, 0.37638253]",0.2309106809701024,"[{'value': ['create', 'string'], 'probability': 0.4741857647895813}, {'value': ['link'], 'probability': 0.15711787343025208}, {'value': ['write'], 'probability': 0.13242417573928833}, {'value': ['text'], 'probability': 0.08927599340677261}, {'value': ['append'], 'probability': 0.057853106409311295}, {'value': ['p'], 'probability': 0.024669351056218147}, {'value': ['buffer'], 'probability': 0.021891755983233452}, {'value': ['put'], 'probability': 0.016243210062384605}, {'value': ['debug'], 'probability': 0.01339536439627409}, {'value': ['wrap'], 'probability': 0.012943449430167675}]","[0.6318672, 0.5162865, 0.4559894, 0.405785, -0.16979395, 0.27931687, 0.1435903, 0.67330503, -0.10382026, 0.27662233]",0.4906884221012695
699,699,"public static String newString(byte[] b, int s, int l) {return impl.createString(b, s, l);}
","public static String [MASK](byte[] b, int s, int l) {return impl.createString(b, s, l);}
",newString,"[{'value': ['create'], 'probability': 0.20039744675159454}, {'value': ['replace'], 'probability': 0.11071759462356567}, {'value': ['format'], 'probability': 0.07578916847705841}, {'value': ['build'], 'probability': 0.05252496898174286}, {'value': ['generate'], 'probability': 0.041323088109493256}]","[0.6427982, 0.6061198, 0.44350123, 0.6221016, 0.37638253]",0.2777649883967998,"[{'value': ['create', 'string'], 'probability': 0.24442797899246216}, {'value': ['text'], 'probability': 0.19417114555835724}, {'value': ['link'], 'probability': 0.1539839506149292}, {'value': ['debug'], 'probability': 0.13924124836921692}, {'value': ['get', 'string'], 'probability': 0.0556466206908226}, {'value': ['p'], 'probability': 0.054524850100278854}, {'value': ['c'], 'probability': 0.05239179730415344}, {'value': ['append'], 'probability': 0.04449993371963501}, {'value': ['equals'], 'probability': 0.0313686728477478}, {'value': ['print'], 'probability': 0.02974376082420349}]","[0.6318672, 0.405785, 0.5162865, -0.10382026, 0.6222011, 0.27931687, 0.35677654, -0.16979395, 0.07302478, 0.40438437]",0.37358957943259063
700,700,"public static String newString(byte[] b, String encoding) {return impl.createString(b, encoding);}
","public static String [MASK](byte[] b, String encoding) {return impl.createString(b, encoding);}
",newString,"[{'value': ['create'], 'probability': 0.2297685742378235}, {'value': ['generate'], 'probability': 0.06927219778299332}, {'value': ['replace'], 'probability': 0.05901327729225159}, {'value': ['format'], 'probability': 0.05320317670702934}, {'value': ['get'], 'probability': 0.04023054987192154}]","[0.6427982, 0.37638253, 0.6061198, 0.44350123, 0.61076814]",0.2577039967385159,"[{'value': ['text'], 'probability': 0.5843843817710876}, {'value': ['create', 'string'], 'probability': 0.36139926314353943}, {'value': ['c'], 'probability': 0.014954275451600552}, {'value': ['get', 'string'], 'probability': 0.014412746764719486}, {'value': ['to', 'string'], 'probability': 0.008002531714737415}, {'value': ['get', 'class'], 'probability': 0.006298720836639404}, {'value': ['link'], 'probability': 0.0032385766971856356}, {'value': ['unmarshal'], 'probability': 0.0031065084040164948}, {'value': ['define'], 'probability': 0.002263423753902316}, {'value': ['get', 'content'], 'probability': 0.0019396495772525668}]","[0.405785, 0.6318672, 0.35677654, 0.6222011, 0.6962552, 0.662724, 0.5162865, 0.0, 0.36614412, 0.58509725]",0.49317549253384824
701,701,"public static String getOriginatingServerAddress() {return impl.getOriginatingServerAddress();}
","public static String [MASK]() {return impl.[MASK]();}
",getOriginatingServerAddress,"[{'value': ['name'], 'probability': 0.18906117975711823}, {'value': ['get'], 'probability': 0.048752546310424805}, {'value': ['value'], 'probability': 0.03486606851220131}, {'value': ['format'], 'probability': 0.023166721686720848}, {'value': ['next'], 'probability': 0.021172160282731056}]","[0.47842693, 1.0, 0.46303764, 0.29473126, 0.6966621]",0.1769266081144718,"[{'value': ['get', 'global', 'composite', 'operation'], 'probability': 0.8350518941879272}, {'value': ['get', 'tooltip', 'window', 'style'], 'probability': 0.06529457122087479}, {'value': ['get', 'impl'], 'probability': 0.026443887501955032}, {'value': ['get', 'global', 'alpha'], 'probability': 0.018205825239419937}, {'value': ['get', 'implementation', 'class'], 'probability': 0.01048933994024992}, {'value': ['get', 'post', 'content', 'type'], 'probability': 0.009241929277777672}, {'value': ['is', 'implementation'], 'probability': 0.009175694547593594}, {'value': ['get', 'style', 'name'], 'probability': 0.009099888615310192}, {'value': ['get', 'extract', 'to', 'class', 'name'], 'probability': 0.008954638615250587}, {'value': ['socket', 'available'], 'probability': 0.00804234854876995}]","[0.7080767, 0.7802857, 1.0, 0.70906365, 0.7986354, 0.80587125, 0.5326818, 0.77828985, 0.8274938, 0.4113329]",0.7200952163925345
702,702,"public static void printStackTrace(Throwable e) {impl.printStackTrace(e);}
","public static void [MASK](Throwable e) {impl.[MASK](e);}
",printStackTrace,"[{'value': ['execute'], 'probability': 0.22424055635929108}, {'value': ['error'], 'probability': 0.08883263170719147}, {'value': ['run'], 'probability': 0.04146217927336693}, {'value': ['fail'], 'probability': 0.04079800099134445}, {'value': ['warn'], 'probability': 0.03339379280805588}]","[0.13583302, 0.18838814, 0.3773171, 0.18504731, 0.13946742]",0.0750455830877161,"[{'value': ['dump', 'stack'], 'probability': 0.5308364629745483}, {'value': ['trace', 'exception'], 'probability': 0.26041653752326965}, {'value': ['print', 'stack', 'trace'], 'probability': 0.07219240814447403}, {'value': ['other'], 'probability': 0.04072617366909981}, {'value': ['log'], 'probability': 0.03728685528039932}, {'value': ['f'], 'probability': 0.019274335354566574}, {'value': ['get', 'stack', 'trace'], 'probability': 0.014095543883740902}, {'value': ['dprint'], 'probability': 0.00870960671454668}, {'value': ['log', 'stack', 'trace'], 'probability': 0.00870849471539259}, {'value': ['handle', 'exception'], 'probability': 0.007753610145300627}]","[0.2181591, 0.32381305, 0.76611143, 0.38717425, 0.3645471, 0.15246195, 0.44457757, 0.0, 0.39767593, 0.44541642]",0.3009233574491719
703,703,"public static void sleep(int i) {impl.sleep(i);}
","public static void [MASK](int i) {impl.[MASK](i);}
",sleep,"[{'value': ['start'], 'probability': 0.055780500173568726}, {'value': ['write'], 'probability': 0.036705244332551956}, {'value': ['read'], 'probability': 0.03188285976648331}, {'value': ['add'], 'probability': 0.029739471152424812}, {'value': ['execute'], 'probability': 0.02964930608868599}]","[0.37506554, 0.33364436, 0.36599806, 0.21274103, 0.22351757]",0.0577908522777304,"[{'value': ['sleep'], 'probability': 0.5521575808525085}, {'value': ['delay'], 'probability': 0.14211799204349518}, {'value': ['swap'], 'probability': 0.12528647482395172}, {'value': ['wait'], 'probability': 0.07549644261598587}, {'value': ['wait', 'for', 'load'], 'probability': 0.0457184724509716}, {'value': ['sleep', 'a', 'bit'], 'probability': 0.01813262701034546}, {'value': ['bar'], 'probability': 0.016187820583581924}, {'value': ['execute'], 'probability': 0.008725224062800407}, {'value': ['f'], 'probability': 0.008421332575380802}, {'value': ['do', 'something', 'else'], 'probability': 0.007755986414849758}]","[1.0, 0.25860837, 0.07435463, 0.5146531, 0.4793141, 0.73917353, 0.23253551, 0.22351757, 0.16520628, 0.51335233]",0.6834845519453483
704,704,"public static String bytesToString(byte[] data, int len) {char[] chars = new char[len];for (int i = 0; i < len; i++) {chars[i] = (char) data[i];}return new String(chars);}
","public static String [MASK](byte[] data, int len) {char[] chars = new char[len];for (int i = 0; i < len; i++) {chars[i] = (char) data[i];}return new String(chars);}
",bytesToString,"[{'value': ['format'], 'probability': 0.29500851035118103}, {'value': ['string'], 'probability': 0.1349860578775406}, {'value': ['value'], 'probability': 0.03873901069164276}, {'value': ['get'], 'probability': 0.026333143934607506}, {'value': ['array'], 'probability': 0.013694052584469318}]","[0.29206145, 0.09929611, 0.2896912, 0.07055115, 0.23954311]",0.1159247032962095,"[{'value': ['to', 'string'], 'probability': 0.41123297810554504}, {'value': ['bytes', 'to', 'string'], 'probability': 0.23488444089889526}, {'value': ['string'], 'probability': 0.09646710008382797}, {'value': ['get', 'string'], 'probability': 0.07426238059997559}, {'value': ['read', 'string'], 'probability': 0.06408120691776276}, {'value': ['pad'], 'probability': 0.02596409060060978}, {'value': ['from', 'bytes'], 'probability': 0.024695424363017082}, {'value': ['encode'], 'probability': 0.023885300382971764}, {'value': ['bytes', 'to', 'hex', 'string'], 'probability': 0.02316325716674328}, {'value': ['make', 'string'], 'probability': 0.02136383391916752}]","[0.08702728, 0.56387496, 0.09929611, 0.10376324, 0.19474809, 0.1605365, 0.72270876, 0.51671183, 0.5989115, 0.10067195]",0.24837922883741098
705,705,"public static int stringToBytes(String s, byte[] data) {int len = s.length();for (int i = 0; i < len; i++) {data[i] = (byte) s.charAt(i);}return len;}
","public static int [MASK](String s, byte[] data) {int len = s.length();for (int i = 0; i < len; i++) {data[i] = (byte) s.charAt(i);}return len;}
",stringToBytes,"[{'value': ['compare'], 'probability': 0.536608099937439}, {'value': ['min'], 'probability': 0.058718569576740265}, {'value': ['read'], 'probability': 0.0469401478767395}, {'value': ['strip'], 'probability': 0.04053705185651779}, {'value': ['split'], 'probability': 0.023501308634877205}]","[0.23682564, 0.012851141, 0.26816133, 0.22170988, 0.36569688]",0.1580065123015827,"[{'value': ['parse'], 'probability': 0.6659888625144958}, {'value': ['from', 'string'], 'probability': 0.09704770892858505}, {'value': ['read'], 'probability': 0.0607864148914814}, {'value': ['deserialize'], 'probability': 0.058438386768102646}, {'value': ['encrypt'], 'probability': 0.03540419787168503}, {'value': ['compress'], 'probability': 0.020786713808774948}, {'value': ['decode', 'base'], 'probability': 0.020452601835131645}, {'value': ['normalize'], 'probability': 0.014442846179008484}, {'value': ['copy', 'data'], 'probability': 0.013387979939579964}, {'value': ['hash'], 'probability': 0.01326424814760685}]","[0.035579428, 0.8168046, 0.26816133, 0.0, 0.0031142938, 0.046900176, 0.24376693, 0.006078855, 0.30764326, 0.14154091]",0.1314198628024931
706,706,"public static String bytesToHex(byte[] data, int len) {char[] hex = new char[len * 2];for (int i = 0; i < len; i++) {int di = data[i];hex[i << 1] = Character.forDigit((di >> 4) & 15, 16);hex[(i << 1) + 1] = Character.forDigit(di & 15, 16);}return new String(hex);}
","public static String [MASK](byte[] data, int len) {char[] hex = new char[len * 2];for (int i = 0; i < len; i++) {int di = data[i];hex[i << 1] = Character.forDigit((di >> 4) & 15, 16);hex[(i << 1) + 1] = Character.forDigit(di & 15, 16);}return new String(hex);}
",bytesToHex,"[{'value': ['format'], 'probability': 0.07447508722543716}, {'value': ['value'], 'probability': 0.04414725303649902}, {'value': ['replace'], 'probability': 0.04391487315297127}, {'value': ['transform'], 'probability': 0.04085185378789902}, {'value': ['get'], 'probability': 0.03789336234331131}]","[0.29206145, 0.2896912, -0.030466301, 0.21831208, 0.07055115]",0.0447943228402486,"[{'value': ['display'], 'probability': 0.9369572997093201}, {'value': ['main'], 'probability': 0.022934546694159508}, {'value': ['u'], 'probability': 0.02091195620596409}, {'value': ['rot'], 'probability': 0.011411760002374649}, {'value': ['caller'], 'probability': 0.0053649828769266605}, {'value': ['hex', 'string'], 'probability': 0.0010364670306444168}, {'value': ['test'], 'probability': 0.0004063541709911078}, {'value': ['draw'], 'probability': 0.0003777032543439418}, {'value': ['dequeue'], 'probability': 0.0003196242905687541}, {'value': ['g'], 'probability': 0.00027925835456699133}]","[0.23889504, 0.026444154, 0.24180293, -0.0032556616, 0.13688552, 0.27821133, 0.059935126, 0.09748126, 0.0, 0.21659414]",0.2306047606735759
707,707,"public static int hexToBytes(String hex, byte[] data) {int len = hex.length();for (int i = 0; i < len; i += 2) {data[i >> 1] = (byte) ((Character.digit(hex.charAt(i), 16) << 4) | Character.digit(hex.charAt(i + 1), 16));}return len / 2;}public static TextureData loadFromFile(FileHandle file, boolean useMipMaps) {return loadFromFile(file, null, useMipMaps);}
","public static int [MASK](String hex, byte[] data) {int len = hex.length();for (int i = 0; i < len; i += 2) {data[i >> 1] = (byte) ((Character.digit(hex.charAt(i), 16) << 4) | Character.digit(hex.charAt(i + 1), 16));}return len / 2;}public static TextureData loadFromFile(FileHandle file, boolean useMipMaps) {return loadFromFile(file, null, useMipMaps);}
",hexToBytes,"[{'value': ['compare'], 'probability': 0.3077169954776764}, {'value': ['length'], 'probability': 0.08325447887182236}, {'value': ['count'], 'probability': 0.07046859711408615}, {'value': ['read'], 'probability': 0.056005340069532394}, {'value': ['digit'], 'probability': 0.031172649934887886}]","[0.036888234, 0.102557056, -0.06246706, 0.13376783, 0.18983765]",0.028896960010283,"[{'value': ['get', 'encoded', 'size'], 'probability': 0.36904552578926086}, {'value': ['truncate'], 'probability': 0.11487865447998047}, {'value': ['bytes'], 'probability': 0.11080248653888702}, {'value': ['get', 'byte', 'length'], 'probability': 0.09654775261878967}, {'value': ['hex', 'string', 'to', 'bytes'], 'probability': 0.07774879783391953}, {'value': ['hex', 'string'], 'probability': 0.05832580849528313}, {'value': ['parse', 'hex'], 'probability': 0.057974107563495636}, {'value': ['get', 'gray'], 'probability': 0.039209216833114624}, {'value': ['get', 'data', 'size'], 'probability': 0.03831394016742706}, {'value': ['hash'], 'probability': 0.03715377673506737}]","[0.18356259, 0.09173821, 0.3590218, 0.29959115, 0.57780933, 0.7296442, 0.8262601, -0.00073846336, 0.094767705, 0.28246686]",0.29646651590674167
708,708,"public void SetStream(java.io.OutputStream stream) {ReleaseStream();_stream = stream;}
","public void [MASK](java.io.OutputStream stream) {ReleaseStream();_stream = stream;}
",SetStream,"[{'value': ['run'], 'probability': 0.37640291452407837}, {'value': ['stream'], 'probability': 0.21069172024726868}, {'value': ['main'], 'probability': 0.0605350024998188}, {'value': ['output'], 'probability': 0.05447841435670853}, {'value': ['read'], 'probability': 0.05327075347304344}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set', 'stream'], 'probability': 0.9999997615814209}, {'value': ['set', 'input', 'stream'], 'probability': 2.3669964832606638e-07}, {'value': ['release', 'stream'], 'probability': 4.174428624992288e-08}, {'value': ['open', 'stream'], 'probability': 5.0285628994117815e-09}, {'value': ['decorate'], 'probability': 2.3474187038630134e-09}, {'value': ['reset', 'buffer'], 'probability': 1.4326674291353925e-09}, {'value': ['register', 'stream'], 'probability': 1.302360330690533e-09}, {'value': ['received'], 'probability': 1.0398464311833777e-09}, {'value': ['print', 'stream'], 'probability': 9.590372940238012e-10}, {'value': ['read', 'abstract'], 'probability': 8.871133272414511e-10}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
709,709,"public void ReleaseStream() {Flush();_stream = null;}
","public void [MASK]() {Flush();_stream = null;}
",ReleaseStream,"[{'value': ['run'], 'probability': 0.4068749248981476}, {'value': ['clear'], 'probability': 0.18041057884693146}, {'value': ['close'], 'probability': 0.08491237461566925}, {'value': ['flush'], 'probability': 0.06540672481060028}, {'value': ['test'], 'probability': 0.038791317492723465}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['release', 'stream'], 'probability': 0.8535506725311279}, {'value': ['close'], 'probability': 0.1179933175444603}, {'value': ['dispose'], 'probability': 0.01640043593943119}, {'value': ['flush', 'buffer'], 'probability': 0.002860784763470292}, {'value': ['close', 'stream'], 'probability': 0.002693080110475421}, {'value': ['reset'], 'probability': 0.0016532811569049954}, {'value': ['stop'], 'probability': 0.0015405424637719989}, {'value': ['deinit'], 'probability': 0.0012802045093849301}, {'value': ['flush'], 'probability': 0.0010774245020002127}, {'value': ['recycle'], 'probability': 0.0009502319153398275}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
710,710,"public void Init(boolean solid) {if (!solid) {_streamPos = 0;_pos = 0;}}
","public void [MASK](boolean solid) {if (!solid) {_streamPos = 0;_pos = 0;}}
",Init,"[{'value': ['fill'], 'probability': 0.13847194612026215}, {'value': ['clear'], 'probability': 0.06551333516836166}, {'value': ['apply'], 'probability': 0.06352871656417847}, {'value': ['state'], 'probability': 0.0457519069314003}, {'value': ['set'], 'probability': 0.027042195200920105}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['init'], 'probability': 0.9999068975448608}, {'value': ['initialize'], 'probability': 3.8132930058054626e-05}, {'value': ['load'], 'probability': 2.3690374291618355e-05}, {'value': ['append'], 'probability': 6.727550498908386e-06}, {'value': ['play'], 'probability': 6.676966222585179e-06}, {'value': ['create', 'game'], 'probability': 6.0802758525824174e-06}, {'value': ['set'], 'probability': 3.958968136430485e-06}, {'value': ['write', 'block'], 'probability': 3.5298469356348505e-06}, {'value': ['reinit'], 'probability': 2.8571125767484773e-06}, {'value': ['read'], 'probability': 1.4049319361220114e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
711,711,"public void Flush() {int size = _pos - _streamPos;if (size == 0)return;_stream.write(_buffer, _streamPos, size);if (_pos >= _windowSize)_pos = 0;_streamPos = _pos;}
","public void [MASK]() {int size = _pos - _streamPos;if (size == 0)return;_stream.write(_buffer, _streamPos, size);if (_pos >= _windowSize)_pos = 0;_streamPos = _pos;}
",Flush,"[{'value': ['run'], 'probability': 0.5351327657699585}, {'value': ['clear'], 'probability': 0.07024738192558289}, {'value': ['read'], 'probability': 0.06910885125398636}, {'value': ['flush'], 'probability': 0.036606669425964355}, {'value': ['close'], 'probability': 0.03490035980939865}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['flush'], 'probability': 0.9964061379432678}, {'value': ['get', 'stream', 'position'], 'probability': 0.001195514458231628}, {'value': ['seek'], 'probability': 0.0007598645170219243}, {'value': ['write'], 'probability': 0.0005789274000562727}, {'value': ['visit', 'end'], 'probability': 0.00037318700924515724}, {'value': ['dispose'], 'probability': 0.0002083323779515922}, {'value': ['drain'], 'probability': 0.0001928480196511373}, {'value': ['close'], 'probability': 0.0001320318115176633}, {'value': ['read'], 'probability': 8.065648580668494e-05}, {'value': ['access'], 'probability': 7.2480681410525e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
712,712,"public void CopyBlock(int distance, int len) {int pos = _pos - distance - 1;if (pos < 0)pos += _windowSize;for (; len != 0; len--) {if (pos >= _windowSize)pos = 0;_buffer[_pos++] = _buffer[pos++];if (_pos >= _windowSize)Flush();}}
","public void [MASK](int distance, int len) {int pos = _pos - distance - 1;if (pos < 0)pos += _windowSize;for (; len != 0; len--) {if (pos >= _windowSize)pos = 0;_buffer[_pos++] = _buffer[pos++];if (_pos >= _windowSize)Flush();}}
",CopyBlock,"[{'value': ['run'], 'probability': 0.0728813037276268}, {'value': ['read'], 'probability': 0.05554048717021942}, {'value': ['min'], 'probability': 0.05410626530647278}, {'value': ['apply'], 'probability': 0.04405009001493454}, {'value': ['close'], 'probability': 0.038438763469457626}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['copy', 'block'], 'probability': 0.9999948740005493}, {'value': ['window', 'size'], 'probability': 1.437441710550047e-06}, {'value': ['do', 'collect'], 'probability': 1.3582921383203939e-06}, {'value': ['set', 'window', 'size'], 'probability': 4.725663416138559e-07}, {'value': ['update', 'display'], 'probability': 4.44906419261315e-07}, {'value': ['put', 'impl'], 'probability': 4.1655897575765266e-07}, {'value': ['on', 'draw'], 'probability': 2.706881048197829e-07}, {'value': ['map', 'iterator'], 'probability': 2.4692073452570185e-07}, {'value': ['start', 'refresh'], 'probability': 1.9699571396358806e-07}, {'value': ['acquire'], 'probability': 1.9373158011148917e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
713,713,"public void PutByte(byte b) {_buffer[_pos++] = b;if (_pos >= _windowSize)Flush();}
","public void [MASK](byte b) {_buffer[_pos++] = b;if (_pos >= _windowSize)Flush();}
",PutByte,"[{'value': ['buffer'], 'probability': 0.14720003306865692}, {'value': ['run'], 'probability': 0.1256502866744995}, {'value': ['read'], 'probability': 0.05760451778769493}, {'value': ['write'], 'probability': 0.03273172676563263}, {'value': ['paint'], 'probability': 0.03147052973508835}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['put', 'byte'], 'probability': 0.9992018342018127}, {'value': ['put', 'if', 'absent'], 'probability': 0.00020947132725268602}, {'value': ['reserve'], 'probability': 0.00011632158566499129}, {'value': ['put'], 'probability': 0.00011026663560187444}, {'value': ['get', 'byte'], 'probability': 9.519221930531785e-05}, {'value': ['push'], 'probability': 7.163508416851982e-05}, {'value': ['append', 'byte'], 'probability': 6.832978397142142e-05}, {'value': ['enqueue'], 'probability': 5.1352202717680484e-05}, {'value': ['add'], 'probability': 4.261455615051091e-05}, {'value': ['put', 'short'], 'probability': 3.307263978058472e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
714,714,"public byte GetByte(int distance) {int pos = _pos - distance - 1;if (pos < 0)pos += _windowSize;return _buffer[pos];}protected static long getCPtr(SWIGTYPE_p_btMatrix3x3DoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}public Vec2[] get(int argLength) {assert (argLength > 0);if (!map.containsKey(argLength)) {map.put(argLength, getInitializedArray(argLength));}assert (map.get(argLength).length == argLength) : ""Array not built of correct length"";return map.get(argLength);}
","public byte GetByte(int [MASK] {int pos = _pos - distance - 1;if (pos < 0)pos += _windowSize;return _buffer[pos];}protected static long getCPtr(SWIGTYPE_p_btMatrix3x3DoubleData obj) {return (obj == null) ? 0 : obj.swigCPtr;}public Vec2[] get(int argLength) {assert (argLength > 0);if (!map.containsKey(argLength)) {map.put(argLength, getInitializedArray(argLength));}assert (map.get(argLength).length == argLength) : ""Array not built of correct length"";return map.get(argLength);}
",distance),"[{'value': [')'], 'probability': 0.9997583031654358}, {'value': [']'], 'probability': 0.00011265728244325146}, {'value': ['c'], 'probability': 1.301211796089774e-05}, {'value': ['try'], 'probability': 1.1246583198953886e-05}, {'value': ['s'], 'probability': 8.500319381710142e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'byte'], 'probability': 0.9982969164848328}, {'value': ['get', 'char'], 'probability': 0.0005554850795306265}, {'value': ['read', 'byte'], 'probability': 0.0005439691012725234}, {'value': ['read', 'bytes'], 'probability': 0.00015436051762662828}, {'value': ['peek'], 'probability': 0.0001165569992735982}, {'value': ['size'], 'probability': 9.699568181531504e-05}, {'value': ['get', 'length'], 'probability': 7.233904034364969e-05}, {'value': ['position'], 'probability': 7.17492657713592e-05}, {'value': ['get'], 'probability': 4.666347740567289e-05}, {'value': ['get', 'byte', 'at'], 'probability': 4.4998476369073614e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
715,715,"protected Vec2[] getInitializedArray(int argLength) {final Vec2[] ray = new Vec2[argLength];for (int i = 0; i < ray.length; i++) {ray[i] = new Vec2();}return ray;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected Vec2[] [MASK](int argLength) {final Vec2[] ray = new Vec2[argLength];for (int i = 0; i < ray.length; i++) {ray[i] = new Vec2();}return ray;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",getInitializedArray,"[{'value': ['create'], 'probability': 0.23773187398910522}, {'value': ['generate'], 'probability': 0.16890333592891693}, {'value': ['destroy'], 'probability': 0.05659857392311096}, {'value': ['transform'], 'probability': 0.046068012714385986}, {'value': ['get'], 'probability': 0.0432346947491169}]","[0.62328804, 0.47366065, 0.40928823, 0.33052462, 1.0]",0.3098047335176117,"[{'value': ['get', 'initialized', 'array'], 'probability': 0.9992585778236389}, {'value': ['get', 'ray'], 'probability': 0.0005866055143997073}, {'value': ['get', 'scaled'], 'probability': 8.046146831475198e-05}, {'value': ['ray'], 'probability': 2.7627524104900658e-05}, {'value': ['set', 'ray'], 'probability': 1.292524302698439e-05}, {'value': ['to', 'array'], 'probability': 1.0953015589620918e-05}, {'value': ['get', 'intersection', 'point'], 'probability': 9.64188075158745e-06}, {'value': ['to', 'collection'], 'probability': 6.68174288875889e-06}, {'value': ['to', 'polygon'], 'probability': 3.600386435209657e-06}, {'value': ['get', 'intersection'], 'probability': 2.9208972591732163e-06}]","[0.7160492, 0.82110155, 0.8368535, 0.3289329, 0.60002166, 0.69582117, 0.7523524, 0.67001784, 0.5390417, 0.7591154]",0.7161076558053417
716,716,"public static long getCPtr(btCylinderShapeData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btCylinderShapeData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08199137449264526}, {'value': ['read'], 'probability': 0.04516134038567543}, {'value': ['execute'], 'probability': 0.04256541654467583}, {'value': ['run'], 'probability': 0.039199940860271454}, {'value': ['skip'], 'probability': 0.02676563151180744}]","[1.0, 0.5726487, 0.37713256, 0.65114945, 0.49507433]",0.1626817593842775,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
717,717,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
718,718,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btCylinderShapeData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btCylinderShapeData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.849669873714447}, {'value': ['start'], 'probability': 0.011514520272612572}, {'value': ['clear'], 'probability': 0.011163076385855675}, {'value': ['test'], 'probability': 0.010769336484372616}, {'value': ['execute'], 'probability': 0.008871600963175297}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1267735206549153,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
719,719,"public void setConvexInternalShapeData(btConvexInternalShapeData value) {CollisionJNI.btCylinderShapeData_convexInternalShapeData_set(swigCPtr, this, btConvexInternalShapeData.getCPtr(value), value);}
","public void [MASK](btConvexInternalShapeData value) {CollisionJNI.btCylinderShapeData_convexInternalShapeData_set(swigCPtr, this, btConvexInternalShapeData.getCPtr(value), value);}
",setConvexInternalShapeData,"[{'value': ['set'], 'probability': 0.6392351984977722}, {'value': ['put'], 'probability': 0.034675370901823044}, {'value': ['apply'], 'probability': 0.024314019829034805}, {'value': ['add'], 'probability': 0.022624416276812553}, {'value': ['get'], 'probability': 0.016986096277832985}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.65028083]",0.7015160798962229,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
720,720,"public btConvexInternalShapeData getConvexInternalShapeData() {long cPtr = CollisionJNI.btCylinderShapeData_convexInternalShapeData_get(swigCPtr, this);return (cPtr == 0) ? null : new btConvexInternalShapeData(cPtr, false);}
","public btConvexInternalShapeData [MASK]() {long cPtr = CollisionJNI.btCylinderShapeData_convexInternalShapeData_get(swigCPtr, this);return (cPtr == 0) ? null : new btConvexInternalShapeData(cPtr, false);}
",getConvexInternalShapeData,"[{'value': ['get'], 'probability': 0.5879840850830078}, {'value': ['build'], 'probability': 0.11020071804523468}, {'value': ['create'], 'probability': 0.06946070492267609}, {'value': ['clone'], 'probability': 0.021511338651180267}, {'value': ['##s'], 'probability': 0.009586606174707413}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.6968658451242663,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
721,721,"public void setUpAxis(int value) {CollisionJNI.btCylinderShapeData_upAxis_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btCylinderShapeData_upAxis_set(swigCPtr, this, value);}
",setUpAxis,"[{'value': ['set'], 'probability': 0.555220365524292}, {'value': ['put'], 'probability': 0.1259807050228119}, {'value': ['execute'], 'probability': 0.023188672959804535}, {'value': ['get'], 'probability': 0.013716395944356918}, {'value': ['value'], 'probability': 0.012281985022127628}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.47274652]",0.6781873316496104,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
722,722,"public int getUpAxis() {return CollisionJNI.btCylinderShapeData_upAxis_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btCylinderShapeData_upAxis_get(swigCPtr, this);}
",getUpAxis,"[{'value': ['get'], 'probability': 0.09162849932909012}, {'value': ['start'], 'probability': 0.04829472303390503}, {'value': ['run'], 'probability': 0.03540191799402237}, {'value': ['size'], 'probability': 0.031102390959858894}, {'value': ['execute'], 'probability': 0.029715577140450478}]","[1.0, 0.7199945, 0.65114945, 0.43109724, 0.37713256]",0.1740672397765048,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
723,723,"public void setPadding(String value) {CollisionJNI.btCylinderShapeData_padding_set(swigCPtr, this, value);}
","public void [MASK](String value) {CollisionJNI.btCylinderShapeData_padding_set(swigCPtr, this, value);}
",setPadding,"[{'value': ['set'], 'probability': 0.6236590147018433}, {'value': ['put'], 'probability': 0.13687290251255035}, {'value': ['execute'], 'probability': 0.015545603819191456}, {'value': ['read'], 'probability': 0.012026398442685604}, {'value': ['add'], 'probability': 0.0100254500284791}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.5084879]",0.7487606701706533,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
724,724,"public boolean keyDown(int keyCode) {if (keyCode == Keys.L)m_joint.enableLimit(!m_joint.isLimitEnabled());if (keyCode == Keys.M)m_joint.enableMotor(!m_joint.isMotorEnabled());if (keyCode == Keys.S)m_joint.setMotorSpeed(-m_joint.getMotorSpeed());return false;}
","public boolean [MASK](int keyCode) {if (keyCode == Keys.L)m_joint.enableLimit(!m_joint.isLimitEnabled());if (keyCode == Keys.M)m_joint.enableMotor(!m_joint.isMotorEnabled());if (keyCode == Keys.S)m_joint.setMotorSpeed(-m_joint.getMotorSpeed());return false;}
",keyDown,"[{'value': ['enable'], 'probability': 0.22408898174762726}, {'value': ['equals'], 'probability': 0.13348768651485443}, {'value': ['supports'], 'probability': 0.060144949704408646}, {'value': ['contains'], 'probability': 0.0325397253036499}, {'value': ['is'], 'probability': 0.02379467524588108}]","[0.45947343, 0.21110253, 0.44939163, 0.39989024, 0.57648766]",0.1849008142478362,"[{'value': ['key', 'down'], 'probability': 0.9963704347610474}, {'value': ['key', 'up'], 'probability': 0.0017559714615345001}, {'value': ['handle', 'key', 'down'], 'probability': 0.0013588325819000602}, {'value': ['on', 'key', 'down'], 'probability': 0.00022560099023394287}, {'value': ['next', 'id'], 'probability': 0.00010329840733902529}, {'value': ['paint', 'focus'], 'probability': 4.2227253288729116e-05}, {'value': ['add', 'key'], 'probability': 4.2084251617779955e-05}, {'value': ['is', 'modifier'], 'probability': 3.5225675674155354e-05}, {'value': ['decrement'], 'probability': 3.324556746520102e-05}, {'value': ['verify', 'key'], 'probability': 3.3069598430301994e-05}]","[0.8832202, 0.89777696, 0.8359695, 0.8415376, 0.54008615, 0.52654046, 0.8245078, 0.5661142, -0.10495343, 0.7789751]",0.8830716957970943
725,725,"public void render() {super.render();}public void Init() {Decoder.InitBitModels(Models);}
","public void [MASK]() {super.[MASK]();}public void Init() {Decoder.InitBitModels(Models);}
",render,"[{'value': ['run'], 'probability': 0.21082235872745514}, {'value': ['test'], 'probability': 0.05900005251169205}, {'value': ['execute'], 'probability': 0.045487649738788605}, {'value': ['start'], 'probability': 0.027395358309149742}, {'value': ['close'], 'probability': 0.02706288732588291}]","[0.13372552, 0.24407926, 0.43459237, 0.16855277, 0.1571209]",0.0712313137210501,"[{'value': ['render'], 'probability': 0.9992150068283081}, {'value': ['render', 'children'], 'probability': 0.00047426100354641676}, {'value': ['append'], 'probability': 0.00011511449702084064}, {'value': ['do', 'render'], 'probability': 7.272195944096893e-05}, {'value': ['test', 'render'], 'probability': 5.126798350829631e-05}, {'value': ['to', 'html'], 'probability': 2.9983393687871285e-05}, {'value': ['set', 'render'], 'probability': 1.8475193428457715e-05}, {'value': ['render', 'value'], 'probability': 1.0175684110436123e-05}, {'value': ['get', 'render'], 'probability': 8.705649634066503e-06}, {'value': ['form'], 'probability': 4.2660026338126045e-06}]","[1.0, 0.69310665, 0.28887883, 0.7438762, 0.6950665, 0.44014704, 0.73684615, 0.7204852, 0.7390131, 0.3407091]",0.999708734179594
726,726,"public void Encode(Encoder rangeEncoder, int symbol) {int m = 1;for (int bitIndex = NumBitLevels; bitIndex != 0; ) {bitIndex--;int bit = (symbol >>> bitIndex) & 1;rangeEncoder.Encode(Models, m, bit);m = (m << 1) | bit;}}
","public void [MASK]([MASK]r range[MASK]r, int symbol) {int m = 1;for (int bitIndex = NumBitLevels; bitIndex != 0; ) {bitIndex--;int bit = (symbol >>> bitIndex) & 1;range[MASK]r.[MASK](Models, m, bit);m = (m << 1) | bit;}}
",Encode,"[{'value': ['paint'], 'probability': 0.04433327168226242}, {'value': ['set'], 'probability': 0.04132823646068573}, {'value': ['adjust'], 'probability': 0.04094819352030754}, {'value': ['write'], 'probability': 0.03946969285607338}, {'value': ['start'], 'probability': 0.03848884627223015}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['encode'], 'probability': 0.9924037456512451}, {'value': ['reverse', 'encode'], 'probability': 0.0074050468392670155}, {'value': ['set', 'out', 'stream'], 'probability': 0.00012484431499615312}, {'value': ['to', 'binary'], 'probability': 3.9992934034671634e-05}, {'value': ['encode', 'password'], 'probability': 1.1619531505857594e-05}, {'value': ['set', 'quick'], 'probability': 3.912769898306578e-06}, {'value': ['create', 'bytes', 'message'], 'probability': 3.086719061684562e-06}, {'value': ['process', 'action'], 'probability': 2.816897676893859e-06}, {'value': ['null', 'safe', 'set'], 'probability': 2.6618979518389096e-06}, {'value': ['decode'], 'probability': 2.4559108169341926e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
727,727,"public void ReverseEncode(Encoder rangeEncoder, int symbol) {int m = 1;for (int i = 0; i < NumBitLevels; i++) {int bit = symbol & 1;rangeEncoder.Encode(Models, m, bit);m = (m << 1) | bit;symbol >>= 1;}}
","public void [MASK](Encoder rangeEncoder, int symbol) {int m = 1;for (int i = 0; i < NumBitLevels; i++) {int bit = symbol & 1;rangeEncoder.Encode(Models, m, bit);m = (m << 1) | bit;symbol >>= 1;}}
",ReverseEncode,"[{'value': ['write'], 'probability': 0.0635167732834816}, {'value': ['update'], 'probability': 0.05073836073279381}, {'value': ['process'], 'probability': 0.049881711602211}, {'value': ['insert'], 'probability': 0.028326276689767838}, {'value': ['execute'], 'probability': 0.026219191029667854}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['reverse', 'encode'], 'probability': 0.9926862716674805}, {'value': ['encode'], 'probability': 0.0064963954500854015}, {'value': ['set', 'out', 'stream'], 'probability': 0.0006550754187628627}, {'value': ['to', 'binary'], 'probability': 9.7887241281569e-05}, {'value': ['encode', 'password'], 'probability': 4.32203414675314e-05}, {'value': ['factory'], 'probability': 4.926979727315484e-06}, {'value': ['get', 'matrix'], 'probability': 4.752249878947623e-06}, {'value': ['create', 'bytes', 'message'], 'probability': 4.569828433886869e-06}, {'value': ['create', 'request', 'message'], 'probability': 3.5550710890674964e-06}, {'value': ['extract', 'frame'], 'probability': 3.3432620512030553e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
728,728,"public int GetPrice(int symbol) {int price = 0;int m = 1;for (int bitIndex = NumBitLevels; bitIndex != 0; ) {bitIndex--;int bit = (symbol >>> bitIndex) & 1;price += Encoder.GetPrice(Models[m], bit);m = (m << 1) + bit;}return price;}
","public int [MASK](int symbol) {int price = 0;int m = 1;for (int bitIndex = NumBitLevels; bitIndex != 0; ) {bitIndex--;int bit = (symbol >>> bitIndex) & 1;price += Encoder.[MASK](Models[m], bit);m = (m << 1) + bit;}return price;}
",GetPrice,"[{'value': ['compare'], 'probability': 0.4951246678829193}, {'value': ['value'], 'probability': 0.15353146195411682}, {'value': ['price'], 'probability': 0.04911977797746658}, {'value': ['get'], 'probability': 0.04497102275490761}, {'value': ['discount'], 'probability': 0.021678956225514412}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'price'], 'probability': 0.999559223651886}, {'value': ['as', 'integer'], 'probability': 0.00017062849656213075}, {'value': ['get', 'total', 'price'], 'probability': 9.657756163505837e-05}, {'value': ['reverse', 'get', 'price'], 'probability': 5.27908923686482e-05}, {'value': ['get', 'value'], 'probability': 4.167744191363454e-05}, {'value': ['price'], 'probability': 2.1355032004066743e-05}, {'value': ['get', 'typed', 'value'], 'probability': 1.9140848962706514e-05}, {'value': ['get', 'int'], 'probability': 1.903938755276613e-05}, {'value': ['can', 'connect'], 'probability': 1.0824928722286131e-05}, {'value': ['get', 'max'], 'probability': 8.733783033676445e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
729,729,"public int ReverseGetPrice(int symbol) {int price = 0;int m = 1;for (int i = NumBitLevels; i != 0; i--) {int bit = symbol & 1;symbol >>>= 1;price += Encoder.GetPrice(Models[m], bit);m = (m << 1) | bit;}return price;}
","public int [MASK](int symbol) {int price = 0;int m = 1;for (int i = NumBitLevels; i != 0; i--) {int bit = symbol & 1;symbol >>>= 1;price += Encoder.GetPrice(Models[m], bit);m = (m << 1) | bit;}return price;}
",ReverseGetPrice,"[{'value': ['compare'], 'probability': 0.40592849254608154}, {'value': ['value'], 'probability': 0.14329969882965088}, {'value': ['price'], 'probability': 0.08865942060947418}, {'value': ['get'], 'probability': 0.043071452528238297}, {'value': ['discount'], 'probability': 0.03195982053875923}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['reverse', 'get', 'price'], 'probability': 0.9962016940116882}, {'value': ['get', 'price'], 'probability': 0.002945493906736374}, {'value': ['substring'], 'probability': 0.0001553169422550127}, {'value': ['to', 'yaml'], 'probability': 0.0001289347856072709}, {'value': ['unmarshall'], 'probability': 0.00012268222053535283}, {'value': ['get', 'price', 'list'], 'probability': 0.00012126298679504544}, {'value': ['new', 'symbol'], 'probability': 0.00011152322258567438}, {'value': ['extract', 'values'], 'probability': 9.531711839372292e-05}, {'value': ['print', 'price'], 'probability': 6.090040915296413e-05}, {'value': ['copy', 'of', 'range'], 'probability': 5.685774885932915e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
730,730,"public static int ReverseGetPrice(short[] Models, int startIndex, int NumBitLevels, int symbol) {int price = 0;int m = 1;for (int i = NumBitLevels; i != 0; i--) {int bit = symbol & 1;symbol >>>= 1;price += Encoder.GetPrice(Models[startIndex + m], bit);m = (m << 1) | bit;}return price;}
","public static int [MASK](short[] Models, int startIndex, int NumBitLevels, int symbol) {int price = 0;int m = 1;for (int i = NumBitLevels; i != 0; i--) {int bit = symbol & 1;symbol >>>= 1;price += Encoder.GetPrice(Models[startIndex + m], bit);m = (m << 1) | bit;}return price;}
",ReverseGetPrice,"[{'value': ['compare'], 'probability': 0.7402099370956421}, {'value': ['value'], 'probability': 0.06084583327174187}, {'value': ['price'], 'probability': 0.014447012916207314}, {'value': ['get'], 'probability': 0.010150561109185219}, {'value': ['swap'], 'probability': 0.009417279623448849}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['reverse', 'get', 'price'], 'probability': 0.9984442591667175}, {'value': ['reverse', 'decode'], 'probability': 0.001537738717161119}, {'value': ['unmarshall'], 'probability': 2.7537471396499313e-06}, {'value': ['random', 'text'], 'probability': 2.665828105818946e-06}, {'value': ['new', 'symbol'], 'probability': 2.6161769710597582e-06}, {'value': ['refer'], 'probability': 2.5006861505971756e-06}, {'value': ['substring'], 'probability': 2.296965703862952e-06}, {'value': ['entity', 'text'], 'probability': 2.0035790839756373e-06}, {'value': ['print', 'price'], 'probability': 1.6405782616857323e-06}, {'value': ['check', 'file', 'name'], 'probability': 1.5621636748619494e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
731,731,"public static void ReverseEncode(short[] Models, int startIndex, Encoder rangeEncoder, int NumBitLevels, int symbol) {int m = 1;for (int i = 0; i < NumBitLevels; i++) {int bit = symbol & 1;rangeEncoder.Encode(Models, startIndex + m, bit);m = (m << 1) | bit;symbol >>= 1;}}public int getPaddingTop() {return paddingTop;}
","public static void [MASK](short[] Models, int startIndex, Encoder rangeEncoder, int NumBitLevels, int symbol) {int m = 1;for (int i = 0; i < NumBitLevels; i++) {int bit = symbol & 1;rangeEncoder.Encode(Models, startIndex + m, bit);m = (m << 1) | bit;symbol >>= 1;}}public int getPaddingTop() {return paddingTop;}
",ReverseEncode,"[{'value': ['write'], 'probability': 0.08226288110017776}, {'value': ['update'], 'probability': 0.05789197236299515}, {'value': ['process'], 'probability': 0.05442691594362259}, {'value': ['apply'], 'probability': 0.04196027293801308}, {'value': ['register'], 'probability': 0.031242502853274345}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['reverse', 'encode'], 'probability': 0.8713886737823486}, {'value': ['reverse', 'decode'], 'probability': 0.10391167551279068}, {'value': ['reverse', 'get', 'price'], 'probability': 0.014322541654109955}, {'value': ['null', 'safe', 'set'], 'probability': 0.008198462426662445}, {'value': ['set', 'out', 'stream'], 'probability': 0.0009722363320179284}, {'value': ['encode'], 'probability': 0.000344084546668455}, {'value': ['transact'], 'probability': 0.0002493406645953655}, {'value': ['new', 'symbol'], 'probability': 0.0002467292360961437}, {'value': ['integral'], 'probability': 0.00020748726092278957}, {'value': ['to', 'binary'], 'probability': 0.00015880375576671213}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
732,732,"public void setPaddingTop(int paddingTop) {this.paddingTop = paddingTop;}
","public void [MASK](int paddingTop) {this.paddingTop = paddingTop;}
",setPaddingTop,"[{'value': ['set'], 'probability': 0.07184340804815292}, {'value': ['apply'], 'probability': 0.06347908824682236}, {'value': ['add'], 'probability': 0.053408171981573105}, {'value': ['update'], 'probability': 0.04437081515789032}, {'value': ['paint'], 'probability': 0.03972601518034935}]","[1.0, 0.5010617, 0.5084879, 0.41854778, 0.3280287]",0.1624103342889024,"[{'value': ['set', 'padding', 'top'], 'probability': 0.9999823570251465}, {'value': ['set', 'resources'], 'probability': 1.4085256225371268e-05}, {'value': ['get', 'padding', 'top'], 'probability': 3.065033070015488e-06}, {'value': ['set', 'properties'], 'probability': 3.536756594257895e-07}, {'value': ['set', 'top'], 'probability': 3.1267884281760416e-08}, {'value': ['set', 'h'], 'probability': 2.9126363543241496e-08}, {'value': ['set', 'drawable'], 'probability': 2.4038200763243367e-08}, {'value': ['find', 'views'], 'probability': 2.3954946470894356e-08}, {'value': ['update', 'header'], 'probability': 2.3866151721563256e-08}, {'value': ['set', 'orientation'], 'probability': 2.0899694419540538e-08}]","[0.8351934, 0.82340556, 0.67187643, 0.8154529, 0.8966336, 0.8093759, 1.0, 0.59491414, 0.50175464, 0.7948258]",0.8351927287973732
733,733,"public int getPaddingLeft() {return paddingLeft;}
","public int [MASK]() {return paddingLeft;}
",getPaddingLeft,"[{'value': ['size'], 'probability': 0.08954712003469467}, {'value': ['trim'], 'probability': 0.08426128327846527}, {'value': ['get'], 'probability': 0.07952911406755447}, {'value': ['build'], 'probability': 0.032845232635736465}, {'value': ['layout'], 'probability': 0.030387336388230324}]","[0.43109724, 0.29039297, 1.0, 0.5626448, 0.13580486]",0.1652084608884993,"[{'value': ['get', 'padding', 'left'], 'probability': 0.9999961853027344}, {'value': ['get', 'padding', 'right'], 'probability': 3.350204679009039e-06}, {'value': ['get', 'num', 'bands'], 'probability': 1.436064422932759e-07}, {'value': ['set', 'padding', 'left'], 'probability': 1.3805677667733107e-07}, {'value': ['get', 'filter', 'path'], 'probability': 1.188152722875202e-07}, {'value': ['is', 'login'], 'probability': 4.440454404175398e-08}, {'value': ['get', 'css'], 'probability': 3.313456886644417e-08}, {'value': ['get', 'jdbc', 'driver'], 'probability': 2.090261475018451e-08}, {'value': ['get', 'num', 'components'], 'probability': 1.8026879544663643e-08}, {'value': ['check', 'read'], 'probability': 1.0548613538219342e-08}]","[0.8524734, 0.87404543, 0.6922861, 0.69276935, 0.80937856, 0.513085, 0.7136496, 0.6937662, 0.6934444, 0.7203667]",0.8524734485587361
734,734,"public void setPaddingLeft(int paddingLeft) {this.paddingLeft = paddingLeft;}
","public void [MASK](int paddingLeft) {this.paddingLeft = paddingLeft;}
",setPaddingLeft,"[{'value': ['set'], 'probability': 0.11286294460296631}, {'value': ['add'], 'probability': 0.05621352791786194}, {'value': ['apply'], 'probability': 0.050438664853572845}, {'value': ['update'], 'probability': 0.03600892424583435}, {'value': ['put'], 'probability': 0.035549141466617584}]","[1.0, 0.5084879, 0.5010617, 0.41854778, 0.7944568]",0.2100334360370399,"[{'value': ['set', 'padding', 'left'], 'probability': 0.9999966621398926}, {'value': ['get', 'padding', 'left'], 'probability': 3.355443823238602e-06}, {'value': ['set', 'css'], 'probability': 1.8271942181513623e-08}, {'value': ['test', 'restart'], 'probability': 8.657082828378293e-10}, {'value': ['set', 'y', 'axis'], 'probability': 4.700853040162656e-10}, {'value': ['set', 'delegate'], 'probability': 3.22507076599976e-10}, {'value': ['set', 'padding'], 'probability': 2.798416776084167e-10}, {'value': ['set', 'account', 'name'], 'probability': 2.0000948119935913e-10}, {'value': ['get', 'effective', 'padding', 'left'], 'probability': 1.909501445851447e-10}, {'value': ['engine', 'set', 'padding'], 'probability': 1.463440202353894e-10}]","[0.808114, 0.6255992, 0.70389163, 0.5665497, 0.6066583, 0.7955268, 0.79708177, 0.8084146, 0.66895074, 0.71299034]",0.808113416301992
735,735,"public int getPaddingBottom() {return paddingBottom;}
","public int [MASK]() {return paddingBottom;}
",getPaddingBottom,"[{'value': ['size'], 'probability': 0.1341191679239273}, {'value': ['trim'], 'probability': 0.07196903228759766}, {'value': ['count'], 'probability': 0.058276962488889694}, {'value': ['get'], 'probability': 0.027891015633940697}, {'value': ['build'], 'probability': 0.02762604132294655}]","[0.43109724, 0.29039297, 0.4437648, 1.0, 0.5626448]",0.1480136322118321,"[{'value': ['get', 'padding', 'bottom'], 'probability': 0.9999438524246216}, {'value': ['set', 'padding', 'bottom'], 'probability': 5.285539373289794e-05}, {'value': ['get', 'unit', 'of', 'measure'], 'probability': 1.6440799299743958e-06}, {'value': ['get', 'start', 'line'], 'probability': 7.799453669576906e-07}, {'value': ['get', 'inner', 'height'], 'probability': 2.7486390763442614e-07}, {'value': ['get', 'total', 'height'], 'probability': 2.6573633249427075e-07}, {'value': ['get', 'current', 'child'], 'probability': 1.4446014517943695e-07}, {'value': ['get', 'domain', 'type'], 'probability': 8.594315659138374e-08}, {'value': ['get', 'begin', 'offset'], 'probability': 8.288088793051429e-08}, {'value': ['get', 'band', 'index'], 'probability': 3.799270942295152e-08}]","[0.8115958, 0.6494312, 0.7651318, 0.8837582, 0.7372675, 0.7506806, 0.8531604, 0.73247236, 0.83810824, 0.7064832]",0.8115871886607343
736,736,"public void setPaddingBottom(int paddingBottom) {this.paddingBottom = paddingBottom;}
","public void [MASK](int paddingBottom) {this.paddingBottom = paddingBottom;}
",setPaddingBottom,"[{'value': ['set'], 'probability': 0.07701609283685684}, {'value': ['add'], 'probability': 0.0746615082025528}, {'value': ['apply'], 'probability': 0.04424645006656647}, {'value': ['fill'], 'probability': 0.0373445525765419}, {'value': ['paint'], 'probability': 0.03645022213459015}]","[1.0, 0.5084879, 0.5010617, 0.48556754, 0.3280287]",0.167240787213361,"[{'value': ['set', 'padding', 'bottom'], 'probability': 0.999998927116394}, {'value': ['get', 'padding', 'bottom'], 'probability': 1.0969700952045969e-06}, {'value': ['set', 'anchor'], 'probability': 5.551266113457132e-08}, {'value': ['do', 'text'], 'probability': 6.3808549555233185e-09}, {'value': ['login', 'as'], 'probability': 2.8254070194577707e-09}, {'value': ['set', 'padding'], 'probability': 1.774710045587824e-09}, {'value': ['set', 'send', 'buffer', 'size'], 'probability': 7.582928174265646e-10}, {'value': ['set', 'cursor', 'location'], 'probability': 6.501206795128667e-10}, {'value': ['get', 'out', 'degree'], 'probability': 6.00527516603222e-10}, {'value': ['set', 'show', 'white', 'spaces'], 'probability': 4.55885829087066e-10}]","[0.7598331, 0.57899165, 0.8079064, 0.6280443, 0.48786637, 0.79708177, 0.82564086, 0.7231598, 0.6871345, 0.81641555]",0.7598329734546071
737,737,"public int getPaddingRight() {return paddingRight;}
","public int [MASK]() {return paddingRight;}
",getPaddingRight,"[{'value': ['size'], 'probability': 0.09025085717439651}, {'value': ['get'], 'probability': 0.07602645456790924}, {'value': ['trim'], 'probability': 0.058586277067661285}, {'value': ['width'], 'probability': 0.031172554939985275}, {'value': ['build'], 'probability': 0.024860845878720284}]","[0.43109724, 1.0, 0.29039297, 0.19666797, 0.5626448]",0.1520648608746543,"[{'value': ['get', 'padding', 'right'], 'probability': 0.9999842643737793}, {'value': ['get', 'inner', 'width'], 'probability': 1.2237926057423465e-05}, {'value': ['set', 'padding', 'right'], 'probability': 1.508413902229222e-06}, {'value': ['get', 'block', 'index'], 'probability': 1.2824031045965967e-06}, {'value': ['padding'], 'probability': 1.961447964049512e-07}, {'value': ['get', 'ranges'], 'probability': 1.6720291284855193e-07}, {'value': ['get', 'is', 'final'], 'probability': 1.336102286586538e-07}, {'value': ['get', 'gravity'], 'probability': 7.38485184115234e-08}, {'value': ['get', 'display', 'id'], 'probability': 5.497594202097389e-08}, {'value': ['get', 'effective', 'padding', 'right'], 'probability': 5.289789228868358e-08}]","[0.87404543, 0.69576675, 0.74685585, 0.75200385, 0.16649967, 0.78472817, 0.8444562, 0.82271934, 0.75690544, 0.850475]",0.8740427060810667
738,738,"public void setPaddingRight(int paddingRight) {this.paddingRight = paddingRight;}
","public void [MASK](int paddingRight) {this.paddingRight = paddingRight;}
",setPaddingRight,"[{'value': ['paint'], 'probability': 0.1231805756688118}, {'value': ['set'], 'probability': 0.09047252684831619}, {'value': ['apply'], 'probability': 0.0413895919919014}, {'value': ['fill'], 'probability': 0.03126169741153717}, {'value': ['render'], 'probability': 0.03021596185863018}]","[0.3280287, 1.0, 0.5010617, 0.48556754, 0.23491256]",0.1738958048746554,"[{'value': ['set', 'padding', 'right'], 'probability': 0.9999995231628418}, {'value': ['get', 'padding', 'right'], 'probability': 3.524540943544707e-07}, {'value': ['padding'], 'probability': 1.3675156651515863e-07}, {'value': ['get', 'inner', 'width'], 'probability': 1.5371621753246245e-09}, {'value': ['set', 'padding'], 'probability': 1.4405421300267562e-09}, {'value': ['set', 'highlighted'], 'probability': 6.053857415366792e-10}, {'value': ['set', 'class'], 'probability': 4.3428002860501635e-10}, {'value': ['is', 'satisfied', 'by'], 'probability': 3.3590641379532826e-10}, {'value': ['make', 'visible'], 'probability': 3.3200883708950357e-10}, {'value': ['is', 'numerical'], 'probability': 2.91757090709055e-10}]","[0.792997, 0.5998334, 0.046955176, 0.5720103, 0.79708177, 0.86992586, 0.823405, 0.69818324, 0.6254765, 0.59792334]",0.7929968432328633
739,739,"public int getPaddingAdvanceX() {return paddingAdvanceX;}
","public int [MASK]() {return paddingAdvanceX;}
",getPaddingAdvanceX,"[{'value': ['get'], 'probability': 0.12397491931915283}, {'value': ['value'], 'probability': 0.04989710822701454}, {'value': ['test'], 'probability': 0.0395401306450367}, {'value': ['trim'], 'probability': 0.03626500070095062}, {'value': ['build'], 'probability': 0.03490149974822998}]","[1.0, 0.46303764, 0.4599198, 0.29039297, 0.5626448]",0.1954326956520923,"[{'value': ['load', 'settings'], 'probability': 0.5708655118942261}, {'value': ['get', 'char', 'id'], 'probability': 0.0885423943400383}, {'value': ['add', 'settings'], 'probability': 0.08069691061973572}, {'value': ['get', 'settings'], 'probability': 0.07341668009757996}, {'value': ['flags'], 'probability': 0.0485474057495594}, {'value': ['get', 'control'], 'probability': 0.03350922837853432}, {'value': ['get', 'total', 'in'], 'probability': 0.030785122886300087}, {'value': ['get', 'gap', 'end'], 'probability': 0.027964970096945763}, {'value': ['get', 'section'], 'probability': 0.024163013324141502}, {'value': ['get', 'parent', 'index'], 'probability': 0.021508703008294106}]","[0.46405137, 0.67870444, 0.5192923, 0.8340552, 0.19713469, 0.89577633, 0.8054522, 0.83957297, 0.83480555, 0.704507]",0.551330065982897
740,740,"public void setPaddingAdvanceX(int paddingAdvanceX) {this.paddingAdvanceX = paddingAdvanceX;}
","public void [MASK](int paddingAdvanceX) {this.paddingAdvanceX = paddingAdvanceX;}
",setPaddingAdvanceX,"[{'value': ['apply'], 'probability': 0.07788477092981339}, {'value': ['update'], 'probability': 0.06851696223020554}, {'value': ['set'], 'probability': 0.06204211711883545}, {'value': ['execute'], 'probability': 0.04579421505331993}, {'value': ['visit'], 'probability': 0.041584160178899765}]","[0.5010617, 0.41854778, 1.0, 0.35167885, 0.46053246]",0.1650005257652301,"[{'value': ['load', 'settings'], 'probability': 0.5039755702018738}, {'value': ['set', 'key'], 'probability': 0.16835761070251465}, {'value': ['set', 'containers'], 'probability': 0.0916670560836792}, {'value': ['set', 'word'], 'probability': 0.07636532187461853}, {'value': ['set', 'folder'], 'probability': 0.04558442160487175}, {'value': ['set', 'recursive'], 'probability': 0.040153369307518005}, {'value': ['set', 'properties', 'file'], 'probability': 0.030799461528658867}, {'value': ['set', 'storage'], 'probability': 0.015358129516243935}, {'value': ['set', 'info'], 'probability': 0.01415429450571537}, {'value': ['set', 'load'], 'probability': 0.01358476560562849}]","[0.46767014, 0.9000171, 0.7867596, 0.8291546, 0.71356565, 0.7039794, 0.7709816, 0.8026188, 0.8025115, 0.82428545]",0.6420815209328088
741,741,"public int getPaddingAdvanceY() {return paddingAdvanceY;}
","public int [MASK]() {return paddingAdvanceY;}
",getPaddingAdvanceY,"[{'value': ['get'], 'probability': 0.18019109964370728}, {'value': ['size'], 'probability': 0.053168874233961105}, {'value': ['value'], 'probability': 0.035863738507032394}, {'value': ['state'], 'probability': 0.029797714203596115}, {'value': ['date'], 'probability': 0.026520561426877975}]","[1.0, 0.43109724, 0.46303764, 0.49234587, 0.44288227]",0.2461345833212983,"[{'value': ['get', 'line', 'height'], 'probability': 0.9999984502792358}, {'value': ['get', 'font', 'height'], 'probability': 1.3699610690309783e-06}, {'value': ['get', 'em'], 'probability': 6.022726495302777e-08}, {'value': ['init', 'plugin'], 'probability': 2.5899369759940782e-08}, {'value': ['get', 'weeks'], 'probability': 2.380983765704059e-08}, {'value': ['get', 'style'], 'probability': 1.4297044437228124e-08}, {'value': ['get', 'counter'], 'probability': 6.296512644610175e-09}, {'value': ['get', 'coordinate', 'system'], 'probability': 6.088326287567725e-09}, {'value': ['get', 'recent'], 'probability': 5.795587565415872e-09}, {'value': ['is', 'overriden'], 'probability': 3.971910800260048e-09}]","[0.7992812, 0.66095966, 0.7905132, -0.19748163, 0.91008174, 0.82790756, 0.87214696, 0.7726668, 0.87217855, 0.60187685]",0.7992809604687786
742,742,"public void setPaddingAdvanceY(int paddingAdvanceY) {this.paddingAdvanceY = paddingAdvanceY;}
","public void [MASK](int paddingAdvanceY) {this.paddingAdvanceY = paddingAdvanceY;}
",setPaddingAdvanceY,"[{'value': ['update'], 'probability': 0.07659954577684402}, {'value': ['apply'], 'probability': 0.0726887583732605}, {'value': ['set'], 'probability': 0.05303426831960678}, {'value': ['execute'], 'probability': 0.045896194875240326}, {'value': ['add'], 'probability': 0.04512031003832817}]","[0.41854778, 0.5010617, 1.0, 0.35167885, 0.5084879]",0.1606002410991585,"[{'value': ['set', 'line', 'height'], 'probability': 0.6628302931785583}, {'value': ['get', 'line', 'height'], 'probability': 0.3339831233024597}, {'value': ['init', 'plugin'], 'probability': 0.0008428652654401958}, {'value': ['set', 'range'], 'probability': 0.0008223876939155161}, {'value': ['draw', 'dot'], 'probability': 0.0007482628570869565}, {'value': ['next', 'document'], 'probability': 0.00031146517721936107}, {'value': ['set', 'color'], 'probability': 0.0002928311878349632}, {'value': ['set', 'screen'], 'probability': 7.050773274386302e-05}, {'value': ['set', 'current', 'version'], 'probability': 5.0609018217073753e-05}, {'value': ['set', 'database'], 'probability': 4.757687929668464e-05}]","[0.8315561, 0.71296394, -0.12499308, 0.8546901, 0.622408, 0.72995627, 0.80587685, 0.85511035, 0.8367447, 0.8037333]",0.7909659758000215
743,743,"public int getGlyphPageWidth() {return glyphPageWidth;}
","public int [MASK]() {return glyphPageWidth;}
",getGlyphPageWidth,"[{'value': ['length'], 'probability': 0.11297233402729034}, {'value': ['trim'], 'probability': 0.10173926502466202}, {'value': ['size'], 'probability': 0.08646883815526962}, {'value': ['get'], 'probability': 0.07414808869361877}, {'value': ['start'], 'probability': 0.05479070916771889}]","[0.3304365, 0.29039297, 0.43109724, 1.0, 0.7199945]",0.2177481238087317,"[{'value': ['get', 'execution', 'mode'], 'probability': 0.8498991131782532}, {'value': ['get', 'node', 'type'], 'probability': 0.03791633993387222}, {'value': ['get', 'merge'], 'probability': 0.03483881428837776}, {'value': ['get', 'current', 'state'], 'probability': 0.02065911702811718}, {'value': ['get', 'preferred', 'value'], 'probability': 0.014437085948884487}, {'value': ['get', 'main'], 'probability': 0.011939214542508125}, {'value': ['save'], 'probability': 0.010176141746342182}, {'value': ['get', 'calendars'], 'probability': 0.007255933713167906}, {'value': ['get', 'component', 'state'], 'probability': 0.00646417448297143}, {'value': ['is', 'overriden'], 'probability': 0.006414034869521856}]","[0.75747085, 0.70896184, 0.8390275, 0.79897416, 0.79724365, 0.8448976, 0.62758213, 0.8038647, 0.79358524, 0.60187685]",0.7591986407897229
744,744,"public void setGlyphPageWidth(int glyphPageWidth) {this.glyphPageWidth = glyphPageWidth;}
","public void [MASK](int glyphPageWidth) {this.glyphPageWidth = glyphPageWidth;}
",setGlyphPageWidth,"[{'value': ['set'], 'probability': 0.06637083739042282}, {'value': ['add'], 'probability': 0.06327438354492188}, {'value': ['visit'], 'probability': 0.04851868748664856}, {'value': ['write'], 'probability': 0.04200412333011627}, {'value': ['update'], 'probability': 0.036200735718011856}]","[1.0, 0.5084879, 0.46053246, 0.46259418, 0.41854778]",0.1554721254807091,"[{'value': ['set', 'saved'], 'probability': 0.8240059614181519}, {'value': ['set', 'preferences'], 'probability': 0.07736225426197052}, {'value': ['set', 'operation'], 'probability': 0.030232632532715797}, {'value': ['set', 'mapping'], 'probability': 0.02404922991991043}, {'value': ['set', 'store'], 'probability': 0.011438105255365372}, {'value': ['save'], 'probability': 0.007650993764400482}, {'value': ['set', 'fields'], 'probability': 0.007360527757555246}, {'value': ['set', 'holder'], 'probability': 0.006525769364088774}, {'value': ['save', 'all'], 'probability': 0.005904543679207563}, {'value': ['set', 'backend'], 'probability': 0.005470046307891607}]","[0.88777626, 0.78114897, 0.8507157, 0.802606, 0.8354246, 0.5413879, 0.8436824, 0.84703445, 0.7234036, 0.7762269]",0.8709385016411084
745,745,"public int getGlyphPageHeight() {return glyphPageHeight;}
","public int [MASK]() {return glyphPageHeight;}
",getGlyphPageHeight,"[{'value': ['get'], 'probability': 0.09980525076389313}, {'value': ['size'], 'probability': 0.09869847446680069}, {'value': ['start'], 'probability': 0.08471088111400604}, {'value': ['trim'], 'probability': 0.07069177180528641}, {'value': ['length'], 'probability': 0.04388180375099182}]","[1.0, 0.43109724, 0.7199945, 0.29039297, 0.3304365]",0.238373800654283,"[{'value': ['get', 'merge'], 'probability': 0.5318925976753235}, {'value': ['get', 'preferred', 'value'], 'probability': 0.20029692351818085}, {'value': ['get', 'execution', 'mode'], 'probability': 0.11388503015041351}, {'value': ['is', 'save'], 'probability': 0.04371623322367668}, {'value': ['load', 'database'], 'probability': 0.03225936368107796}, {'value': ['is', 'overriden'], 'probability': 0.022456280887126923}, {'value': ['get', 'startdate'], 'probability': 0.018458155915141106}, {'value': ['insert', 'dyn', 'any'], 'probability': 0.014993900433182716}, {'value': ['get', 'grouping'], 'probability': 0.011622377671301365}, {'value': ['save'], 'probability': 0.010419106110930443}]","[0.8390275, 0.79724365, 0.75747085, 0.7285334, 0.44977778, 0.60187685, 1.0, 0.54610485, 0.78619707, 0.62758213]",0.7944194758246559
746,746,"public void setGlyphPageHeight(int glyphPageHeight) {this.glyphPageHeight = glyphPageHeight;}
","public void [MASK](int glyphPageHeight) {this.glyphPageHeight = glyphPageHeight;}
",setGlyphPageHeight,"[{'value': ['add'], 'probability': 0.05334404483437538}, {'value': ['visit'], 'probability': 0.050809044390916824}, {'value': ['update'], 'probability': 0.05033015459775925}, {'value': ['save'], 'probability': 0.04339653253555298}, {'value': ['read'], 'probability': 0.041499994695186615}]","[0.5084879, 0.46053246, 0.41854778, 0.5413879, 0.4820371]",0.115088484024742,"[{'value': ['set', 'merge'], 'probability': 0.3554523289203644}, {'value': ['set', 'mapping'], 'probability': 0.16879644989967346}, {'value': ['set', 'notes'], 'probability': 0.13781285285949707}, {'value': ['set', 'sort'], 'probability': 0.08366061747074127}, {'value': ['set', 'config'], 'probability': 0.06511929631233215}, {'value': ['set', 'other'], 'probability': 0.05596507713198662}, {'value': ['set', 'saved'], 'probability': 0.049291882663965225}, {'value': ['set', 'model'], 'probability': 0.029618358239531517}, {'value': ['set', 'fields'], 'probability': 0.028287813067436218}, {'value': ['set', 'repositories'], 'probability': 0.025995317846536636}]","[0.84750617, 0.802606, 0.8630579, 0.9080084, 0.819066, 0.90047866, 0.88777626, 0.8517614, 0.8436824, 0.74999934]",0.847712798146624
747,747,"public String getFontName() {return fontName;}
","public String [MASK]() {return fontName;}
",getFontName,"[{'value': ['font'], 'probability': 0.5999652743339539}, {'value': ['name'], 'probability': 0.2564144730567932}, {'value': ['text'], 'probability': 0.018257927149534225}, {'value': ['type'], 'probability': 0.015698228031396866}, {'value': ['paint'], 'probability': 0.008648121729493141}]","[-0.0008112043, 0.47842693, 0.33145607, 0.4339052, 0.41529104]",0.1386436267391411,"[{'value': ['get', 'font', 'name'], 'probability': 0.8324694037437439}, {'value': ['get', 'postscript', 'font', 'name'], 'probability': 0.09693421423435211}, {'value': ['font'], 'probability': 0.06871934980154037}, {'value': ['get', 'font', 'style'], 'probability': 0.0005684740608558059}, {'value': ['get', 'keyname'], 'probability': 0.0004073401214554906}, {'value': ['get', 'display', 'string'], 'probability': 0.0002523661532904953}, {'value': ['get', 'label'], 'probability': 0.0002480638795532286}, {'value': ['has', 'size'], 'probability': 0.0002021429972955957}, {'value': ['set', 'font', 'name'], 'probability': 0.00012243614764884114}, {'value': ['get', 'style', 'name'], 'probability': 7.613762136315927e-05}]","[0.70172083, 0.57578623, -0.0008112043, 0.6566559, 1.0, 0.7612885, 0.8309359, 0.6187677, 0.5163197, 0.77828985]",0.6413451947758806
748,748,"public void setFontName(String fontName) {this.fontName = fontName;}
","public void [MASK](String fontName) {this.fontName = fontName;}
",setFontName,"[{'value': ['render'], 'probability': 0.1282206028699875}, {'value': ['font'], 'probability': 0.10501351207494736}, {'value': ['paint'], 'probability': 0.07541554421186447}, {'value': ['set'], 'probability': 0.0680793970823288}, {'value': ['format'], 'probability': 0.04024091735482216}]","[0.23491256, 0.10094012, 0.3280287, 1.0, 0.44135]",0.1512988968974533,"[{'value': ['set', 'font', 'name'], 'probability': 0.9999080896377563}, {'value': ['set', 'font'], 'probability': 3.595418093027547e-05}, {'value': ['get', 'postscript', 'font', 'name'], 'probability': 1.3879905054636765e-05}, {'value': ['with', 'font'], 'probability': 1.3160117305233143e-05}, {'value': ['set', 'fonts'], 'probability': 1.0764662874862552e-05}, {'value': ['set', 'postscript', 'font', 'name'], 'probability': 9.2572145149461e-06}, {'value': ['set', 'list'], 'probability': 2.945427695522085e-06}, {'value': ['set', 'label'], 'probability': 2.4839253001118777e-06}, {'value': ['set', 'access', 'level'], 'probability': 1.898782443277014e-06}, {'value': ['font'], 'probability': 1.6117031691464945e-06}]","[0.70001626, 0.7369018, 0.47750288, 0.5587089, 0.7325998, 0.59153694, 0.86984634, 0.81381863, 0.81604254, 0.10094012]",0.7000120542030741
749,749,"public int getFontSize() {return fontSize;}
","public int [MASK]() {return fontSize;}
",getFontSize,"[{'value': ['font'], 'probability': 0.7381682991981506}, {'value': ['trim'], 'probability': 0.06558392941951752}, {'value': ['size'], 'probability': 0.04402097314596176}, {'value': ['width'], 'probability': 0.03423282876610756}, {'value': ['offset'], 'probability': 0.015384909696877003}]","[-0.0008112043, 0.29039297, 0.43109724, 0.19666797, 0.30574188]",0.0488599384819974,"[{'value': ['get', 'font', 'size'], 'probability': 0.9994939565658569}, {'value': ['get', 'size'], 'probability': 0.00023804866941645741}, {'value': ['size'], 'probability': 0.00012136533769080415}, {'value': ['get', 'icon', 'height'], 'probability': 6.681943341391161e-05}, {'value': ['font', 'size'], 'probability': 2.6757983505376615e-05}, {'value': ['get', 'width'], 'probability': 1.5283943866961636e-05}, {'value': ['get', 'default', 'font', 'size'], 'probability': 1.1858799553010613e-05}, {'value': ['get', 'height'], 'probability': 8.821355550026055e-06}, {'value': ['calc', 'size'], 'probability': 8.719773177290335e-06}, {'value': ['get', 'id'], 'probability': 8.288240678666625e-06}]","[0.6747969, 0.83762157, 0.43109724, 0.7526821, 0.2736972, 0.7625303, 0.63968, 0.8224554, 0.29368863, 0.82231325]",0.6748006277053993
750,750,"public void setFontSize(int fontSize) {this.fontSize = fontSize;}
","public void [MASK](int fontSize) {this.fontSize = fontSize;}
",setFontSize,"[{'value': ['paint'], 'probability': 0.1589607447385788}, {'value': ['font'], 'probability': 0.10673422366380692}, {'value': ['render'], 'probability': 0.06774431467056274}, {'value': ['fill'], 'probability': 0.04350235313177109}, {'value': ['trim'], 'probability': 0.0320805124938488}]","[0.3280287, 0.10094012, 0.23491256, 0.48556754, 0.3211749]",0.1102582295161307,"[{'value': ['set', 'font', 'size'], 'probability': 0.9959716200828552}, {'value': ['get', 'font', 'size'], 'probability': 0.0026473477482795715}, {'value': ['set', 'size'], 'probability': 0.0009818184189498425}, {'value': ['set', 'fontsize'], 'probability': 0.00017353576549794525}, {'value': ['font', 'size'], 'probability': 0.0001250012282980606}, {'value': ['set', 'console', 'font', 'size'], 'probability': 5.224610140430741e-05}, {'value': ['set', 'default', 'font', 'size'], 'probability': 3.1137707992456853e-05}, {'value': ['set', 'text', 'size'], 'probability': 6.615655365749262e-06}, {'value': ['get', 'font', 'descriptor'], 'probability': 5.6998105719685555e-06}, {'value': ['test', 'font', 'size'], 'probability': 4.881819677393651e-06}]","[0.69725204, 0.572686, 0.8344828, 1.0, 0.35245958, 0.6508147, 0.6756868, 0.8029827, 0.3949696, 0.54406816]",0.6970615085271505
751,751,"public boolean isBold() {return bold;}
","public boolean [MASK]() {return bold;}
",isBold,"[{'value': ['bold'], 'probability': 0.820855975151062}, {'value': ['flash'], 'probability': 0.009060502983629704}, {'value': ['clear'], 'probability': 0.0038261746522039175}, {'value': ['show'], 'probability': 0.0035806510131806135}, {'value': ['italics'], 'probability': 0.0035391359124332666}]","[0.37973624, 0.30667752, 0.6478961, 0.6088991, 0.19993998]",0.3198542516963796,"[{'value': ['is', 'bold'], 'probability': 0.7265535593032837}, {'value': ['get', 'bold'], 'probability': 0.271386057138443}, {'value': ['test', 'bold'], 'probability': 0.0013675681548193097}, {'value': ['bold'], 'probability': 0.0003415788523852825}, {'value': ['set', 'bold'], 'probability': 0.00017954884970095009}, {'value': ['get', 'configured', 'content', 'type'], 'probability': 6.353184289764613e-05}, {'value': ['get', 'table', 'width'], 'probability': 3.623485827120021e-05}, {'value': ['get', 'text', 'height'], 'probability': 3.0162042094161734e-05}, {'value': ['write', 'statement'], 'probability': 2.26976080739405e-05}, {'value': ['bold', 'text'], 'probability': 1.908383273985237e-05}]","[0.8563186, 0.6080815, 0.5481174, 0.37973624, 0.6163105, 0.6530366, 0.6100918, 0.68794584, 0.5828138, 0.48914835]",0.7882830314076559
752,752,"public void setBold(boolean bold) {this.bold = bold;}
","public void [MASK](boolean bold) {this.bold = bold;}
",setBold,"[{'value': ['cast'], 'probability': 0.08519814163446426}, {'value': ['paint'], 'probability': 0.07829711586236954}, {'value': ['show'], 'probability': 0.06407596915960312}, {'value': ['highlight'], 'probability': 0.049461498856544495}, {'value': ['fill'], 'probability': 0.04302283748984337}]","[0.512155, 0.3280287, 0.6068332, 0.4278305, 0.48556754]",0.1502534129206963,"[{'value': ['set', 'bold'], 'probability': 0.993909478187561}, {'value': ['bold'], 'probability': 0.005091310944408178}, {'value': ['test', 'bold'], 'probability': 0.0006226423429325223}, {'value': ['set', 'font', 'bold'], 'probability': 0.00017786477110348642}, {'value': ['set', 'operator'], 'probability': 5.9170906752115116e-05}, {'value': ['is', 'bold'], 'probability': 5.6305980251636356e-05}, {'value': ['set', 'text'], 'probability': 2.979070632136427e-05}, {'value': ['set', 'grid', 'size'], 'probability': 2.1516456399695016e-05}, {'value': ['set', 'highlighted'], 'probability': 1.8557189832790755e-05}, {'value': ['set', 'initialized'], 'probability': 1.3373281035455875e-05}]","[0.8314312, 0.3646702, 0.5884004, 0.6925254, 0.7994538, 0.6126611, 0.83644104, 0.8112395, 0.86992586, 0.79792607]",0.8288645267242734
753,753,"public boolean isItalic() {return italic;}
","public boolean [MASK]() {return italic;}
",isItalic,"[{'value': ['is'], 'probability': 0.1515665203332901}, {'value': ['matches'], 'probability': 0.10736150294542313}, {'value': ['equals'], 'probability': 0.05531110242009163}, {'value': ['exists'], 'probability': 0.05200925096869469}, {'value': ['match'], 'probability': 0.02658800780773163}]","[0.99999994, 0.3614936, 0.3373858, 0.65599275, 0.40539563]",0.2539345403632193,"[{'value': ['is', 'italic'], 'probability': 0.9781573414802551}, {'value': ['get', 'italic'], 'probability': 0.02160833217203617}, {'value': ['set', 'italic'], 'probability': 0.00014137220568954945}, {'value': ['is', 'linux'], 'probability': 6.661463703494519e-05}, {'value': ['test', 'italic'], 'probability': 1.1962063581449911e-05}, {'value': ['italic'], 'probability': 3.0974649689596845e-06}, {'value': ['is', 'list', 'value'], 'probability': 3.057993808397441e-06}, {'value': ['clone', 'node'], 'probability': 3.021099018951645e-06}, {'value': ['is', 'overriden'], 'probability': 2.7449659683043137e-06}, {'value': ['get', 'style', 'index'], 'probability': 2.3370103008346632e-06}]","[0.72565824, 0.46713018, 0.46537772, 0.7708027, 0.38207027, 0.038155593, 0.85579616, 0.3495897, 0.99999994, 0.63589144]",0.7200315699250878
754,754,"public void setItalic(boolean italic) {this.italic = italic;}
","public void [MASK](boolean italic) {this.italic = italic;}
",setItalic,"[{'value': ['set'], 'probability': 0.07885946333408356}, {'value': ['write'], 'probability': 0.07430236786603928}, {'value': ['apply'], 'probability': 0.055115342140197754}, {'value': ['visit'], 'probability': 0.04341725632548332}, {'value': ['render'], 'probability': 0.03162732720375061}]","[1.0, 0.46259418, 0.5010617, 0.46053246, 0.23491256]",0.1682722042743597,"[{'value': ['set', 'italic'], 'probability': 0.9999819993972778}, {'value': ['set', 'highlighted'], 'probability': 7.092512532835826e-06}, {'value': ['test', 'italic'], 'probability': 3.745798039744841e-06}, {'value': ['italic'], 'probability': 3.4629294987098547e-06}, {'value': ['create', 'scaler', 'context'], 'probability': 8.880926998244831e-07}, {'value': ['set', 'loaded'], 'probability': 8.536811719750403e-07}, {'value': ['set', 'cache'], 'probability': 6.8738756908715e-07}, {'value': ['set', 'constraints'], 'probability': 6.184874905557081e-07}, {'value': ['set', 'entity', 'name'], 'probability': 4.1350199353473727e-07}, {'value': ['is', 'italic'], 'probability': 2.816645690018049e-07}]","[0.6517364, 0.86992586, 0.3751709, -0.04692937, 0.47020873, 0.8282255, 0.74971026, 0.83193946, 0.7550007, 0.4117228]",0.6517346637905084
755,755,"public List getEffects() {return effects;}
","public List [MASK]() {return effects;}
",getEffects,"[{'value': ['effects'], 'probability': 0.594010591506958}, {'value': ['effect'], 'probability': 0.0430944599211216}, {'value': ['properties'], 'probability': 0.014752169139683247}, {'value': ['##s'], 'probability': 0.013274856843054295}, {'value': ['actions'], 'probability': 0.01082104817032814}]","[0.41933498, 0.4954423, 0.28183448, 0.0, 0.397048]",0.2788943820875147,"[{'value': ['get', 'effects'], 'probability': 1.0}, {'value': ['get', 'max', 'level'], 'probability': 4.179321422270732e-08}, {'value': ['get', 'effect'], 'probability': 3.435875584045789e-08}, {'value': ['has', 'effects'], 'probability': 9.320382687860729e-09}, {'value': ['get', 'collection'], 'probability': 4.573549539088617e-09}, {'value': ['get', 'priority'], 'probability': 1.438862251568196e-09}, {'value': ['get', 'max'], 'probability': 1.2153792416924603e-09}, {'value': ['has', 'effect'], 'probability': 9.667400213686506e-10}, {'value': ['get', 'storage', 'class'], 'probability': 7.261348744513896e-10}, {'value': ['results'], 'probability': 7.016066616571948e-10}]","[0.84300786, 0.8348571, 0.87517595, 0.6204441, 0.8235985, 0.88222694, 0.8405733, 0.64317703, 0.791643, 0.45739254]",0.843007938319416
756,756,"public boolean getNativeRendering() {return nativeRendering;}
","public boolean [MASK]() {return nativeRendering;}
",getNativeRendering,"[{'value': ['native'], 'probability': 0.38212522864341736}, {'value': ['is'], 'probability': 0.02094678208231926}, {'value': ['dialect'], 'probability': 0.014309491030871868}, {'value': ['local'], 'probability': 0.013636735267937183}, {'value': ['supports'], 'probability': 0.012775122188031673}]","[0.2723875, 0.60187685, 0.013064158, 0.5108234, 0.28394556]",0.1274738653345733,"[{'value': ['is', 'action', 'view', 'expanded'], 'probability': 0.2914307117462158}, {'value': ['is', 'security', 'violation'], 'probability': 0.1185976043343544}, {'value': ['is', 'diff', 'unversioned'], 'probability': 0.10232190787792206}, {'value': ['is', 'revoked'], 'probability': 0.09953013807535172}, {'value': ['is', 'use', 'jvm', 'chmod'], 'probability': 0.07888761907815933}, {'value': ['is', 'authentication', 'forced'], 'probability': 0.07510973513126373}, {'value': ['get', 'copied'], 'probability': 0.07024270296096802}, {'value': ['get', 'nav', 'dump'], 'probability': 0.0680546909570694}, {'value': ['get', 'optional', 'icons', 'visible'], 'probability': 0.04999799653887749}, {'value': ['is', 'conflicted'], 'probability': 0.04582691192626953}]","[0.6524806, 0.5671372, 0.44137368, 0.52718323, 0.5607107, 0.6541125, 0.82275695, 0.7264644, 0.68635106, 0.53532845]",0.6144907742741439
757,757,"public void setNativeRendering(boolean nativeRendering) {this.nativeRendering = nativeRendering;}
","public void [MASK](boolean nativeRendering) {this.nativeRendering = nativeRendering;}
",setNativeRendering,"[{'value': ['apply'], 'probability': 0.22942990064620972}, {'value': ['execute'], 'probability': 0.07802081853151321}, {'value': ['add'], 'probability': 0.05094784498214722}, {'value': ['render'], 'probability': 0.04399491101503372}, {'value': ['run'], 'probability': 0.030147738754749298}]","[0.5010617, 0.35167885, 0.5084879, 0.23491256, 0.67632943]",0.1990279245175549,"[{'value': ['set', 'family', 'flag'], 'probability': 0.49046528339385986}, {'value': ['set', 'friend', 'flag'], 'probability': 0.13846826553344727}, {'value': ['set', 'show', 'logical', 'structure'], 'probability': 0.13336850702762604}, {'value': ['set', 'discriminator'], 'probability': 0.07116962969303131}, {'value': ['set', 'update', 'locks', 'on', 'demand'], 'probability': 0.06317413598299026}, {'value': ['set', 'extended', 'arc', 'surface', 'support'], 'probability': 0.04124941676855087}, {'value': ['set', 'override', 'by', 'name'], 'probability': 0.031380992382764816}, {'value': ['set', 'gml', 'prefixing'], 'probability': 0.01631915010511875}, {'value': ['set', 'error', 'page'], 'probability': 0.007511560805141926}, {'value': ['set', 'is', 'abortable'], 'probability': 0.006893088109791279}]","[0.7708584, 0.7864717, 0.8295754, 0.8042778, 0.83763963, 0.8087432, 0.7887988, 0.5369938, 0.77354413, 0.8921909]",0.7866144325842056
758,758,"public String getGlyphText() {return this.glyphText.replace(""\\n"", ""\n"");}
","public String [MASK]() {return this.glyphText.replace(""\\n"", ""\n"");}
",getGlyphText,"[{'value': ['replace'], 'probability': 0.648924708366394}, {'value': ['name'], 'probability': 0.062381453812122345}, {'value': ['get'], 'probability': 0.014037828892469406}, {'value': ['value'], 'probability': 0.013702197931706905}, {'value': ['translate'], 'probability': 0.012829301878809929}]","[0.4901826, 0.47842693, 1.0, 0.46303764, 0.445797]",0.3740383003481267,"[{'value': ['remove', 'quotes'], 'probability': 0.4902617633342743}, {'value': ['to', 'string', 'one', 'line'], 'probability': 0.21532373130321503}, {'value': ['get', 'raw', 'text'], 'probability': 0.09665249288082123}, {'value': ['to', 'json'], 'probability': 0.0602235421538353}, {'value': ['get', 'value', 'string'], 'probability': 0.03190746530890465}, {'value': ['apos', 'to', 'quotes'], 'probability': 0.030123015865683556}, {'value': ['encode', 'string'], 'probability': 0.022877294570207596}, {'value': ['get', 'new', 'line'], 'probability': 0.01806802675127983}, {'value': ['get', 'current', 'path'], 'probability': 0.017427630722522736}, {'value': ['get', 'user', 'password'], 'probability': 0.017135003581643105}]","[0.41241682, 0.7435765, 0.79105264, 0.51538277, 0.7991115, 0.492267, 0.2729168, 0.84469754, 0.8226424, 0.7088855]",0.5581125179586418
759,759,"public void setGlyphText(String text) {this.glyphText = text.replace(""\n"", ""\\n"");}
","public void [MASK](String text) {this.glyphText = text.replace(""\n"", ""\\n"");}
",setGlyphText,"[{'value': ['replace'], 'probability': 0.3714901804924011}, {'value': ['render'], 'probability': 0.10782335698604584}, {'value': ['translate'], 'probability': 0.07570232450962067}, {'value': ['write'], 'probability': 0.0535590834915638}, {'value': ['text'], 'probability': 0.03486492484807968}]","[0.5003214, 0.23491256, 0.27062482, 0.46259418, 0.44505328]",0.2719733407662196,"[{'value': ['set', 'text'], 'probability': 0.5254089832305908}, {'value': ['set', 'string'], 'probability': 0.2544851303100586}, {'value': ['initialize'], 'probability': 0.07532544434070587}, {'value': ['replace'], 'probability': 0.04319755360484123}, {'value': ['set', 'name'], 'probability': 0.03787720203399658}, {'value': ['replace', 'text'], 'probability': 0.023931654170155525}, {'value': ['set', 'message'], 'probability': 0.011794417165219784}, {'value': ['set', 'file', 'name'], 'probability': 0.010049629956483841}, {'value': ['set', 'content'], 'probability': 0.009619384072721004}, {'value': ['set', 'name', 'text'], 'probability': 0.008310573175549507}]","[0.83644104, 0.868468, -0.15549803, 0.5003214, 0.8399944, 0.5884059, 0.8431912, 0.76693195, 0.8112158, 0.7695871]",0.7481351322255689
760,760,"public String getFont2File() {return font2File;}
","public String [MASK]() {return font2File;}
",getFont2File,"[{'value': ['font'], 'probability': 0.3155040144920349}, {'value': ['name'], 'probability': 0.05673260986804962}, {'value': ['text'], 'probability': 0.04476621374487877}, {'value': ['translate'], 'probability': 0.03947150707244873}, {'value': ['get'], 'probability': 0.023599518463015556}]","[-0.0008112043, 0.47842693, 0.33145607, 0.445797, 1.0]",0.0829203011572263,"[{'value': ['get', 'font', 'file'], 'probability': 0.9995866417884827}, {'value': ['url'], 'probability': 0.0001127167051890865}, {'value': ['font'], 'probability': 0.00011142519360873848}, {'value': ['get', 'free', 'space'], 'probability': 4.503676973399706e-05}, {'value': ['get', 'status', 'message'], 'probability': 3.269134685979225e-05}, {'value': ['to', 'string'], 'probability': 2.818853135977406e-05}, {'value': ['get', 'label'], 'probability': 2.749691702774726e-05}, {'value': ['get', 'search', 'text'], 'probability': 2.0970725017832592e-05}, {'value': ['get', 'root', 'node', 'name'], 'probability': 1.9638624507933855e-05}, {'value': ['get', 'line', 'height'], 'probability': 1.5219759006868117e-05}]","[0.6896081, 0.05979673, -0.0008112043, 0.8527999, 0.83567613, 0.68798715, 0.8309359, 0.78939086, 0.6907162, 0.7992812]",0.6894799464667237
761,761,"public void setFont2File(String filename) {this.font2File = filename;}
","public void [MASK](String filename) {this.font2File = filename;}
",setFont2File,"[{'value': ['apply'], 'probability': 0.09183183312416077}, {'value': ['render'], 'probability': 0.07649558782577515}, {'value': ['add'], 'probability': 0.05191117152571678}, {'value': ['file'], 'probability': 0.04319087788462639}, {'value': ['set'], 'probability': 0.02971396967768669}]","[0.5010617, 0.23491256, 0.5084879, 0.38314268, 1.0]",0.1366416266593172,"[{'value': ['set', 'font', 'file'], 'probability': 0.4095703959465027}, {'value': ['set', 'file', 'name'], 'probability': 0.27959054708480835}, {'value': ['set', 'image', 'file', 'name'], 'probability': 0.11932121217250824}, {'value': ['set', 'filename'], 'probability': 0.05275481566786766}, {'value': ['set', 'url'], 'probability': 0.04110273718833923}, {'value': ['set', 'href'], 'probability': 0.02967512235045433}, {'value': ['set', 'topic'], 'probability': 0.018298814073204994}, {'value': ['set', 'key'], 'probability': 0.017391184344887733}, {'value': ['set', 'profile'], 'probability': 0.016786426305770874}, {'value': ['set', 'sound', 'file'], 'probability': 0.015508688986301422}]","[0.68623215, 0.76693195, 0.7311728, 0.6971488, 0.7270879, 1.0, 0.8259746, 0.9000171, 0.85168165, 0.79297376]",0.7364314969277381
762,762,"public boolean isFont2Active() {return font2Active;}
","public boolean [MASK]() {return font2Active;}
",isFont2Active,"[{'value': ['font'], 'probability': 0.03676282614469528}, {'value': ['is'], 'probability': 0.032601431012153625}, {'value': ['trim'], 'probability': 0.021323777735233307}, {'value': ['supports'], 'probability': 0.020293746143579483}, {'value': ['replace'], 'probability': 0.01969769038259983}]","[0.18231912, 0.99999994, 0.27346385, 0.5425134, 0.43766046]",0.0647658061893236,"[{'value': ['is', 'action', 'view', 'expanded'], 'probability': 0.2914307117462158}, {'value': ['is', 'security', 'violation'], 'probability': 0.1185976043343544}, {'value': ['is', 'diff', 'unversioned'], 'probability': 0.10232190787792206}, {'value': ['is', 'revoked'], 'probability': 0.09953013807535172}, {'value': ['is', 'use', 'jvm', 'chmod'], 'probability': 0.07888761907815933}, {'value': ['is', 'authentication', 'forced'], 'probability': 0.07510973513126373}, {'value': ['get', 'copied'], 'probability': 0.07024270296096802}, {'value': ['get', 'nav', 'dump'], 'probability': 0.0680546909570694}, {'value': ['get', 'optional', 'icons', 'visible'], 'probability': 0.04999799653887749}, {'value': ['is', 'conflicted'], 'probability': 0.04582691192626953}]","[0.84208024, 0.781168, 0.70567346, 0.77475953, 0.8037019, 0.8000136, 0.49140805, 0.46163198, 0.6047757, 0.8670962]",0.7467693797403727
763,763,"public void setFont2Active(boolean active) {this.font2Active = active;}
","public void [MASK](boolean active) {this.font2Active = active;}
",setFont2Active,"[{'value': ['activate'], 'probability': 0.09753628820180893}, {'value': ['update'], 'probability': 0.0973578542470932}, {'value': ['paint'], 'probability': 0.07293644547462463}, {'value': ['apply'], 'probability': 0.06391799449920654}, {'value': ['save'], 'probability': 0.031118834391236305}]","[0.26037982, 0.41854778, 0.3280287, 0.5010617, 0.5413879]",0.1389448614508266,"[{'value': ['set', 'active'], 'probability': 0.9979211688041687}, {'value': ['set', 'started'], 'probability': 0.000538288033567369}, {'value': ['set', 'thumb', 'rollover'], 'probability': 0.0005304270307533443}, {'value': ['set', 'enabled'], 'probability': 0.00028473546262830496}, {'value': ['handle', 'io'], 'probability': 0.0002318532788194716}, {'value': ['set', 'is', 'active'], 'probability': 0.00018961611203849316}, {'value': ['set', 'inactive'], 'probability': 0.00015729758888483047}, {'value': ['set', 'friend', 'flag'], 'probability': 5.251127004157752e-05}, {'value': ['exit', 'mode'], 'probability': 4.774844637722708e-05}, {'value': ['set', 'checked'], 'probability': 4.6304103307193145e-05}]","[0.8406839, 0.9117895, 0.654169, 0.89065737, 0.2640005, 0.8162342, 0.7524137, 0.7864717, 0.50462997, 0.84767073]",0.8404666340742404
764,764,"public boolean isMono() {return mono;}
","public boolean [MASK]() {return mono;}
",isMono,"[{'value': ['is'], 'probability': 0.057969968765974045}, {'value': ['mon'], 'probability': 0.04264199733734131}, {'value': ['exists'], 'probability': 0.03258146718144417}, {'value': ['equals'], 'probability': 0.02962513640522957}, {'value': ['copy'], 'probability': 0.01639736443758011}]","[0.99999994, 0.07536249, 0.65599275, 0.3373858, 0.35803562]",0.0984227195441852,"[{'value': ['get', 'mono'], 'probability': 0.9971194267272949}, {'value': ['is', 'detached'], 'probability': 0.0020673200488090515}, {'value': ['is', 'relative'], 'probability': 0.0005212617106735706}, {'value': ['is', 'controller'], 'probability': 0.00021133912377990782}, {'value': ['set', 'complete'], 'probability': 1.9118946511298418e-05}, {'value': ['non', 'existent'], 'probability': 1.896059256978333e-05}, {'value': ['can', 'write'], 'probability': 1.3639374628837686e-05}, {'value': ['illegal', 'state'], 'probability': 1.2374788639135659e-05}, {'value': ['is', 'physical'], 'probability': 8.903158231987618e-06}, {'value': ['is', 'disposed'], 'probability': 7.625631042174064e-06}]","[0.5098954, 0.81368214, 0.8798686, 0.8214352, 0.64751375, 0.31936598, 0.656871, 0.6085074, 0.86120325, 0.8459279]",0.510790036319228
765,765,"public void setMono(boolean mono) {this.mono = mono;}
","public void [MASK](boolean mono) {this.mono = mono;}
",setMono,"[{'value': ['apply'], 'probability': 0.1314288228750229}, {'value': ['visit'], 'probability': 0.04064038395881653}, {'value': ['use'], 'probability': 0.03823425620794296}, {'value': ['set'], 'probability': 0.02701917290687561}, {'value': ['accept'], 'probability': 0.026154309511184692}]","[0.5010617, 0.46053246, 0.6192659, 1.0, 0.44626972]",0.1469383833069644,"[{'value': ['set', 'complete'], 'probability': 0.46301135420799255}, {'value': ['set', 'max', 'inactive', 'interval'], 'probability': 0.24406477808952332}, {'value': ['set', 'metadata'], 'probability': 0.09207303076982498}, {'value': ['set', 'remove'], 'probability': 0.05646246299147606}, {'value': ['get', 'mono'], 'probability': 0.03340036794543266}, {'value': ['set', 'url'], 'probability': 0.027451030910015106}, {'value': ['set', 'boolean'], 'probability': 0.026965918019413948}, {'value': ['set', 'pass'], 'probability': 0.024541042745113373}, {'value': ['set', 'delete'], 'probability': 0.016461219638586044}, {'value': ['set', 'classloader'], 'probability': 0.01556885801255703}]","[0.9206841, 0.75348276, 0.71935815, 0.8589303, 0.5128821, 0.7270879, 0.7015253, 0.8605403, 0.76221585, 1.0]",0.8301580537237103
766,766,"public float getGamma() {return gamma;}
","public float [MASK]() {return gamma;}
",getGamma,"[{'value': ['get'], 'probability': 0.07261507213115692}, {'value': ['id'], 'probability': 0.0346829928457737}, {'value': ['build'], 'probability': 0.030055128037929535}, {'value': ['size'], 'probability': 0.020944345742464066}, {'value': ['delta'], 'probability': 0.020144257694482803}]","[1.0, 0.2945777, 0.5626448, 0.43109724, 0.27034074]",0.1142171320422549,"[{'value': ['get', 'gamma'], 'probability': 0.9999592304229736}, {'value': ['set', 'gamma'], 'probability': 2.269153992529027e-05}, {'value': ['gamma'], 'probability': 4.7211551645887084e-06}, {'value': ['get', 'brightness'], 'probability': 4.682136932387948e-06}, {'value': ['get', 'value'], 'probability': 3.3572000575077254e-06}, {'value': ['get', 'yield'], 'probability': 1.33938647195464e-06}, {'value': ['get', 'degrees'], 'probability': 1.1152126262459205e-06}, {'value': ['draw', 'sample'], 'probability': 9.77810032054549e-07}, {'value': ['test', 'gamma'], 'probability': 9.669952305557672e-07}, {'value': ['get', 'y'], 'probability': 8.905260528990766e-07}]","[0.7066205, 0.4516498, 0.052933283, 0.71808034, 0.8500731, 0.8014203, 0.7713438, 0.5723361, 0.35520643, 0.69577336]",0.7066118622798097
767,767,"public void setGamma(float gamma) {this.gamma = gamma;}
","public void [MASK](float gamma) {this.gamma = gamma;}
",setGamma,"[{'value': ['gamma'], 'probability': 0.1969538927078247}, {'value': ['fill'], 'probability': 0.04915022477507591}, {'value': ['test'], 'probability': 0.03849135711789131}, {'value': ['calculate'], 'probability': 0.0225101038813591}, {'value': ['min'], 'probability': 0.018892548978328705}]","[0.06817154, 0.48556754, 0.5425338, 0.2918639, 0.12744464]",0.0671529069602985,"[{'value': ['set', 'gamma'], 'probability': 0.9958415627479553}, {'value': ['gamma'], 'probability': 0.003835135605186224}, {'value': ['get', 'gamma'], 'probability': 0.00020466494606807828}, {'value': ['test', 'gamma'], 'probability': 6.895479600643739e-05}, {'value': ['next', 'gamma'], 'probability': 1.595190587977413e-05}, {'value': ['set', 'gamma', 'id'], 'probability': 1.1321027159283403e-05}, {'value': ['set', 'match'], 'probability': 7.660627488803584e-06}, {'value': ['set', 'step'], 'probability': 6.026432856742758e-06}, {'value': ['step', 'forward'], 'probability': 4.816040473087924e-06}, {'value': ['on', 'orientation', 'change'], 'probability': 3.797294539253926e-06}]","[0.6848839, 0.06817154, 0.48341662, 0.42286268, 0.5469662, 0.6348339, 0.8893626, 0.9130514, 0.6442361, 0.67669857]",0.682459297158147
768,768,"public static long getCPtr(btConeTwistConstraintData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btConeTwistConstraintData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.0687718316912651}, {'value': ['read'], 'probability': 0.0482955165207386}, {'value': ['execute'], 'probability': 0.04017328843474388}, {'value': ['run'], 'probability': 0.03377395123243332}, {'value': ['process'], 'probability': 0.031219003722071648}]","[1.0, 0.5726487, 0.37713256, 0.65114945, 0.52250975]",0.1498829757151025,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
769,769,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
770,770,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btConeTwistConstraintData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btConeTwistConstraintData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8205012083053589}, {'value': ['start'], 'probability': 0.015331113710999489}, {'value': ['test'], 'probability': 0.014195956289768219}, {'value': ['clear'], 'probability': 0.00950470007956028}, {'value': ['execute'], 'probability': 0.009475982747972012}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1236782049697949,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
771,771,"public void setTypeConstraintData(btTypedConstraintData value) {DynamicsJNI.btConeTwistConstraintData_typeConstraintData_set(swigCPtr, this, btTypedConstraintData.getCPtr(value), value);}
","public void [MASK](btTypedConstraintData value) {DynamicsJNI.btConeTwistConstraintData_typeConstraintData_set(swigCPtr, this, btTypedConstraintData.getCPtr(value), value);}
",setTypeConstraintData,"[{'value': ['set'], 'probability': 0.6157325506210327}, {'value': ['put'], 'probability': 0.045076724141836166}, {'value': ['add'], 'probability': 0.021771855652332306}, {'value': ['get'], 'probability': 0.020442022010684013}, {'value': ['apply'], 'probability': 0.0140722980722785}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.5010617]",0.6829589288538565,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
772,772,"public btTypedConstraintData getTypeConstraintData() {long cPtr = DynamicsJNI.btConeTwistConstraintData_typeConstraintData_get(swigCPtr, this);return (cPtr == 0) ? null : new btTypedConstraintData(cPtr, false);}
","public btTypedConstraintData [MASK]() {long cPtr = DynamicsJNI.btConeTwistConstraintData_typeConstraintData_get(swigCPtr, this);return (cPtr == 0) ? null : new btTypedConstraintData(cPtr, false);}
",getTypeConstraintData,"[{'value': ['get'], 'probability': 0.21794533729553223}, {'value': ['build'], 'probability': 0.10949243605136871}, {'value': ['create'], 'probability': 0.0852530300617218}, {'value': ['clone'], 'probability': 0.05270194634795189}, {'value': ['resolve'], 'probability': 0.027443500235676765}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.3531994516119572,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
773,773,"public void setRbAFrame(btTransformFloatData value) {DynamicsJNI.btConeTwistConstraintData_rbAFrame_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);}
","public void [MASK](btTransformFloatData value) {DynamicsJNI.btConeTwistConstraintData_rbAFrame_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);}
",setRbAFrame,"[{'value': ['set'], 'probability': 0.5696839690208435}, {'value': ['put'], 'probability': 0.05713845416903496}, {'value': ['execute'], 'probability': 0.022718962281942368}, {'value': ['add'], 'probability': 0.022329183295369148}, {'value': ['get'], 'probability': 0.01884653978049755}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.65028083]",0.6466774424941736,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
774,774,"public btTransformFloatData getRbAFrame() {long cPtr = DynamicsJNI.btConeTwistConstraintData_rbAFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);}
","public btTransformFloatData [MASK]() {long cPtr = DynamicsJNI.btConeTwistConstraintData_rbAFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);}
",getRbAFrame,"[{'value': ['get'], 'probability': 0.26172444224357605}, {'value': ['build'], 'probability': 0.15630993247032166}, {'value': ['create'], 'probability': 0.11352155357599258}, {'value': ['clone'], 'probability': 0.03357983008027077}, {'value': ['resolve'], 'probability': 0.02788177877664566}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.4379411380467533,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
775,775,"public void setRbBFrame(btTransformFloatData value) {DynamicsJNI.btConeTwistConstraintData_rbBFrame_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);}
","public void [MASK](btTransformFloatData value) {DynamicsJNI.btConeTwistConstraintData_rbBFrame_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);}
",setRbBFrame,"[{'value': ['set'], 'probability': 0.5770265460014343}, {'value': ['put'], 'probability': 0.055345091968774796}, {'value': ['add'], 'probability': 0.021714745089411736}, {'value': ['execute'], 'probability': 0.020882029086351395}, {'value': ['get'], 'probability': 0.01867969147861004}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.65028083]",0.6515283275316249,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
776,776,"public btTransformFloatData getRbBFrame() {long cPtr = DynamicsJNI.btConeTwistConstraintData_rbBFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);}
","public btTransformFloatData [MASK]() {long cPtr = DynamicsJNI.btConeTwistConstraintData_rbBFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);}
",getRbBFrame,"[{'value': ['get'], 'probability': 0.26322662830352783}, {'value': ['build'], 'probability': 0.1563001126050949}, {'value': ['create'], 'probability': 0.11345360428094864}, {'value': ['clone'], 'probability': 0.034705791622400284}, {'value': ['resolve'], 'probability': 0.0286759901791811}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.439922536683247,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
777,777,"public void setSwingSpan1(float value) {DynamicsJNI.btConeTwistConstraintData_swingSpan1_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btConeTwistConstraintData_swingSpan1_set(swigCPtr, this, value);}
",setSwingSpan1,"[{'value': ['set'], 'probability': 0.5464380979537964}, {'value': ['put'], 'probability': 0.07663114368915558}, {'value': ['update'], 'probability': 0.023035936057567596}, {'value': ['value'], 'probability': 0.012847292236983776}, {'value': ['add'], 'probability': 0.012644446454942226}]","[1.0, 0.7944568, 0.41854778, 0.47274652, 0.5084879]",0.6294629299818539,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
778,778,"public float getSwingSpan1() {return DynamicsJNI.btConeTwistConstraintData_swingSpan1_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btConeTwistConstraintData_swingSpan1_get(swigCPtr, this);}
",getSwingSpan1,"[{'value': ['get'], 'probability': 0.051505450159311295}, {'value': ['float'], 'probability': 0.04417712241411209}, {'value': ['run'], 'probability': 0.03792876750230789}, {'value': ['bar'], 'probability': 0.035911399871110916}, {'value': ['build'], 'probability': 0.028579283505678177}]","[1.0, 0.2808844, 0.65114945, 0.45318797, 0.5626448]",0.1209660093503325,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
779,779,"public void setSwingSpan2(float value) {DynamicsJNI.btConeTwistConstraintData_swingSpan2_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btConeTwistConstraintData_swingSpan2_set(swigCPtr, this, value);}
",setSwingSpan2,"[{'value': ['set'], 'probability': 0.5633230209350586}, {'value': ['put'], 'probability': 0.07450760155916214}, {'value': ['update'], 'probability': 0.022422628477215767}, {'value': ['add'], 'probability': 0.012422730214893818}, {'value': ['get'], 'probability': 0.012178096920251846}]","[1.0, 0.7944568, 0.41854778, 0.5084879, 0.65028083]",0.646137022274021,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
780,780,"public float getSwingSpan2() {return DynamicsJNI.btConeTwistConstraintData_swingSpan2_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btConeTwistConstraintData_swingSpan2_get(swigCPtr, this);}
",getSwingSpan2,"[{'value': ['get'], 'probability': 0.049209874123334885}, {'value': ['float'], 'probability': 0.045922309160232544}, {'value': ['run'], 'probability': 0.038087088614702225}, {'value': ['bar'], 'probability': 0.034591950476169586}, {'value': ['double'], 'probability': 0.030753400176763535}]","[1.0, 0.2808844, 0.65114945, 0.45318797, 0.5437231]",0.1193071107345806,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
781,781,"public void setTwistSpan(float value) {DynamicsJNI.btConeTwistConstraintData_twistSpan_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btConeTwistConstraintData_twistSpan_set(swigCPtr, this, value);}
",setTwistSpan,"[{'value': ['set'], 'probability': 0.5947480201721191}, {'value': ['put'], 'probability': 0.12942974269390106}, {'value': ['value'], 'probability': 0.014229446649551392}, {'value': ['add'], 'probability': 0.012698585167527199}, {'value': ['get'], 'probability': 0.010647599585354328}]","[1.0, 0.7944568, 0.47274652, 0.5084879, 0.65028083]",0.7176822847701942,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
782,782,"public float getTwistSpan() {return DynamicsJNI.btConeTwistConstraintData_twistSpan_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btConeTwistConstraintData_twistSpan_get(swigCPtr, this);}
",getTwistSpan,"[{'value': ['get'], 'probability': 0.0837736502289772}, {'value': ['float'], 'probability': 0.05262989550828934}, {'value': ['run'], 'probability': 0.039399631321430206}, {'value': ['next'], 'probability': 0.0366438552737236}, {'value': ['bar'], 'probability': 0.03599978983402252}]","[1.0, 0.2808844, 0.65114945, 0.6966621, 0.45318797]",0.1660546723510321,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
783,783,"public void setLimitSoftness(float value) {DynamicsJNI.btConeTwistConstraintData_limitSoftness_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btConeTwistConstraintData_limitSoftness_set(swigCPtr, this, value);}
",setLimitSoftness,"[{'value': ['set'], 'probability': 0.6166270971298218}, {'value': ['put'], 'probability': 0.135238915681839}, {'value': ['add'], 'probability': 0.01223390270024538}, {'value': ['save'], 'probability': 0.010298147797584534}, {'value': ['value'], 'probability': 0.009270494803786278}]","[1.0, 0.7944568, 0.5084879, 0.5413879, 0.47274652]",0.7402472487976581,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
784,784,"public float getLimitSoftness() {return DynamicsJNI.btConeTwistConstraintData_limitSoftness_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btConeTwistConstraintData_limitSoftness_get(swigCPtr, this);}
",getLimitSoftness,"[{'value': ['get'], 'probability': 0.08166392892599106}, {'value': ['float'], 'probability': 0.05347883328795433}, {'value': ['run'], 'probability': 0.036689553409814835}, {'value': ['bar'], 'probability': 0.036464493721723557}, {'value': ['next'], 'probability': 0.033612146973609924}]","[1.0, 0.2808844, 0.65114945, 0.45318797, 0.6966621]",0.1605172605248258,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
785,785,"public void setBiasFactor(float value) {DynamicsJNI.btConeTwistConstraintData_biasFactor_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btConeTwistConstraintData_biasFactor_set(swigCPtr, this, value);}
",setBiasFactor,"[{'value': ['set'], 'probability': 0.6124187111854553}, {'value': ['put'], 'probability': 0.12858349084854126}, {'value': ['add'], 'probability': 0.014907306991517544}, {'value': ['get'], 'probability': 0.01143883541226387}, {'value': ['save'], 'probability': 0.00962532963603735}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.5413879]",0.7348024147846054,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
786,786,"public float getBiasFactor() {return DynamicsJNI.btConeTwistConstraintData_biasFactor_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btConeTwistConstraintData_biasFactor_get(swigCPtr, this);}
",getBiasFactor,"[{'value': ['get'], 'probability': 0.0893932357430458}, {'value': ['run'], 'probability': 0.05224590003490448}, {'value': ['next'], 'probability': 0.04314352199435234}, {'value': ['start'], 'probability': 0.03707163780927658}, {'value': ['build'], 'probability': 0.03403036668896675}]","[1.0, 0.65114945, 0.6966621, 0.7199945, 0.5626448]",0.1993079657016654,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
787,787,"public void setRelaxationFactor(float value) {DynamicsJNI.btConeTwistConstraintData_relaxationFactor_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btConeTwistConstraintData_relaxationFactor_set(swigCPtr, this, value);}
",setRelaxationFactor,"[{'value': ['set'], 'probability': 0.6050763726234436}, {'value': ['put'], 'probability': 0.14218875765800476}, {'value': ['add'], 'probability': 0.016216760501265526}, {'value': ['get'], 'probability': 0.010928800329566002}, {'value': ['save'], 'probability': 0.010011505335569382}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.5413879]",0.7388121187403937,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
788,788,"public float getRelaxationFactor() {return DynamicsJNI.btConeTwistConstraintData_relaxationFactor_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btConeTwistConstraintData_relaxationFactor_get(swigCPtr, this);}
",getRelaxationFactor,"[{'value': ['get'], 'probability': 0.09074070304632187}, {'value': ['run'], 'probability': 0.04757672920823097}, {'value': ['next'], 'probability': 0.04203306883573532}, {'value': ['float'], 'probability': 0.04186388477683067}, {'value': ['build'], 'probability': 0.03577950969338417}]","[1.0, 0.65114945, 0.6966621, 0.2808844, 0.5626448]",0.1828931772481574,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
789,789,"public void setDamping(float value) {DynamicsJNI.btConeTwistConstraintData_damping_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btConeTwistConstraintData_damping_set(swigCPtr, this, value);}
",setDamping,"[{'value': ['set'], 'probability': 0.48841387033462524}, {'value': ['put'], 'probability': 0.14711503684520721}, {'value': ['read'], 'probability': 0.031107071787118912}, {'value': ['write'], 'probability': 0.02116926573216915}, {'value': ['load'], 'probability': 0.012158956378698349}]","[1.0, 0.7944568, 0.4820371, 0.46259418, 0.3492521]",0.6343244916340529,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
790,790,"public float getDamping() {return DynamicsJNI.btConeTwistConstraintData_damping_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btConeTwistConstraintData_damping_get(swigCPtr, this);}
",getDamping,"[{'value': ['start'], 'probability': 0.07298324257135391}, {'value': ['get'], 'probability': 0.05463717132806778}, {'value': ['bar'], 'probability': 0.054184477776288986}, {'value': ['next'], 'probability': 0.03858437389135361}, {'value': ['boost'], 'probability': 0.03500635549426079}]","[0.7199945, 1.0, 0.45318797, 0.6966621, 0.48529312]",0.175609072622775,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
791,791,"public void setPad(String value) {DynamicsJNI.btConeTwistConstraintData_pad_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btConeTwistConstraintData_pad_set(swigCPtr, this, value);}
",setPad,"[{'value': ['set'], 'probability': 0.6175854206085205}, {'value': ['put'], 'probability': 0.13140477240085602}, {'value': ['execute'], 'probability': 0.014051037840545177}, {'value': ['read'], 'probability': 0.0127990348264575}, {'value': ['write'], 'probability': 0.010351736098527908}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.46259418]",0.7378805482462081,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
792,792,"public String getPad() {return DynamicsJNI.btConeTwistConstraintData_pad_get(swigCPtr, this);}public void begin() {Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);depthFunc = 0;Gdx.gl.glDepthMask(true);depthMask = true;Gdx.gl.glDisable(GL20.GL_BLEND);blending = false;Gdx.gl.glDisable(GL20.GL_CULL_FACE);cullFace = blendSFactor = blendDFactor = 0;textureBinder.begin();}
","public String [MASK]() {return DynamicsJNI.btConeTwistConstraintData_pad_get(swigCPtr, this);}public void begin() {Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);depthFunc = 0;Gdx.gl.glDepthMask(true);depthMask = true;Gdx.gl.glDisable(GL20.GL_BLEND);blending = false;Gdx.gl.glDisable(GL20.GL_CULL_FACE);cullFace = blendSFactor = blendDFactor = 0;textureBinder.begin();}
",getPad,"[{'value': ['start'], 'probability': 0.10562556982040405}, {'value': ['build'], 'probability': 0.06937003880739212}, {'value': ['get'], 'probability': 0.06448749452829361}, {'value': ['finish'], 'probability': 0.02771970070898533}, {'value': ['trim'], 'probability': 0.024879150092601776}]","[0.7199945, 0.5626448, 1.0, 0.52801555, 0.29039297]",0.2014291758044876,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
793,793,"public void end() {if (depthFunc != 0)Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);if (!depthMask)Gdx.gl.glDepthMask(true);if (blending)Gdx.gl.glDisable(GL20.GL_BLEND);if (cullFace > 0)Gdx.gl.glDisable(GL20.GL_CULL_FACE);textureBinder.end();}
","public void [MASK]() {if (depthFunc != 0)Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);if (!depthMask)Gdx.gl.glDepthMask(true);if (bl[MASK]ing)Gdx.gl.glDisable(GL20.GL_BLEND);if (cullFace > 0)Gdx.gl.glDisable(GL20.GL_CULL_FACE);textureBinder.[MASK]();}
",end,"[{'value': ['run'], 'probability': 0.5132020711898804}, {'value': ['test'], 'probability': 0.06532065570354462}, {'value': ['clear'], 'probability': 0.054658710956573486}, {'value': ['flush'], 'probability': 0.01811164990067482}, {'value': ['start'], 'probability': 0.017174262553453445}]","[0.66573256, 0.46782357, 0.6315808, 0.3185762, 0.82135457]",0.4266113653509223,"[{'value': ['render'], 'probability': 0.9357366561889648}, {'value': ['disable'], 'probability': 0.019772155210375786}, {'value': ['draw'], 'probability': 0.008434188552200794}, {'value': ['end', 'rendering'], 'probability': 0.007592893671244383}, {'value': ['set', 'blending'], 'probability': 0.007203975226730108}, {'value': ['pre', 'render'], 'probability': 0.006808901205658913}, {'value': ['enable'], 'probability': 0.00569877540692687}, {'value': ['on', 'stop'], 'probability': 0.003271950874477625}, {'value': ['render', 'scene'], 'probability': 0.0029744296334683895}, {'value': ['on', 'draw', 'frame'], 'probability': 0.0025059778708964586}]","[0.24126767, 0.28131276, 0.5273739, 0.82796717, 0.5828227, 0.54006577, 0.4133809, 0.80564845, 0.50060225, 0.7384239]",0.2582669818625809
794,794,"public void setDepthMask(final boolean depthMask) {if (this.depthMask != depthMask)Gdx.gl.glDepthMask(this.depthMask = depthMask);}
","public void [MASK](final boolean depthMask) {if (this.depthMask != depthMask)Gdx.gl.glDepthMask(this.depthMask = depthMask);}
",setDepthMask,"[{'value': ['fill'], 'probability': 0.1024923101067543}, {'value': ['set'], 'probability': 0.04664865508675575}, {'value': ['save'], 'probability': 0.03983098268508911}, {'value': ['navigate'], 'probability': 0.029393285512924194}, {'value': ['visit'], 'probability': 0.02791357971727848}]","[0.48556754, 1.0, 0.5413879, 0.27271438, 0.46053246]",0.138850687630876,"[{'value': ['gl', 'depth', 'mask'], 'probability': 0.9999953508377075}, {'value': ['move', 'selection'], 'probability': 1.4094649714024854e-06}, {'value': ['sync', 'started'], 'probability': 1.2514564105003956e-06}, {'value': ['set', 'default'], 'probability': 4.808661628885602e-07}, {'value': ['remove', 'user'], 'probability': 4.791211836163711e-07}, {'value': ['close', 'window'], 'probability': 3.626315105975664e-07}, {'value': ['change', 'selection'], 'probability': 2.3533191040314705e-07}, {'value': ['set', 'cursor'], 'probability': 1.6375319944472722e-07}, {'value': ['remove', 'focus'], 'probability': 1.5953511933730624e-07}, {'value': ['set', 'active'], 'probability': 1.4804143688706972e-07}]","[0.31810284, 0.6769953, 0.5582999, 0.81912494, 0.53073573, 0.6441222, 0.61040974, 0.71611893, 0.6275495, 0.8406839]",0.31810438122051865
795,795,"public void setDepthTest(final int depthFunction) {setDepthTest(depthFunction, 0f, 1f);}
","public void [MASK](final int depthFunction) {[MASK](depthFunction, 0f, 1f);}
",setDepthTest,"[{'value': ['search'], 'probability': 0.13680726289749146}, {'value': ['run'], 'probability': 0.06412798166275024}, {'value': ['fill'], 'probability': 0.038732122629880905}, {'value': ['visit'], 'probability': 0.028284702450037003}, {'value': ['apply'], 'probability': 0.027501937001943588}]","[0.513733, 0.67632943, 0.48556754, 0.46053246, 0.5010617]",0.1592673028506197,"[{'value': ['handle', 'property', 'changed'], 'probability': 0.29992619156837463}, {'value': ['data', 'changed'], 'probability': 0.17320676147937775}, {'value': ['on', 'text', 'changed'], 'probability': 0.1439654678106308}, {'value': ['transfer'], 'probability': 0.1335739940404892}, {'value': ['update', 'notification'], 'probability': 0.058198876678943634}, {'value': ['create', 'preferences'], 'probability': 0.05506434291601181}, {'value': ['update'], 'probability': 0.04337046295404434}, {'value': ['add', 'triangle'], 'probability': 0.03235877305269241}, {'value': ['create', 'node', 'view'], 'probability': 0.032040517777204514}, {'value': ['wait', 'for', 'indexer'], 'probability': 0.028294594958424568}]","[0.6358429, 0.5844883, 0.7201428, 0.50849366, 0.32517806, 0.53724116, 0.41854778, 0.52858573, 0.61535877, 0.65142107]",0.5854534240723026
796,796,"public void setBlending(final boolean enabled, final int sFactor, final int dFactor) {if (enabled != blending) {blending = enabled;if (enabled)Gdx.gl.glEnable(GL20.GL_BLEND);elseGdx.gl.glDisable(GL20.GL_BLEND);}if (enabled && (blendSFactor != sFactor || blendDFactor != dFactor)) {Gdx.gl.glBlendFunc(sFactor, dFactor);blendSFactor = sFactor;blendDFactor = dFactor;}}
","public void [MASK](final boolean enabled, final int sFactor, final int dFactor) {if (enabled != blending) {blending = enabled;if (enabled)Gdx.gl.glEnable(GL20.GL_BLEND);elseGdx.gl.glDisable(GL20.GL_BLEND);}if (enabled && (blendSFactor != sFactor || blendDFactor != dFactor)) {Gdx.gl.glBlendFunc(sFactor, dFactor);blendSFactor = sFactor;blendDFactor = dFactor;}}
",setBlending,"[{'value': ['blend'], 'probability': 0.6581855416297913}, {'value': ['blending'], 'probability': 0.0567638985812664}, {'value': ['merge'], 'probability': 0.0434463769197464}, {'value': ['blended'], 'probability': 0.02586885169148445}, {'value': ['apply'], 'probability': 0.009177134372293949}]","[0.33725518, 0.20434214, 0.38837323, 0.21425252, 0.5010617]",0.2605899263316845,"[{'value': ['set', 'blending'], 'probability': 0.9948499798774719}, {'value': ['render'], 'probability': 0.004033299628645182}, {'value': ['end', 'rendering'], 'probability': 0.00027135826530866325}, {'value': ['disable'], 'probability': 0.00019575870828703046}, {'value': ['enable'], 'probability': 0.00015681859804317355}, {'value': ['on', 'pause'], 'probability': 0.000147634869790636}, {'value': ['disable', 'blend'], 'probability': 0.00013611088797915727}, {'value': ['enable', 'blend'], 'probability': 0.00012345983122941107}, {'value': ['add', 'feature'], 'probability': 4.456879469216801e-05}, {'value': ['add', 'email', 'address'], 'probability': 4.105051630176604e-05}]","[0.8326656, 0.23491256, 0.62681377, 0.23412411, 0.47277173, 0.67208904, 0.38342443, 0.5073441, 0.627374, 0.5188903]",0.8298782011284492
797,797,"public void setCullFace(final int face) {if (face != cullFace) {cullFace = face;if ((face == GL20.GL_FRONT) || (face == GL20.GL_BACK) || (face == GL20.GL_FRONT_AND_BACK)) {Gdx.gl.glEnable(GL20.GL_CULL_FACE);Gdx.gl.glCullFace(face);} elseGdx.gl.glDisable(GL20.GL_CULL_FACE);}}public String toString() {return ""Outline (Wobble)"";}
","public void [MASK](final int face) {if (face != cullFace) {cullFace = face;if ((face == GL20.GL_FRONT) || (face == GL20.GL_BACK) || (face == GL20.GL_FRONT_AND_BACK)) {Gdx.gl.glEnable(GL20.GL_CULL_FACE);Gdx.gl.glCullFace(face);} elseGdx.gl.glDisable(GL20.GL_CULL_FACE);}}public String toString() {return ""Outline (Wobble)"";}
",setCullFace,"[{'value': ['paint'], 'probability': 0.34303078055381775}, {'value': ['set'], 'probability': 0.07461978495121002}, {'value': ['face'], 'probability': 0.03631915897130966}, {'value': ['run'], 'probability': 0.022769559174776077}, {'value': ['render'], 'probability': 0.02176523208618164}]","[0.3280287, 1.0, 0.62254333, 0.67632943, 0.23491256]",0.2302666287306831,"[{'value': ['gl', 'cull', 'face'], 'probability': 0.7883740067481995}, {'value': ['disable', 'culling'], 'probability': 0.06684015691280365}, {'value': ['update', 'state'], 'probability': 0.061041638255119324}, {'value': ['gl', 'polygon', 'mode'], 'probability': 0.030878102406859398}, {'value': ['paint', 'shadow'], 'probability': 0.016992993652820587}, {'value': ['set', 'page', 'size'], 'probability': 0.009431291371583939}, {'value': ['set', 'enabled', 'state'], 'probability': 0.008118690922856331}, {'value': ['draw'], 'probability': 0.006819535978138447}, {'value': ['get', 'face'], 'probability': 0.005774521268904209}, {'value': ['test', 'value'], 'probability': 0.00572896609082818}]","[0.46107468, 0.20376374, 0.62896925, 0.2081958, 0.43944, 0.7912888, 0.8580264, 0.6315808, 0.7059121, 0.6230553]",0.4557900805201121
798,798,"public void setValues(List values) {super.setValues(values);for (Iterator iter = values.iterator(); iter.hasNext(); ) {Value value = (Value) iter.next();if (value.getName().equals(""Detail"")) {detail = ((Float) value.getObject()).floatValue();} else if (value.getName().equals(""Amplitude"")) {amplitude = ((Float) value.getObject()).floatValue();}}}
","public void [MASK](List values) {super.[MASK](values);for (Iterator iter = values.iterator(); iter.hasNext(); ) {Value value = (Value) iter.next();if (value.getName().equals(""Detail"")) {detail = ((Float) value.getObject()).floatValue();} else if (value.getName().equals(""Amplitude"")) {amplitude = ((Float) value.getObject()).floatValue();}}}
",setValues,"[{'value': ['list'], 'probability': 0.3501770794391632}, {'value': ['next'], 'probability': 0.07886287569999695}, {'value': ['execute'], 'probability': 0.06578352302312851}, {'value': ['add'], 'probability': 0.0620584711432457}, {'value': ['update'], 'probability': 0.03918270021677017}]","[0.5266874, 0.76287955, 0.35167885, 0.5084879, 0.41854778]",0.3156872111635678,"[{'value': ['set', 'values'], 'probability': 0.9994969367980957}, {'value': ['set', 'all'], 'probability': 0.00018935633124783635}, {'value': ['set'], 'probability': 0.00012323108967393637}, {'value': ['set', 'data'], 'probability': 8.016292122192681e-05}, {'value': ['set', 'attributes'], 'probability': 7.108573481673375e-05}, {'value': ['initialize'], 'probability': 1.4202510101313237e-05}, {'value': ['set', 'value'], 'probability': 8.218403309001587e-06}, {'value': ['set', 'params'], 'probability': 6.596521870960714e-06}, {'value': ['set', 'options'], 'probability': 5.113181487104157e-06}, {'value': ['assign'], 'probability': 5.065751338406699e-06}]","[0.83473873, 0.918451, 1.0, 0.8273227, 0.8324354, -0.15549803, 0.8399167, 1.0, 0.8468329, 0.17613421]",0.834757957245852
799,799,"private float randomize(float x) {return x + (float) Math.random() * amplitude * 2 - 1;}public float[] getVertices() {return localVertices;}
","private float [MASK](float x) {return x + (float) Math.random() * amplitude * 2 - 1;}public float[] getVertices() {return localVertices;}
",randomize,"[{'value': ['random'], 'probability': 0.8637329339981079}, {'value': ['min'], 'probability': 0.02614440955221653}, {'value': ['next'], 'probability': 0.017608709633350372}, {'value': ['get'], 'probability': 0.011305086314678192}, {'value': ['count'], 'probability': 0.004176576156169176}]","[-0.09166099, -0.24700584, -0.4031502, -0.2739309, -0.19518878]",-0.0966394268372706,"[{'value': ['randomize'], 'probability': 0.9932734966278076}, {'value': ['advance'], 'probability': 0.006110720336437225}, {'value': ['normalize'], 'probability': 0.00014369665586855263}, {'value': ['interpolate'], 'probability': 0.000100837649370078}, {'value': ['decode'], 'probability': 9.009595669340342e-05}, {'value': ['draw'], 'probability': 8.632573735667393e-05}, {'value': ['shift'], 'probability': 7.510731666116044e-05}, {'value': ['mutate'], 'probability': 6.62805832689628e-05}, {'value': ['generate'], 'probability': 2.7584888812270947e-05}, {'value': ['hash'], 'probability': 2.580804721219465e-05}]","[1.0, -0.21823908, 0.17975591, 0.59108716, 0.17662945, -0.1531963, -0.15228893, 0.062107045, -0.023128588, 0.050362352]",0.9920213618548013
800,800,"public float getLength() {if (!calculateLength)return length;calculateLength = false;length = 0;for (int i = 0, n = localVertices.length - 2; i < n; i += 2) {float x = localVertices[i + 2] - localVertices[i];float y = localVertices[i + 1] - localVertices[i + 3];length += (float) Math.sqrt(x * x + y * y);}return length;}
","public float [MASK]() {if (!calculateLength)return length;calculateLength = false;length = 0;for (int i = 0, n = localVertices.length - 2; i < n; i += 2) {float x = localVertices[i + 2] - localVertices[i];float y = localVertices[i + 1] - localVertices[i + 3];length += (float) Math.sqrt(x * x + y * y);}return length;}
",getLength,"[{'value': ['length'], 'probability': 0.7698175311088562}, {'value': ['count'], 'probability': 0.024611404165625572}, {'value': ['get'], 'probability': 0.024473803117871284}, {'value': ['double'], 'probability': 0.015894409269094467}, {'value': ['trim'], 'probability': 0.013110030442476273}]","[0.3304365, 0.4437648, 1.0, 0.5437231, 0.29039297]",0.3022205053243333,"[{'value': ['get', 'length'], 'probability': 0.45521193742752075}, {'value': ['length'], 'probability': 0.41964614391326904}, {'value': ['get', 'size'], 'probability': 0.04307790845632553}, {'value': ['set', 'length'], 'probability': 0.02717236801981926}, {'value': ['size'], 'probability': 0.016744211316108704}, {'value': ['len'], 'probability': 0.009519051760435104}, {'value': ['current', 'segment'], 'probability': 0.009262247942388058}, {'value': ['get', 'progress'], 'probability': 0.008166549727320671}, {'value': ['get', 'radius'], 'probability': 0.006704199127852917}, {'value': ['get', 'attribute', 'count'], 'probability': 0.004495448432862759}]","[0.8075286, 0.3304365, 0.83762157, 0.56594074, 0.43109724, 0.048967976, 0.47001874, 0.8719993, 0.76990294, 0.80226874]",0.5856513050499568
801,801,"public float getScaledLength() {if (!calculateScaledLength)return scaledLength;calculateScaledLength = false;scaledLength = 0;for (int i = 0, n = localVertices.length - 2; i < n; i += 2) {float x = localVertices[i + 2] * scaleX - localVertices[i] * scaleX;float y = localVertices[i + 1] * scaleY - localVertices[i + 3] * scaleY;scaledLength += (float) Math.sqrt(x * x + y * y);}return scaledLength;}
","public float [MASK]() {if (!calculateScaledLength)return scaledLength;calculateScaledLength = false;scaledLength = 0;for (int i = 0, n = localVertices.length - 2; i < n; i += 2) {float x = localVertices[i + 2] * scaleX - localVertices[i] * scaleX;float y = localVertices[i + 1] * scaleY - localVertices[i + 3] * scaleY;scaledLength += (float) Math.sqrt(x * x + y * y);}return scaledLength;}
",getScaledLength,"[{'value': ['scale'], 'probability': 0.32112205028533936}, {'value': ['scaled'], 'probability': 0.06510186195373535}, {'value': ['get'], 'probability': 0.06091516092419624}, {'value': ['float'], 'probability': 0.05128587409853935}, {'value': ['count'], 'probability': 0.03730486333370209}]","[0.34368768, 0.18858068, 1.0, 0.2808844, 0.4437648]",0.2145177942963392,"[{'value': ['get', 'length'], 'probability': 0.3363759517669678}, {'value': ['length'], 'probability': 0.10217107832431793}, {'value': ['update'], 'probability': 0.09226225316524506}, {'value': ['next', 'float'], 'probability': 0.08520056307315826}, {'value': ['min', 'value'], 'probability': 0.0808829665184021}, {'value': ['get', 'progress'], 'probability': 0.07778675854206085}, {'value': ['score'], 'probability': 0.06811904907226562}, {'value': ['get', 'size'], 'probability': 0.05569002032279968}, {'value': ['get', 'current', 'position'], 'probability': 0.05109599232673645}, {'value': ['get', 'mass'], 'probability': 0.05041533708572388}]","[0.8075286, 0.3304365, 0.36048478, 0.62178075, 0.36282936, 0.8719993, 0.4982407, 0.83762157, 0.8140439, 0.8130952]",0.6519798713521342
802,802,"public float getX() {return x;}
","public float [MASK]() {return x;}
",getX,"[{'value': ['x'], 'probability': 0.8218532204627991}, {'value': ['y'], 'probability': 0.04504614323377609}, {'value': ['f'], 'probability': 0.014606347307562828}, {'value': ['get'], 'probability': 0.011334837414324284}, {'value': ['start'], 'probability': 0.005967658944427967}]","[0.30854452, 0.101747304, 0.23515049, 1.0, 0.7199945]",0.2772278368488358,"[{'value': ['get', 'x'], 'probability': 0.9928054213523865}, {'value': ['x'], 'probability': 0.004655018448829651}, {'value': ['get', 'min', 'x'], 'probability': 0.0009334876667708158}, {'value': ['get', 'position', 'x'], 'probability': 0.00032385249505750835}, {'value': ['get'], 'probability': 0.0002886021393351257}, {'value': ['get', 'x', 'max'], 'probability': 0.0002656261494848877}, {'value': ['get', 'tool', 'version'], 'probability': 0.00024890119675546885}, {'value': ['get', 'value'], 'probability': 0.00022779525897931308}, {'value': ['get', 'origin', 'x'], 'probability': 0.00017050470341928303}, {'value': ['get', 'xf'], 'probability': 8.071080810623243e-05}]","[0.7925645, 0.30854452, 0.6646174, 0.8029298, 1.0, 0.74264467, 0.77918303, 0.8500731, 0.7177184, 0.62429076]",0.7902252673381867
803,803,"public float getY() {return y;}
","public float [MASK]() {return y;}
",getY,"[{'value': ['y'], 'probability': 0.48802319169044495}, {'value': ['x'], 'probability': 0.29627668857574463}, {'value': ['get'], 'probability': 0.03822299838066101}, {'value': ['delta'], 'probability': 0.007905157282948494}, {'value': ['height'], 'probability': 0.007618224248290062}]","[0.101747304, 0.30854452, 1.0, 0.27034074, 0.30686238]",0.1837674226987687,"[{'value': ['get', 'y'], 'probability': 0.9814139008522034}, {'value': ['y'], 'probability': 0.013316738419234753}, {'value': ['get', 'min', 'y'], 'probability': 0.0024424639996141195}, {'value': ['get', 'yf'], 'probability': 0.0013990408042445779}, {'value': ['get', 'bottom'], 'probability': 0.00041565048741176724}, {'value': ['get', 'lat'], 'probability': 0.0002987110347021371}, {'value': ['get', 'origin', 'y'], 'probability': 0.00023711028916295618}, {'value': ['get', 'y', 'max'], 'probability': 0.00021105725318193436}, {'value': ['get', 'x'], 'probability': 0.00013995805056765676}, {'value': ['get', 'position', 'y'], 'probability': 0.00012521685857791454}]","[0.69577336, 0.101747304, 0.5792247, 0.8289555, 0.8802582, 0.65437555, 0.63720065, 0.6849645, 0.7925645, 0.741787]",0.6878318801497341
804,804,"public float getOriginX() {return originX;}
","public float [MASK]() {return originX;}
",getOriginX,"[{'value': ['origin'], 'probability': 0.8523883819580078}, {'value': ['type'], 'probability': 0.020160460844635963}, {'value': ['export'], 'probability': 0.012617466039955616}, {'value': ['name'], 'probability': 0.008469422347843647}, {'value': ['id'], 'probability': 0.007337745279073715}]","[0.21915695, 0.4339052, 0.31437963, 0.47842693, 0.2945777]",0.2057347778272664,"[{'value': ['get', 'origin', 'x'], 'probability': 0.9999880790710449}, {'value': ['get', 'origin'], 'probability': 8.890578101272695e-06}, {'value': ['get', 'h'], 'probability': 1.0207646710114204e-06}, {'value': ['is', 'recursive'], 'probability': 5.04579304561048e-07}, {'value': ['set', 'origin', 'x'], 'probability': 4.0255972066916e-07}, {'value': ['get', 'dx'], 'probability': 3.0912045190234494e-07}, {'value': ['get', 'advance'], 'probability': 2.3758659040140628e-07}, {'value': ['get', 'left'], 'probability': 2.2862515436372632e-07}, {'value': ['get', 'radius'], 'probability': 2.2308809377591388e-07}, {'value': ['get', 'norm'], 'probability': 1.3635229834108031e-07}]","[0.7177184, 0.7980301, 0.8091152, 0.34841225, 0.5271852, 0.7483912, 0.8942209, 0.90257215, 0.76990294, 0.841705]",0.7177190896934321
805,805,"public float getOriginY() {return originY;}
","public float [MASK]() {return originY;}
",getOriginY,"[{'value': ['origin'], 'probability': 0.30131953954696655}, {'value': ['type'], 'probability': 0.07610352337360382}, {'value': ['name'], 'probability': 0.043518997728824615}, {'value': ['id'], 'probability': 0.039810288697481155}, {'value': ['state'], 'probability': 0.023249873891472816}]","[0.21915695, 0.4339052, 0.47842693, 0.2945777, 0.49234587]",0.1430528498814043,"[{'value': ['get', 'origin', 'y'], 'probability': 0.9999955892562866}, {'value': ['set', 'origin', 'y'], 'probability': 3.819110588665353e-06}, {'value': ['get', 'origin'], 'probability': 4.7389892188220983e-07}, {'value': ['get', 'ascent'], 'probability': 8.951329988349244e-08}, {'value': ['get', 'selected'], 'probability': 5.798426272463075e-08}, {'value': ['get', 'origin', 'x'], 'probability': 4.2664328958608166e-08}, {'value': ['get', 'blue'], 'probability': 3.3332131721408587e-08}, {'value': ['get', 'selected', 'column'], 'probability': 3.2413883133131094e-08}, {'value': ['get', 'lsb'], 'probability': 1.925454284901207e-08}, {'value': ['get', 'hue'], 'probability': 1.7337264068828517e-08}]","[0.63720065, 0.4447508, 0.7980301, 0.79994273, 0.8728483, 0.7177184, 0.8334673, 0.7862769, 0.8153135, 0.764923]",0.6372001512749752
806,806,"public float getRotation() {return rotation;}
","public float [MASK]() {return rotation;}
",getRotation,"[{'value': ['rotation'], 'probability': 0.880235493183136}, {'value': ['rotate'], 'probability': 0.033287953585386276}, {'value': ['spin'], 'probability': 0.01066233403980732}, {'value': ['position'], 'probability': 0.003428105963394046}, {'value': ['rotated'], 'probability': 0.002583754248917103}]","[0.32553902, 0.29613084, 0.4402166, 0.5401049, 0.1510848]",0.3033442310545871,"[{'value': ['get', 'rotation'], 'probability': 0.9998339414596558}, {'value': ['rotation'], 'probability': 0.00014369898417498916}, {'value': ['get', 'transform'], 'probability': 8.621634151495527e-06}, {'value': ['get', 'alpha'], 'probability': 6.174132977321278e-06}, {'value': ['get', 'angle'], 'probability': 2.7349619813321624e-06}, {'value': ['get', 'direction'], 'probability': 2.324818524357397e-06}, {'value': ['get', 'float', 'value'], 'probability': 7.406398481180076e-07}, {'value': ['get'], 'probability': 7.22907770978054e-07}, {'value': ['get', 'wheel', 'rotation'], 'probability': 6.602834332625207e-07}, {'value': ['set', 'rotation'], 'probability': 2.78923266705533e-07}]","[0.8306247, 0.32553902, 0.8550423, 0.7418046, 0.8133433, 0.8798257, 0.78096455, 1.0, 0.7655921, 0.5916353]",0.8305517409113221
807,807,"public float getScaleX() {return scaleX;}
","public float [MASK]() {return scaleX;}
",getScaleX,"[{'value': ['scale'], 'probability': 0.970678448677063}, {'value': ['scaled'], 'probability': 0.0027640622574836016}, {'value': ['size'], 'probability': 0.0022052498534321785}, {'value': ['magnitude'], 'probability': 0.0013961427612230182}, {'value': ['get'], 'probability': 0.0012416556710377336}]","[0.34368768, 0.18858068, 0.43109724, 0.21928513, 1.0]",0.3366299621715192,"[{'value': ['get', 'scale', 'x'], 'probability': 0.9999836683273315}, {'value': ['set', 'scale', 'x'], 'probability': 9.700694135972299e-06}, {'value': ['scale', 'x', 'by'], 'probability': 4.129102308070287e-06}, {'value': ['scale', 'x'], 'probability': 2.210385218859301e-06}, {'value': ['get', 'scale'], 'probability': 1.658136739024485e-07}, {'value': ['scaled', 'width'], 'probability': 1.146425958609143e-07}, {'value': ['get', 'currency'], 'probability': 6.677358044271386e-08}, {'value': ['get', 'start', 'x'], 'probability': 3.760088418403029e-08}, {'value': ['get', 'view'], 'probability': 2.9508095522601252e-08}, {'value': ['get', 'border'], 'probability': 2.6750175408096766e-08}]","[0.7356505, 0.54789495, 0.50527376, 0.39733207, 0.82746357, 0.24984829, 0.788906, 0.84930575, 0.8873372, 0.8016258]",0.7356470632301655
808,808,"public float getScaleY() {return scaleY;}
","public float [MASK]() {return scaleY;}
",getScaleY,"[{'value': ['scale'], 'probability': 0.9807890057563782}, {'value': ['scaled'], 'probability': 0.0022739125415682793}, {'value': ['size'], 'probability': 0.0014175683027133346}, {'value': ['value'], 'probability': 0.0008988460758700967}, {'value': ['magnitude'], 'probability': 0.0008957030950114131}]","[0.34368768, 0.18858068, 0.43109724, 0.46303764, 0.21928513]",0.3387376409212956,"[{'value': ['get', 'scale', 'y'], 'probability': 0.9991668462753296}, {'value': ['scale', 'y'], 'probability': 0.0006632937584072351}, {'value': ['set', 'scale', 'y'], 'probability': 0.00016816433344502002}, {'value': ['get', 'scale'], 'probability': 6.25269080956059e-07}, {'value': ['translate', 'y'], 'probability': 2.5523243607494805e-07}, {'value': ['is', 'full', 'screen'], 'probability': 2.389751614373381e-07}, {'value': ['get', 'current', 'step'], 'probability': 2.2172226010752638e-07}, {'value': ['get', 'height'], 'probability': 1.3116755326336715e-07}, {'value': ['scale'], 'probability': 1.3017411504279153e-07}, {'value': ['get', 'offset', 'y'], 'probability': 1.1247509235090547e-07}]","[0.6901169, 0.2831635, 0.49224064, 0.82746357, 0.32287174, 0.7125883, 0.8590052, 0.8224554, 0.34368768, 0.6973544]",0.6898137160354936
809,809,"public void setOrigin(float originX, float originY) {this.originX = originX;this.originY = originY;dirty = true;}
","public void [MASK](float originX, float originY) {this.originX = originX;this.originY = originY;dirty = true;}
",setOrigin,"[{'value': ['dirty'], 'probability': 0.9202865362167358}, {'value': ['clean'], 'probability': 0.06316136568784714}, {'value': ['paint'], 'probability': 0.0023720785975456238}, {'value': ['flush'], 'probability': 0.0014982129214331508}, {'value': ['clear'], 'probability': 0.0007632837514393032}]","[0.27737847, 0.5305215, 0.3280287, 0.280057, 0.6369313]",0.2904599885602869,"[{'value': ['set', 'origin'], 'probability': 0.9992559552192688}, {'value': ['set', 'query'], 'probability': 0.00021190469851717353}, {'value': ['set', 'depth'], 'probability': 0.00016838892770465463}, {'value': ['set', 'red'], 'probability': 8.87572459760122e-05}, {'value': ['set', 'region'], 'probability': 5.659839007421397e-05}, {'value': ['set', 'origin', 'x'], 'probability': 5.0054815801559016e-05}, {'value': ['get', 'origin', 'x'], 'probability': 4.5669319661101326e-05}, {'value': ['set', 'origin', 'y'], 'probability': 4.4567164877662435e-05}, {'value': ['set', 'color'], 'probability': 4.225736120133661e-05}, {'value': ['parameterize'], 'probability': 3.592846405808814e-05}]","[0.80866706, 0.76398927, 0.7943753, 0.8423104, 0.8155878, 0.7503884, 0.62854356, 0.64905185, 0.80587685, 0.0]",0.8086112008632061
810,810,"public void setPosition(float x, float y) {this.x = x;this.y = y;dirty = true;}
","public void [MASK](float x, float y) {this.x = x;this.y = y;dirty = true;}
",setPosition,"[{'value': ['dirty'], 'probability': 0.45329174399375916}, {'value': ['paint'], 'probability': 0.27438315749168396}, {'value': ['clean'], 'probability': 0.07784605771303177}, {'value': ['flush'], 'probability': 0.010817098431289196}, {'value': ['update'], 'probability': 0.010359933599829674}]","[0.27737847, 0.3280287, 0.5305215, 0.280057, 0.41854778]",0.2644034628413042,"[{'value': ['set', 'position'], 'probability': 0.781914234161377}, {'value': ['set'], 'probability': 0.061667174100875854}, {'value': ['set', 'location'], 'probability': 0.059447553008794785}, {'value': ['move', 'to'], 'probability': 0.01860746741294861}, {'value': ['draw', 'string'], 'probability': 0.01788432151079178}, {'value': ['draw', 'point'], 'probability': 0.017438706010580063}, {'value': ['update'], 'probability': 0.014711466617882252}, {'value': ['set', 'line'], 'probability': 0.009833202697336674}, {'value': ['set', 'pos'], 'probability': 0.009389388374984264}, {'value': ['set', 'y'], 'probability': 0.009106584824621677}]","[0.8780586, 1.0, 0.8498627, 0.7490501, 0.6944482, 0.73171115, 0.41854778, 0.8864341, 0.63222605, 0.6731655]",0.8648140981420351
811,811,"public void setVertices(float[] vertices) {if (vertices.length < 4)throw new IllegalArgumentException(""polylines must contain at least 2 points."");this.localVertices = vertices;dirty = true;}
","public void [MASK](float[] vertices) {if (vertices.length < 4)throw new IllegalArgumentException(""polylines must contain at least 2 points."");this.localVertices = vertices;dirty = true;}
",setVertices,"[{'value': ['dirty'], 'probability': 0.8265540599822998}, {'value': ['paint'], 'probability': 0.04470299184322357}, {'value': ['clean'], 'probability': 0.021400347352027893}, {'value': ['flush'], 'probability': 0.0053841243498027325}, {'value': ['update'], 'probability': 0.005057458765804768}]","[0.27737847, 0.3280287, 0.5305215, 0.280057, 0.41854778]",0.2589101595298733,"[{'value': ['update'], 'probability': 0.3550117611885071}, {'value': ['set', 'vertices'], 'probability': 0.3255460262298584}, {'value': ['initialize'], 'probability': 0.1495455950498581}, {'value': ['copy'], 'probability': 0.12098795920610428}, {'value': ['init'], 'probability': 0.0336177833378315}, {'value': ['move'], 'probability': 0.003788213012740016}, {'value': ['merge'], 'probability': 0.0034027928486466408}, {'value': ['set'], 'probability': 0.0033374479971826077}, {'value': ['set', 'writer'], 'probability': 0.0027696292381733656}, {'value': ['set', 'geometry'], 'probability': 0.0019926796667277813}]","[0.41854778, 0.72098744, -0.15549803, 0.4086756, -0.2256778, 0.69789916, 0.38837323, 1.0, 0.7430619, 0.75857764]",0.41278037511351906
812,812,"public void setRotation(float degrees) {this.rotation = degrees;dirty = true;}
","public void [MASK](float degrees) {this.rotation = degrees;dirty = true;}
",setRotation,"[{'value': ['rotation'], 'probability': 0.3567188084125519}, {'value': ['rotate'], 'probability': 0.1299552023410797}, {'value': ['spin'], 'probability': 0.10031191259622574}, {'value': ['dirty'], 'probability': 0.044555313885211945}, {'value': ['flip'], 'probability': 0.0425068698823452}]","[0.35976806, 0.25362208, 0.44380715, 0.27737847, 0.26781073]",0.2295571692908432,"[{'value': ['set', 'rotation'], 'probability': 0.8883069753646851}, {'value': ['set', 'angle'], 'probability': 0.08661646395921707}, {'value': ['set', 'rotate'], 'probability': 0.013309389352798462}, {'value': ['rotate'], 'probability': 0.009183324873447418}, {'value': ['rotation'], 'probability': 0.0008404151303693652}, {'value': ['set', 'point'], 'probability': 0.0005283252685330808}, {'value': ['rotate', 'z'], 'probability': 0.0004042798245791346}, {'value': ['set', 'degrees'], 'probability': 0.0003172291035298258}, {'value': ['set', 'fixed'], 'probability': 0.00029673692188225687}, {'value': ['rotate', 'x'], 'probability': 0.0001969111617654562}]","[0.82436764, 0.79805154, 0.80678225, 0.25362208, 0.35976806, 0.9041962, 0.31964985, 0.7377369, 0.8758171, 0.41196513]",0.8159671319975003
813,813,"public void rotate(float degrees) {rotation += degrees;dirty = true;}
","public void [MASK](float degrees) {rotation += degrees;dirty = true;}
",rotate,"[{'value': ['dirty'], 'probability': 0.3278614580631256}, {'value': ['rotation'], 'probability': 0.07975517213344574}, {'value': ['spin'], 'probability': 0.0697830393910408}, {'value': ['flip'], 'probability': 0.049743909388780594}, {'value': ['clean'], 'probability': 0.04338277503848076}]","[-0.013947555, 0.5081053, 0.42980474, 0.3484812, 0.08204167]",0.0868382525987735,"[{'value': ['rotate'], 'probability': 0.9496268033981323}, {'value': ['rotate', 'x'], 'probability': 0.01869482919573784}, {'value': ['rotated'], 'probability': 0.009493215940892696}, {'value': ['rotate', 'z'], 'probability': 0.007245458196848631}, {'value': ['post', 'rotate'], 'probability': 0.0038052054587751627}, {'value': ['set', 'rotate'], 'probability': 0.003308662911877036}, {'value': ['set', 'angle'], 'probability': 0.003127969801425934}, {'value': ['set', 'rotation'], 'probability': 0.0019016838632524014}, {'value': ['degrees', 'to', 'radians'], 'probability': 0.0016603367403149605}, {'value': ['set', 'display', 'orientation'], 'probability': 0.001135766040533781}]","[1.0000001, 0.7111026, 0.8160544, 0.7643095, 0.75791264, 0.7761479, 0.423377, 0.46197718, 0.46195948, 0.33859074]",0.9850120314450688
814,814,"public void setScale(float scaleX, float scaleY) {this.scaleX = scaleX;this.scaleY = scaleY;dirty = true;calculateScaledLength = true;}
","public void [MASK](float scaleX, float scaleY) {this.scaleX = scaleX;this.scaleY = scaleY;dirty = true;calculateScaledLength = true;}
",setScale,"[{'value': ['dirty'], 'probability': 0.34647664427757263}, {'value': ['paint'], 'probability': 0.2527090609073639}, {'value': ['clean'], 'probability': 0.057500679045915604}, {'value': ['update'], 'probability': 0.029557209461927414}, {'value': ['write'], 'probability': 0.021816305816173553}]","[0.27737847, 0.3280287, 0.5305215, 0.41854778, 0.46259418]",0.2319695360052734,"[{'value': ['set', 'scale'], 'probability': 0.571398913860321}, {'value': ['scale'], 'probability': 0.18201594054698944}, {'value': ['set', 'scale', 'y'], 'probability': 0.11258617043495178}, {'value': ['resize'], 'probability': 0.08617327362298965}, {'value': ['scale', 'y'], 'probability': 0.04231542721390724}, {'value': ['get', 'scale', 'y'], 'probability': 0.004054774064570665}, {'value': ['set', 'transform'], 'probability': 0.0005327234393917024}, {'value': ['set', 'image'], 'probability': 0.0004635794321075082}, {'value': ['zoom'], 'probability': 0.0002741647476796061}, {'value': ['get', 'scale'], 'probability': 0.00018508097855374217}]","[0.8679152, 0.5270622, 0.73149675, -0.12730242, 0.4012328, 0.6125872, 0.85847646, 0.8435568, 0.123262465, 0.71960074]",0.6837234809407383
815,815,"public void scale(float amount) {this.scaleX += amount;this.scaleY += amount;dirty = true;calculateScaledLength = true;}
","public void [MASK](float amount) {this.[MASK]X += amount;this.[MASK]Y += amount;dirty = true;calculateScaledLength = true;}
",scale,"[{'value': ['count'], 'probability': 0.21008680760860443}, {'value': ['write'], 'probability': 0.05323987826704979}, {'value': ['calculate'], 'probability': 0.044376932084560394}, {'value': ['update'], 'probability': 0.040666211396455765}, {'value': ['add'], 'probability': 0.030418893322348595}]","[0.32451963, 0.25611737, 0.34814265, 0.24035312, 0.35819393]",0.1179325686118851,"[{'value': ['scale'], 'probability': 0.9772180914878845}, {'value': ['set', 'scale', 'y'], 'probability': 0.01987774297595024}, {'value': ['scale', 'y'], 'probability': 0.0012464888859540224}, {'value': ['translate'], 'probability': 0.0005378693458624184}, {'value': ['get', 'scale', 'y'], 'probability': 0.0003013277309946716}, {'value': ['scale', 'to'], 'probability': 0.00029133385396562517}, {'value': ['set', 'scale'], 'probability': 0.00016105486429296434}, {'value': ['zoom'], 'probability': 0.00015140761388465762}, {'value': ['resize'], 'probability': 0.00013040592602919787}, {'value': ['threshold'], 'probability': 8.420627273153514e-05}]","[1.0, 0.73816204, 0.6851739, 0.25966468, 0.6807686, 0.8169615, 0.8795647, 0.09637693, -0.031388633, 0.32768628]",0.9935077074672967
816,816,"public void calculateLength() {calculateLength = true;}
","public void [MASK]() {[MASK] = true;}
",calculateLength,"[{'value': ['run'], 'probability': 0.344075471162796}, {'value': ['test'], 'probability': 0.11357598751783371}, {'value': ['clear'], 'probability': 0.048438940197229385}, {'value': ['close'], 'probability': 0.040663447231054306}, {'value': ['execute'], 'probability': 0.019671155139803886}]","[0.18425731, 0.2221446, 0.2637654, 0.19541122, 0.32640627]",0.1157721131366004,"[{'value': ['set', 'properties'], 'probability': 0.5065385103225708}, {'value': ['start', 'document'], 'probability': 0.08823347836732864}, {'value': ['set', 'port'], 'probability': 0.07909846305847168}, {'value': ['set', 'alpha'], 'probability': 0.07214894145727158}, {'value': ['mark', 'read', 'only'], 'probability': 0.060504551976919174}, {'value': ['clear', 'buffer'], 'probability': 0.05422724410891533}, {'value': ['set', 'state'], 'probability': 0.03754706680774689}, {'value': ['set', 'attributes'], 'probability': 0.036699894815683365}, {'value': ['set', 'on'], 'probability': 0.03486167639493942}, {'value': ['set', 'source'], 'probability': 0.030140182003378868}]","[0.3617772, 0.2860968, 0.18571281, 0.31483135, 0.2721745, 0.28514668, 0.27867576, 0.44495982, 0.25944436, 0.32751533]",0.32354173400254915
817,817,"public void calculateScaledLength() {calculateScaledLength = true;}
","public void [MASK]() {[MASK] = true;}
",calculateScaledLength,"[{'value': ['run'], 'probability': 0.344075471162796}, {'value': ['test'], 'probability': 0.11357598751783371}, {'value': ['clear'], 'probability': 0.048438940197229385}, {'value': ['close'], 'probability': 0.040663447231054306}, {'value': ['execute'], 'probability': 0.019671155139803886}]","[0.18425731, 0.2221446, 0.2637654, 0.19541122, 0.32640627]",0.1157721131366004,"[{'value': ['set', 'proxy'], 'probability': 0.3137190639972687}, {'value': ['private', 'method'], 'probability': 0.11509478837251663}, {'value': ['execute'], 'probability': 0.10430912673473358}, {'value': ['start'], 'probability': 0.10216008871793747}, {'value': ['cancel'], 'probability': 0.08154541999101639}, {'value': ['enable', 'shift', 'lock'], 'probability': 0.07023771107196808}, {'value': ['pause'], 'probability': 0.06703714281320572}, {'value': ['prevent', 'default'], 'probability': 0.056070152670145035}, {'value': ['search', 'started'], 'probability': 0.04806589335203171}, {'value': ['cleanup'], 'probability': 0.041760608553886414}]","[0.27906772, 0.39752182, 0.32640627, 0.23255967, 0.21415363, 0.42026025, 0.23070048, 0.36177257, 0.1881472, 0.15489347]",0.2893504419504616
818,818,"public void dirty() {dirty = true;}
","public void [MASK]() {[MASK] = true;}
",dirty,"[{'value': ['run'], 'probability': 0.344075471162796}, {'value': ['test'], 'probability': 0.11357598751783371}, {'value': ['clear'], 'probability': 0.048438940197229385}, {'value': ['close'], 'probability': 0.040663447231054306}, {'value': ['execute'], 'probability': 0.019671155139803886}]","[0.3031067, 0.28861752, 0.3300263, 0.2461234, 0.16822143]",0.1663750590586946,"[{'value': ['invalidate', 'sizes'], 'probability': 0.8221737146377563}, {'value': ['clear', 'dirty'], 'probability': 0.05308552458882332}, {'value': ['dirty'], 'probability': 0.04870147258043289}, {'value': ['make', 'dirty'], 'probability': 0.034756481647491455}, {'value': ['set', 'dirty'], 'probability': 0.024557162076234818}, {'value': ['mark', 'dirty'], 'probability': 0.011115685105323792}, {'value': ['mark', 'as', 'dirty'], 'probability': 0.0019683281425386667}, {'value': ['mark', 'clean'], 'probability': 0.0015969008672982454}, {'value': ['invalidate'], 'probability': 0.0012305201962590218}, {'value': ['cancel', 'edit'], 'probability': 0.0008141343714669347}]","[0.056153655, 0.8300183, 1.0, 0.82810813, 0.8032483, 0.7373059, 0.66047746, 0.45485833, 0.011510638, 0.12222388]",0.19777484326779232
819,819,"public void translate(float x, float y) {this.x += x;this.y += y;dirty = true;}
","public void [MASK](float x, float y) {this.x += x;this.y += y;dirty = true;}
",translate,"[{'value': ['dirty'], 'probability': 0.6514471769332886}, {'value': ['paint'], 'probability': 0.14972342550754547}, {'value': ['clean'], 'probability': 0.07578545808792114}, {'value': ['flush'], 'probability': 0.010524633340537548}, {'value': ['update'], 'probability': 0.0068476214073598385}]","[0.09402056, 0.25365826, 0.18916787, 0.2182484, 0.31988624]",0.1180516310053808,"[{'value': ['translate'], 'probability': 0.94589763879776}, {'value': ['draw', 'line'], 'probability': 0.02717369794845581}, {'value': ['draw', 'text'], 'probability': 0.01319964975118637}, {'value': ['add', 'point'], 'probability': 0.0035418765619397163}, {'value': ['offset'], 'probability': 0.002688385546207428}, {'value': ['add', 'sample'], 'probability': 0.0023437561467289925}, {'value': ['add', 'value'], 'probability': 0.0016952169826254249}, {'value': ['fill', 'rect'], 'probability': 0.0011909109307453036}, {'value': ['add'], 'probability': 0.0011764932423830032}, {'value': ['set', 'y'], 'probability': 0.0010923672234639525}]","[0.99999994, 0.38276416, 0.54003173, 0.42170963, 0.45402622, 0.3929401, 0.52014273, 0.33544832, 0.40724388, 0.21405444]",0.9690563157477113
820,820,"public boolean contains(Vector2 point) {return false;}
","public boolean [MASK](Vector2 point) {return false;}
",contains,"[{'value': ['equals'], 'probability': 0.17448566854000092}, {'value': ['matches'], 'probability': 0.07082676887512207}, {'value': ['is'], 'probability': 0.054701097309589386}, {'value': ['match'], 'probability': 0.03269549086689949}, {'value': ['evaluate'], 'probability': 0.026566170156002045}]","[0.20414257, 0.28268832, 0.59498084, 0.21868116, 0.10717903]",0.0981851819032789,"[{'value': ['contains'], 'probability': 0.9302183985710144}, {'value': ['equals'], 'probability': 0.022271662950515747}, {'value': ['contains', 'point'], 'probability': 0.011651674285531044}, {'value': ['intersects'], 'probability': 0.009060997515916824}, {'value': ['contains', 'all'], 'probability': 0.006345395930111408}, {'value': ['is', 'visible'], 'probability': 0.005567209329456091}, {'value': ['contains', 'any'], 'probability': 0.004448851570487022}, {'value': ['is', 'special'], 'probability': 0.003834900911897421}, {'value': ['exists'], 'probability': 0.003780209459364414}, {'value': ['is', 'valid'], 'probability': 0.0028206489514559507}]","[0.99999994, 0.20414257, 0.83166873, 0.1944798, 0.8578542, 0.5924869, 0.83555686, 0.59247595, 0.5643323, 0.52945644]",0.9645754346182763
821,821,"public boolean contains(float x, float y) {return false;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public boolean [MASK](float x, float y) {return false;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",contains,"[{'value': ['destroy'], 'probability': 0.47199496626853943}, {'value': ['destroyed'], 'probability': 0.4006097912788391}, {'value': ['equals'], 'probability': 0.009057269431650639}, {'value': ['contains'], 'probability': 0.0066872709430754185}, {'value': ['is'], 'probability': 0.006452451925724745}]","[0.20632207, 0.34317216, 0.20414257, 0.99999994, 0.59498084]",0.2472364388769819,"[{'value': ['contains'], 'probability': 0.6691766381263733}, {'value': ['begin', 'drag'], 'probability': 0.10800673812627792}, {'value': ['contains', 'point'], 'probability': 0.09494039416313171}, {'value': ['mouse', 'up'], 'probability': 0.05761425197124481}, {'value': ['long', 'press'], 'probability': 0.025279255583882332}, {'value': ['inside', 'grid'], 'probability': 0.01993025280535221}, {'value': ['set', 'position'], 'probability': 0.00893058255314827}, {'value': ['is', 'in', 'content', 'area'], 'probability': 0.006170701701194048}, {'value': ['equals'], 'probability': 0.005068035796284676}, {'value': ['hit'], 'probability': 0.004883136134594679}]","[0.99999994, 0.22810452, 0.83166873, 0.35764068, 0.3736163, 0.42162263, 0.383847, 0.63901615, 0.20414257, 0.21994543]",0.820705148661587
822,822,"public static long getCPtr(btDiscreteCollisionDetectorInterface obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btDiscreteCollisionDetectorInterface obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08979557454586029}, {'value': ['evaluate'], 'probability': 0.03403036296367645}, {'value': ['update'], 'probability': 0.03265618905425072}, {'value': ['match'], 'probability': 0.032285768538713455}, {'value': ['process'], 'probability': 0.0319955013692379}]","[1.0, 0.40115592, 0.36048478, 0.4692583, 0.52250975]",0.1470874418295098,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
823,823,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
824,824,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btDiscreteCollisionDetectorInterface(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btDiscreteCollisionDetectorInterface(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7637612223625183}, {'value': ['start'], 'probability': 0.017680754885077477}, {'value': ['test'], 'probability': 0.016863981261849403}, {'value': ['clear'], 'probability': 0.016624538227915764}, {'value': ['execute'], 'probability': 0.010724716819822788}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.33713183]",0.1182802469511359,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
825,825,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](swigCPtr = cPtr, cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.9115408658981323}, {'value': ['destroyed'], 'probability': 0.0691232979297638}, {'value': ['rebuild'], 'probability': 0.004925813991576433}, {'value': ['save'], 'probability': 0.0026005508843809366}, {'value': ['run'], 'probability': 0.001220924430526793}]","[0.0852853, -0.009507184, 0.19255844, 0.15556529, 0.1346719]",0.0786013536722733,"[{'value': ['reset'], 'probability': 0.9976670742034912}, {'value': ['reinit'], 'probability': 0.0007650359184481204}, {'value': ['destroy'], 'probability': 0.0004842917260248214}, {'value': ['stop'], 'probability': 0.0004195002547930926}, {'value': ['clear'], 'probability': 0.00021948434005025774}, {'value': ['start'], 'probability': 0.00013255604426376522}, {'value': ['shutdown'], 'probability': 0.0001189266549772583}, {'value': ['restart'], 'probability': 8.343072840943933e-05}, {'value': ['mark'], 'probability': 5.742608482250944e-05}, {'value': ['abort'], 'probability': 5.2347619202919304e-05}]","[1.0, 0.0, 0.0852853, 0.1610944, 0.10589813, 0.23268494, 0.25621086, 0.38693747, 0.12411288, 0.21679178]",0.9979112717127002
826,826,"public static long getCPtr(Result obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](Result obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['execute'], 'probability': 0.07308526337146759}, {'value': ['get'], 'probability': 0.06875265389680862}, {'value': ['read'], 'probability': 0.045191116631031036}, {'value': ['run'], 'probability': 0.04492563754320145}, {'value': ['process'], 'probability': 0.03707852214574814}]","[0.37713256, 1.0, 0.5726487, 0.65114945, 0.52250975]",0.1708213148224402,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.3522488018224976e-08}, {'value': ['get', 'flags'], 'probability': 1.1335480998297953e-08}, {'value': ['get', 'type'], 'probability': 5.808411085439502e-09}, {'value': ['get', 'first'], 'probability': 3.341144250157413e-09}, {'value': ['get', 'id'], 'probability': 2.9305406989976746e-09}, {'value': ['get', 'base'], 'probability': 1.5281417242718476e-09}, {'value': ['height'], 'probability': 7.848679484112608e-10}, {'value': ['get', 'count'], 'probability': 3.9741579471730404e-10}, {'value': ['get', 'geometry', 'type'], 'probability': 3.81608300514813e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.8991456, 0.82231325, 0.8330182, 0.30686238, 0.85928994, 0.69490284]",0.6761973769101498
827,827,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
828,828,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btDiscreteCollisionDetectorInterface_Result(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btDiscreteCollisionDetectorInterface_Result(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7949845194816589}, {'value': ['start'], 'probability': 0.016107074916362762}, {'value': ['clear'], 'probability': 0.014962629415094852}, {'value': ['test'], 'probability': 0.013722403906285763}, {'value': ['execute'], 'probability': 0.010519727133214474}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1215524346289536,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
829,829,"public void setShapeIdentifiersA(int partId0, int index0) {CollisionJNI.btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersA(swigCPtr, this, partId0, index0);}
","public void [MASK](int partId0, int index0) {CollisionJNI.btDiscreteCollisionDetectorInterface_Result_[MASK](swigCPtr, this, partId0, index0);}
",setShapeIdentifiersA,"[{'value': ['test'], 'probability': 0.0744081437587738}, {'value': ['update'], 'probability': 0.07027167081832886}, {'value': ['execute'], 'probability': 0.053538694977760315}, {'value': ['run'], 'probability': 0.05280757322907448}, {'value': ['apply'], 'probability': 0.04023266211152077}]","[0.5425338, 0.41854778, 0.35167885, 0.67632943, 0.5010617]",0.1444837737452149,"[{'value': ['set', 'index'], 'probability': 0.3762408494949341}, {'value': ['reinit'], 'probability': 0.10777167975902557}, {'value': ['set', 'location'], 'probability': 0.0831112191081047}, {'value': ['delete'], 'probability': 0.07537335157394409}, {'value': ['go', 'to'], 'probability': 0.07347162067890167}, {'value': ['set', 'class'], 'probability': 0.06668920069932938}, {'value': ['move', 'to'], 'probability': 0.05925727263092995}, {'value': ['open'], 'probability': 0.05772487819194794}, {'value': ['set', 'width'], 'probability': 0.05146623030304909}, {'value': ['init'], 'probability': 0.048893753439188004}]","[0.73392576, 0.0, 0.8498627, 0.18091975, 0.74741673, 0.823405, 0.7490501, 0.6936701, 0.7513865, -0.2256778]",0.5822941281445222
830,830,"public void setShapeIdentifiersB(int partId1, int index1) {CollisionJNI.btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersB(swigCPtr, this, partId1, index1);}
","public void [MASK](int partId1, int index1) {CollisionJNI.btDiscreteCollisionDetectorInterface_Result_[MASK](swigCPtr, this, partId1, index1);}
",setShapeIdentifiersB,"[{'value': ['test'], 'probability': 0.07529294490814209}, {'value': ['update'], 'probability': 0.055970627814531326}, {'value': ['execute'], 'probability': 0.053224653005599976}, {'value': ['apply'], 'probability': 0.04610908403992653}, {'value': ['run'], 'probability': 0.04518703371286392}]","[0.5425338, 0.41854778, 0.35167885, 0.5010617, 0.67632943]",0.1366581512324552,"[{'value': ['set', 'index'], 'probability': 0.3762408494949341}, {'value': ['reinit'], 'probability': 0.10777167975902557}, {'value': ['set', 'location'], 'probability': 0.0831112191081047}, {'value': ['delete'], 'probability': 0.07537335157394409}, {'value': ['go', 'to'], 'probability': 0.07347162067890167}, {'value': ['set', 'class'], 'probability': 0.06668920069932938}, {'value': ['move', 'to'], 'probability': 0.05925727263092995}, {'value': ['open'], 'probability': 0.05772487819194794}, {'value': ['set', 'width'], 'probability': 0.05146623030304909}, {'value': ['init'], 'probability': 0.048893753439188004}]","[0.73392576, 0.0, 0.8498627, 0.18091975, 0.74741673, 0.823405, 0.7490501, 0.6936701, 0.7513865, -0.2256778]",0.5822941281445222
831,831,"public void addContactPoint(Vector3 normalOnBInWorld, Vector3 pointInWorld, float depth) {CollisionJNI.btDiscreteCollisionDetectorInterface_Result_addContactPoint(swigCPtr, this, normalOnBInWorld, pointInWorld, depth);}
","public void [MASK](Vector3 normalOnBInWorld, Vector3 pointInWorld, float depth) {CollisionJNI.btDiscreteCollisionDetectorInterface_Result_[MASK](swigCPtr, this, normalOnBInWorld, pointInWorld, depth);}
",addContactPoint,"[{'value': ['test'], 'probability': 0.0738188773393631}, {'value': ['apply'], 'probability': 0.060187648981809616}, {'value': ['execute'], 'probability': 0.04740976542234421}, {'value': ['navigate'], 'probability': 0.0390697605907917}, {'value': ['evaluate'], 'probability': 0.03823764622211456}]","[0.30969554, 0.46110356, 0.24202506, 0.18795648, 0.33404627]",0.0822050258025706,"[{'value': ['apply', 'layout'], 'probability': 0.6654196381568909}, {'value': ['assert', 'equals'], 'probability': 0.060432057827711105}, {'value': ['set', 'grid', 'size'], 'probability': 0.05022934451699257}, {'value': ['arc', 'to'], 'probability': 0.04103108495473862}, {'value': ['update', 'normal'], 'probability': 0.0394180603325367}, {'value': ['set', 'depth'], 'probability': 0.03638867288827896}, {'value': ['set', 'rect'], 'probability': 0.02816353738307953}, {'value': ['vertex'], 'probability': 0.026566825807094574}, {'value': ['copy', 'to'], 'probability': 0.026485949754714966}, {'value': ['set', 'bounds'], 'probability': 0.025864753872156143}]","[0.45393366, 0.281983, 0.54662097, 0.44776547, 0.5488573, 0.55694795, 0.5084879, 0.14606886, 0.54338574, 0.3676979]",0.44893129477210825
832,832,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](swigCPtr = cPtr, cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.9115408658981323}, {'value': ['destroyed'], 'probability': 0.0691232979297638}, {'value': ['rebuild'], 'probability': 0.004925813991576433}, {'value': ['save'], 'probability': 0.0026005508843809366}, {'value': ['run'], 'probability': 0.001220924430526793}]","[0.0852853, -0.009507184, 0.19255844, 0.15556529, 0.1346719]",0.0786013536722733,"[{'value': ['reset'], 'probability': 0.9976670742034912}, {'value': ['reinit'], 'probability': 0.0007650359184481204}, {'value': ['destroy'], 'probability': 0.0004842917260248214}, {'value': ['stop'], 'probability': 0.0004195002547930926}, {'value': ['clear'], 'probability': 0.00021948434005025774}, {'value': ['start'], 'probability': 0.00013255604426376522}, {'value': ['shutdown'], 'probability': 0.0001189266549772583}, {'value': ['restart'], 'probability': 8.343072840943933e-05}, {'value': ['mark'], 'probability': 5.742608482250944e-05}, {'value': ['abort'], 'probability': 5.2347619202919304e-05}]","[1.0, 0.0, 0.0852853, 0.1610944, 0.10589813, 0.23268494, 0.25621086, 0.38693747, 0.12411288, 0.21679178]",0.9979112717127002
833,833,"public static long getCPtr(ClosestPointInput obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](ClosestPointInput obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07072009146213531}, {'value': ['read'], 'probability': 0.0515887588262558}, {'value': ['evaluate'], 'probability': 0.046422913670539856}, {'value': ['execute'], 'probability': 0.038323331624269485}, {'value': ['process'], 'probability': 0.03652578592300415}]","[1.0, 0.5726487, 0.40115592, 0.37713256, 0.52250975]",0.1524232096891881,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
834,834,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
835,835,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btDiscreteCollisionDetectorInterface_ClosestPointInput(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btDiscreteCollisionDetectorInterface_ClosestPointInput(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7486858367919922}, {'value': ['test'], 'probability': 0.023231469094753265}, {'value': ['start'], 'probability': 0.02090964838862419}, {'value': ['clear'], 'probability': 0.0186812374740839}, {'value': ['close'], 'probability': 0.014547992497682571}]","[0.13931048, 0.14537679, 0.15163165, 0.18840031, 0.10496158]",0.1158941948396954,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
836,836,"public void setTransformA(btTransform value) {CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_set(swigCPtr, this, btTransform.getCPtr(value), value);}
","public void [MASK](btTransform value) {CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_set(swigCPtr, this, btTransform.getCPtr(value), value);}
",setTransformA,"[{'value': ['set'], 'probability': 0.31578880548477173}, {'value': ['put'], 'probability': 0.07078658044338226}, {'value': ['execute'], 'probability': 0.04950246214866638}, {'value': ['transform'], 'probability': 0.034543659538030624}, {'value': ['apply'], 'probability': 0.02988051064312458}]","[1.0, 0.7944568, 0.35167885, 0.40315592, 0.5010617]",0.4183331128641532,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
837,837,"public btTransform getTransformA() {long cPtr = CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
","public btTransform [MASK]() {long cPtr = CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
",getTransformA,"[{'value': ['transform'], 'probability': 0.7246606349945068}, {'value': ['create'], 'probability': 0.0347408764064312}, {'value': ['resolve'], 'probability': 0.019098253920674324}, {'value': ['update'], 'probability': 0.017723456025123596}, {'value': ['build'], 'probability': 0.017024435102939606}]","[0.33052462, 0.62328804, 0.427468, 0.36048478, 0.5626448]",0.2853033941792956,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
838,838,"public void setTransformB(btTransform value) {CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_set(swigCPtr, this, btTransform.getCPtr(value), value);}
","public void [MASK](btTransform value) {CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_set(swigCPtr, this, btTransform.getCPtr(value), value);}
",setTransformB,"[{'value': ['set'], 'probability': 0.3157902657985687}, {'value': ['execute'], 'probability': 0.07054752856492996}, {'value': ['put'], 'probability': 0.07018173485994339}, {'value': ['transform'], 'probability': 0.03906187042593956}, {'value': ['apply'], 'probability': 0.02601458691060543}]","[1.0, 0.35167885, 0.7944568, 0.40315592, 0.5010617]",0.4251396314704752,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
839,839,"public btTransform getTransformB() {long cPtr = CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
","public btTransform [MASK]() {long cPtr = CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
",getTransformB,"[{'value': ['transform'], 'probability': 0.5863433480262756}, {'value': ['create'], 'probability': 0.043755874037742615}, {'value': ['build'], 'probability': 0.03420921042561531}, {'value': ['update'], 'probability': 0.02607657015323639}, {'value': ['resolve'], 'probability': 0.02017231099307537}]","[0.33052462, 0.62328804, 0.5626448, 0.36048478, 0.427468]",0.2583442848132894,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
840,840,"public void setMaximumDistanceSquared(float value) {CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_set(swigCPtr, this, value);}
",setMaximumDistanceSquared,"[{'value': ['set'], 'probability': 0.4197111427783966}, {'value': ['put'], 'probability': 0.15715830028057098}, {'value': ['write'], 'probability': 0.01783221960067749}, {'value': ['execute'], 'probability': 0.017649177461862564}, {'value': ['update'], 'probability': 0.01711052469909191}]","[1.0, 0.7944568, 0.46259418, 0.35167885, 0.41854778]",0.566184115508183,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
841,841,"public float getMaximumDistanceSquared() {return CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_get(swigCPtr, this);}
",getMaximumDistanceSquared,"[{'value': ['get'], 'probability': 0.06084549054503441}, {'value': ['next'], 'probability': 0.04086305573582649}, {'value': ['run'], 'probability': 0.040515098720788956}, {'value': ['float'], 'probability': 0.039278097450733185}, {'value': ['bar'], 'probability': 0.03394722938537598}]","[1.0, 0.6966621, 0.65114945, 0.2808844, 0.45318797]",0.1421116985296193,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
842,842,"public void getClosestPoints(btDiscreteCollisionDetectorInterface.ClosestPointInput input, btDiscreteCollisionDetectorInterface.Result output, btIDebugDraw debugDraw, boolean swapResults) {CollisionJNI.btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_0(swigCPtr, this, btDiscreteCollisionDetectorInterface.ClosestPointInput.getCPtr(input), input, btDiscreteCollisionDetectorInterface.Result.getCPtr(output), output, btIDebugDraw.getCPtr(debugDraw), debugDraw, swapResults);}
","public void [MASK](btDiscreteCollisionDetectorInterface.ClosestPointInput input, btDiscreteCollisionDetectorInterface.Result output, btIDebugDraw debugDraw, boolean swapResults) {CollisionJNI.btDiscreteCollisionDetectorInterface_[MASK]__SWIG_0(swigCPtr, this, btDiscreteCollisionDetectorInterface.ClosestPointInput.getCPtr(input), input, btDiscreteCollisionDetectorInterface.Result.getCPtr(output), output, btIDebugDraw.getCPtr(debugDraw), debugDraw, swapResults);}
",getClosestPoints,"[{'value': ['write'], 'probability': 0.1502929925918579}, {'value': ['execute'], 'probability': 0.08895517140626907}, {'value': ['swap'], 'probability': 0.05399017035961151}, {'value': ['output'], 'probability': 0.037752192467451096}, {'value': ['add'], 'probability': 0.03235824033617973}]","[0.60768855, 0.37713256, 0.37135914, 0.23887894, 0.54842544]",0.1716932509459029,"[{'value': ['paint'], 'probability': 0.5814791917800903}, {'value': ['paint', 'component'], 'probability': 0.4175586998462677}, {'value': ['set', 'debug', 'draw'], 'probability': 0.0007978546782396734}, {'value': ['paint', 'border'], 'probability': 4.605216236086562e-05}, {'value': ['paint', 'label'], 'probability': 3.3039737900253385e-05}, {'value': ['draw'], 'probability': 3.2999745599227026e-05}, {'value': ['benchmark'], 'probability': 1.5199228073470294e-05}, {'value': ['calculate', 'length'], 'probability': 1.4074989849177655e-05}, {'value': ['get', 'preferred', 'width'], 'probability': 1.3615329407912213e-05}, {'value': ['expand', 'all'], 'probability': 9.34163745114347e-06}]","[0.41529104, 0.44046658, 0.59170413, 0.5146053, 0.48218605, 0.558067, 0.1898853, 0.40427816, 0.78034776, 0.7440245]",0.42596004214798494
843,843,"public void getClosestPoints(btDiscreteCollisionDetectorInterface.ClosestPointInput input, btDiscreteCollisionDetectorInterface.Result output, btIDebugDraw debugDraw) {CollisionJNI.btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_1(swigCPtr, this, btDiscreteCollisionDetectorInterface.ClosestPointInput.getCPtr(input), input, btDiscreteCollisionDetectorInterface.Result.getCPtr(output), output, btIDebugDraw.getCPtr(debugDraw), debugDraw);}public int floatToIntBits(float f) {return Numbers.floatToIntBits(f);}
","public void [MASK](btDiscreteCollisionDetectorInterface.ClosestPointInput input, btDiscreteCollisionDetectorInterface.Result output, btIDebugDraw debugDraw) {CollisionJNI.btDiscreteCollisionDetectorInterface_[MASK]__SWIG_1(swigCPtr, this, btDiscreteCollisionDetectorInterface.ClosestPointInput.getCPtr(input), input, btDiscreteCollisionDetectorInterface.Result.getCPtr(output), output, btIDebugDraw.getCPtr(debugDraw), debugDraw);}public int floatToIntBits(float f) {return Numbers.floatToIntBits(f);}
",getClosestPoints,"[{'value': ['write'], 'probability': 0.11192754656076431}, {'value': ['output'], 'probability': 0.10120175033807755}, {'value': ['execute'], 'probability': 0.07222975045442581}, {'value': ['process'], 'probability': 0.05164371430873871}, {'value': ['run'], 'probability': 0.04087797552347183}]","[0.60768855, 0.23887894, 0.37713256, 0.52250975, 0.65114945]",0.1730342612826141,"[{'value': ['paint'], 'probability': 0.7389426231384277}, {'value': ['paint', 'component'], 'probability': 0.26042836904525757}, {'value': ['set', 'debug', 'draw'], 'probability': 0.0005151534569449723}, {'value': ['draw'], 'probability': 3.54357180185616e-05}, {'value': ['benchmark'], 'probability': 3.214953176211566e-05}, {'value': ['get', 'preferred', 'width'], 'probability': 1.4218700925994199e-05}, {'value': ['paint', 'label'], 'probability': 1.2811393389711156e-05}, {'value': ['paint', 'border'], 'probability': 7.148848453653045e-06}, {'value': ['export'], 'probability': 6.431402198359137e-06}, {'value': ['expand', 'all'], 'probability': 5.603323643299518e-06}]","[0.41529104, 0.44046658, 0.59170413, 0.558067, 0.1898853, 0.78034776, 0.48218605, 0.5146053, 0.31437963, 0.7440245]",0.42194408492202723
844,844,"public float intBitsToFloat(int i) {return Numbers.intBitsToFloat(i);}
","public float [MASK](int i) {return Numbers.[MASK](i);}
",intBitsToFloat,"[{'value': ['count'], 'probability': 0.06228642538189888}, {'value': ['next'], 'probability': 0.05795648321509361}, {'value': ['value'], 'probability': 0.05370014160871506}, {'value': ['get'], 'probability': 0.047084420919418335}, {'value': ['sum'], 'probability': 0.036091823130846024}]","[-0.046024054, 0.061398543, 0.02937332, 0.018191759, 0.10059379]",0.0067562829697224,"[{'value': ['int', 'bits', 'to', 'float'], 'probability': 0.7681966423988342}, {'value': ['get', 'float'], 'probability': 0.16764713823795319}, {'value': ['read', 'float'], 'probability': 0.01932358741760254}, {'value': ['round'], 'probability': 0.013925826177001}, {'value': ['to', 'float'], 'probability': 0.011026483029127121}, {'value': ['delta'], 'probability': 0.005056984722614288}, {'value': ['exp'], 'probability': 0.004050478804856539}, {'value': ['get', 'd'], 'probability': 0.0037809456698596478}, {'value': ['re'], 'probability': 0.0036654218565672636}, {'value': ['get'], 'probability': 0.0033265308011323214}]","[0.5113602, 0.05365039, 0.07661335, 0.13437998, 0.07797052, 0.12712872, 0.2792079, 0.11116259, 0.066722706, 0.018191759]",0.40853025637082485
845,845,"public void dispose() {spriteBatch.dispose();texture.dispose();texture2.dispose();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK]() {spriteBatch.[MASK]();texture.[MASK]();texture2.[MASK]();}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",dispose,"[{'value': ['destroy'], 'probability': 0.3290068805217743}, {'value': ['run'], 'probability': 0.1477757692337036}, {'value': ['finish'], 'probability': 0.07886697351932526}, {'value': ['clear'], 'probability': 0.0601314939558506}, {'value': ['paint'], 'probability': 0.019982116296887398}]","[0.5099461, 0.13288948, 0.15473744, 0.20622805, 0.259296]",0.2171993804480159,"[{'value': ['dispose'], 'probability': 0.9997536540031433}, {'value': ['removed'], 'probability': 8.060134859988466e-05}, {'value': ['destroy'], 'probability': 6.752888293704018e-05}, {'value': ['hide'], 'probability': 4.061751315020956e-05}, {'value': ['on', 'dispose'], 'probability': 1.841845914896112e-05}, {'value': ['do', 'dispose'], 'probability': 9.36349624680588e-06}, {'value': ['dispose', 'ui', 'resources'], 'probability': 8.609438737039454e-06}, {'value': ['reset'], 'probability': 8.201375749194995e-06}, {'value': ['dispose', 'children'], 'probability': 7.004886811046163e-06}, {'value': ['dispose', 'impl'], 'probability': 5.968295226921327e-06}]","[0.99999994, 0.31762415, 0.5099461, 0.4591369, 0.66587484, 0.72280186, 0.5923022, 0.15166157, 0.68344325, 0.99999994]",0.9998684113438726
846,846,"public static long getCPtr(HullDesc obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](HullDesc obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08310249447822571}, {'value': ['read'], 'probability': 0.05818832293152809}, {'value': ['execute'], 'probability': 0.045916587114334106}, {'value': ['run'], 'probability': 0.03540671616792679}, {'value': ['update'], 'probability': 0.03293744474649429}]","[1.0, 0.5726487, 0.37713256, 0.65114945, 0.36048478]",0.1686691137671843,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
847,847,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
848,848,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.delete_HullDesc(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;LinearMathJNI.[MASK]_HullDesc(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7576358318328857}, {'value': ['start'], 'probability': 0.01573590189218521}, {'value': ['execute'], 'probability': 0.013074490241706371}, {'value': ['clear'], 'probability': 0.012630726210772991}, {'value': ['test'], 'probability': 0.012007076293230057}]","[0.13931048, 0.15163165, 0.33713183, 0.18840031, 0.14537679]",0.1164656813236666,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
849,849,"public boolean HasHullFlag(int flag) {return LinearMathJNI.HullDesc_HasHullFlag(swigCPtr, this, flag);}
","public boolean [MASK](int flag) {return LinearMathJNI.HullDesc_[MASK](swigCPtr, this, flag);}
",HasHullFlag,"[{'value': ['matches'], 'probability': 0.11904440820217133}, {'value': ['accepts'], 'probability': 0.08374558389186859}, {'value': ['supports'], 'probability': 0.08179516345262527}, {'value': ['flags'], 'probability': 0.07154005020856857}, {'value': ['execute'], 'probability': 0.05133907496929169}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'flag'], 'probability': 0.6580568552017212}, {'value': ['has', 'flag'], 'probability': 0.0974789708852768}, {'value': ['is'], 'probability': 0.059297624975442886}, {'value': ['add', 'flag'], 'probability': 0.05371566489338875}, {'value': ['is', 'set'], 'probability': 0.04285674914717674}, {'value': ['flag'], 'probability': 0.031774137169122696}, {'value': ['is', 'flag'], 'probability': 0.0279192216694355}, {'value': ['extracted'], 'probability': 0.015078075230121613}, {'value': ['get', 'flags'], 'probability': 0.008260748349130154}, {'value': ['unset', 'flag'], 'probability': 0.005562106147408485}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
850,850,"public void SetHullFlag(int flag) {LinearMathJNI.HullDesc_SetHullFlag(swigCPtr, this, flag);}
","public void [MASK](int flag) {LinearMathJNI.HullDesc_[MASK](swigCPtr, this, flag);}
",SetHullFlag,"[{'value': ['flag'], 'probability': 0.13277018070220947}, {'value': ['execute'], 'probability': 0.07865983247756958}, {'value': ['run'], 'probability': 0.061021097004413605}, {'value': ['set'], 'probability': 0.04178895056247711}, {'value': ['write'], 'probability': 0.04157302901148796}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['add', 'flag'], 'probability': 0.7325719594955444}, {'value': ['get', 'flag'], 'probability': 0.054527390748262405}, {'value': ['remove', 'error'], 'probability': 0.04262128844857216}, {'value': ['reinit'], 'probability': 0.032889727503061295}, {'value': ['set', 'flag'], 'probability': 0.03273676708340645}, {'value': ['foo'], 'probability': 0.024070166051387787}, {'value': ['clear', 'flag'], 'probability': 0.023185569792985916}, {'value': ['set', 'accessible'], 'probability': 0.022891728207468987}, {'value': ['flag'], 'probability': 0.01838591694831848}, {'value': ['delete', 'id'], 'probability': 0.016119450330734253}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
851,851,"public void ClearHullFlag(int flag) {LinearMathJNI.HullDesc_ClearHullFlag(swigCPtr, this, flag);}
","public void [MASK](int flag) {LinearMathJNI.HullDesc_[MASK](swigCPtr, this, flag);}
",ClearHullFlag,"[{'value': ['flag'], 'probability': 0.13277018070220947}, {'value': ['execute'], 'probability': 0.07865983247756958}, {'value': ['run'], 'probability': 0.061021097004413605}, {'value': ['set'], 'probability': 0.04178895056247711}, {'value': ['write'], 'probability': 0.04157302901148796}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['add', 'flag'], 'probability': 0.7325719594955444}, {'value': ['get', 'flag'], 'probability': 0.054527390748262405}, {'value': ['remove', 'error'], 'probability': 0.04262128844857216}, {'value': ['reinit'], 'probability': 0.032889727503061295}, {'value': ['set', 'flag'], 'probability': 0.03273676708340645}, {'value': ['foo'], 'probability': 0.024070166051387787}, {'value': ['clear', 'flag'], 'probability': 0.023185569792985916}, {'value': ['set', 'accessible'], 'probability': 0.022891728207468987}, {'value': ['flag'], 'probability': 0.01838591694831848}, {'value': ['delete', 'id'], 'probability': 0.016119450330734253}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
852,852,"public void setMFlags(long value) {LinearMathJNI.HullDesc_mFlags_set(swigCPtr, this, value);}
","public void [MASK](long value) {LinearMathJNI.HullDesc_mFlags_set(swigCPtr, this, value);}
",setMFlags,"[{'value': ['set'], 'probability': 0.39169207215309143}, {'value': ['put'], 'probability': 0.08125531673431396}, {'value': ['read'], 'probability': 0.03412310779094696}, {'value': ['execute'], 'probability': 0.03410166874527931}, {'value': ['run'], 'probability': 0.023893551900982857}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.67632943]",0.5008472612875218,"[{'value': ['set', 'id'], 'probability': 0.26016372442245483}, {'value': ['set', 'ea'], 'probability': 0.2198936492204666}, {'value': ['set', 'flags'], 'probability': 0.1422407180070877}, {'value': ['set'], 'probability': 0.09099960327148438}, {'value': ['set', 'code'], 'probability': 0.05966061353683472}, {'value': ['set', 'value'], 'probability': 0.059029798954725266}, {'value': ['set', 'dirty'], 'probability': 0.05053127929568291}, {'value': ['set', 'size'], 'probability': 0.04212723299860954}, {'value': ['set', 'to'], 'probability': 0.03775933012366295}, {'value': ['extend'], 'probability': 0.03759397566318512}]","[0.7939222, 0.73357886, 0.7786614, 1.0, 0.852165, 0.8399167, 0.7950754, 0.8344828, 0.9136955, 0.5463553]",0.8004076758523968
853,853,"public long getMFlags() {return LinearMathJNI.HullDesc_mFlags_get(swigCPtr, this);}
","public long [MASK]() {return LinearMathJNI.HullDesc_mFlags_get(swigCPtr, this);}
",getMFlags,"[{'value': ['run'], 'probability': 0.11956606805324554}, {'value': ['get'], 'probability': 0.09462433308362961}, {'value': ['list'], 'probability': 0.045191872864961624}, {'value': ['read'], 'probability': 0.03354654833674431}, {'value': ['build'], 'probability': 0.028669677674770355}]","[0.65114945, 1.0, 0.48067126, 0.5726487, 0.5626448]",0.2295433789779318,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
854,854,"public void setMVcount(long value) {LinearMathJNI.HullDesc_mVcount_set(swigCPtr, this, value);}
","public void [MASK](long value) {LinearMathJNI.HullDesc_mVcount_set(swigCPtr, this, value);}
",setMVcount,"[{'value': ['set'], 'probability': 0.4332716166973114}, {'value': ['put'], 'probability': 0.07407400757074356}, {'value': ['execute'], 'probability': 0.03908029571175575}, {'value': ['read'], 'probability': 0.035134363919496536}, {'value': ['run'], 'probability': 0.024314964190125465}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.67632943]",0.5392449203790062,"[{'value': ['set', 'id'], 'probability': 0.26016372442245483}, {'value': ['set', 'ea'], 'probability': 0.2198936492204666}, {'value': ['set', 'flags'], 'probability': 0.1422407180070877}, {'value': ['set'], 'probability': 0.09099960327148438}, {'value': ['set', 'code'], 'probability': 0.05966061353683472}, {'value': ['set', 'value'], 'probability': 0.059029798954725266}, {'value': ['set', 'dirty'], 'probability': 0.05053127929568291}, {'value': ['set', 'size'], 'probability': 0.04212723299860954}, {'value': ['set', 'to'], 'probability': 0.03775933012366295}, {'value': ['extend'], 'probability': 0.03759397566318512}]","[0.7939222, 0.73357886, 0.7786614, 1.0, 0.852165, 0.8399167, 0.7950754, 0.8344828, 0.9136955, 0.5463553]",0.8004076758523968
855,855,"public long getMVcount() {return LinearMathJNI.HullDesc_mVcount_get(swigCPtr, this);}
","public long [MASK]() {return LinearMathJNI.HullDesc_mVcount_get(swigCPtr, this);}
",getMVcount,"[{'value': ['run'], 'probability': 0.15613026916980743}, {'value': ['get'], 'probability': 0.08514721691608429}, {'value': ['read'], 'probability': 0.03646175563335419}, {'value': ['list'], 'probability': 0.03258781135082245}, {'value': ['execute'], 'probability': 0.03126067668199539}]","[0.65114945, 1.0, 0.5726487, 0.48067126, 0.37713256]",0.2351445766074389,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
856,856,"public void setMVertices(btVector3 value) {LinearMathJNI.HullDesc_mVertices_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {LinearMathJNI.HullDesc_mVertices_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setMVertices,"[{'value': ['set'], 'probability': 0.3774987459182739}, {'value': ['put'], 'probability': 0.07263385504484177}, {'value': ['execute'], 'probability': 0.03654569387435913}, {'value': ['add'], 'probability': 0.028706993907690048}, {'value': ['update'], 'probability': 0.021346189081668854}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.41854778]",0.471587110560896,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
857,857,"public btVector3 getMVertices() {long cPtr = LinearMathJNI.HullDesc_mVertices_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = LinearMathJNI.HullDesc_mVertices_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getMVertices,"[{'value': ['clone'], 'probability': 0.11984063684940338}, {'value': ['get'], 'probability': 0.10720237344503403}, {'value': ['build'], 'probability': 0.03618088737130165}, {'value': ['create'], 'probability': 0.023315489292144775}, {'value': ['run'], 'probability': 0.02068774402141571}]","[0.166604, 1.0, 0.5626448, 0.62328804, 0.65114945]",0.1755283686850659,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
858,858,"public void setMVertexStride(long value) {LinearMathJNI.HullDesc_mVertexStride_set(swigCPtr, this, value);}
","public void [MASK](long value) {LinearMathJNI.HullDesc_mVertexStride_set(swigCPtr, this, value);}
",setMVertexStride,"[{'value': ['set'], 'probability': 0.5086207389831543}, {'value': ['put'], 'probability': 0.06297130137681961}, {'value': ['read'], 'probability': 0.02790755033493042}, {'value': ['execute'], 'probability': 0.027049699798226357}, {'value': ['run'], 'probability': 0.01631069928407669}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.67632943]",0.5926454041431262,"[{'value': ['set', 'id'], 'probability': 0.26016372442245483}, {'value': ['set', 'ea'], 'probability': 0.2198936492204666}, {'value': ['set', 'flags'], 'probability': 0.1422407180070877}, {'value': ['set'], 'probability': 0.09099960327148438}, {'value': ['set', 'code'], 'probability': 0.05966061353683472}, {'value': ['set', 'value'], 'probability': 0.059029798954725266}, {'value': ['set', 'dirty'], 'probability': 0.05053127929568291}, {'value': ['set', 'size'], 'probability': 0.04212723299860954}, {'value': ['set', 'to'], 'probability': 0.03775933012366295}, {'value': ['extend'], 'probability': 0.03759397566318512}]","[0.7939222, 0.73357886, 0.7786614, 1.0, 0.852165, 0.8399167, 0.7950754, 0.8344828, 0.9136955, 0.5463553]",0.8004076758523968
859,859,"public long getMVertexStride() {return LinearMathJNI.HullDesc_mVertexStride_get(swigCPtr, this);}
","public long [MASK]() {return LinearMathJNI.HullDesc_mVertexStride_get(swigCPtr, this);}
",getMVertexStride,"[{'value': ['run'], 'probability': 0.16619250178337097}, {'value': ['get'], 'probability': 0.0934133306145668}, {'value': ['read'], 'probability': 0.0342426523566246}, {'value': ['execute'], 'probability': 0.031657833606004715}, {'value': ['list'], 'probability': 0.026647130027413368}]","[0.65114945, 1.0, 0.5726487, 0.37713256, 0.48067126]",0.2459862069913896,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
860,860,"public void setMNormalEpsilon(float value) {LinearMathJNI.HullDesc_mNormalEpsilon_set(swigCPtr, this, value);}
","public void [MASK](float value) {LinearMathJNI.HullDesc_mNormalEpsilon_set(swigCPtr, this, value);}
",setMNormalEpsilon,"[{'value': ['set'], 'probability': 0.5565021634101868}, {'value': ['put'], 'probability': 0.12024958431720734}, {'value': ['add'], 'probability': 0.014920348301529884}, {'value': ['write'], 'probability': 0.013354669325053692}, {'value': ['accept'], 'probability': 0.011449760757386684}]","[1.0, 0.7944568, 0.5084879, 0.46259418, 0.44626972]",0.6709095510974065,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
861,861,"public float getMNormalEpsilon() {return LinearMathJNI.HullDesc_mNormalEpsilon_get(swigCPtr, this);}
","public float [MASK]() {return LinearMathJNI.HullDesc_mNormalEpsilon_get(swigCPtr, this);}
",getMNormalEpsilon,"[{'value': ['get'], 'probability': 0.0718161016702652}, {'value': ['run'], 'probability': 0.04890735074877739}, {'value': ['bar'], 'probability': 0.04573449864983559}, {'value': ['next'], 'probability': 0.03510256111621857}, {'value': ['start'], 'probability': 0.030060453340411186}]","[1.0, 0.65114945, 0.45318797, 0.6966621, 0.7199945]",0.1704864065611793,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
862,862,"public void setMMaxVertices(long value) {LinearMathJNI.HullDesc_mMaxVertices_set(swigCPtr, this, value);}
","public void [MASK](long value) {LinearMathJNI.HullDesc_mMaxVertices_set(swigCPtr, this, value);}
",setMMaxVertices,"[{'value': ['set'], 'probability': 0.45829081535339355}, {'value': ['put'], 'probability': 0.07358263432979584}, {'value': ['execute'], 'probability': 0.03259655833244324}, {'value': ['read'], 'probability': 0.031660839915275574}, {'value': ['run'], 'probability': 0.01862367056310177}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.67632943]",0.5560699941131787,"[{'value': ['set', 'id'], 'probability': 0.26016372442245483}, {'value': ['set', 'ea'], 'probability': 0.2198936492204666}, {'value': ['set', 'flags'], 'probability': 0.1422407180070877}, {'value': ['set'], 'probability': 0.09099960327148438}, {'value': ['set', 'code'], 'probability': 0.05966061353683472}, {'value': ['set', 'value'], 'probability': 0.059029798954725266}, {'value': ['set', 'dirty'], 'probability': 0.05053127929568291}, {'value': ['set', 'size'], 'probability': 0.04212723299860954}, {'value': ['set', 'to'], 'probability': 0.03775933012366295}, {'value': ['extend'], 'probability': 0.03759397566318512}]","[0.7939222, 0.73357886, 0.7786614, 1.0, 0.852165, 0.8399167, 0.7950754, 0.8344828, 0.9136955, 0.5463553]",0.8004076758523968
863,863,"public long getMMaxVertices() {return LinearMathJNI.HullDesc_mMaxVertices_get(swigCPtr, this);}
","public long [MASK]() {return LinearMathJNI.HullDesc_mMaxVertices_get(swigCPtr, this);}
",getMMaxVertices,"[{'value': ['run'], 'probability': 0.18803614377975464}, {'value': ['get'], 'probability': 0.08771805465221405}, {'value': ['read'], 'probability': 0.03970584645867348}, {'value': ['execute'], 'probability': 0.03013899363577366}, {'value': ['id'], 'probability': 0.02605210244655609}]","[0.65114945, 1.0, 0.5726487, 0.37713256, 0.2945777]",0.2519359521736988,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
864,864,"public void setMMaxFaces(long value) {LinearMathJNI.HullDesc_mMaxFaces_set(swigCPtr, this, value);}
","public void [MASK](long value) {LinearMathJNI.HullDesc_mMaxFaces_set(swigCPtr, this, value);}
",setMMaxFaces,"[{'value': ['set'], 'probability': 0.38826191425323486}, {'value': ['put'], 'probability': 0.08282449841499329}, {'value': ['read'], 'probability': 0.03833344951272011}, {'value': ['execute'], 'probability': 0.034834470599889755}, {'value': ['run'], 'probability': 0.026859628036618233}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.67632943]",0.5029570468207234,"[{'value': ['set', 'id'], 'probability': 0.26016372442245483}, {'value': ['set', 'ea'], 'probability': 0.2198936492204666}, {'value': ['set', 'flags'], 'probability': 0.1422407180070877}, {'value': ['set'], 'probability': 0.09099960327148438}, {'value': ['set', 'code'], 'probability': 0.05966061353683472}, {'value': ['set', 'value'], 'probability': 0.059029798954725266}, {'value': ['set', 'dirty'], 'probability': 0.05053127929568291}, {'value': ['set', 'size'], 'probability': 0.04212723299860954}, {'value': ['set', 'to'], 'probability': 0.03775933012366295}, {'value': ['extend'], 'probability': 0.03759397566318512}]","[0.7939222, 0.73357886, 0.7786614, 1.0, 0.852165, 0.8399167, 0.7950754, 0.8344828, 0.9136955, 0.5463553]",0.8004076758523968
865,865,"public long getMMaxFaces() {return LinearMathJNI.HullDesc_mMaxFaces_get(swigCPtr, this);}public boolean tap(float stageX, float stageY, int count, int button) {actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));ActorGestureListener.this.tap(event, tmpCoords.x, tmpCoords.y, count, button);return true;}
","public long [MASK]() {return LinearMathJNI.HullDesc_mMaxFaces_get(swigCPtr, this);}public boolean tap(float stageX, float stageY, int count, int button) {actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));ActorGestureListener.this.tap(event, tmpCoords.x, tmpCoords.y, count, button);return true;}
",getMMaxFaces,"[{'value': ['run'], 'probability': 0.06980454176664352}, {'value': ['start'], 'probability': 0.05259077623486519}, {'value': ['get'], 'probability': 0.040680378675460815}, {'value': ['bar'], 'probability': 0.027139732614159584}, {'value': ['next'], 'probability': 0.02552962861955166}]","[0.65114945, 0.7199945, 1.0, 0.45318797, 0.6966621]",0.1540835624389173,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
866,866,"public boolean longPress(float stageX, float stageY) {actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));return ActorGestureListener.this.longPress(actor, tmpCoords.x, tmpCoords.y);}
","public boolean [MASK](float stageX, float stageY) {actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));return ActorGestureListener.this.[MASK](actor, tmpCoords.x, tmpCoords.y);}
",longPress,"[{'value': ['set'], 'probability': 0.2556677460670471}, {'value': ['cast'], 'probability': 0.0657760426402092}, {'value': ['show'], 'probability': 0.05405942350625992}, {'value': ['add'], 'probability': 0.04619491472840309}, {'value': ['fill'], 'probability': 0.030929027125239372}]","[0.6573565, 0.49007362, 0.5351203, 0.42694214, 0.41108376]",0.2616652301088331,"[{'value': ['is', 'of', 'type'], 'probability': 0.5076059699058533}, {'value': ['on', 'key', 'up'], 'probability': 0.16178636252880096}, {'value': ['bind', 'key'], 'probability': 0.12750135362148285}, {'value': ['get', 'relative', 'x'], 'probability': 0.05343473330140114}, {'value': ['long', 'press'], 'probability': 0.05273383855819702}, {'value': ['on', 'long', 'press'], 'probability': 0.031762972474098206}, {'value': ['get', 'binding'], 'probability': 0.02010202966630459}, {'value': ['execute', 'operation'], 'probability': 0.01603103056550026}, {'value': ['has', 'binding'], 'probability': 0.015302227810025215}, {'value': ['source', 'type'], 'probability': 0.013739556074142456}]","[0.694805, 0.7174524, 0.49055958, 0.62031317, 0.84425265, 0.8266283, 0.5652614, 0.47455674, 0.6060572, 0.5296084]",0.670752458860382
867,867,"public boolean fling(float velocityX, float velocityY, int button) {stageToLocalAmount(tmpCoords.set(velocityX, velocityY));ActorGestureListener.this.fling(event, tmpCoords.x, tmpCoords.y, button);return true;}
","public boolean [MASK](float velocityX, float velocityY, int button) {stageToLocalAmount(tmpCoords.set(velocityX, velocityY));ActorGestureListener.this.[MASK](event, tmpCoords.x, tmpCoords.y, button);return true;}
",fling,"[{'value': ['start'], 'probability': 0.1280909925699234}, {'value': ['set'], 'probability': 0.08471862971782684}, {'value': ['stage'], 'probability': 0.057765260338783264}, {'value': ['cancel'], 'probability': 0.029772605746984482}, {'value': ['stages'], 'probability': 0.0263535063713789}]","[0.19245602, 0.13067406, 0.19825123, 0.15351781, 0.08142842]",0.0538909943698001,"[{'value': ['fling'], 'probability': 0.999382734298706}, {'value': ['on', 'fling'], 'probability': 0.0004711243964266032}, {'value': ['check', 'equal'], 'probability': 7.258712139446288e-05}, {'value': ['do', 'fling'], 'probability': 1.8053275198326446e-05}, {'value': ['get', 'velocity', 'x'], 'probability': 1.5559320672764443e-05}, {'value': ['on', 'touch', 'event'], 'probability': 9.969252459995914e-06}, {'value': ['fling', 'scroll'], 'probability': 8.768609404796734e-06}, {'value': ['ceil'], 'probability': 7.82899405749049e-06}, {'value': ['add', 'order'], 'probability': 7.047522558423225e-06}, {'value': ['data', 'received'], 'probability': 6.256872893573018e-06}]","[1.0, 0.5480093, 0.022024306, 0.6065893, 0.046806406, 0.1938948, 0.6189395, 0.0421821, 0.09296956, -0.10731338]",0.9996618669570595
868,868,"public boolean pan(float stageX, float stageY, float deltaX, float deltaY) {stageToLocalAmount(tmpCoords.set(deltaX, deltaY));deltaX = tmpCoords.x;deltaY = tmpCoords.y;actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));ActorGestureListener.this.pan(event, tmpCoords.x, tmpCoords.y, deltaX, deltaY);return true;}
","public boolean [MASK](float stageX, float stageY, float deltaX, float deltaY) {stageToLocalAmount(tmpCoords.set(deltaX, deltaY));deltaX = tmpCoords.x;deltaY = tmpCoords.y;actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));ActorGestureListener.this.[MASK](event, tmpCoords.x, tmpCoords.y, deltaX, deltaY);return true;}
",pan,"[{'value': ['stage'], 'probability': 0.15271782875061035}, {'value': ['stages'], 'probability': 0.09255987405776978}, {'value': ['perform'], 'probability': 0.08564618974924088}, {'value': ['execute'], 'probability': 0.05245927348732948}, {'value': ['show'], 'probability': 0.049247052520513535}]","[0.27621067, 0.15014008, 0.092287436, 0.0777337, 0.22935498]",0.0793562172273195,"[{'value': ['dragged'], 'probability': 0.79935622215271}, {'value': ['pan'], 'probability': 0.04039176180958748}, {'value': ['translated'], 'probability': 0.03983314335346222}, {'value': ['offset', 'location'], 'probability': 0.027850056067109108}, {'value': ['move', 'svek'], 'probability': 0.018142469227313995}, {'value': ['process', 'element'], 'probability': 0.01686248928308487}, {'value': ['node', 'added'], 'probability': 0.01574726030230522}, {'value': ['translate'], 'probability': 0.015741975978016853}, {'value': ['move', 'by'], 'probability': 0.0145975137129426}, {'value': ['check', 'contains'], 'probability': 0.01147717610001564}]","[0.10464764, 1.0000001, 0.17794406, 0.13476212, 0.30187675, 0.24584292, 0.2412826, 0.088558696, 0.33413342, 0.24785332]",0.15742182727080828
869,869,"public boolean zoom(float initialDistance, float distance) {ActorGestureListener.this.zoom(event, initialDistance, distance);return true;}
","public boolean [MASK](float initialDistance, float distance) {ActorGestureListener.this.[MASK](event, initialDistance, distance);return true;}
",zoom,"[{'value': ['execute'], 'probability': 0.07312063127756119}, {'value': ['equals'], 'probability': 0.056868091225624084}, {'value': ['accept'], 'probability': 0.050021398812532425}, {'value': ['accepts'], 'probability': 0.04293316602706909}, {'value': ['process'], 'probability': 0.037235014140605927}]","[0.12008558, 0.14066128, 0.016160408, -0.031021, 0.01950966]",0.0169828512280768,"[{'value': ['zoom'], 'probability': 0.9999973773956299}, {'value': ['disabled'], 'probability': 1.2729474292427767e-06}, {'value': ['shift'], 'probability': 7.827263175386179e-07}, {'value': ['duration'], 'probability': 1.074392983468897e-07}, {'value': ['remove', 'effect'], 'probability': 9.399843747814884e-08}, {'value': ['enabled'], 'probability': 9.3878924189994e-08}, {'value': ['touch', 'down'], 'probability': 8.901919557047222e-08}, {'value': ['contains'], 'probability': 7.26676816498184e-08}, {'value': ['filter'], 'probability': 5.7561450717003027e-08}, {'value': ['loop'], 'probability': 5.1509839948948866e-08}]","[1.0, -0.11618995, 0.1825131, 0.13108383, 0.1487159, 0.28486538, 0.23360798, 0.025933333, 0.3321674, 0.3057965]",0.9999974847068867
870,870,"public boolean pinch(Vector2 stageInitialPointer1, Vector2 stageInitialPointer2, Vector2 stagePointer1, Vector2 stagePointer2) {actor.stageToLocalCoordinates(initialPointer1.set(stageInitialPointer1));actor.stageToLocalCoordinates(initialPointer2.set(stageInitialPointer2));actor.stageToLocalCoordinates(pointer1.set(stagePointer1));actor.stageToLocalCoordinates(pointer2.set(stagePointer2));ActorGestureListener.this.pinch(event, initialPointer1, initialPointer2, pointer1, pointer2);return true;}
","public boolean [MASK](Vector2 stageInitialPointer1, Vector2 stageInitialPointer2, Vector2 stagePointer1, Vector2 stagePointer2) {actor.stageToLocalCoordinates(initialPointer1.set(stageInitialPointer1));actor.stageToLocalCoordinates(initialPointer2.set(stageInitialPointer2));actor.stageToLocalCoordinates(pointer1.set(stagePointer1));actor.stageToLocalCoordinates(pointer2.set(stagePointer2));ActorGestureListener.this.[MASK](event, initialPointer1, initialPointer2, pointer1, pointer2);return true;}
",pinch,"[{'value': ['perform'], 'probability': 0.10356492549180984}, {'value': ['execute'], 'probability': 0.07325728982686996}, {'value': ['stage'], 'probability': 0.06466955691576004}, {'value': ['show'], 'probability': 0.06068616732954979}, {'value': ['stages'], 'probability': 0.030938344076275826}]","[0.12924604, 0.12955776, 0.087371506, 0.080804095, 0.023961319]",0.0341716977919096,"[{'value': ['apply', 'force'], 'probability': 0.26259946823120117}, {'value': ['assign'], 'probability': 0.2570764422416687}, {'value': ['set', 'limits'], 'probability': 0.12056402117013931}, {'value': ['callback'], 'probability': 0.09392526000738144}, {'value': ['add', 'tri'], 'probability': 0.07239841669797897}, {'value': ['on', 'tap'], 'probability': 0.06403809040784836}, {'value': ['reflect'], 'probability': 0.05286486819386482}, {'value': ['synchronize'], 'probability': 0.026901058852672577}, {'value': ['set'], 'probability': 0.024950265884399414}, {'value': ['initialise'], 'probability': 0.024682102724909782}]","[0.14074169, 0.12918818, 0.15731984, -0.036564082, 0.233678, 0.2834727, 0.08993385, 0.040165305, 0.20752828, 0.0]",0.13178643598999523
871,871,"private void stageToLocalAmount(Vector2 amount) {actor.stageToLocalCoordinates(amount);amount.sub(actor.stageToLocalCoordinates(tmpCoords2.set(0, 0)));}
","private void [MASK](Vector2 amount) {actor.stageToLocalCoordinates(amount);amount.sub(actor.stageToLocalCoordinates(tmpCoords2.set(0, 0)));}
",stageToLocalAmount,"[{'value': ['sub'], 'probability': 0.2126086950302124}, {'value': ['min'], 'probability': 0.0961093008518219}, {'value': ['add'], 'probability': 0.05618229880928993}, {'value': ['fill'], 'probability': 0.04108065366744995}, {'value': ['stage'], 'probability': 0.037294793874025345}]","[0.26526514, 0.10152216, 0.3338719, 0.3800104, 1.0]",0.1378184589298292,"[{'value': ['subtract'], 'probability': 0.5356915593147278}, {'value': ['deposit'], 'probability': 0.1621057540178299}, {'value': ['mult'], 'probability': 0.049727290868759155}, {'value': ['amount'], 'probability': 0.04698755592107773}, {'value': ['substract'], 'probability': 0.04676675796508789}, {'value': ['inc'], 'probability': 0.0362471342086792}, {'value': ['lighten'], 'probability': 0.0350775271654129}, {'value': ['divide'], 'probability': 0.030450085178017616}, {'value': ['plus'], 'probability': 0.02918458729982376}, {'value': ['withdraw'], 'probability': 0.02776181511580944}]","[-0.16514449, 0.049139712, -0.2743838, 0.31311655, 0.0, 0.004632123, -0.011406002, 0.2514616, 0.36616278, 0.32883674]",-0.052192212547621346
872,872,"public boolean longPress(Actor actor, float x, float y) {return false;}
","public boolean [MASK](Actor actor, float x, float y) {return false;}
",longPress,"[{'value': ['equals'], 'probability': 0.24091842770576477}, {'value': ['is'], 'probability': 0.07244902104139328}, {'value': ['matches'], 'probability': 0.04594225808978081}, {'value': ['match'], 'probability': 0.03162308782339096}, {'value': ['apply'], 'probability': 0.027530428022146225}]","[0.1916152, 0.67795545, 0.35412797, 0.42750204, 0.3818878]",0.1355827474372787,"[{'value': ['contains'], 'probability': 0.6702088713645935}, {'value': ['is', 'inside'], 'probability': 0.24269190430641174}, {'value': ['contains', 'point'], 'probability': 0.05127114802598953}, {'value': ['overlaps'], 'probability': 0.01125330664217472}, {'value': ['is', 'outside'], 'probability': 0.010524927638471127}, {'value': ['hit'], 'probability': 0.0032041745726019144}, {'value': ['on', 'move'], 'probability': 0.0030102357268333435}, {'value': ['intersects', 'line'], 'probability': 0.002892922842875123}, {'value': ['mouse', 'up'], 'probability': 0.002513923216611147}, {'value': ['should', 'format'], 'probability': 0.002428569830954075}]","[0.35730767, 0.71509993, 0.6163192, 0.09797537, 0.70208025, 0.46824354, 0.6965041, 0.4893469, 0.58057404, 0.5866055]",0.46100776703934265
873,873,"public GestureDetector getGestureDetector() {return detector;}
","public GestureDetector [MASK]() {return detector;}
",getGestureDetector,"[{'value': ['detector'], 'probability': 0.9894846081733704}, {'value': ['detect'], 'probability': 0.0019271898781880736}, {'value': ['method'], 'probability': 0.0006501453462988138}, {'value': ['detection'], 'probability': 0.0005683234776370227}, {'value': ['probe'], 'probability': 0.0003572477726265788}]","[0.18299247, 0.3287646, 0.32441333, 0.2141832, 0.2668973]",0.1821298170908999,"[{'value': ['get', 'detector'], 'probability': 0.9999996423721313}, {'value': ['get', 'wrapper'], 'probability': 1.3674141996489197e-07}, {'value': ['get', 'default'], 'probability': 7.114565647725613e-08}, {'value': ['get', 'image', 'service'], 'probability': 3.643543422526818e-08}, {'value': ['detector'], 'probability': 1.9713789711772733e-08}, {'value': ['get', 'reducer'], 'probability': 1.2333844168210817e-08}, {'value': ['on', 'scale'], 'probability': 1.2326412779373186e-08}, {'value': ['get', 'deployment'], 'probability': 1.0368641056857086e-08}, {'value': ['get', 'shared', 'instance'], 'probability': 9.598794648013609e-09}, {'value': ['get', 'wrapper', 'class'], 'probability': 7.1143317903477055e-09}]","[0.7907176, 0.8049742, 0.81827337, 0.81130254, 0.18299247, 0.7591879, 0.5657894, 0.7970019, 0.87239856, 0.78000134]",0.7907175571997452
874,874,"public Single copy() {return new Single(this);}
","public Single [MASK]() {return new Single(this);}
",copy,"[{'value': ['get'], 'probability': 0.23078034818172455}, {'value': ['clone'], 'probability': 0.2152334451675415}, {'value': ['create'], 'probability': 0.059756312519311905}, {'value': ['Single'], 'probability': 0.030931266024708748}, {'value': ['apply'], 'probability': 0.0226915180683136}]","[0.4466728, 0.31505513, 0.3987844, 0.0, 0.38936093]",0.2035587809776391,"[{'value': ['deep', 'copy'], 'probability': 0.496559202671051}, {'value': ['build'], 'probability': 0.20625968277454376}, {'value': ['derive'], 'probability': 0.07470159232616425}, {'value': ['single'], 'probability': 0.05047977343201637}, {'value': ['clone'], 'probability': 0.048592571169137955}, {'value': ['append'], 'probability': 0.03588729724287987}, {'value': ['to', 'stream'], 'probability': 0.02685471996665001}, {'value': ['iterable'], 'probability': 0.02607285976409912}, {'value': ['get', 'single'], 'probability': 0.0193933192640543}, {'value': ['iterator'], 'probability': 0.015198927372694016}]","[0.7110269, 0.28695282, 0.1808632, 0.44771206, 0.31505513, 0.11656992, 0.4197073, 0.0, 0.50899684, -0.1069142]",0.4873749178173264
875,875,"public Random copy() {return new Random(this);}
","public Random [MASK]() {return new Random(this);}
",copy,"[{'value': ['clone'], 'probability': 0.3033756613731384}, {'value': ['get'], 'probability': 0.053949370980262756}, {'value': ['create'], 'probability': 0.050886135548353195}, {'value': ['build'], 'probability': 0.04873310402035713}, {'value': ['next'], 'probability': 0.04226678982377052}]","[0.31505513, 0.4466728, 0.3987844, 0.28695282, 0.38787416]",0.1703486696711538,"[{'value': ['build'], 'probability': 0.7182536125183105}, {'value': ['deep', 'copy'], 'probability': 0.23989337682724}, {'value': ['new', 'directory'], 'probability': 0.01695038005709648}, {'value': ['clone'], 'probability': 0.014518657699227333}, {'value': ['year'], 'probability': 0.0024184128269553185}, {'value': ['new', 'sax', 'parser'], 'probability': 0.0023442073725163937}, {'value': ['init', 'binder'], 'probability': 0.001717879087664187}, {'value': ['pre'], 'probability': 0.0014109935145825148}, {'value': ['fork'], 'probability': 0.0013349427608773112}, {'value': ['get', 'default', 'properties'], 'probability': 0.0011575630633160472}]","[0.28695282, 0.7110269, 0.5607485, 0.31505513, 0.3160656, 0.279611, 0.13188265, 0.3670758, 0.10454777, 0.4621373]",0.39359348306946806
876,876,"public void allocateChannels() {super.allocateChannels();lifeChannel = controller.particles.addChannel(ParticleChannels.Life);}
","public void [MASK]() {super.[MASK]();lifeChannel = controller.particles.addChannel(ParticleChannels.Life);}
",allocateChannels,"[{'value': ['run'], 'probability': 0.6857656836509705}, {'value': ['execute'], 'probability': 0.09997867792844772}, {'value': ['test'], 'probability': 0.024743013083934784}, {'value': ['start'], 'probability': 0.02187940664589405}, {'value': ['close'], 'probability': 0.019006403163075447}]","[0.20610183, 0.37620628, -0.0021149605, 0.15805367, 0.14622721]",0.1851352152732727,"[{'value': ['initialise'], 'probability': 0.6139881610870361}, {'value': ['setup'], 'probability': 0.19621789455413818}, {'value': ['spawn'], 'probability': 0.050242867320775986}, {'value': ['init', 'config'], 'probability': 0.04706427454948425}, {'value': ['load', 'icons'], 'probability': 0.029257088899612427}, {'value': ['on', 'reload'], 'probability': 0.013670504093170166}, {'value': ['init', 'controller'], 'probability': 0.013163242489099503}, {'value': ['start', 'test'], 'probability': 0.012268085964024067}, {'value': ['init'], 'probability': 0.012186344712972641}, {'value': ['set', 'up'], 'probability': 0.011941536329686642}]","[0.0, 0.07926496, 0.111731954, 0.08177414, 0.20104273, 0.24641228, 0.14314203, 0.08153262, 0.08748636, 0.28115574]",0.04157411585247439
877,877,"public Animated copy() {return new Animated(this);}
","public Animated [MASK]() {return new Animated(this);}
",copy,"[{'value': ['create'], 'probability': 0.3680691421031952}, {'value': ['Animated'], 'probability': 0.08362048864364624}, {'value': ['get'], 'probability': 0.060780398547649384}, {'value': ['animation'], 'probability': 0.034778911620378494}, {'value': ['expand'], 'probability': 0.02740543521940708}]","[0.3987844, 0.0, 0.4466728, 0.31444776, 0.21703257]",0.1908132050912498,"[{'value': ['create', 'adapter'], 'probability': 0.8267751932144165}, {'value': ['clone'], 'probability': 0.07221594452857971}, {'value': ['set', 'animated'], 'probability': 0.04792851582169533}, {'value': ['menu', 'bar'], 'probability': 0.019895726814866066}, {'value': ['immutable'], 'probability': 0.011759129352867603}, {'value': ['create', 'list', 'view'], 'probability': 0.00973247829824686}, {'value': ['animate'], 'probability': 0.0037936402950435877}, {'value': ['new', 'iterator'], 'probability': 0.0028049913235008717}, {'value': ['show', 'all', 'apps'], 'probability': 0.002789529273286462}, {'value': ['new', 'catch', 'clause'], 'probability': 0.0023049034643918276}]","[0.40850824, 0.31505513, 0.44476736, 0.3923798, -0.011108277, 0.5374202, 0.05099767, 0.3436821, 0.46172163, 0.47319493]",0.3982561571347123
878,878,"public void set(TextureRegion region) {this.u = region.getU();this.v = region.getV();this.u2 = region.getU2();this.v2 = region.getV2();this.halfInvAspectRatio = 0.5f * ((float) region.getRegionHeight() / region.getRegionWidth());}
","public void [MASK](TextureRegion region) {this.u = region.getU();this.v = region.getV();this.u2 = region.getU2();this.v2 = region.getV2();this.halfInvAspectRatio = 0.5f * ((float) region.getRegionHeight() / region.getRegionWidth());}
",set,"[{'value': ['apply'], 'probability': 0.08135438710451126}, {'value': ['write'], 'probability': 0.07517316192388535}, {'value': ['paint'], 'probability': 0.03846762701869011}, {'value': ['test'], 'probability': 0.03821959346532822}, {'value': ['read'], 'probability': 0.037940941751003265}]","[0.5010617, 0.46259418, 0.3280287, 0.5425338, 0.4820371]",0.1271810822974067,"[{'value': ['set', 'region'], 'probability': 0.9785776138305664}, {'value': ['set'], 'probability': 0.010418682359158993}, {'value': ['add'], 'probability': 0.004041304811835289}, {'value': ['set', 'product'], 'probability': 0.0017216214910149574}, {'value': ['transition'], 'probability': 0.0011974796652793884}, {'value': ['save'], 'probability': 0.000976858544163406}, {'value': ['bind'], 'probability': 0.0009175651939585805}, {'value': ['set', 'b'], 'probability': 0.0008419883088208735}, {'value': ['update'], 'probability': 0.00072031922172755}, {'value': ['init'], 'probability': 0.0005865364801138639}]","[0.8155878, 1.0, 0.5084879, 0.8581915, 0.47907346, 0.5413879, 0.24931578, 0.79434526, 0.41854778, -0.2256778]",0.8142363338544767
879,879,"public void set(AspectTextureRegion aspectTextureRegion) {u = aspectTextureRegion.u;v = aspectTextureRegion.v;u2 = aspectTextureRegion.u2;v2 = aspectTextureRegion.v2;halfInvAspectRatio = aspectTextureRegion.halfInvAspectRatio;}
","public void [MASK](AspectTextureRegion aspectTextureRegion) {u = aspectTextureRegion.u;v = aspectTextureRegion.v;u2 = aspectTextureRegion.u2;v2 = aspectTextureRegion.v2;halfInvAspectRatio = aspectTextureRegion.halfInvAspectRatio;}
",set,"[{'value': ['evaluate'], 'probability': 0.07173991203308105}, {'value': ['add'], 'probability': 0.05926961824297905}, {'value': ['apply'], 'probability': 0.049873195588588715}, {'value': ['update'], 'probability': 0.040533941239118576}, {'value': ['perform'], 'probability': 0.038872599601745605}]","[0.31490386, 0.5084879, 0.5010617, 0.41854778, 0.498045]",0.1140442993501614,"[{'value': ['set'], 'probability': 0.5717052817344666}, {'value': ['copy', 'from'], 'probability': 0.2649306356906891}, {'value': ['update'], 'probability': 0.07327953726053238}, {'value': ['mark'], 'probability': 0.024182593449950218}, {'value': ['set', 'node'], 'probability': 0.018577756360173225}, {'value': ['assign'], 'probability': 0.013136141933500767}, {'value': ['replace', 'with'], 'probability': 0.011758082546293736}, {'value': ['from'], 'probability': 0.00985751487314701}, {'value': ['freeze'], 'probability': 0.007474817801266909}, {'value': ['merge'], 'probability': 0.005097577814012766}]","[1.0, 0.62260205, 0.41854778, 0.4959306, 0.72929657, 0.17613421, 0.7004196, 0.60527, 0.41323626, 0.38837323]",0.8144486103302739
880,880,"public void add(TextureRegion... regions) {this.regions.ensureCapacity(regions.length);for (TextureRegion region : regions) {this.regions.add(new AspectTextureRegion(region));}}
","public void [MASK](TextureRegion... regions) {this.regions.ensureCapacity(regions.length);for (TextureRegion region : regions) {this.regions.[MASK](new AspectTextureRegion(region));}}
",add,"[{'value': ['ensure'], 'probability': 0.15055163204669952}, {'value': ['update'], 'probability': 0.10838988423347473}, {'value': ['test'], 'probability': 0.07411488890647888}, {'value': ['apply'], 'probability': 0.06119048595428467}, {'value': ['add'], 'probability': 0.029274551197886467}]","[0.4261015, 0.5117927, 0.30969554, 0.46110356, 1.0]",0.2000661834125034,"[{'value': ['add'], 'probability': 0.8136965036392212}, {'value': ['reserve'], 'probability': 0.08606236428022385}, {'value': ['add', 'to', 'buffer'], 'probability': 0.044343799352645874}, {'value': ['save'], 'probability': 0.0165101271122694}, {'value': ['append'], 'probability': 0.015071571804583073}, {'value': ['add', 'internal'], 'probability': 0.008624982088804245}, {'value': ['report'], 'probability': 0.0052819885313510895}, {'value': ['add', 'page'], 'probability': 0.0038585816510021687}, {'value': ['add', 'all'], 'probability': 0.0036537889391183853}, {'value': ['clear', 'regions'], 'probability': 0.002896251156926155}]","[1.0, 0.36762524, 0.7843218, 0.44932657, 0.105477236, 0.83572614, 0.3074746, 0.85080695, 0.8761935, 0.4037496]",0.9056090507618332
881,881,"public void clear() {regions.clear();}
","public void [MASK]() {regions.[MASK]();}
",clear,"[{'value': ['run'], 'probability': 0.16967976093292236}, {'value': ['apply'], 'probability': 0.08184482157230377}, {'value': ['update'], 'probability': 0.052319131791591644}, {'value': ['clear'], 'probability': 0.04719598963856697}, {'value': ['test'], 'probability': 0.0403880849480629}]","[0.5174217, 0.5058031, 0.29131207, 1.0, 0.50097936]",0.2118641405635519,"[{'value': ['clear', 'regions'], 'probability': 0.9990431666374207}, {'value': ['clear'], 'probability': 0.0005128569318912923}, {'value': ['reset'], 'probability': 0.00028434424893930554}, {'value': ['flush'], 'probability': 0.00010345516056986526}, {'value': ['remove', 'all'], 'probability': 2.4551063688704744e-05}, {'value': ['rollback'], 'probability': 1.2695933037321083e-05}, {'value': ['free'], 'probability': 6.064425178919919e-06}, {'value': ['dispose'], 'probability': 5.024181973567465e-06}, {'value': ['sort'], 'probability': 4.315077603678219e-06}, {'value': ['empty'], 'probability': 3.5340196973265847e-06}]","[0.79860526, 1.0, 0.10589813, 0.2904938, 0.71209234, 0.057098266, 0.588838, 0.20622805, 0.6764407, 0.5102172]",0.7984416860257019
882,882,"public void allocateChannels() {regionChannel = controller.particles.addChannel(ParticleChannels.TextureRegion);}
","public void [MASK]() {regionChannel = controller.particles.addChannel(ParticleChannels.TextureRegion);}
",allocateChannels,"[{'value': ['run'], 'probability': 0.5503337979316711}, {'value': ['execute'], 'probability': 0.06913704425096512}, {'value': ['test'], 'probability': 0.04170028492808342}, {'value': ['close'], 'probability': 0.03180363401770592}, {'value': ['update'], 'probability': 0.029019959270954132}]","[0.20610183, 0.37620628, -0.0021149605, 0.14622721, 0.17804135]",0.1491637107140058,"[{'value': ['load'], 'probability': 0.6304296851158142}, {'value': ['initialise'], 'probability': 0.1271613985300064}, {'value': ['register'], 'probability': 0.04845360293984413}, {'value': ['follow'], 'probability': 0.045226264744997025}, {'value': ['preload'], 'probability': 0.040474191308021545}, {'value': ['load', 'icons'], 'probability': 0.03412496671080589}, {'value': ['load', 'templates'], 'probability': 0.022701235488057137}, {'value': ['play'], 'probability': 0.01888357661664486}, {'value': ['load', 'image'], 'probability': 0.01666588895022869}, {'value': ['split'], 'probability': 0.01587912067770958}]","[0.29286152, 0.0, 0.24239188, 0.20192587, 0.07346762, 0.20104273, 0.31717697, 0.10327461, 0.18353714, 0.11921888]",0.22944223125042099
883,883,"public void write(Json json) {json.writeValue(""regions"", regions, Array.class, AspectTextureRegion.class);}
","public void [MASK](Json json) {json.[MASK]Value(""regions"", regions, Array.class, AspectTextureRegion.class);}
",write,"[{'value': ['evaluate'], 'probability': 0.27769970893859863}, {'value': ['execute'], 'probability': 0.06520189344882965}, {'value': ['test'], 'probability': 0.05269178748130798}, {'value': ['update'], 'probability': 0.04439772665500641}, {'value': ['add'], 'probability': 0.03613663464784622}]","[0.37596357, 0.35316944, 0.26831806, 0.33396447, 0.45824197]",0.1729570336591612,"[{'value': ['to', 'json'], 'probability': 0.62627774477005}, {'value': ['write', 'tree'], 'probability': 0.2613389492034912}, {'value': ['write', 'json'], 'probability': 0.03541380912065506}, {'value': ['json'], 'probability': 0.024021120741963387}, {'value': ['saved'], 'probability': 0.018614839762449265}, {'value': ['serialize'], 'probability': 0.013224292546510696}, {'value': ['write', 'value'], 'probability': 0.009180804714560509}, {'value': ['write', 'data'], 'probability': 0.004342821892350912}, {'value': ['serialize', 'to', 'json'], 'probability': 0.004271441604942083}, {'value': ['as', 'json'], 'probability': 0.0033141765743494034}]","[0.54155207, 0.73757803, 0.75238246, 0.041499805, 0.37870547, 0.10802084, 0.8349697, 0.8013066, 0.49807805, 0.3818835]",0.5825782841306176
884,884,"public void read(Json json, JsonValue jsonData) {regions.clear();regions.addAll(json.readValue(""regions"", Array.class, AspectTextureRegion.class, jsonData));}public void setValue(ScaleInfluencer value) {super.setValue(value);if (value == null)return;scalePanel.setValue(value.value);}
","public void [MASK](Json json, JsonValue jsonData) {regions.clear();regions.addAll(json.[MASK]Value(""regions"", Array.class, AspectTextureRegion.class, jsonData));}public void setValue(ScaleInfluencer value) {super.setValue(value);if (value == null)return;scalePanel.setValue(value.value);}
",read,"[{'value': ['clear'], 'probability': 0.31474170088768005}, {'value': ['add'], 'probability': 0.13681884109973907}, {'value': ['update'], 'probability': 0.061394102871418}, {'value': ['set'], 'probability': 0.03733690083026886}, {'value': ['apply'], 'probability': 0.028437241911888123}]","[0.49591336, 0.36516917, 0.3623474, 0.4820371, 0.41615793]",0.2581247838880005,"[{'value': ['saved'], 'probability': 0.39786410331726074}, {'value': ['serialize'], 'probability': 0.18524998426437378}, {'value': ['save'], 'probability': 0.11179576814174652}, {'value': ['to', 'json'], 'probability': 0.07225005328655243}, {'value': ['read', 'string'], 'probability': 0.059952378273010254}, {'value': ['from', 'json'], 'probability': 0.04405909776687622}, {'value': ['put', 'map'], 'probability': 0.03712243214249611}, {'value': ['parse', 'list'], 'probability': 0.03291017562150955}, {'value': ['got'], 'probability': 0.031017307192087173}, {'value': ['dump'], 'probability': 0.027778608724474907}]","[0.35393596, 0.055586524, 0.38445935, 0.48157743, 0.7958906, 0.38713735, 0.5560381, 0.5122255, 0.51292145, 0.1972085]",0.35254973379047455
885,885,"protected void initializeComponents() {super.initializeComponents();addContent(0, 0, scalePanel = new ScaledNumericPanel(editor, null, ""Life"", """", """"));scalePanel.setIsAlwayShown(true);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected void [MASK]() {super.[MASK]();addContent(0, 0, scalePanel = new ScaledNumericPanel(editor, null, ""Life"", """", """"));scalePanel.setIsAlwayShown(true);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",initializeComponents,"[{'value': ['destroy'], 'probability': 0.8621554374694824}, {'value': ['run'], 'probability': 0.04736011475324631}, {'value': ['save'], 'probability': 0.004285741131752729}, {'value': ['destroyed'], 'probability': 0.004230369348078966}, {'value': ['remove'], 'probability': 0.004159186501055956}]","[0.09890634, -0.23605645, -0.06569217, -0.18520278, 0.0886197]",0.0733965469452129,"[{'value': ['run'], 'probability': 0.3481947183609009}, {'value': ['initialize', 'components'], 'probability': 0.27445197105407715}, {'value': ['show', 'ui'], 'probability': 0.1007009893655777}, {'value': ['reinit'], 'probability': 0.0835065022110939}, {'value': ['set', 'modifiers'], 'probability': 0.05655006319284439}, {'value': ['generic', 'type'], 'probability': 0.030533771961927414}, {'value': ['set', 'type'], 'probability': 0.030152268707752228}, {'value': ['get', 'argument'], 'probability': 0.02785409986972809}, {'value': ['init', 'frame'], 'probability': 0.02613947167992592}, {'value': ['get', 'module', 'class', 'loader'], 'probability': 0.02191614732146263}]","[-0.23605645, 0.6011956, -0.058004603, 0.0, 0.04447288, 0.02020751, -0.09612534, -0.22891231, 0.25386378, -0.024262872]",0.07692611603600405
886,886,"public static long getCPtr(btVehicleRaycaster obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btVehicleRaycaster obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.11672086268663406}, {'value': ['skip'], 'probability': 0.0381096787750721}, {'value': ['process'], 'probability': 0.03687054291367531}, {'value': ['evaluate'], 'probability': 0.032938238233327866}, {'value': ['read'], 'probability': 0.032878171652555466}]","[1.0, 0.49507433, 0.52250975, 0.40115592, 0.5726487]",0.1868942163483499,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
887,887,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
888,888,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btVehicleRaycaster(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btVehicleRaycaster(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8018290400505066}, {'value': ['start'], 'probability': 0.0175717081874609}, {'value': ['clear'], 'probability': 0.012188746593892574}, {'value': ['test'], 'probability': 0.011630161665380001}, {'value': ['flush'], 'probability': 0.010626226663589478}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.120570555]",0.1196359441978997,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
889,889,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](swigCPtr = cPtr, cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.9115408658981323}, {'value': ['destroyed'], 'probability': 0.0691232979297638}, {'value': ['rebuild'], 'probability': 0.004925813991576433}, {'value': ['save'], 'probability': 0.0026005508843809366}, {'value': ['run'], 'probability': 0.001220924430526793}]","[0.0852853, -0.009507184, 0.19255844, 0.15556529, 0.1346719]",0.0786013536722733,"[{'value': ['reset'], 'probability': 0.9976670742034912}, {'value': ['reinit'], 'probability': 0.0007650359184481204}, {'value': ['destroy'], 'probability': 0.0004842917260248214}, {'value': ['stop'], 'probability': 0.0004195002547930926}, {'value': ['clear'], 'probability': 0.00021948434005025774}, {'value': ['start'], 'probability': 0.00013255604426376522}, {'value': ['shutdown'], 'probability': 0.0001189266549772583}, {'value': ['restart'], 'probability': 8.343072840943933e-05}, {'value': ['mark'], 'probability': 5.742608482250944e-05}, {'value': ['abort'], 'probability': 5.2347619202919304e-05}]","[1.0, 0.0, 0.0852853, 0.1610944, 0.10589813, 0.23268494, 0.25621086, 0.38693747, 0.12411288, 0.21679178]",0.9979112717127002
890,890,"public static long getCPtr(btVehicleRaycasterResult obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btVehicleRaycasterResult obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.0694846361875534}, {'value': ['process'], 'probability': 0.048964884132146835}, {'value': ['read'], 'probability': 0.047109685838222504}, {'value': ['update'], 'probability': 0.039502259343862534}, {'value': ['evaluate'], 'probability': 0.03941735997796059}]","[1.0, 0.52250975, 0.5726487, 0.36048478, 0.40115592]",0.1520990367640901,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
891,891,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
892,892,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btVehicleRaycaster_btVehicleRaycasterResult(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btVehicleRaycaster_btVehicleRaycasterResult(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7905193567276001}, {'value': ['start'], 'probability': 0.01817692629992962}, {'value': ['clear'], 'probability': 0.013899937272071838}, {'value': ['flush'], 'probability': 0.01236408669501543}, {'value': ['close'], 'probability': 0.011326981708407402}]","[0.13931048, 0.15163165, 0.18840031, 0.120570555, 0.10496158]",0.1181822230105089,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
893,893,"public void setHitPointInWorld(btVector3 value) {DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setHitPointInWorld,"[{'value': ['set'], 'probability': 0.673076331615448}, {'value': ['put'], 'probability': 0.06078271195292473}, {'value': ['execute'], 'probability': 0.013600819744169712}, {'value': ['add'], 'probability': 0.013304675929248333}, {'value': ['update'], 'probability': 0.010764677077531815}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.41854778]",0.7374194880000483,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
894,894,"public btVector3 getHitPointInWorld() {long cPtr = DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getHitPointInWorld,"[{'value': ['get'], 'probability': 0.13156400620937347}, {'value': ['clone'], 'probability': 0.09483061730861664}, {'value': ['build'], 'probability': 0.0321737565100193}, {'value': ['long'], 'probability': 0.030128011479973793}, {'value': ['test'], 'probability': 0.025005217641592026}]","[1.0, 0.166604, 0.5626448, 0.65134645, 0.4599198]",0.1965897303962878,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
895,895,"public void setHitNormalInWorld(btVector3 value) {DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setHitNormalInWorld,"[{'value': ['set'], 'probability': 0.7403009533882141}, {'value': ['put'], 'probability': 0.039362724870443344}, {'value': ['add'], 'probability': 0.012917554937303066}, {'value': ['execute'], 'probability': 0.010968142189085484}, {'value': ['update'], 'probability': 0.008662145584821701}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.41854778]",0.7856241425783058,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
896,896,"public btVector3 getHitNormalInWorld() {long cPtr = DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getHitNormalInWorld,"[{'value': ['get'], 'probability': 0.15203338861465454}, {'value': ['clone'], 'probability': 0.10662022233009338}, {'value': ['build'], 'probability': 0.03348248451948166}, {'value': ['test'], 'probability': 0.026073649525642395}, {'value': ['long'], 'probability': 0.025325514376163483}]","[1.0, 0.166604, 0.5626448, 0.4599198, 0.65134645]",0.2171229606812037,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
897,897,"public void setDistFraction(float value) {DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_distFraction_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_distFraction_set(swigCPtr, this, value);}
",setDistFraction,"[{'value': ['set'], 'probability': 0.7769937515258789}, {'value': ['put'], 'probability': 0.08456291258335114}, {'value': ['get'], 'probability': 0.009433913044631481}, {'value': ['add'], 'probability': 0.007391597144305706}, {'value': ['update'], 'probability': 0.0048364452086389065}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.41854778]",0.8560928445613439,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
898,898,"public float getDistFraction() {return DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_distFraction_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btVehicleRaycaster_btVehicleRaycasterResult_distFraction_get(swigCPtr, this);}
",getDistFraction,"[{'value': ['get'], 'probability': 0.11329826712608337}, {'value': ['float'], 'probability': 0.042406175285577774}, {'value': ['start'], 'probability': 0.03726561740040779}, {'value': ['next'], 'probability': 0.03588477894663811}, {'value': ['run'], 'probability': 0.03364799916744232}]","[1.0, 0.2808844, 0.7199945, 0.6966621, 0.65114945]",0.1989499812910424,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
899,899,"public boolean isEqual(final ContactID cid) {return getKey() == cid.getKey();}
","public boolean [MASK](final ContactID cid) {return getKey() == cid.getKey();}
",isEqual,"[{'value': ['equals'], 'probability': 0.2297734022140503}, {'value': ['match'], 'probability': 0.08719493448734283}, {'value': ['matches'], 'probability': 0.07657188922166824}, {'value': ['accept'], 'probability': 0.03754623234272003}, {'value': ['replace'], 'probability': 0.033075962215662}]","[0.3373858, 0.40539563, 0.3614936, 0.4456851, 0.43766046]",0.1717608125812209,"[{'value': ['equals'], 'probability': 0.8734780550003052}, {'value': ['contains'], 'probability': 0.0778723657131195}, {'value': ['is', 'equal'], 'probability': 0.02916768193244934}, {'value': ['key', 'equals'], 'probability': 0.00576375937089324}, {'value': ['is', 'same', 'as'], 'probability': 0.0025925342924892902}, {'value': ['is', 'identity'], 'probability': 0.002535189501941204}, {'value': ['is', 'update'], 'probability': 0.0023477235808968544}, {'value': ['match'], 'probability': 0.002338162623345852}, {'value': ['is', 'same'], 'probability': 0.002055170712992549}, {'value': ['is', 'last'], 'probability': 0.0018493231618776917}]","[0.3373858, 0.59498084, 0.88704693, 0.6000321, 0.9295298, 0.86684483, 0.8300102, 0.40539563, 0.9487997, 0.90671027]",0.3814939161693453
900,900,"public void set(final ContactID c) {indexA = c.indexA;indexB = c.indexB;typeA = c.typeA;typeB = c.typeB;}
","public void [MASK](final ContactID c) {indexA = c.indexA;indexB = c.indexB;typeA = c.typeA;typeB = c.typeB;}
",set,"[{'value': ['paint'], 'probability': 0.11905684322118759}, {'value': ['visit'], 'probability': 0.11048004031181335}, {'value': ['set'], 'probability': 0.08272292464971542}, {'value': ['start'], 'probability': 0.0790896937251091}, {'value': ['update'], 'probability': 0.0678040087223053}]","[0.3280287, 0.46053246, 1.0, 0.71166486, 0.41854778]",0.2573212043017989,"[{'value': ['set'], 'probability': 0.9966530203819275}, {'value': ['set', 'defaults'], 'probability': 0.0012583822244778275}, {'value': ['parse'], 'probability': 0.0007929556304588914}, {'value': ['copy', 'from'], 'probability': 0.00043394151725806296}, {'value': ['link'], 'probability': 0.0002991879591718316}, {'value': ['set', 'owner'], 'probability': 0.00019501944188959897}, {'value': ['merge'], 'probability': 0.00011393016029614955}, {'value': ['set', 'info'], 'probability': 9.169171971734613e-05}, {'value': ['add'], 'probability': 8.223331678891554e-05}, {'value': ['initialize'], 'probability': 7.966785051394254e-05}]","[1.0, 0.71523726, 0.018554753, 0.62260205, 0.46605656, 0.8035801, 0.38837323, 0.8025115, 0.5084879, -0.15549803]",0.9982813580005757
901,901,"public void flip() {byte tempA = indexA;indexA = indexB;indexB = tempA;tempA = typeA;typeA = typeB;typeB = tempA;}
","public void [MASK]() {byte tempA = indexA;indexA = indexB;indexB = tempA;tempA = typeA;typeA = typeB;typeB = tempA;}
",flip,"[{'value': ['run'], 'probability': 0.26260533928871155}, {'value': ['test'], 'probability': 0.18475906550884247}, {'value': ['start'], 'probability': 0.04362823814153671}, {'value': ['read'], 'probability': 0.031159603968262672}, {'value': ['flush'], 'probability': 0.03076094761490822}]","[0.358486, 0.14608733, 0.2877238, 0.32190907, 0.28889066]",0.1526012884982583,"[{'value': ['flip'], 'probability': 0.9952380657196045}, {'value': ['sort'], 'probability': 0.0027361270040273666}, {'value': ['rev'], 'probability': 0.0007425653748214245}, {'value': ['transpose'], 'probability': 0.00038501230301335454}, {'value': ['less', 'than'], 'probability': 0.0002899420796893537}, {'value': ['inverse'], 'probability': 0.0001865742087829858}, {'value': ['compare', 'dates'], 'probability': 0.0001609000755706802}, {'value': ['reverse'], 'probability': 0.00011209905642317608}, {'value': ['check'], 'probability': 7.600699609611183e-05}, {'value': ['direction'], 'probability': 7.262016151798889e-05}]","[1.0, 0.35049838, 0.20496896, 0.14708225, 0.22450145, 0.13666578, 0.26666102, 0.50041276, 0.35629645, 0.33889222]",0.9966471888646073
902,902,"public void zero() {indexA = 0;indexB = 0;typeA = 0;typeB = 0;}
","public void [MASK]() {indexA = 0;indexB = 0;typeA = 0;typeB = 0;}
",zero,"[{'value': ['test'], 'probability': 0.2925674617290497}, {'value': ['evaluate'], 'probability': 0.07147090882062912}, {'value': ['run'], 'probability': 0.06399966776371002}, {'value': ['start'], 'probability': 0.05288926139473915}, {'value': ['read'], 'probability': 0.026656804606318474}]","[0.38606074, 0.2170754, 0.34060636, 0.39206326, 0.28908107]",0.1787039954328634,"[{'value': ['zero'], 'probability': 0.9590834379196167}, {'value': ['reset'], 'probability': 0.013898798264563084}, {'value': ['clear'], 'probability': 0.00893782451748848}, {'value': ['m'], 'probability': 0.00554853118956089}, {'value': ['set', 'zero'], 'probability': 0.00407983735203743}, {'value': ['init', 'fields'], 'probability': 0.0033678682520985603}, {'value': ['reset', 'all'], 'probability': 0.0017129505285993218}, {'value': ['fred'], 'probability': 0.0012338908854871988}, {'value': ['clean'], 'probability': 0.0011256453581154346}, {'value': ['set', 'up'], 'probability': 0.001011177897453308}]","[0.99999994, 0.3791909, 0.46186468, 0.39629206, 0.8490131, 0.13414739, 0.5657093, 0.04020676, 0.37486407, 0.5118178]",0.9765543542532225
903,903,"public int compareTo(ContactID o) {return getKey() - o.getKey();}public void sendHttpRequest(HttpRequest httpRequest, HttpResponseListener httpResponseListener) {netJavaImpl.sendHttpRequest(httpRequest, httpResponseListener);}
","public int [MASK](ContactID o) {return getKey() - o.getKey();}public void sendHttpRequest(HttpRequest httpRequest, HttpResponseListener httpResponseListener) {netJavaImpl.sendHttpRequest(httpRequest, httpResponseListener);}
",compareTo,"[{'value': ['get'], 'probability': 0.3077358901500702}, {'value': ['compare'], 'probability': 0.17871570587158203}, {'value': ['save'], 'probability': 0.04198789969086647}, {'value': ['replace'], 'probability': 0.0401126965880394}, {'value': ['start'], 'probability': 0.037906039506196976}]","[0.46117607, 1.0, 0.31761104, 0.19312426, 0.33076182]",0.3542565596243664,"[{'value': ['compare', 'to'], 'probability': 0.9991519451141357}, {'value': ['merge'], 'probability': 0.0003480890009086579}, {'value': ['do', 'update'], 'probability': 0.00024427997414022684}, {'value': ['last', 'index', 'of'], 'probability': 0.00011929395259357989}, {'value': ['remove', 'all'], 'probability': 3.048438338737469e-05}, {'value': ['compare'], 'probability': 2.7098172722617164e-05}, {'value': ['key', 'equals'], 'probability': 2.27873297262704e-05}, {'value': ['get', 'column', 'index'], 'probability': 2.0918767404509708e-05}, {'value': ['get', 'width', 'in', 'pixels'], 'probability': 1.9879405954270624e-05}, {'value': ['is', 'same', 'as'], 'probability': 1.528640859760344e-05}]","[0.7864376, 0.24238215, 0.599999, 0.33085167, 0.3526807, 1.0, 0.32018903, 0.42600888, 0.40780762, 0.36444536]",0.7861087999489476
904,904,"public void cancelHttpRequest(HttpRequest httpRequest) {netJavaImpl.cancelHttpRequest(httpRequest);}
","public void [MASK](HttpRequest httpRequest) {netJavaImpl.[MASK](httpRequest);}
",cancelHttpRequest,"[{'value': ['perform'], 'probability': 0.13906383514404297}, {'value': ['save'], 'probability': 0.08122141659259796}, {'value': ['handle'], 'probability': 0.06977034360170364}, {'value': ['send'], 'probability': 0.05802950635552406}, {'value': ['update'], 'probability': 0.04008079692721367}]","[0.39121652, 0.35659683, 0.32618028, 0.5240378, 0.27394834]",0.147514800237147,"[{'value': ['signed'], 'probability': 0.36593809723854065}, {'value': ['handle', 'action'], 'probability': 0.2276659905910492}, {'value': ['inject'], 'probability': 0.1924760788679123}, {'value': ['sign', 'remove', 'blob'], 'probability': 0.04899761080741882}, {'value': ['pre', 'update'], 'probability': 0.04017922654747963}, {'value': ['set', 'context'], 'probability': 0.03134531527757645}, {'value': ['execute'], 'probability': 0.03089783899486065}, {'value': ['need', 'login', 'prompt'], 'probability': 0.023387392982840538}, {'value': ['notify', 'update'], 'probability': 0.020706254988908768}, {'value': ['filter'], 'probability': 0.018406236544251442}]","[0.353393, 0.4357329, 0.23743571, 0.36204466, 0.39821848, 0.2981623, 0.27904636, 0.32589534, 0.43545997, 0.08584213]",0.3441481915370967
905,905,"public ServerSocket newServerSocket(Protocol protocol, String hostname, int port, ServerSocketHints hints) {return new NetJavaServerSocketImpl(protocol, hostname, port, hints);}
","public ServerSocket [MASK](Protocol protocol, String hostname, int port, ServerSocketHints hints) {return new NetJavaServerSocketImpl(protocol, hostname, port, hints);}
",newServerSocket,"[{'value': ['execute'], 'probability': 0.22270360589027405}, {'value': ['update'], 'probability': 0.1341681033372879}, {'value': ['add'], 'probability': 0.08079270273447037}, {'value': ['build'], 'probability': 0.0598730742931366}, {'value': ['create'], 'probability': 0.04471965506672859}]","[0.17115305, 0.48925897, 0.50984806, 0.6221016, 0.6427982]",0.2109442022379339,"[{'value': ['create', 'server', 'socket'], 'probability': 0.9174429774284363}, {'value': ['create', 'socket'], 'probability': 0.0374143049120903}, {'value': ['new', 'instance'], 'probability': 0.011708864942193031}, {'value': ['filter'], 'probability': 0.009859363548457623}, {'value': ['get', 'instance'], 'probability': 0.007994063198566437}, {'value': ['create'], 'probability': 0.005140507128089666}, {'value': ['get', 'protocol'], 'probability': 0.003977218642830849}, {'value': ['default', 'port'], 'probability': 0.0024344315752387047}, {'value': ['run', 'server'], 'probability': 0.0022627951111644506}, {'value': ['set', 'protocol'], 'probability': 0.001765573862940073}]","[0.38884944, 0.42671037, 0.93813515, 0.20247081, 0.6703019, 0.6427982, 0.6122984, 0.49445295, 0.48318273, 0.6125827]",0.4001695954783258
906,906,"public ServerSocket newServerSocket(Protocol protocol, int port, ServerSocketHints hints) {return new NetJavaServerSocketImpl(protocol, port, hints);}
","public ServerSocket [MASK](Protocol protocol, int port, ServerSocketHints hints) {return new NetJavaServerSocketImpl(protocol, port, hints);}
",newServerSocket,"[{'value': ['execute'], 'probability': 0.2269175946712494}, {'value': ['update'], 'probability': 0.10594253242015839}, {'value': ['add'], 'probability': 0.06028622388839722}, {'value': ['create'], 'probability': 0.04660113528370857}, {'value': ['bind'], 'probability': 0.04490738734602928}]","[0.17115305, 0.48925897, 0.50984806, 0.6427982, 0.13294168]",0.1573329768700688,"[{'value': ['create', 'server', 'socket'], 'probability': 0.9086028933525085}, {'value': ['filter'], 'probability': 0.0287772249430418}, {'value': ['create', 'socket'], 'probability': 0.016985932365059853}, {'value': ['get', 'protocol'], 'probability': 0.012104617431759834}, {'value': ['new', 'instance'], 'probability': 0.009681301191449165}, {'value': ['set', 'protocol'], 'probability': 0.006662249099463224}, {'value': ['get', 'instance'], 'probability': 0.005968163721263409}, {'value': ['create'], 'probability': 0.004212138708680868}, {'value': ['create', 'resolver'], 'probability': 0.0035115487407892942}, {'value': ['from'], 'probability': 0.0034938212484121323}]","[0.38884944, 0.20247081, 0.42671037, 0.6122984, 0.93813515, 0.6125827, 0.6703019, 0.6427982, 0.32251048, 0.69618535]",0.3972324182640609
907,907,"public Socket newClientSocket(Protocol protocol, String host, int port, SocketHints hints) {return new NetJavaSocketImpl(protocol, host, port, hints);}
","public Socket [MASK](Protocol protocol, String host, int port, SocketHints hints) {return new NetJavaSocketImpl(protocol, host, port, hints);}
",newClientSocket,"[{'value': ['execute'], 'probability': 0.13452060520648956}, {'value': ['handle'], 'probability': 0.05312212556600571}, {'value': ['build'], 'probability': 0.04457111284136772}, {'value': ['create'], 'probability': 0.03977009654045105}, {'value': ['fetch'], 'probability': 0.03475050628185272}]","[0.17115305, 0.42852047, 0.6221016, 0.6427982, 0.084230594]",0.1020064931367502,"[{'value': ['create', 'socket'], 'probability': 0.7994275689125061}, {'value': ['create'], 'probability': 0.07027053087949753}, {'value': ['connect'], 'probability': 0.05025491490960121}, {'value': ['client'], 'probability': 0.020322121679782867}, {'value': ['get', 'instance'], 'probability': 0.020021066069602966}, {'value': ['get', 'protocol'], 'probability': 0.01123716402798891}, {'value': ['default', 'port'], 'probability': 0.008001857437193394}, {'value': ['new', 'instance'], 'probability': 0.007564296014606953}, {'value': ['get', 'connector'], 'probability': 0.007134102750569582}, {'value': ['get', 'socket'], 'probability': 0.005766319576650858}]","[0.42671037, 0.6427982, 0.38332984, 0.36079195, 0.6703019, 0.6122984, 0.49445295, 0.93813515, 0.51818687, 0.41845366]",0.45035333696085683
908,908,"public T add(T node, float value) {node.value = value;return add(node);}
","public T [MASK](T node, float value) {node.value = value;return [MASK](node);}
",add,"[{'value': ['compare'], 'probability': 0.0606401227414608}, {'value': ['evaluate'], 'probability': 0.05597367510199547}, {'value': ['transform'], 'probability': 0.05517198517918587}, {'value': ['value'], 'probability': 0.05230477452278137}, {'value': ['replace'], 'probability': 0.044436655938625336}]","[0.35862264, 0.33404627, 0.34067583, 0.4335826, 0.46391895]",0.1025339277375649,"[{'value': ['add'], 'probability': 0.7103250622749329}, {'value': ['add', 'node'], 'probability': 0.23183658719062805}, {'value': ['add', 'value'], 'probability': 0.02868778258562088}, {'value': ['push'], 'probability': 0.015312908217310905}, {'value': ['inc'], 'probability': 0.0036501684226095676}, {'value': ['append', 'node'], 'probability': 0.0026160646229982376}, {'value': ['to', 'node'], 'probability': 0.002256819512695074}, {'value': ['node'], 'probability': 0.0020357053726911545}, {'value': ['add', 'doc'], 'probability': 0.0017084142891690135}, {'value': ['collect'], 'probability': 0.0015704884426668286}]","[1.0, 0.7639855, 0.8428972, 0.50270826, 0.08498097, 0.17599005, 0.48190102, 0.15477481, 0.8038885, 0.41857067]",0.9235276010535433
909,909,"public T peek() {if (size == 0)throw new IllegalStateException(""The heap is empty."");return (T) nodes[0];}
","public T [MASK]() {if (size == 0)throw new IllegalStateException(""The heap is empty."");return (T) nodes[0];}
",peek,"[{'value': ['size'], 'probability': 0.38337022066116333}, {'value': ['next'], 'probability': 0.11679649353027344}, {'value': ['nodes'], 'probability': 0.08688671886920929}, {'value': ['join'], 'probability': 0.03610134869813919}, {'value': ['node'], 'probability': 0.03405415639281273}]","[0.045054156, 0.22488226, 0.016151333, 0.085409164, -0.018806567]",0.0473841618648309,"[{'value': ['current'], 'probability': 0.25340136885643005}, {'value': ['first'], 'probability': 0.24140004813671112}, {'value': ['get', 'root'], 'probability': 0.12336236238479614}, {'value': ['peek'], 'probability': 0.08351987600326538}, {'value': ['get'], 'probability': 0.06456895172595978}, {'value': ['entity'], 'probability': 0.05562222748994827}, {'value': ['last'], 'probability': 0.049517881125211716}, {'value': ['next'], 'probability': 0.04670501872897148}, {'value': ['get', 'value'], 'probability': 0.04334520548582077}, {'value': ['get', 'time'], 'probability': 0.038556989282369614}]","[-0.007671575, 0.16617282, 0.2301666, 1.0000001, 0.32689062, -0.036930677, 0.10262002, 0.22488226, 0.22060645, 0.29489094]",0.20565373199539055
910,910,"public T pop() {return remove(0);}
","public T [MASK]() {return remove(0);}
",pop,"[{'value': ['remove'], 'probability': 0.967100977897644}, {'value': ['get'], 'probability': 0.002786964410915971}, {'value': ['clean'], 'probability': 0.002517142565920949}, {'value': ['add'], 'probability': 0.002048855647444725}, {'value': ['removed'], 'probability': 0.001500372076407075}]","[0.2049971, 0.38630247, 0.2746709, 0.34072542, 0.20590195]",0.2010279268120637,"[{'value': ['remove'], 'probability': 0.9632600545883179}, {'value': ['pop'], 'probability': 0.01881256140768528}, {'value': ['remove', 'first'], 'probability': 0.010905499570071697}, {'value': ['remove', 'last'], 'probability': 0.003715614788234234}, {'value': ['unset'], 'probability': 0.0012097280705347657}, {'value': ['clear'], 'probability': 0.0011007138527929783}, {'value': ['delete'], 'probability': 0.00041647825855761766}, {'value': ['del'], 'probability': 0.0002192096580984071}, {'value': ['cancel'], 'probability': 0.00020083988783881068}, {'value': ['poll', 'first'], 'probability': 0.00015923965838737786}]","[0.2049971, 1.0, 0.37652218, 0.31590593, -0.1871851, 0.25933284, 0.16168498, 0.1701577, 0.08307323, 0.33559886]",0.2217917980972221
911,911,"public T remove(T node) {return remove(node.index);}
","public T [MASK](T node) {return [MASK](node.index);}
",remove,"[{'value': ['compare'], 'probability': 0.14311276376247406}, {'value': ['get'], 'probability': 0.1208343431353569}, {'value': ['index'], 'probability': 0.09664009511470795}, {'value': ['start'], 'probability': 0.0355466827750206}, {'value': ['next'], 'probability': 0.031544946134090424}]","[0.18829212, 0.48684114, 0.09149969, 0.3728393, 0.4148229]",0.1209554404536324,"[{'value': ['remove'], 'probability': 0.9959099292755127}, {'value': ['remove', 'element'], 'probability': 0.0025703278370201588}, {'value': ['remove', 'child'], 'probability': 0.0008911970653571188}, {'value': ['remove', 'node'], 'probability': 0.00018695440667215735}, {'value': ['remove', 'item'], 'probability': 0.00016680832777637988}, {'value': ['delete'], 'probability': 0.00013558394857682288}, {'value': ['remove', 'element', 'at'], 'probability': 6.66874839225784e-05}, {'value': ['remove', 'first'], 'probability': 3.299966556369327e-05}, {'value': ['remove', 'before'], 'probability': 2.4783916160231456e-05}, {'value': ['remove', 'property'], 'probability': 1.4809514141234104e-05}]","[0.99999994, 0.84065235, 0.787193, 0.7631024, 0.83545727, 0.5385779, 0.73791337, 0.800742, 0.8465528, 0.79518974]",0.9992356059252265
912,912,"private T remove(int index) {Node[] nodes = this.nodes;Node removed = nodes[index];nodes[index] = nodes[--size];nodes[size] = null;if (size > 0 && index < size)down(index);return (T) removed;}
","private T [MASK](int index) {Node[] nodes = this.nodes;Node [MASK]d = nodes[index];nodes[index] = nodes[--size];nodes[size] = null;if (size > 0 && index < size)down(index);return (T) [MASK]d;}
",remove,"[{'value': ['down'], 'probability': 0.1582498699426651}, {'value': ['compare'], 'probability': 0.11807015538215637}, {'value': ['evaluate'], 'probability': 0.09409621357917786}, {'value': ['value'], 'probability': 0.03994450345635414}, {'value': ['get'], 'probability': 0.03937896341085434}]","[0.48136738, 0.18829212, 0.35744756, 0.2523219, 0.48684114]",0.1612926394447214,"[{'value': ['remove', 'node'], 'probability': 0.6794996857643127}, {'value': ['remove'], 'probability': 0.2692710757255554}, {'value': ['remove', 'at'], 'probability': 0.018683845177292824}, {'value': ['move', 'up'], 'probability': 0.01031950768083334}, {'value': ['disconnect'], 'probability': 0.005904552526772022}, {'value': ['do', 'remove'], 'probability': 0.004120159428566694}, {'value': ['move', 'node'], 'probability': 0.003517806064337492}, {'value': ['delete', 'node'], 'probability': 0.0030501787550747395}, {'value': ['remove', 'nodes'], 'probability': 0.002840016968548298}, {'value': ['remove', 'index'], 'probability': 0.0027931351214647293}]","[0.7631024, 0.99999994, 0.7718763, 0.56313545, 0.25855088, 0.83079267, 0.48519164, 0.46766728, 0.782184, 0.6131121]",0.820048623634307
913,913,"public void clear() {Node[] nodes = this.nodes;for (int i = 0, n = size; i < n; i++) nodes[i] = null;size = 0;}
","public void [MASK]() {Node[] nodes = this.nodes;for (int i = 0, n = size; i < n; i++) nodes[i] = null;size = 0;}
",clear,"[{'value': ['run'], 'probability': 0.34027624130249023}, {'value': ['test'], 'probability': 0.25546371936798096}, {'value': ['start'], 'probability': 0.033324867486953735}, {'value': ['clear'], 'probability': 0.021310918033123016}, {'value': ['close'], 'probability': 0.019437072798609734}]","[0.5174217, 0.50097936, 0.59196377, 1.0, 0.6670826]",0.358052535872256,"[{'value': ['clear'], 'probability': 0.9988812804222107}, {'value': ['reset'], 'probability': 0.0006058038561604917}, {'value': ['flush'], 'probability': 0.00018750218441709876}, {'value': ['remove', 'all'], 'probability': 0.00013625354040414095}, {'value': ['remove'], 'probability': 6.905138434376568e-05}, {'value': ['close'], 'probability': 6.899622530909255e-05}, {'value': ['release'], 'probability': 2.7645339287118986e-05}, {'value': ['invalidate'], 'probability': 1.435009380656993e-05}, {'value': ['commit'], 'probability': 4.7916764742694795e-06}, {'value': ['disable'], 'probability': 4.278020242054481e-06}]","[1.0, 0.10589813, 0.2904938, 0.71209234, 0.5344353, 0.6670826, 0.46200594, 0.15613793, 0.33428323, 0.168997]",0.9991971945754629
914,914,"public void setValue(T node, float value) {float oldValue = node.value;node.value = value;if (value < oldValue ^ isMaxHeap)up(node.index);elsedown(node.index);}
","public void [MASK](T node, float value) {float oldValue = node.value;node.value = value;if (value < oldValue ^ isMaxHeap)up(node.index);elsedown(node.index);}
",setValue,"[{'value': ['start'], 'probability': 0.13566242158412933}, {'value': ['add'], 'probability': 0.12316878885030746}, {'value': ['up'], 'probability': 0.0693219006061554}, {'value': ['next'], 'probability': 0.06075044348835945}, {'value': ['put'], 'probability': 0.04626549407839775}]","[0.71166486, 0.5084879, 0.77125025, 0.76287955, 0.7944568]",0.2957417535020754,"[{'value': ['set'], 'probability': 0.7353164553642273}, {'value': ['set', 'value'], 'probability': 0.18232880532741547}, {'value': ['assign'], 'probability': 0.025194905698299408}, {'value': ['set', 'index'], 'probability': 0.014656868763267994}, {'value': ['put'], 'probability': 0.011737588793039322}, {'value': ['set', 'default', 'value'], 'probability': 0.011471309699118137}, {'value': ['set', 'node'], 'probability': 0.010312286205589771}, {'value': ['add', 'value'], 'probability': 0.00463496521115303}, {'value': ['set', 'element'], 'probability': 0.002404505619779229}, {'value': ['set', 'property'], 'probability': 0.0019423000048846006}]","[1.0, 0.8399167, 0.17613421, 0.73392576, 0.7944568, 0.76045495, 0.72929657, 0.5792419, 0.86911386, 0.84050834]",0.9356284132106026
915,915,"private void up(int index) {Node[] nodes = this.nodes;Node node = nodes[index];float value = node.value;while (index > 0) {int parentIndex = (index - 1) >> 1;Node parent = nodes[parentIndex];if (value < parent.value ^ isMaxHeap) {nodes[index] = parent;parent.index = index;index = parentIndex;} elsebreak;}nodes[index] = node;node.index = index;}
","private void [MASK](int index) {Node[] nodes = this.nodes;Node node = nodes[index];float value = node.value;while (index > 0) {int parentIndex = (index - 1) >> 1;Node parent = nodes[parentIndex];if (value < parent.value ^ isMaxHeap) {nodes[index] = parent;parent.index = index;index = parentIndex;} elsebreak;}nodes[index] = node;node.index = index;}
",up,"[{'value': ['next'], 'probability': 0.06892535835504532}, {'value': ['add'], 'probability': 0.06432691961526871}, {'value': ['compare'], 'probability': 0.06345972418785095}, {'value': ['start'], 'probability': 0.05458427965641022}, {'value': ['put'], 'probability': 0.04513394832611084}]","[0.75952226, 0.5460432, 0.30462965, 0.72516686, 0.8326883]",0.1839725558107892,"[{'value': ['node', 'at'], 'probability': 0.5944710969924927}, {'value': ['get', 'node', 'number'], 'probability': 0.1480184644460678}, {'value': ['set', 'index'], 'probability': 0.08645986020565033}, {'value': ['sift', 'up'], 'probability': 0.0744968131184578}, {'value': ['set', 'node'], 'probability': 0.05162724107503891}, {'value': ['insert', 'child', 'at'], 'probability': 0.01138115394860506}, {'value': ['move', 'up'], 'probability': 0.01103349681943655}, {'value': ['opt', 'string'], 'probability': 0.007941856980323792}, {'value': ['remove', 'at'], 'probability': 0.0076085287146270275}, {'value': ['insert', 'node'], 'probability': 0.006961526814848185}]","[0.591623, 0.69038063, 0.7072966, 0.7720524, 0.58883846, 0.74765813, 0.9389068, 0.54226744, 0.774971, 0.24775352]",0.6337565480039875
916,916,"public boolean equals(Object obj) {if (!(obj instanceof BinaryHeap))return false;BinaryHeap other = (BinaryHeap) obj;if (other.size != size)return false;for (int i = 0, n = size; i < n; i++) if (other.nodes[i].value != nodes[i].value)return false;return true;}
","public boolean [MASK](Object obj) {if (!(obj instanceof BinaryHeap))return false;BinaryHeap other = (BinaryHeap) obj;if (other.size != size)return false;for (int i = 0, n = size; i < n; i++) if (other.nodes[i].value != nodes[i].value)return false;return true;}
",equals,"[{'value': ['equals'], 'probability': 0.7864336967468262}, {'value': ['contains'], 'probability': 0.024855492636561394}, {'value': ['matches'], 'probability': 0.017652519047260284}, {'value': ['accepts'], 'probability': 0.014974326826632023}, {'value': ['accept'], 'probability': 0.012539447285234928}]","[1.0, 0.20414257, 0.21920882, 0.1823474, 0.21464747]",0.8007994390562121,"[{'value': ['equals'], 'probability': 0.9999951124191284}, {'value': ['content', 'equals'], 'probability': 1.463005560253805e-06}, {'value': ['equal'], 'probability': 1.340832568530459e-06}, {'value': ['matches'], 'probability': 6.585559049199219e-07}, {'value': ['same', 'value'], 'probability': 6.273254484767676e-07}, {'value': ['compare', 'to'], 'probability': 2.553597084897774e-07}, {'value': ['deep', 'equals'], 'probability': 2.0993380189793243e-07}, {'value': ['is', 'same'], 'probability': 1.4282491633821337e-07}, {'value': ['do', 'equals'], 'probability': 1.0876981093588256e-07}, {'value': ['equivalent'], 'probability': 1.0792706461870694e-07}]","[1.0, 0.68361425, 0.6404468, 0.21920882, 0.4832903, 0.22051907, 0.67461926, 0.33838725, 0.6760941, 0.53695774]",0.9999977965821744
917,917,"public int hashCode() {int h = 1;for (int i = 0, n = size; i < n; i++) h = h * 31 + Float.floatToIntBits(nodes[i].value);return h;}
","public int [MASK]() {int h = 1;for (int i = 0, n = size; i < n; i++) h = h * 31 + Float.floatToIntBits(nodes[i].value);return h;}
",hashCode,"[{'value': ['size'], 'probability': 0.7828503847122192}, {'value': ['expand'], 'probability': 0.016960684210062027}, {'value': ['count'], 'probability': 0.013460156507790089}, {'value': ['get'], 'probability': 0.013358211144804955}, {'value': ['length'], 'probability': 0.012511069886386395}]","[0.17934217, -0.07668641, 0.0950139, 0.13757937, 0.09381389]",0.1433878576397407,"[{'value': ['hash', 'code'], 'probability': 0.9980944991111755}, {'value': ['get', 'hash', 'code'], 'probability': 0.0017278128070756793}, {'value': ['rehash'], 'probability': 7.149853627197444e-05}, {'value': ['hash', 'of'], 'probability': 5.731191413360648e-05}, {'value': ['hash'], 'probability': 2.3388254703604616e-05}, {'value': ['hash', 'code', 'of'], 'probability': 8.194310794351622e-06}, {'value': ['calculate', 'hash', 'code'], 'probability': 5.849668468727032e-06}, {'value': ['compute', 'hash'], 'probability': 4.13397719967179e-06}, {'value': ['norm', 'sq'], 'probability': 3.7920024169579847e-06}, {'value': ['do', 'hash', 'code'], 'probability': 3.449708401603857e-06}]","[0.75676125, 0.6153521, 0.09503736, 0.66832966, 1.0, 0.5694589, 0.72110593, 0.84505117, 0.04426203, 0.59647787]",0.7564655440362059
918,918,"public String toString() {if (size == 0)return ""[]"";Node[] nodes = this.nodes;StringBuilder buffer = new StringBuilder(32);buffer.append('[');buffer.append(nodes[0].value);for (int i = 1; i < size; i++) {buffer.append("", "");buffer.append(nodes[i].value);}buffer.append(']');return buffer.toString();}
","public String [MASK]() {if (size == 0)return ""[]"";Node[] nodes = this.nodes;StringBuilder buffer = new StringBuilder(32);buffer.append('[');buffer.append(nodes[0].value);for (int i = 1; i < size; i++) {buffer.append("", "");buffer.append(nodes[i].value);}buffer.append(']');return buffer.[MASK]();}
",toString,"[{'value': ['size'], 'probability': 0.6113797426223755}, {'value': ['next'], 'probability': 0.11323440074920654}, {'value': ['list'], 'probability': 0.03394978493452072}, {'value': ['build'], 'probability': 0.027499325573444366}, {'value': ['value'], 'probability': 0.027253439649939537}]","[0.45955554, 0.73751295, 0.48583958, 0.68664783, 0.5015228]",0.413519504333369,"[{'value': ['to', 'string'], 'probability': 0.9958235025405884}, {'value': ['get', 'text'], 'probability': 0.0016402569599449635}, {'value': ['get', 'name'], 'probability': 0.0006723792175762355}, {'value': ['get', 'string'], 'probability': 0.00041990395402535796}, {'value': ['get', 'type', 'name'], 'probability': 0.00033636423177085817}, {'value': ['get', 'label'], 'probability': 0.00030019713449291885}, {'value': ['get', 'string', 'representation'], 'probability': 0.0002817456843331456}, {'value': ['get', 'value', 'as', 'string'], 'probability': 0.00019724959565792233}, {'value': ['get', 'param', 'string'], 'probability': 0.00019215181237086654}, {'value': ['get', 'signature'], 'probability': 0.00013630490866489708}]","[0.84910345, 0.6951814, 0.7662066, 0.6703567, 0.71424925, 0.67679405, 0.6667916, 0.7687909, 0.54174256, 0.6963911]",0.8484760617757827
919,919,"public float getValue() {return value;}
","public float [MASK]() {return value;}
",getValue,"[{'value': ['value'], 'probability': 0.8501659035682678}, {'value': ['get'], 'probability': 0.018140485510230064}, {'value': ['id'], 'probability': 0.00618500541895628}, {'value': ['status'], 'probability': 0.00541854090988636}, {'value': ['boost'], 'probability': 0.003628905164077878}]","[0.46303764, 1.0, 0.2945777, 0.4263407, 0.48529312]",0.4176924908111952,"[{'value': ['get', 'value'], 'probability': 0.7901611328125}, {'value': ['float', 'value'], 'probability': 0.10267908871173859}, {'value': ['value'], 'probability': 0.07632063329219818}, {'value': ['get'], 'probability': 0.017327938228845596}, {'value': ['get', 'float'], 'probability': 0.004022909794002771}, {'value': ['get', 'float', 'value'], 'probability': 0.003900863230228424}, {'value': ['as', 'float'], 'probability': 0.0019485306693241}, {'value': ['get', 'number'], 'probability': 0.001542750047519803}, {'value': ['long', 'value'], 'probability': 0.0014820459764450788}, {'value': ['get', 'alpha'], 'probability': 0.0006140804034657776}]","[0.8500731, 0.45959836, 0.46303764, 1.0, 0.84481704, 0.78096455, 0.5980391, 0.87729096, 0.65947056, 0.7418046]",0.7819498187971033
920,920,"public static long getCPtr(btTriangleConvexcastCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btTriangleConvexcastCallback obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.0653790608048439}, {'value': ['read'], 'probability': 0.051520802080631256}, {'value': ['skip'], 'probability': 0.03858983516693115}, {'value': ['execute'], 'probability': 0.038007285445928574}, {'value': ['process'], 'probability': 0.031119992956519127}]","[1.0, 0.5726487, 0.49507433, 0.37713256, 0.52250975]",0.1445815031016977,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
921,921,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
922,922,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btTriangleConvexcastCallback(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btTriangleConvexcastCallback(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.6083192229270935}, {'value': ['start'], 'probability': 0.049465034157037735}, {'value': ['clear'], 'probability': 0.03229623660445213}, {'value': ['test'], 'probability': 0.023834995925426483}, {'value': ['close'], 'probability': 0.022200562059879303}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.10496158]",0.1041255896549055,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
923,923,"protected void swigDirectorDisconnect() {swigCMemOwn = false;delete();}
","protected void [MASK]() {swigCMemOwn = false;delete();}
",swigDirectorDisconnect,"[{'value': ['run'], 'probability': 0.2597951889038086}, {'value': ['destroy'], 'probability': 0.042744945734739304}, {'value': ['clear'], 'probability': 0.0412781797349453}, {'value': ['remove'], 'probability': 0.0399308055639267}, {'value': ['hide'], 'probability': 0.03766871616244316}]","[-0.087563194, -0.15696473, -0.13124146, -0.053591672, -0.11020877]",-0.0411667356580585,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 1.374898084272047e-09}, {'value': ['delete', 'file'], 'probability': 7.658385037245807e-11}, {'value': ['delete', 'user'], 'probability': 7.463477058600176e-11}, {'value': ['abort'], 'probability': 4.3323098580794195e-11}, {'value': ['add', 'delete'], 'probability': 4.195608097057324e-11}, {'value': ['test', 'delete'], 'probability': 3.981910634553998e-11}, {'value': ['remove'], 'probability': 3.698968908949496e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.1723352283675723e-11}, {'value': ['delete', 'group'], 'probability': 1.1743549709064549e-11}]","[-0.05036918, -0.07227076, -0.12502779, -0.030638134, 0.05407105, -0.042249326, -0.13754319, -0.053591672, -0.22770803, -0.192311]",-0.05036918012532099
924,924,"public void swigReleaseOwnership() {swigCMemOwn = false;CollisionJNI.btTriangleConvexcastCallback_change_ownership(this, swigCPtr, false);}
","public void [MASK]() {swigCMemOwn = false;CollisionJNI.btTriangleConvexcastCallback_change_ownership(this, swigCPtr, false);}
",swigReleaseOwnership,"[{'value': ['run'], 'probability': 0.6618812680244446}, {'value': ['clear'], 'probability': 0.03731818124651909}, {'value': ['test'], 'probability': 0.02744258940219879}, {'value': ['setup'], 'probability': 0.012359756976366043}, {'value': ['close'], 'probability': 0.011766473762691021}]","[-0.087563194, -0.13124146, -0.15072986, -0.05206945, -0.20058393]",-0.0699942796938979,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['destroy'], 'probability': 1.9466124545619579e-10}, {'value': ['update'], 'probability': 1.1577001857165925e-10}, {'value': ['move'], 'probability': 1.0214466078517503e-10}, {'value': ['abort'], 'probability': 5.741962114114152e-11}, {'value': ['do', 'delete'], 'probability': 5.2279860995874117e-11}, {'value': ['remove'], 'probability': 2.945415439326027e-11}, {'value': ['delete', 'file'], 'probability': 2.5761028726867252e-11}, {'value': ['finish'], 'probability': 1.7399859331135303e-11}, {'value': ['save'], 'probability': 1.5620383458925247e-11}]","[-0.05036918, -0.15696473, -0.20058964, -0.16200402, 0.05407105, -0.07227076, -0.053591672, -0.12502779, -0.015956704, -0.017662918]",-0.050369180076351515
925,925,"public void swigTakeOwnership() {swigCMemOwn = true;CollisionJNI.btTriangleConvexcastCallback_change_ownership(this, swigCPtr, true);}
","public void [MASK]() {swigCMemOwn = true;CollisionJNI.btTriangleConvexcastCallback_change_ownership(this, swigCPtr, true);}
",swigTakeOwnership,"[{'value': ['run'], 'probability': 0.653435230255127}, {'value': ['clear'], 'probability': 0.034933146089315414}, {'value': ['test'], 'probability': 0.02662210911512375}, {'value': ['close'], 'probability': 0.012972846627235413}, {'value': ['setup'], 'probability': 0.012757539749145508}]","[-0.087563194, -0.13124146, -0.15072986, -0.20058393, -0.05206945]",-0.0690807226255551,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['update'], 'probability': 1.6694683135920485e-10}, {'value': ['destroy'], 'probability': 1.6196419205805057e-10}, {'value': ['move'], 'probability': 1.5943645015337182e-10}, {'value': ['abort'], 'probability': 6.830021270776143e-11}, {'value': ['do', 'delete'], 'probability': 5.4813178301804655e-11}, {'value': ['upload'], 'probability': 2.8569027352154386e-11}, {'value': ['finish'], 'probability': 2.5143404719374374e-11}, {'value': ['remove'], 'probability': 1.9486174826499614e-11}, {'value': ['save'], 'probability': 1.689471999799519e-11}]","[-0.05036918, -0.20058964, -0.15696473, -0.16200402, 0.05407105, -0.07227076, 0.043096792, -0.015956704, -0.053591672, -0.017662918]",-0.05036918008552081
926,926,"public void setConvexShape(btConvexShape value) {CollisionJNI.btTriangleConvexcastCallback_convexShape_set(swigCPtr, this, btConvexShape.getCPtr(value), value);}
","public void [MASK](btConvexShape value) {CollisionJNI.btTriangleConvexcastCallback_convexShape_set(swigCPtr, this, btConvexShape.getCPtr(value), value);}
",setConvexShape,"[{'value': ['set'], 'probability': 0.6154184937477112}, {'value': ['put'], 'probability': 0.031254034489393234}, {'value': ['add'], 'probability': 0.022170357406139374}, {'value': ['update'], 'probability': 0.017397232353687286}, {'value': ['execute'], 'probability': 0.014588302001357079}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.35167885]",0.6639338016041836,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
927,927,"public btConvexShape getConvexShape() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_convexShape_get(swigCPtr, this);return (cPtr == 0) ? null : new btConvexShape(cPtr, false);}
","public btConvexShape [MASK]() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_convexShape_get(swigCPtr, this);return (cPtr == 0) ? null : new btConvexShape(cPtr, false);}
",getConvexShape,"[{'value': ['get'], 'probability': 0.1833263784646988}, {'value': ['create'], 'probability': 0.17224037647247314}, {'value': ['build'], 'probability': 0.06305518001317978}, {'value': ['transform'], 'probability': 0.05614258348941803}, {'value': ['update'], 'probability': 0.037466030567884445}]","[1.0, 0.62328804, 0.5626448, 0.33052462, 0.36048478]",0.3582218522068927,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
928,928,"public void setConvexShapeFrom(btTransform value) {CollisionJNI.btTriangleConvexcastCallback_convexShapeFrom_set(swigCPtr, this, btTransform.getCPtr(value), value);}
","public void [MASK](btTransform value) {CollisionJNI.btTriangleConvexcastCallback_convexShapeFrom_set(swigCPtr, this, btTransform.getCPtr(value), value);}
",setConvexShapeFrom,"[{'value': ['set'], 'probability': 0.6759010553359985}, {'value': ['put'], 'probability': 0.04150199517607689}, {'value': ['add'], 'probability': 0.019530929625034332}, {'value': ['execute'], 'probability': 0.015130103565752506}, {'value': ['apply'], 'probability': 0.012854880653321743}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.5010617]",0.7305658632552587,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
929,929,"public btTransform getConvexShapeFrom() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_convexShapeFrom_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
","public btTransform [MASK]() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_convexShapeFrom_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
",getConvexShapeFrom,"[{'value': ['create'], 'probability': 0.1639946699142456}, {'value': ['build'], 'probability': 0.09112639725208282}, {'value': ['get'], 'probability': 0.0859430804848671}, {'value': ['transform'], 'probability': 0.08500591665506363}, {'value': ['update'], 'probability': 0.05187563598155975}]","[0.62328804, 0.5626448, 1.0, 0.33052462, 0.36048478]",0.286227713570534,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
930,930,"public void setConvexShapeTo(btTransform value) {CollisionJNI.btTriangleConvexcastCallback_convexShapeTo_set(swigCPtr, this, btTransform.getCPtr(value), value);}
","public void [MASK](btTransform value) {CollisionJNI.btTriangleConvexcastCallback_convexShapeTo_set(swigCPtr, this, btTransform.getCPtr(value), value);}
",setConvexShapeTo,"[{'value': ['set'], 'probability': 0.6388834118843079}, {'value': ['put'], 'probability': 0.03761409595608711}, {'value': ['add'], 'probability': 0.021630920469760895}, {'value': ['execute'], 'probability': 0.020399492233991623}, {'value': ['update'], 'probability': 0.01654181443154812}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.41854778]",0.6938628559660083,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
931,931,"public btTransform getConvexShapeTo() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_convexShapeTo_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
","public btTransform [MASK]() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_convexShapeTo_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
",getConvexShapeTo,"[{'value': ['create'], 'probability': 0.1538694202899933}, {'value': ['build'], 'probability': 0.09216044843196869}, {'value': ['transform'], 'probability': 0.08657433837652206}, {'value': ['get'], 'probability': 0.08198929578065872}, {'value': ['update'], 'probability': 0.059293441474437714}]","[0.62328804, 0.5626448, 0.33052462, 1.0, 0.36048478]",0.279737193390142,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
932,932,"public void setTriangleToWorld(btTransform value) {CollisionJNI.btTriangleConvexcastCallback_triangleToWorld_set(swigCPtr, this, btTransform.getCPtr(value), value);}
","public void [MASK](btTransform value) {CollisionJNI.btTriangleConvexcastCallback_triangleToWorld_set(swigCPtr, this, btTransform.getCPtr(value), value);}
",setTriangleToWorld,"[{'value': ['set'], 'probability': 0.5897554755210876}, {'value': ['put'], 'probability': 0.03965868800878525}, {'value': ['execute'], 'probability': 0.022527296096086502}, {'value': ['add'], 'probability': 0.022111011669039726}, {'value': ['update'], 'probability': 0.018029244616627693}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.41854778]",0.6479742443899581,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
933,933,"public btTransform getTriangleToWorld() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_triangleToWorld_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
","public btTransform [MASK]() {long cPtr = CollisionJNI.btTriangleConvexcastCallback_triangleToWorld_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
",getTriangleToWorld,"[{'value': ['create'], 'probability': 0.1503891944885254}, {'value': ['build'], 'probability': 0.08986762911081314}, {'value': ['transform'], 'probability': 0.08762918412685394}, {'value': ['get'], 'probability': 0.06522806733846664}, {'value': ['update'], 'probability': 0.06410623341798782}]","[0.62328804, 0.5626448, 0.33052462, 1.0, 0.36048478]",0.2616003297575657,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
934,934,"public void setHitFraction(float value) {CollisionJNI.btTriangleConvexcastCallback_hitFraction_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btTriangleConvexcastCallback_hitFraction_set(swigCPtr, this, value);}
",setHitFraction,"[{'value': ['set'], 'probability': 0.6696631908416748}, {'value': ['put'], 'probability': 0.09180989116430283}, {'value': ['write'], 'probability': 0.010940434411168098}, {'value': ['update'], 'probability': 0.010170791298151016}, {'value': ['get'], 'probability': 0.009907849133014679}]","[1.0, 0.7944568, 0.46259418, 0.41854778, 0.65028083]",0.7583630091454058,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
935,935,"public float getHitFraction() {return CollisionJNI.btTriangleConvexcastCallback_hitFraction_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btTriangleConvexcastCallback_hitFraction_get(swigCPtr, this);}
",getHitFraction,"[{'value': ['run'], 'probability': 0.0757216140627861}, {'value': ['get'], 'probability': 0.048262033611536026}, {'value': ['build'], 'probability': 0.043926991522312164}, {'value': ['start'], 'probability': 0.03523881733417511}, {'value': ['execute'], 'probability': 0.031076474115252495}]","[0.65114945, 1.0, 0.5626448, 0.7199945, 0.37713256]",0.1593751180993596,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
936,936,"public void setTriangleCollisionMargin(float value) {CollisionJNI.btTriangleConvexcastCallback_triangleCollisionMargin_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btTriangleConvexcastCallback_triangleCollisionMargin_set(swigCPtr, this, value);}
",setTriangleCollisionMargin,"[{'value': ['set'], 'probability': 0.7203825116157532}, {'value': ['put'], 'probability': 0.06480567902326584}, {'value': ['get'], 'probability': 0.012209801934659481}, {'value': ['add'], 'probability': 0.011300483718514442}, {'value': ['update'], 'probability': 0.008047015406191349}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.41854778]",0.7889218423113397,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
937,937,"public float getTriangleCollisionMargin() {return CollisionJNI.btTriangleConvexcastCallback_triangleCollisionMargin_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btTriangleConvexcastCallback_triangleCollisionMargin_get(swigCPtr, this);}
",getTriangleCollisionMargin,"[{'value': ['get'], 'probability': 0.07977607101202011}, {'value': ['run'], 'probability': 0.04085005819797516}, {'value': ['float'], 'probability': 0.03766094893217087}, {'value': ['start'], 'probability': 0.03463931754231453}, {'value': ['next'], 'probability': 0.0335456021130085}]","[1.0, 0.65114945, 0.2808844, 0.7199945, 0.6966621]",0.165264004654182,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
938,938,"public void setAllowedPenetration(float value) {CollisionJNI.btTriangleConvexcastCallback_allowedPenetration_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btTriangleConvexcastCallback_allowedPenetration_set(swigCPtr, this, value);}
",setAllowedPenetration,"[{'value': ['set'], 'probability': 0.7058789134025574}, {'value': ['put'], 'probability': 0.07734134793281555}, {'value': ['add'], 'probability': 0.011187818832695484}, {'value': ['get'], 'probability': 0.01079767569899559}, {'value': ['update'], 'probability': 0.008887594565749168}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.41854778]",0.7837535464410665,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
939,939,"public float getAllowedPenetration() {return CollisionJNI.btTriangleConvexcastCallback_allowedPenetration_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btTriangleConvexcastCallback_allowedPenetration_get(swigCPtr, this);}
",getAllowedPenetration,"[{'value': ['float'], 'probability': 0.07422248274087906}, {'value': ['get'], 'probability': 0.06511837989091873}, {'value': ['run'], 'probability': 0.04449119046330452}, {'value': ['bar'], 'probability': 0.027984851971268654}, {'value': ['start'], 'probability': 0.027865247800946236}]","[0.2808844, 1.0, 0.65114945, 0.45318797, 0.7199945]",0.1476819536645197,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
940,940,"public void processTriangle(btVector3 triangle, int partId, int triangleIndex) {if (getClass() == btTriangleConvexcastCallback.class)CollisionJNI.btTriangleConvexcastCallback_processTriangle(swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);elseCollisionJNI.btTriangleConvexcastCallback_processTriangleSwigExplicitbtTriangleConvexcastCallback(swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);}
","public void [MASK](btVector3 triangle, int partId, int triangleIndex) {if (getClass() == btTriangleConvexcastCallback.class)CollisionJNI.btTriangleConvexcastCallback_[MASK](swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);elseCollisionJNI.btTriangleConvexcastCallback_[MASK]SwigExplicitbtTriangleConvexcastCallback(swigCPtr, this, btVector3.getCPtr(triangle), triangle, partId, triangleIndex);}
",processTriangle,"[{'value': ['add'], 'probability': 0.04751192405819893}, {'value': ['test'], 'probability': 0.03862835466861725}, {'value': ['setup'], 'probability': 0.03467240184545517}, {'value': ['start'], 'probability': 0.03217685595154762}, {'value': ['write'], 'probability': 0.028090402483940125}]","[0.44585663, 0.4714813, 0.43366188, 0.6356873, 0.35321146]",0.0848084224652367,"[{'value': ['process', 'triangle'], 'probability': 0.907343864440918}, {'value': ['resolve', 'pick'], 'probability': 0.09264930337667465}, {'value': ['atan'], 'probability': 1.2616084177352604e-06}, {'value': ['expand', 'property'], 'probability': 1.0897422271227697e-06}, {'value': ['set', 'read', 'write'], 'probability': 9.004243679555657e-07}, {'value': ['create', 'content', 'provider'], 'probability': 8.515685294696596e-07}, {'value': ['print', 'short'], 'probability': 7.967281590026687e-07}, {'value': ['get', 'triangles'], 'probability': 7.277977829289739e-07}, {'value': ['is', 'read', 'write'], 'probability': 6.750777856723289e-07}, {'value': ['drop', 'to', 'frame'], 'probability': 6.006728767715686e-07}]","[0.82335734, 0.5912957, -0.34708092, 0.4724669, 0.48806924, 0.57178235, 0.41019613, 0.46484786, 0.53229076, 0.54464674]",0.8018537203764725
941,941,"public float reportHit(Vector3 hitNormalLocal, Vector3 hitPointLocal, float hitFraction, int partId, int triangleIndex) {return CollisionJNI.btTriangleConvexcastCallback_reportHit(swigCPtr, this, hitNormalLocal, hitPointLocal, hitFraction, partId, triangleIndex);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public float [MASK](Vector3 hitNormalLocal, Vector3 hitPointLocal, float hitFraction, int partId, int triangleIndex) {return CollisionJNI.btTriangleConvexcastCallback_[MASK](swigCPtr, this, hitNormalLocal, hitPointLocal, hitFraction, partId, triangleIndex);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",reportHit,"[{'value': ['destroy'], 'probability': 0.17870071530342102}, {'value': ['create'], 'probability': 0.06665272265672684}, {'value': ['save'], 'probability': 0.05980508774518967}, {'value': ['update'], 'probability': 0.05121453106403351}, {'value': ['generate'], 'probability': 0.04741496220231056}]","[0.27774274, 0.3896626, 0.34109223, 0.5244005, 0.34463644]",0.1392017984767883,"[{'value': ['process', 'triangle'], 'probability': 0.8562504053115845}, {'value': ['resolve', 'pick'], 'probability': 0.1436363309621811}, {'value': ['create', 'content', 'provider'], 'probability': 7.160300447139889e-05}, {'value': ['expand', 'property'], 'probability': 9.145817784883548e-06}, {'value': ['create', 'output', 'panel'], 'probability': 7.847011147532612e-06}, {'value': ['with', 'port'], 'probability': 7.4339091042929795e-06}, {'value': ['atan'], 'probability': 4.450841970538022e-06}, {'value': ['calculate', 'crc'], 'probability': 4.420823643158656e-06}, {'value': ['get', 'renderer'], 'probability': 4.404024821269559e-06}, {'value': ['generate', 'name'], 'probability': 3.993378413724713e-06}]","[0.3810555, 0.45933172, 0.44277856, 0.4347279, 0.6217307, 0.47248757, -0.18503064, 0.22584315, 0.34919333, 0.47283792]",0.3923033215987437
942,942,"public static long getCPtr(SoftBodyClusterData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](SoftBodyClusterData obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['execute'], 'probability': 0.11695291846990585}, {'value': ['get'], 'probability': 0.07185593247413635}, {'value': ['run'], 'probability': 0.05711403861641884}, {'value': ['read'], 'probability': 0.04720545932650566}, {'value': ['update'], 'probability': 0.030893949791789055}]","[0.37713256, 1.0, 0.65114945, 0.5726487, 0.36048478]",0.1913214052738355,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
943,943,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
944,944,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.delete_SoftBodyClusterData(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;SoftbodyJNI.[MASK]_SoftBodyClusterData(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.758500337600708}, {'value': ['test'], 'probability': 0.026046819984912872}, {'value': ['start'], 'probability': 0.020465314388275146}, {'value': ['clear'], 'probability': 0.01485995203256607}, {'value': ['close'], 'probability': 0.012742274440824986}]","[0.13931048, 0.14537679, 0.15163165, 0.18840031, 0.10496158]",0.116693906819281,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
945,945,"public void setFramexform(btTransformFloatData value) {SoftbodyJNI.SoftBodyClusterData_framexform_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);}
","public void [MASK](btTransformFloatData value) {SoftbodyJNI.SoftBodyClusterData_framexform_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);}
",setFramexform,"[{'value': ['set'], 'probability': 0.7008504867553711}, {'value': ['put'], 'probability': 0.03236496075987816}, {'value': ['add'], 'probability': 0.016703087836503983}, {'value': ['setup'], 'probability': 0.014162064529955387}, {'value': ['update'], 'probability': 0.013952597975730896}]","[1.0, 0.7944568, 0.5084879, 0.35182503, 0.41854778]",0.7458787646489882,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
946,946,"public btTransformFloatData getFramexform() {long cPtr = SoftbodyJNI.SoftBodyClusterData_framexform_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);}
","public btTransformFloatData [MASK]() {long cPtr = SoftbodyJNI.SoftBodyClusterData_framexform_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);}
",getFramexform,"[{'value': ['get'], 'probability': 0.19693709909915924}, {'value': ['build'], 'probability': 0.17084982991218567}, {'value': ['create'], 'probability': 0.12202508747577667}, {'value': ['clone'], 'probability': 0.029236041009426117}, {'value': ['resolve'], 'probability': 0.02706776186823845}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.427468]",0.3855630844292578,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
947,947,"public void setLocii(SWIGTYPE_p_btMatrix3x3FloatData value) {SoftbodyJNI.SoftBodyClusterData_locii_set(swigCPtr, this, SWIGTYPE_p_btMatrix3x3FloatData.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_btMatrix3x3FloatData value) {SoftbodyJNI.SoftBodyClusterData_locii_set(swigCPtr, this, SWIGTYPE_p_btMatrix3x3FloatData.getCPtr(value));}
",setLocii,"[{'value': ['set'], 'probability': 0.7117243409156799}, {'value': ['put'], 'probability': 0.03814782574772835}, {'value': ['add'], 'probability': 0.02344285324215889}, {'value': ['setup'], 'probability': 0.0201625507324934}, {'value': ['update'], 'probability': 0.019051743671298027}]","[1.0, 0.7944568, 0.5084879, 0.35182503, 0.41854778]",0.7690193014683249,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
948,948,"public SWIGTYPE_p_btMatrix3x3FloatData getLocii() {return new SWIGTYPE_p_btMatrix3x3FloatData(SoftbodyJNI.SoftBodyClusterData_locii_get(swigCPtr, this), true);}
","public SWIGTYPE_p_btMatrix3x3FloatData [MASK]() {return new SWIGTYPE_p_btMatrix3x3FloatData(SoftbodyJNI.SoftBodyClusterData_locii_get(swigCPtr, this), true);}
",getLocii,"[{'value': ['##s'], 'probability': 0.2774137556552887}, {'value': ['get'], 'probability': 0.20048493146896362}, {'value': ['build'], 'probability': 0.17796604335308075}, {'value': ['create'], 'probability': 0.056462403386831284}, {'value': ['##base'], 'probability': 0.022555653005838394}]","[0.0, 1.0, 0.5626448, 0.62328804, 0.0]",0.335808937202795,"[{'value': ['copy'], 'probability': 0.3153155744075775}, {'value': ['parse'], 'probability': 0.1345229595899582}, {'value': ['float', 'val'], 'probability': 0.09280123561620712}, {'value': ['get', 'preds'], 'probability': 0.09246659278869629}, {'value': ['get', 'statement', 'container'], 'probability': 0.07743458449840546}, {'value': ['get', 'cd'], 'probability': 0.06671249866485596}, {'value': ['new', 'server'], 'probability': 0.06109337881207466}, {'value': ['what'], 'probability': 0.05475763976573944}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05357282608747482}, {'value': ['edge', 'type'], 'probability': 0.051322679966688156}]","[0.4466728, 0.04902999, 0.22965817, 1.0, 0.73810506, 0.80065113, 0.542403, 0.76382285, 0.7738402, 0.5832915]",0.5181412585290037
949,949,"public void setInvwi(SWIGTYPE_p_btMatrix3x3FloatData value) {SoftbodyJNI.SoftBodyClusterData_invwi_set(swigCPtr, this, SWIGTYPE_p_btMatrix3x3FloatData.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_btMatrix3x3FloatData value) {SoftbodyJNI.SoftBodyClusterData_invwi_set(swigCPtr, this, SWIGTYPE_p_btMatrix3x3FloatData.getCPtr(value));}
",setInvwi,"[{'value': ['set'], 'probability': 0.6711307168006897}, {'value': ['put'], 'probability': 0.04244314506649971}, {'value': ['setup'], 'probability': 0.025233672931790352}, {'value': ['add'], 'probability': 0.02229958027601242}, {'value': ['update'], 'probability': 0.018727248534560204}]","[1.0, 0.7944568, 0.35182503, 0.5084879, 0.41854778]",0.732905113455345,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
950,950,"public SWIGTYPE_p_btMatrix3x3FloatData getInvwi() {return new SWIGTYPE_p_btMatrix3x3FloatData(SoftbodyJNI.SoftBodyClusterData_invwi_get(swigCPtr, this), true);}
","public SWIGTYPE_p_btMatrix3x3FloatData [MASK]() {return new SWIGTYPE_p_btMatrix3x3FloatData(SoftbodyJNI.SoftBodyClusterData_invwi_get(swigCPtr, this), true);}
",getInvwi,"[{'value': ['##s'], 'probability': 0.34794536232948303}, {'value': ['get'], 'probability': 0.18035922944545746}, {'value': ['build'], 'probability': 0.14117513597011566}, {'value': ['create'], 'probability': 0.042150747030973434}, {'value': ['##base'], 'probability': 0.023853404447436333}]","[0.0, 1.0, 0.5626448, 0.62328804, 0.0]",0.2860627390272348,"[{'value': ['copy'], 'probability': 0.3153155744075775}, {'value': ['parse'], 'probability': 0.1345229595899582}, {'value': ['float', 'val'], 'probability': 0.09280123561620712}, {'value': ['get', 'preds'], 'probability': 0.09246659278869629}, {'value': ['get', 'statement', 'container'], 'probability': 0.07743458449840546}, {'value': ['get', 'cd'], 'probability': 0.06671249866485596}, {'value': ['new', 'server'], 'probability': 0.06109337881207466}, {'value': ['what'], 'probability': 0.05475763976573944}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05357282608747482}, {'value': ['edge', 'type'], 'probability': 0.051322679966688156}]","[0.4466728, 0.04902999, 0.22965817, 1.0, 0.73810506, 0.80065113, 0.542403, 0.76382285, 0.7738402, 0.5832915]",0.5181412585290037
951,951,"public void setCom(btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_com_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
","public void [MASK](btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_com_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
",setCom,"[{'value': ['set'], 'probability': 0.6307979226112366}, {'value': ['put'], 'probability': 0.03968534246087074}, {'value': ['execute'], 'probability': 0.03214506804943085}, {'value': ['update'], 'probability': 0.027038468047976494}, {'value': ['add'], 'probability': 0.01758207380771637}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.5084879]",0.6938881147015317,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
952,952,"public btVector3FloatData getCom() {long cPtr = SoftbodyJNI.SoftBodyClusterData_com_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
","public btVector3FloatData [MASK]() {long cPtr = SoftbodyJNI.SoftBodyClusterData_com_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
",getCom,"[{'value': ['build'], 'probability': 0.2616303265094757}, {'value': ['get'], 'probability': 0.14982999861240387}, {'value': ['create'], 'probability': 0.12729351222515106}, {'value': ['clone'], 'probability': 0.05131912603974342}, {'value': ['setup'], 'probability': 0.037745848298072815}]","[0.5626448, 1.0, 0.62328804, 0.166604, 0.37349153]",0.399023185189076,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
953,953,"public void setVimpulses(btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_vimpulses_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
","public void [MASK](btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_vimpulses_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
",setVimpulses,"[{'value': ['set'], 'probability': 0.5202680230140686}, {'value': ['put'], 'probability': 0.04751225933432579}, {'value': ['execute'], 'probability': 0.0322193019092083}, {'value': ['add'], 'probability': 0.024904770776629448}, {'value': ['update'], 'probability': 0.02398037351667881}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.41854778]",0.5920460127432059,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
954,954,"public btVector3FloatData getVimpulses() {long cPtr = SoftbodyJNI.SoftBodyClusterData_vimpulses_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
","public btVector3FloatData [MASK]() {long cPtr = SoftbodyJNI.SoftBodyClusterData_vimpulses_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
",getVimpulses,"[{'value': ['get'], 'probability': 0.22443532943725586}, {'value': ['build'], 'probability': 0.20968370139598846}, {'value': ['create'], 'probability': 0.12480621784925461}, {'value': ['clone'], 'probability': 0.06354750692844391}, {'value': ['setup'], 'probability': 0.02399345673620701}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.37349153]",0.4397516131781172,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
955,955,"public void setDimpulses(btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_dimpulses_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
","public void [MASK](btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_dimpulses_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
",setDimpulses,"[{'value': ['set'], 'probability': 0.4782647490501404}, {'value': ['put'], 'probability': 0.06995316594839096}, {'value': ['execute'], 'probability': 0.033037200570106506}, {'value': ['update'], 'probability': 0.02293403632938862}, {'value': ['get'], 'probability': 0.019479090347886086}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.65028083]",0.5677238697425446,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
956,956,"public btVector3FloatData getDimpulses() {long cPtr = SoftbodyJNI.SoftBodyClusterData_dimpulses_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
","public btVector3FloatData [MASK]() {long cPtr = SoftbodyJNI.SoftBodyClusterData_dimpulses_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
",getDimpulses,"[{'value': ['get'], 'probability': 0.19984924793243408}, {'value': ['build'], 'probability': 0.18030992150306702}, {'value': ['create'], 'probability': 0.09840494394302368}, {'value': ['clone'], 'probability': 0.07083410024642944}, {'value': ['expand'], 'probability': 0.024904809892177582}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.47652406]",0.3863032934228712,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
957,957,"public void setLv(btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_lv_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
","public void [MASK](btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_lv_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
",setLv,"[{'value': ['set'], 'probability': 0.6009618639945984}, {'value': ['put'], 'probability': 0.043488383293151855}, {'value': ['update'], 'probability': 0.023077132180333138}, {'value': ['execute'], 'probability': 0.022317901253700256}, {'value': ['add'], 'probability': 0.019450582563877106}]","[1.0, 0.7944568, 0.41854778, 0.35167885, 0.5084879]",0.6629095066841673,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
958,958,"public btVector3FloatData getLv() {long cPtr = SoftbodyJNI.SoftBodyClusterData_lv_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
","public btVector3FloatData [MASK]() {long cPtr = SoftbodyJNI.SoftBodyClusterData_lv_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
",getLv,"[{'value': ['get'], 'probability': 0.2819683849811554}, {'value': ['build'], 'probability': 0.19464270770549774}, {'value': ['create'], 'probability': 0.09043245017528534}, {'value': ['clone'], 'probability': 0.05469392612576485}, {'value': ['setup'], 'probability': 0.022618722170591354}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.37349153]",0.4654086803554134,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
959,959,"public void setAv(btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_av_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
","public void [MASK](btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_av_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
",setAv,"[{'value': ['set'], 'probability': 0.5357810854911804}, {'value': ['put'], 'probability': 0.0466601587831974}, {'value': ['execute'], 'probability': 0.029562028124928474}, {'value': ['update'], 'probability': 0.02653944492340088}, {'value': ['add'], 'probability': 0.02309400402009487}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.5084879]",0.6060979518810722,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
960,960,"public btVector3FloatData getAv() {long cPtr = SoftbodyJNI.SoftBodyClusterData_av_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
","public btVector3FloatData [MASK]() {long cPtr = SoftbodyJNI.SoftBodyClusterData_av_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
",getAv,"[{'value': ['get'], 'probability': 0.29221832752227783}, {'value': ['build'], 'probability': 0.17763788998126984}, {'value': ['create'], 'probability': 0.0858914703130722}, {'value': ['clone'], 'probability': 0.0525805689394474}, {'value': ['setup'], 'probability': 0.021923460066318512}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.37349153]",0.4626488442983557,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
961,961,"public void setFramerefs(btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_framerefs_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
","public void [MASK](btVector3FloatData value) {SoftbodyJNI.SoftBodyClusterData_framerefs_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);}
",setFramerefs,"[{'value': ['set'], 'probability': 0.43346092104911804}, {'value': ['execute'], 'probability': 0.04428175091743469}, {'value': ['put'], 'probability': 0.036781229078769684}, {'value': ['update'], 'probability': 0.029041288420557976}, {'value': ['setup'], 'probability': 0.025311041623353958}]","[1.0, 0.35167885, 0.7944568, 0.41854778, 0.35182503]",0.4993151977493262,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
962,962,"public btVector3FloatData getFramerefs() {long cPtr = SoftbodyJNI.SoftBodyClusterData_framerefs_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
","public btVector3FloatData [MASK]() {long cPtr = SoftbodyJNI.SoftBodyClusterData_framerefs_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);}
",getFramerefs,"[{'value': ['build'], 'probability': 0.2700793147087097}, {'value': ['get'], 'probability': 0.14298228919506073}, {'value': ['create'], 'probability': 0.08402722328901291}, {'value': ['clone'], 'probability': 0.05675138160586357}, {'value': ['setup'], 'probability': 0.03226834535598755}]","[0.5626448, 1.0, 0.62328804, 0.166604, 0.37349153]",0.368821129207236,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
963,963,"public void setNodeIndices(java.nio.IntBuffer value) {assert value.isDirect() : ""Buffer must be allocated direct."";{SoftbodyJNI.SoftBodyClusterData_nodeIndices_set(swigCPtr, this, value);}}
","public void [MASK](java.nio.IntBuffer value) {assert value.isDirect() : ""Buffer must be allocated direct."";{SoftbodyJNI.SoftBodyClusterData_nodeIndices_set(swigCPtr, this, value);}}
",setNodeIndices,"[{'value': ['set'], 'probability': 0.43294578790664673}, {'value': ['put'], 'probability': 0.11429190635681152}, {'value': ['apply'], 'probability': 0.07319929450750351}, {'value': ['write'], 'probability': 0.02957414649426937}, {'value': ['execute'], 'probability': 0.024597056210041046}]","[1.0, 0.7944568, 0.5010617, 0.46259418, 0.35167885]",0.5827542216192634,"[{'value': ['get', 'c', 'ptr'], 'probability': 0.36156246066093445}, {'value': ['clone'], 'probability': 0.3346470892429352}, {'value': ['dup'], 'probability': 0.09324507415294647}, {'value': ['set', 'to'], 'probability': 0.057662442326545715}, {'value': ['do', 'new'], 'probability': 0.03322523832321167}, {'value': ['get', 'copy'], 'probability': 0.03158662095665932}, {'value': ['get', 'last'], 'probability': 0.028515538200736046}, {'value': ['top'], 'probability': 0.021690208464860916}, {'value': ['get', 'signers'], 'probability': 0.019148152321577072}, {'value': ['what'], 'probability': 0.01871711201965809}]","[0.5129368, 0.17926283, -0.053811066, 0.9136955, 0.72707975, 0.6320299, 0.76464, 0.6455996, 0.47751373, 0.5966118]",0.3933555265013343
964,964,"public java.nio.IntBuffer getNodeIndices() {return SoftbodyJNI.SoftBodyClusterData_nodeIndices_get(swigCPtr, this);}
","public java.nio.IntBuffer [MASK]() {return SoftbodyJNI.SoftBodyClusterData_nodeIndices_get(swigCPtr, this);}
",getNodeIndices,"[{'value': ['keys'], 'probability': 0.082463838160038}, {'value': ['cache'], 'probability': 0.03002423606812954}, {'value': ['setup'], 'probability': 0.025765538215637207}, {'value': ['paint'], 'probability': 0.02551397867500782}, {'value': ['get'], 'probability': 0.02510102465748787}]","[0.39512447, 0.12606809, 0.37349153, 0.41529104, 1.0]",0.0816885395135309,"[{'value': ['get', 'keywords'], 'probability': 0.3902674913406372}, {'value': ['get', 'flags'], 'probability': 0.1653921902179718}, {'value': ['get', 'id'], 'probability': 0.11174400895833969}, {'value': ['get', 'value'], 'probability': 0.06489414721727371}, {'value': ['get', 'ids'], 'probability': 0.05163007602095604}, {'value': ['get', 'properties'], 'probability': 0.05122780054807663}, {'value': ['get', 'attributes'], 'probability': 0.04612896591424942}, {'value': ['get', 'name'], 'probability': 0.044803719967603683}, {'value': ['get', 'to'], 'probability': 0.03892369568347931}, {'value': ['get', 'options'], 'probability': 0.03498787060379982}]","[0.7609473, 0.75727946, 0.82231325, 0.8500731, 0.8027674, 0.80534285, 0.84504366, 0.8655689, 0.92994446, 0.88330656]",0.796840922747889
965,965,"public void setMasses(java.nio.FloatBuffer value) {assert value.isDirect() : ""Buffer must be allocated direct."";{SoftbodyJNI.SoftBodyClusterData_masses_set(swigCPtr, this, value);}}
","public void [MASK](java.nio.FloatBuffer value) {assert value.isDirect() : ""Buffer must be allocated direct."";{SoftbodyJNI.SoftBodyClusterData_masses_set(swigCPtr, this, value);}}
",setMasses,"[{'value': ['set'], 'probability': 0.5034528970718384}, {'value': ['put'], 'probability': 0.08645817637443542}, {'value': ['apply'], 'probability': 0.04669974744319916}, {'value': ['write'], 'probability': 0.026186194270849228}, {'value': ['add'], 'probability': 0.01886214315891266}]","[1.0, 0.7944568, 0.5010617, 0.46259418, 0.5084879]",0.6172443875796704,"[{'value': ['get', 'c', 'ptr'], 'probability': 0.36156246066093445}, {'value': ['clone'], 'probability': 0.3346470892429352}, {'value': ['dup'], 'probability': 0.09324507415294647}, {'value': ['set', 'to'], 'probability': 0.057662442326545715}, {'value': ['do', 'new'], 'probability': 0.03322523832321167}, {'value': ['get', 'copy'], 'probability': 0.03158662095665932}, {'value': ['get', 'last'], 'probability': 0.028515538200736046}, {'value': ['top'], 'probability': 0.021690208464860916}, {'value': ['get', 'signers'], 'probability': 0.019148152321577072}, {'value': ['what'], 'probability': 0.01871711201965809}]","[0.5129368, 0.17926283, -0.053811066, 0.9136955, 0.72707975, 0.6320299, 0.76464, 0.6455996, 0.47751373, 0.5966118]",0.3933555265013343
966,966,"public java.nio.FloatBuffer getMasses() {return SoftbodyJNI.SoftBodyClusterData_masses_get(swigCPtr, this);}
","public java.nio.FloatBuffer [MASK]() {return SoftbodyJNI.SoftBodyClusterData_masses_get(swigCPtr, this);}
",getMasses,"[{'value': ['build'], 'probability': 0.07386697828769684}, {'value': ['get'], 'probability': 0.06435687094926834}, {'value': ['create'], 'probability': 0.03967253491282463}, {'value': ['paint'], 'probability': 0.033882588148117065}, {'value': ['setup'], 'probability': 0.02675432525575161}]","[0.5626448, 1.0, 0.62328804, 0.41529104, 0.37349153]",0.1547088060845158,"[{'value': ['get', 'keywords'], 'probability': 0.3902674913406372}, {'value': ['get', 'flags'], 'probability': 0.1653921902179718}, {'value': ['get', 'id'], 'probability': 0.11174400895833969}, {'value': ['get', 'value'], 'probability': 0.06489414721727371}, {'value': ['get', 'ids'], 'probability': 0.05163007602095604}, {'value': ['get', 'properties'], 'probability': 0.05122780054807663}, {'value': ['get', 'attributes'], 'probability': 0.04612896591424942}, {'value': ['get', 'name'], 'probability': 0.044803719967603683}, {'value': ['get', 'to'], 'probability': 0.03892369568347931}, {'value': ['get', 'options'], 'probability': 0.03498787060379982}]","[0.7609473, 0.75727946, 0.82231325, 0.8500731, 0.8027674, 0.80534285, 0.84504366, 0.8655689, 0.92994446, 0.88330656]",0.796840922747889
967,967,"public void setNumFrameRefs(int value) {SoftbodyJNI.SoftBodyClusterData_numFrameRefs_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_numFrameRefs_set(swigCPtr, this, value);}
",setNumFrameRefs,"[{'value': ['set'], 'probability': 0.693027675151825}, {'value': ['put'], 'probability': 0.061767056584358215}, {'value': ['update'], 'probability': 0.01336981263011694}, {'value': ['execute'], 'probability': 0.012359066866338253}, {'value': ['get'], 'probability': 0.009126972407102585}]","[1.0, 0.7944568, 0.41854778, 0.35167885, 0.65028083]",0.7579763550426194,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
968,968,"public int getNumFrameRefs() {return SoftbodyJNI.SoftBodyClusterData_numFrameRefs_get(swigCPtr, this);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_numFrameRefs_get(swigCPtr, this);}
",getNumFrameRefs,"[{'value': ['get'], 'probability': 0.11140277981758118}, {'value': ['size'], 'probability': 0.061236683279275894}, {'value': ['build'], 'probability': 0.05310961976647377}, {'value': ['start'], 'probability': 0.04677842557430267}, {'value': ['run'], 'probability': 0.038767993450164795}]","[1.0, 0.43109724, 0.5626448, 0.7199945, 0.65114945]",0.2266075613610009,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
969,969,"public void setNumNodes(int value) {SoftbodyJNI.SoftBodyClusterData_numNodes_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_numNodes_set(swigCPtr, this, value);}
",setNumNodes,"[{'value': ['set'], 'probability': 0.681926429271698}, {'value': ['put'], 'probability': 0.0622616782784462}, {'value': ['update'], 'probability': 0.013728929683566093}, {'value': ['execute'], 'probability': 0.01270926371216774}, {'value': ['get'], 'probability': 0.009486463852226734}]","[1.0, 0.7944568, 0.41854778, 0.35167885, 0.65028083]",0.7477752995859995,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
970,970,"public int getNumNodes() {return SoftbodyJNI.SoftBodyClusterData_numNodes_get(swigCPtr, this);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_numNodes_get(swigCPtr, this);}
",getNumNodes,"[{'value': ['get'], 'probability': 0.11895349621772766}, {'value': ['size'], 'probability': 0.06562260538339615}, {'value': ['build'], 'probability': 0.05342971906065941}, {'value': ['start'], 'probability': 0.042806476354599}, {'value': ['run'], 'probability': 0.03585559502243996}]","[1.0, 0.43109724, 0.5626448, 0.7199945, 0.65114945]",0.2314729506948494,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
971,971,"public void setNumMasses(int value) {SoftbodyJNI.SoftBodyClusterData_numMasses_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_numMasses_set(swigCPtr, this, value);}
",setNumMasses,"[{'value': ['set'], 'probability': 0.7014303207397461}, {'value': ['put'], 'probability': 0.06419622898101807}, {'value': ['execute'], 'probability': 0.011828979477286339}, {'value': ['update'], 'probability': 0.011571635492146015}, {'value': ['get'], 'probability': 0.009118359535932541}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.65028083]",0.7673642287553226,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
972,972,"public int getNumMasses() {return SoftbodyJNI.SoftBodyClusterData_numMasses_get(swigCPtr, this);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_numMasses_get(swigCPtr, this);}
",getNumMasses,"[{'value': ['get'], 'probability': 0.11010764539241791}, {'value': ['size'], 'probability': 0.06277353316545486}, {'value': ['build'], 'probability': 0.059840284287929535}, {'value': ['start'], 'probability': 0.04505383223295212}, {'value': ['run'], 'probability': 0.042511776089668274}]","[1.0, 0.43109724, 0.5626448, 0.7199945, 0.65114945]",0.2309579962535355,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
973,973,"public void setIdmass(float value) {SoftbodyJNI.SoftBodyClusterData_idmass_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_idmass_set(swigCPtr, this, value);}
",setIdmass,"[{'value': ['set'], 'probability': 0.7583386301994324}, {'value': ['put'], 'probability': 0.07734529674053192}, {'value': ['add'], 'probability': 0.011744571849703789}, {'value': ['update'], 'probability': 0.010109420865774155}, {'value': ['get'], 'probability': 0.007059916853904724}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.8345803023047749,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
974,974,"public float getIdmass() {return SoftbodyJNI.SoftBodyClusterData_idmass_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_idmass_get(swigCPtr, this);}
",getIdmass,"[{'value': ['get'], 'probability': 0.08776305615901947}, {'value': ['id'], 'probability': 0.053762286901474}, {'value': ['build'], 'probability': 0.053723741322755814}, {'value': ['run'], 'probability': 0.03700818493962288}, {'value': ['start'], 'probability': 0.03511578589677811}]","[1.0, 0.2945777, 0.5626448, 0.65114945, 0.7199945]",0.1832086404636084,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
975,975,"public void setImass(float value) {SoftbodyJNI.SoftBodyClusterData_imass_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_imass_set(swigCPtr, this, value);}
",setImass,"[{'value': ['set'], 'probability': 0.6981410980224609}, {'value': ['put'], 'probability': 0.09391572326421738}, {'value': ['add'], 'probability': 0.013010281138122082}, {'value': ['update'], 'probability': 0.011703252792358398}, {'value': ['get'], 'probability': 0.008294932544231415}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.789661057505036,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
976,976,"public float getImass() {return SoftbodyJNI.SoftBodyClusterData_imass_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_imass_get(swigCPtr, this);}
",getImass,"[{'value': ['get'], 'probability': 0.06428489089012146}, {'value': ['run'], 'probability': 0.05681280791759491}, {'value': ['build'], 'probability': 0.03857588395476341}, {'value': ['start'], 'probability': 0.03540762513875961}, {'value': ['execute'], 'probability': 0.03286060690879822}]","[1.0, 0.65114945, 0.5626448, 0.7199945, 0.37713256]",0.1608691391499193,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
977,977,"public void setNvimpulses(int value) {SoftbodyJNI.SoftBodyClusterData_nvimpulses_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_nvimpulses_set(swigCPtr, this, value);}
",setNvimpulses,"[{'value': ['set'], 'probability': 0.7227603197097778}, {'value': ['put'], 'probability': 0.0625755563378334}, {'value': ['update'], 'probability': 0.011215968988835812}, {'value': ['execute'], 'probability': 0.01020217128098011}, {'value': ['get'], 'probability': 0.009062549099326134}]","[1.0, 0.7944568, 0.41854778, 0.35167885, 0.65028083]",0.7866494034406984,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
978,978,"public int getNvimpulses() {return SoftbodyJNI.SoftBodyClusterData_nvimpulses_get(swigCPtr, this);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_nvimpulses_get(swigCPtr, this);}
",getNvimpulses,"[{'value': ['get'], 'probability': 0.11189627647399902}, {'value': ['size'], 'probability': 0.06167900562286377}, {'value': ['build'], 'probability': 0.05462133511900902}, {'value': ['run'], 'probability': 0.04382564499974251}, {'value': ['execute'], 'probability': 0.039969444274902344}]","[1.0, 0.43109724, 0.5626448, 0.65114945, 0.37713256]",0.2128291583278057,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
979,979,"public void setNdimpulses(int value) {SoftbodyJNI.SoftBodyClusterData_ndimpulses_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_ndimpulses_set(swigCPtr, this, value);}
",setNdimpulses,"[{'value': ['set'], 'probability': 0.7006696462631226}, {'value': ['put'], 'probability': 0.06747209280729294}, {'value': ['update'], 'probability': 0.01166507601737976}, {'value': ['execute'], 'probability': 0.011022070422768593}, {'value': ['get'], 'probability': 0.009637267328798771}]","[1.0, 0.7944568, 0.41854778, 0.35167885, 0.65028083]",0.769298858775007,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
980,980,"public int getNdimpulses() {return SoftbodyJNI.SoftBodyClusterData_ndimpulses_get(swigCPtr, this);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_ndimpulses_get(swigCPtr, this);}
",getNdimpulses,"[{'value': ['get'], 'probability': 0.11514738947153091}, {'value': ['size'], 'probability': 0.06123578920960426}, {'value': ['build'], 'probability': 0.053304146975278854}, {'value': ['start'], 'probability': 0.04020378738641739}, {'value': ['run'], 'probability': 0.03966039791703224}]","[1.0, 0.43109724, 0.5626448, 0.7199945, 0.65114945]",0.2263086207432135,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
981,981,"public void setNdamping(float value) {SoftbodyJNI.SoftBodyClusterData_ndamping_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_ndamping_set(swigCPtr, this, value);}
",setNdamping,"[{'value': ['set'], 'probability': 0.7325493097305298}, {'value': ['put'], 'probability': 0.08112019300460815}, {'value': ['add'], 'probability': 0.011674742214381695}, {'value': ['update'], 'probability': 0.009029564447700977}, {'value': ['get'], 'probability': 0.008199899457395077}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.81204380357477,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
982,982,"public float getNdamping() {return SoftbodyJNI.SoftBodyClusterData_ndamping_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_ndamping_get(swigCPtr, this);}
",getNdamping,"[{'value': ['get'], 'probability': 0.08267815411090851}, {'value': ['build'], 'probability': 0.04385897517204285}, {'value': ['run'], 'probability': 0.040640946477651596}, {'value': ['start'], 'probability': 0.03476884216070175}, {'value': ['float'], 'probability': 0.033895693719387054}]","[1.0, 0.5626448, 0.65114945, 0.7199945, 0.2808844]",0.1683726532573899,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
983,983,"public void setLdamping(float value) {SoftbodyJNI.SoftBodyClusterData_ldamping_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_ldamping_set(swigCPtr, this, value);}
",setLdamping,"[{'value': ['set'], 'probability': 0.7137015461921692}, {'value': ['put'], 'probability': 0.08834980428218842}, {'value': ['add'], 'probability': 0.013479284942150116}, {'value': ['update'], 'probability': 0.010832304134964943}, {'value': ['write'], 'probability': 0.008144378662109375}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.46259418]",0.7990470792592768,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
984,984,"public float getLdamping() {return SoftbodyJNI.SoftBodyClusterData_ldamping_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_ldamping_get(swigCPtr, this);}
",getLdamping,"[{'value': ['get'], 'probability': 0.07609886676073074}, {'value': ['run'], 'probability': 0.04376663640141487}, {'value': ['build'], 'probability': 0.039345089346170425}, {'value': ['float'], 'probability': 0.038835931569337845}, {'value': ['bar'], 'probability': 0.03480871766805649}]","[1.0, 0.65114945, 0.5626448, 0.2808844, 0.45318797]",0.1534180961220317,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
985,985,"public void setAdamping(float value) {SoftbodyJNI.SoftBodyClusterData_adamping_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_adamping_set(swigCPtr, this, value);}
",setAdamping,"[{'value': ['set'], 'probability': 0.6339237689971924}, {'value': ['put'], 'probability': 0.09697794169187546}, {'value': ['write'], 'probability': 0.014060390181839466}, {'value': ['add'], 'probability': 0.013898716308176517}, {'value': ['update'], 'probability': 0.012939050793647766}]","[1.0, 0.7944568, 0.46259418, 0.5084879, 0.41854778]",0.729955746735149,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
986,986,"public float getAdamping() {return SoftbodyJNI.SoftBodyClusterData_adamping_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_adamping_get(swigCPtr, this);}
",getAdamping,"[{'value': ['get'], 'probability': 0.0795777440071106}, {'value': ['build'], 'probability': 0.04788616672158241}, {'value': ['run'], 'probability': 0.036649126559495926}, {'value': ['float'], 'probability': 0.03095949813723564}, {'value': ['start'], 'probability': 0.03082445077598095}]","[1.0, 0.5626448, 0.65114945, 0.2808844, 0.7199945]",0.1612741785687733,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
987,987,"public void setMatching(float value) {SoftbodyJNI.SoftBodyClusterData_matching_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_matching_set(swigCPtr, this, value);}
",setMatching,"[{'value': ['set'], 'probability': 0.6213741302490234}, {'value': ['put'], 'probability': 0.07414068281650543}, {'value': ['write'], 'probability': 0.016455519944429398}, {'value': ['get'], 'probability': 0.011851721443235874}, {'value': ['add'], 'probability': 0.010891391895711422}]","[1.0, 0.7944568, 0.46259418, 0.65028083, 0.5084879]",0.7011330142330612,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
988,988,"public float getMatching() {return SoftbodyJNI.SoftBodyClusterData_matching_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_matching_get(swigCPtr, this);}
",getMatching,"[{'value': ['get'], 'probability': 0.06998630613088608}, {'value': ['build'], 'probability': 0.04083744436502457}, {'value': ['next'], 'probability': 0.034054938703775406}, {'value': ['run'], 'probability': 0.02527093142271042}, {'value': ['trim'], 'probability': 0.022454043850302696}]","[1.0, 0.5626448, 0.6966621, 0.65114945, 0.29039297]",0.1396637165961037,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
989,989,"public void setMaxSelfCollisionImpulse(float value) {SoftbodyJNI.SoftBodyClusterData_maxSelfCollisionImpulse_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_maxSelfCollisionImpulse_set(swigCPtr, this, value);}
",setMaxSelfCollisionImpulse,"[{'value': ['set'], 'probability': 0.7263864278793335}, {'value': ['put'], 'probability': 0.08948174118995667}, {'value': ['add'], 'probability': 0.012449823319911957}, {'value': ['update'], 'probability': 0.008871830999851227}, {'value': ['get'], 'probability': 0.008494965732097626}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.8130437866773705,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
990,990,"public float getMaxSelfCollisionImpulse() {return SoftbodyJNI.SoftBodyClusterData_maxSelfCollisionImpulse_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_maxSelfCollisionImpulse_get(swigCPtr, this);}
",getMaxSelfCollisionImpulse,"[{'value': ['get'], 'probability': 0.0712139904499054}, {'value': ['run'], 'probability': 0.04734672233462334}, {'value': ['float'], 'probability': 0.04682069644331932}, {'value': ['build'], 'probability': 0.04188978672027588}, {'value': ['bar'], 'probability': 0.03540222719311714}]","[1.0, 0.65114945, 0.2808844, 0.5626448, 0.45318797]",0.1548079186472571,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
991,991,"public void setSelfCollisionImpulseFactor(float value) {SoftbodyJNI.SoftBodyClusterData_selfCollisionImpulseFactor_set(swigCPtr, this, value);}
","public void [MASK](float value) {SoftbodyJNI.SoftBodyClusterData_selfCollisionImpulseFactor_set(swigCPtr, this, value);}
",setSelfCollisionImpulseFactor,"[{'value': ['set'], 'probability': 0.6762788891792297}, {'value': ['put'], 'probability': 0.09502275288105011}, {'value': ['add'], 'probability': 0.015698840841650963}, {'value': ['update'], 'probability': 0.011916028335690498}, {'value': ['get'], 'probability': 0.009449540637433529}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.7708853121151035,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
992,992,"public float getSelfCollisionImpulseFactor() {return SoftbodyJNI.SoftBodyClusterData_selfCollisionImpulseFactor_get(swigCPtr, this);}
","public float [MASK]() {return SoftbodyJNI.SoftBodyClusterData_selfCollisionImpulseFactor_get(swigCPtr, this);}
",getSelfCollisionImpulseFactor,"[{'value': ['run'], 'probability': 0.0692792683839798}, {'value': ['get'], 'probability': 0.06490104645490646}, {'value': ['float'], 'probability': 0.049704208970069885}, {'value': ['build'], 'probability': 0.04877069592475891}, {'value': ['execute'], 'probability': 0.041951172053813934}]","[0.65114945, 1.0, 0.2808844, 0.5626448, 0.37713256]",0.1672350708293011,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
993,993,"public void setContainsAnchor(int value) {SoftbodyJNI.SoftBodyClusterData_containsAnchor_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_containsAnchor_set(swigCPtr, this, value);}
",setContainsAnchor,"[{'value': ['set'], 'probability': 0.6852837204933167}, {'value': ['put'], 'probability': 0.08512595295906067}, {'value': ['execute'], 'probability': 0.013035988435149193}, {'value': ['update'], 'probability': 0.010642890818417072}, {'value': ['write'], 'probability': 0.008909878320991993}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.46259418]",0.7660733085558038,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
994,994,"public int getContainsAnchor() {return SoftbodyJNI.SoftBodyClusterData_containsAnchor_get(swigCPtr, this);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_containsAnchor_get(swigCPtr, this);}
",getContainsAnchor,"[{'value': ['get'], 'probability': 0.11571686714887619}, {'value': ['size'], 'probability': 0.06689697504043579}, {'value': ['run'], 'probability': 0.04600362479686737}, {'value': ['execute'], 'probability': 0.045817021280527115}, {'value': ['build'], 'probability': 0.041565410792827606}]","[1.0, 0.43109724, 0.65114945, 0.37713256, 0.5626448]",0.2151768556117491,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
995,995,"public void setCollide(int value) {SoftbodyJNI.SoftBodyClusterData_collide_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_collide_set(swigCPtr, this, value);}
",setCollide,"[{'value': ['set'], 'probability': 0.6781951189041138}, {'value': ['put'], 'probability': 0.06737814098596573}, {'value': ['execute'], 'probability': 0.016788706183433533}, {'value': ['update'], 'probability': 0.013272046111524105}, {'value': ['write'], 'probability': 0.009870682843029499}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.46259418]",0.7477494785614455,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
996,996,"public int getCollide() {return SoftbodyJNI.SoftBodyClusterData_collide_get(swigCPtr, this);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_collide_get(swigCPtr, this);}
",getCollide,"[{'value': ['get'], 'probability': 0.11339649558067322}, {'value': ['size'], 'probability': 0.05494023114442825}, {'value': ['run'], 'probability': 0.05403370410203934}, {'value': ['build'], 'probability': 0.051340192556381226}, {'value': ['start'], 'probability': 0.04831135645508766}]","[1.0, 0.43109724, 0.65114945, 0.5626448, 0.7199945]",0.2359352959107754,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
997,997,"public void setClusterIndex(int value) {SoftbodyJNI.SoftBodyClusterData_clusterIndex_set(swigCPtr, this, value);}
","public void [MASK](int value) {SoftbodyJNI.SoftBodyClusterData_clusterIndex_set(swigCPtr, this, value);}
",setClusterIndex,"[{'value': ['set'], 'probability': 0.6107719540596008}, {'value': ['put'], 'probability': 0.07757662236690521}, {'value': ['execute'], 'probability': 0.022198792546987534}, {'value': ['update'], 'probability': 0.019287416711449623}, {'value': ['save'], 'probability': 0.011761467903852463}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.5413879]",0.6946502954873965,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
998,998,"public int getClusterIndex() {return SoftbodyJNI.SoftBodyClusterData_clusterIndex_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public int [MASK]() {return SoftbodyJNI.SoftBodyClusterData_clusterIndex_get(swigCPtr, this);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",getClusterIndex,"[{'value': ['destroy'], 'probability': 0.8016550540924072}, {'value': ['build'], 'probability': 0.03578140586614609}, {'value': ['rebuild'], 'probability': 0.019945666193962097}, {'value': ['destroyed'], 'probability': 0.016104472801089287}, {'value': ['get'], 'probability': 0.01062095258384943}]","[0.40928823, 0.5626448, 0.37552252, 0.32746348, 1.0]",0.371624823593393,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
999,999,"public static long getCPtr(btGeneric6DofConstraintDoubleData2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btGeneric6DofConstraintDoubleData2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.14073345065116882}, {'value': ['run'], 'probability': 0.035178229212760925}, {'value': ['execute'], 'probability': 0.03414647653698921}, {'value': ['skip'], 'probability': 0.02794712409377098}, {'value': ['match'], 'probability': 0.026735631749033928}]","[1.0, 0.65114945, 0.37713256, 0.49507433, 0.4692583]",0.202899304704874,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1000,1000,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1001,1001,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btGeneric6DofConstraintDoubleData2(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btGeneric6DofConstraintDoubleData2(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8220626711845398}, {'value': ['start'], 'probability': 0.014889208599925041}, {'value': ['clear'], 'probability': 0.011395535431802273}, {'value': ['test'], 'probability': 0.011158778332173824}, {'value': ['flush'], 'probability': 0.009987080469727516}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.120570555]",0.1217529175617719,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1002,1002,"public void setTypeConstraintData(btTypedConstraintDoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_typeConstraintData_set(swigCPtr, this, btTypedConstraintDoubleData.getCPtr(value), value);}
","public void [MASK](btTypedConstraintDoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_typeConstraintData_set(swigCPtr, this, btTypedConstraintDoubleData.getCPtr(value), value);}
",setTypeConstraintData,"[{'value': ['set'], 'probability': 0.705963671207428}, {'value': ['put'], 'probability': 0.037295859307050705}, {'value': ['add'], 'probability': 0.016379494220018387}, {'value': ['get'], 'probability': 0.014347905293107033}, {'value': ['apply'], 'probability': 0.01353189256042242}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.5010617]",0.760032874394649,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1003,1003,"public btTypedConstraintDoubleData getTypeConstraintData() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_typeConstraintData_get(swigCPtr, this);return (cPtr == 0) ? null : new btTypedConstraintDoubleData(cPtr, false);}
","public btTypedConstraintDoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_typeConstraintData_get(swigCPtr, this);return (cPtr == 0) ? null : new btTypedConstraintDoubleData(cPtr, false);}
",getTypeConstraintData,"[{'value': ['##2'], 'probability': 0.22466561198234558}, {'value': ['get'], 'probability': 0.2156822830438614}, {'value': ['##1'], 'probability': 0.06327080726623535}, {'value': ['##s'], 'probability': 0.06043391674757004}, {'value': ['build'], 'probability': 0.052907004952430725}]","[0.0, 1.0, 0.0, 0.0, 0.5626448]",0.2454501331889647,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1004,1004,"public void setRbAFrame(btTransformDoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbAFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
","public void [MASK](btTransformDoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbAFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
",setRbAFrame,"[{'value': ['set'], 'probability': 0.6078025102615356}, {'value': ['put'], 'probability': 0.04834738373756409}, {'value': ['add'], 'probability': 0.024490680545568466}, {'value': ['apply'], 'probability': 0.019604936242103577}, {'value': ['execute'], 'probability': 0.017409341409802437}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.6746114106863346,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1005,1005,"public btTransformDoubleData getRbAFrame() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbAFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
","public btTransformDoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbAFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
",getRbAFrame,"[{'value': ['get'], 'probability': 0.20532427728176117}, {'value': ['create'], 'probability': 0.09900929778814316}, {'value': ['build'], 'probability': 0.09588141739368439}, {'value': ['##2'], 'probability': 0.07049297541379929}, {'value': ['clone'], 'probability': 0.04215200990438461}]","[1.0, 0.62328804, 0.5626448, 0.0, 0.166604]",0.3280054602972287,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1006,1006,"public void setRbBFrame(btTransformDoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbBFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
","public void [MASK](btTransformDoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbBFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
",setRbBFrame,"[{'value': ['set'], 'probability': 0.617019534111023}, {'value': ['put'], 'probability': 0.04653545096516609}, {'value': ['add'], 'probability': 0.02345762960612774}, {'value': ['apply'], 'probability': 0.018908383324742317}, {'value': ['execute'], 'probability': 0.016152234748005867}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.6810725245810877,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1007,1007,"public btTransformDoubleData getRbBFrame() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbBFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
","public btTransformDoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_rbBFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
",getRbBFrame,"[{'value': ['get'], 'probability': 0.20137159526348114}, {'value': ['create'], 'probability': 0.09645324945449829}, {'value': ['build'], 'probability': 0.09526164829730988}, {'value': ['##2'], 'probability': 0.07853013277053833}, {'value': ['clone'], 'probability': 0.04472963884472847}]","[1.0, 0.62328804, 0.5626448, 0.0, 0.166604]",0.3225403573731645,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1008,1008,"public void setLinearUpperLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearUpperLimit,"[{'value': ['set'], 'probability': 0.5749329924583435}, {'value': ['put'], 'probability': 0.053781766444444656}, {'value': ['add'], 'probability': 0.02073993906378746}, {'value': ['execute'], 'probability': 0.019729359075427055}, {'value': ['apply'], 'probability': 0.016547784209251404}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.5010617]",0.6434361478974711,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1009,1009,"public btVector3DoubleData getLinearUpperLimit() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearUpperLimit,"[{'value': ['get'], 'probability': 0.21190857887268066}, {'value': ['build'], 'probability': 0.1007167249917984}, {'value': ['create'], 'probability': 0.0960458368062973}, {'value': ['##2'], 'probability': 0.07688629627227783}, {'value': ['clone'], 'probability': 0.06824466586112976}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.339810373476912,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1010,1010,"public void setLinearLowerLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearLowerLimit,"[{'value': ['set'], 'probability': 0.5893690586090088}, {'value': ['put'], 'probability': 0.04793572798371315}, {'value': ['execute'], 'probability': 0.02144775167107582}, {'value': ['write'], 'probability': 0.016978271305561066}, {'value': ['read'], 'probability': 0.015234515070915222}]","[1.0, 0.7944568, 0.35167885, 0.46259418, 0.4820371]",0.6501922942501714,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1011,1011,"public btVector3DoubleData getLinearLowerLimit() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_linearLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearLowerLimit,"[{'value': ['get'], 'probability': 0.2257416844367981}, {'value': ['build'], 'probability': 0.0972558930516243}, {'value': ['create'], 'probability': 0.08780524134635925}, {'value': ['##2'], 'probability': 0.08512664586305618}, {'value': ['clone'], 'probability': 0.057972218841314316}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3448485647257772,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1012,1012,"public void setAngularUpperLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularUpperLimit,"[{'value': ['set'], 'probability': 0.5034583806991577}, {'value': ['put'], 'probability': 0.06405334919691086}, {'value': ['add'], 'probability': 0.026923175901174545}, {'value': ['execute'], 'probability': 0.02524976246058941}, {'value': ['apply'], 'probability': 0.017984269186854362}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.5010617]",0.5859271423669361,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1013,1013,"public btVector3DoubleData getAngularUpperLimit() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularUpperLimit,"[{'value': ['get'], 'probability': 0.21404555439949036}, {'value': ['##2'], 'probability': 0.09641534835100174}, {'value': ['build'], 'probability': 0.09364138543605804}, {'value': ['create'], 'probability': 0.0831616073846817}, {'value': ['clone'], 'probability': 0.050525229424238205}]","[1.0, 0.0, 0.5626448, 0.62328804, 0.166604]",0.3269837311532865,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1014,1014,"public void setAngularLowerLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularLowerLimit,"[{'value': ['set'], 'probability': 0.47212982177734375}, {'value': ['put'], 'probability': 0.06880531460046768}, {'value': ['execute'], 'probability': 0.029625581577420235}, {'value': ['add'], 'probability': 0.028096001595258713}, {'value': ['apply'], 'probability': 0.01879781112074852}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.5010617]",0.5609166999428579,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1015,1015,"public btVector3DoubleData getAngularLowerLimit() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofConstraintDoubleData2_angularLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularLowerLimit,"[{'value': ['get'], 'probability': 0.19121471047401428}, {'value': ['##2'], 'probability': 0.10491739958524704}, {'value': ['build'], 'probability': 0.10140617191791534}, {'value': ['create'], 'probability': 0.06816624850034714}, {'value': ['clone'], 'probability': 0.04774312674999237}]","[1.0, 0.0, 0.5626448, 0.62328804, 0.166604]",0.298711766601581,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1016,1016,"public void setUseLinearReferenceFrameA(int value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_set(swigCPtr, this, value);}
",setUseLinearReferenceFrameA,"[{'value': ['set'], 'probability': 0.7521854043006897}, {'value': ['put'], 'probability': 0.07416238635778427}, {'value': ['get'], 'probability': 0.009741849265992641}, {'value': ['read'], 'probability': 0.00787364598363638}, {'value': ['execute'], 'probability': 0.006188895553350449}]","[1.0, 0.7944568, 0.65028083, 0.4820371, 0.35167885]",0.8234110459331391,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1017,1017,"public int getUseLinearReferenceFrameA() {return DynamicsJNI.btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_get(swigCPtr, this);}
",getUseLinearReferenceFrameA,"[{'value': ['get'], 'probability': 0.12453366816043854}, {'value': ['start'], 'probability': 0.047456495463848114}, {'value': ['run'], 'probability': 0.03401704877614975}, {'value': ['next'], 'probability': 0.029727552086114883}, {'value': ['execute'], 'probability': 0.026169927790760994}]","[1.0, 0.7199945, 0.65114945, 0.6966621, 0.37713256]",0.211431857533559,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1018,1018,"public void setUseOffsetForConstraintFrame(int value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_set(swigCPtr, this, value);}
",setUseOffsetForConstraintFrame,"[{'value': ['set'], 'probability': 0.7611488699913025}, {'value': ['put'], 'probability': 0.07806237041950226}, {'value': ['get'], 'probability': 0.008685664273798466}, {'value': ['read'], 'probability': 0.005764458794146776}, {'value': ['value'], 'probability': 0.005690881982445717}]","[1.0, 0.7944568, 0.65028083, 0.4820371, 0.47274652]",0.8342831980759298,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1019,1019,"public int getUseOffsetForConstraintFrame() {return DynamicsJNI.btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_get(swigCPtr, this);}public final void setZero() {x = 0.0f;y = 0.0f;}
","public int [MASK]() {return DynamicsJNI.btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_get(swigCPtr, this);}public final void setZero() {x = 0.0f;y = 0.0f;}
",getUseOffsetForConstraintFrame,"[{'value': ['get'], 'probability': 0.17131146788597107}, {'value': ['start'], 'probability': 0.05212148278951645}, {'value': ['trim'], 'probability': 0.04508635401725769}, {'value': ['value'], 'probability': 0.0306074321269989}, {'value': ['offset'], 'probability': 0.026030996814370155}]","[1.0, 0.7199945, 0.29039297, 0.46303764, 0.30574188]",0.2440625670355979,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1020,1020,"public final Vec2 set(float x, float y) {this.x = x;this.y = y;return this;}
","public final [MASK] set(float x, float y) {this.x = x;this.y = y;return this;}
",Vec2,"[{'value': ['void'], 'probability': 0.898209810256958}, {'value': ['float'], 'probability': 0.06136651709675789}, {'value': ['double'], 'probability': 0.020617736503481865}, {'value': ['empty'], 'probability': 0.004680820275098085}, {'value': ['long'], 'probability': 0.002062199404463172}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set'], 'probability': 0.4474833905696869}, {'value': ['set', 'location'], 'probability': 0.2042565494775772}, {'value': ['set', 'position'], 'probability': 0.11915099620819092}, {'value': ['init', 'position'], 'probability': 0.05048857256770134}, {'value': ['set', 'pos'], 'probability': 0.040445707738399506}, {'value': ['set', 'y'], 'probability': 0.037002891302108765}, {'value': ['set', 'center'], 'probability': 0.03551586717367172}, {'value': ['set', 'line'], 'probability': 0.02384035848081112}, {'value': ['set', 'xy'], 'probability': 0.022004131227731705}, {'value': ['set', 'translation'], 'probability': 0.019811490550637245}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1021,1021,"public final Vec2 set(Vec2 v) {this.x = v.x;this.y = v.y;return this;}
","public final [MASK] set([MASK] v) {this.x = v.x;this.y = v.y;return this;}
",Vec2,"[{'value': ['void'], 'probability': 0.9916476011276245}, {'value': ['double'], 'probability': 0.0012941473396494985}, {'value': ['T'], 'probability': 0.0012239111820235848}, {'value': ['String'], 'probability': 0.0007760601583868265}, {'value': ['empty'], 'probability': 0.0006537537556141615}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set'], 'probability': 0.8803170323371887}, {'value': ['clone'], 'probability': 0.07708471268415451}, {'value': ['copy'], 'probability': 0.03210005909204483}, {'value': ['set', 'value'], 'probability': 0.0041380091570317745}, {'value': ['init'], 'probability': 0.002390077104791999}, {'value': ['set', 'translation'], 'probability': 0.0018300276715308428}, {'value': ['assign'], 'probability': 0.0006992633570916951}, {'value': ['put'], 'probability': 0.0005096237291581929}, {'value': ['set', 'position'], 'probability': 0.0004855597217101604}, {'value': ['move'], 'probability': 0.00044571360922418535}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1022,1022,"public final Vec2 add(Vec2 v) {return new Vec2(x + v.x, y + v.y);}
","public final [MASK] add([MASK] v) {return new [MASK](x + v.x, y + v.y);}
",Vec2,"[{'value': ['double'], 'probability': 0.23862576484680176}, {'value': ['long'], 'probability': 0.22500088810920715}, {'value': ['Point'], 'probability': 0.1337329000234604}, {'value': ['float'], 'probability': 0.07713537663221359}, {'value': ['T'], 'probability': 0.04078148677945137}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['add'], 'probability': 0.9930658340454102}, {'value': ['translate'], 'probability': 0.0040113115683197975}, {'value': ['plus'], 'probability': 0.00228223972953856}, {'value': ['sum'], 'probability': 0.0005707237287424505}, {'value': ['union'], 'probability': 3.406391988391988e-05}, {'value': ['vector'], 'probability': 1.4017987268744037e-05}, {'value': ['find'], 'probability': 9.048551874002442e-06}, {'value': ['of'], 'probability': 7.085080142132938e-06}, {'value': ['concat'], 'probability': 2.8495132937678136e-06}, {'value': ['concatenate'], 'probability': 2.7457390388008207e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1023,1023,"public final Vec2 sub(Vec2 v) {return new Vec2(x - v.x, y - v.y);}
","public final [MASK] sub([MASK] v) {return new [MASK](x - v.x, y - v.y);}
",Vec2,"[{'value': ['void'], 'probability': 0.22497238218784332}, {'value': ['double'], 'probability': 0.158810093998909}, {'value': ['Point'], 'probability': 0.15186940133571625}, {'value': ['long'], 'probability': 0.07244762033224106}, {'value': ['String'], 'probability': 0.06562534719705582}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['sub'], 'probability': 0.9106987118721008}, {'value': ['subtract'], 'probability': 0.0669468343257904}, {'value': ['substract'], 'probability': 0.01380759384483099}, {'value': ['minus'], 'probability': 0.004170973785221577}, {'value': ['get', 'difference'], 'probability': 0.0019187639700248837}, {'value': ['difference'], 'probability': 0.001252379734069109}, {'value': ['diff'], 'probability': 0.0004480504139792174}, {'value': ['sub', 'local'], 'probability': 0.00043092205305583775}, {'value': ['solve'], 'probability': 0.0001993371988646686}, {'value': ['from', 'value'], 'probability': 0.00012641266221180558}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1024,1024,"public final Vec2 mul(float a) {return new Vec2(x * a, y * a);}
","public final [MASK] mul(float a) {return new [MASK](x * a, y * a);}
",Vec2,"[{'value': ['float'], 'probability': 0.4414485692977905}, {'value': ['double'], 'probability': 0.3308527171611786}, {'value': ['long'], 'probability': 0.12808704376220703}, {'value': ['String'], 'probability': 0.023012228310108185}, {'value': ['Long'], 'probability': 0.013415824621915817}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul'], 'probability': 0.9798874855041504}, {'value': ['scale'], 'probability': 0.011517994105815887}, {'value': ['scalar', 'multiply'], 'probability': 0.00805012509226799}, {'value': ['times'], 'probability': 0.00013089078129269183}, {'value': ['multiply'], 'probability': 9.942217002389953e-05}, {'value': ['pairwise', 'multiply'], 'probability': 9.174935985356569e-05}, {'value': ['m'], 'probability': 8.148395863827318e-05}, {'value': ['pow'], 'probability': 6.891306111356243e-05}, {'value': ['create', 'a'], 'probability': 3.973150523961522e-05}, {'value': ['mult'], 'probability': 3.227291381335817e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1025,1025,"public final Vec2 negate() {return new Vec2(-x, -y);}
","public final [MASK] negate() {return new [MASK](-x, -y);}
",Vec2,"[{'value': ['String'], 'probability': 0.15374724566936493}, {'value': ['Point'], 'probability': 0.09368143230676651}, {'value': ['Type'], 'probability': 0.08970144391059875}, {'value': ['long'], 'probability': 0.07930625975131989}, {'value': ['double'], 'probability': 0.05640020594000816}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['negate'], 'probability': 0.9846404790878296}, {'value': ['neg'], 'probability': 0.005197253078222275}, {'value': ['inverse'], 'probability': 0.004961978178471327}, {'value': ['conj'], 'probability': 0.0017445447156205773}, {'value': ['get', 'reverse'], 'probability': 0.0012039659777656198}, {'value': ['flip'], 'probability': 0.0009149460238404572}, {'value': ['negate', 'local'], 'probability': 0.0004559613880701363}, {'value': ['reverse'], 'probability': 0.00034488411620259285}, {'value': ['inv'], 'probability': 0.0002689477114472538}, {'value': ['clone'], 'probability': 0.0002671648981049657}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1026,1026,"public final Vec2 negateLocal() {x = -x;y = -y;return this;}
","public final [MASK] negateLocal() {x = -x;y = -y;return this;}
",Vec2,"[{'value': ['void'], 'probability': 0.5258432030677795}, {'value': ['String'], 'probability': 0.08109645545482635}, {'value': ['long'], 'probability': 0.06811873614788055}, {'value': ['double'], 'probability': 0.041583675891160965}, {'value': ['float'], 'probability': 0.03193540871143341}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['negate', 'local'], 'probability': 0.9518612027168274}, {'value': ['negate'], 'probability': 0.04230524227023125}, {'value': ['neg'], 'probability': 0.0030891417991369963}, {'value': ['inverse'], 'probability': 0.0014831196749582887}, {'value': ['clone'], 'probability': 0.00035072912578471005}, {'value': ['to', 'immutable'], 'probability': 0.00027090072399005294}, {'value': ['invert'], 'probability': 0.00022031112166587263}, {'value': ['conj'], 'probability': 0.0001517635682830587}, {'value': ['minus'], 'probability': 0.0001445921661797911}, {'value': ['abs'], 'probability': 0.00012299767695367336}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1027,1027,"public final Vec2 addLocal(Vec2 v) {x += v.x;y += v.y;return this;}
","public final [MASK] addLocal([MASK] v) {x += v.x;y += v.y;return this;}
",Vec2,"[{'value': ['void'], 'probability': 0.4781857430934906}, {'value': ['T'], 'probability': 0.1699925661087036}, {'value': ['long'], 'probability': 0.07855187356472015}, {'value': ['double'], 'probability': 0.0679156631231308}, {'value': ['Color'], 'probability': 0.03270356357097626}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['add', 'local'], 'probability': 0.9551755785942078}, {'value': ['add'], 'probability': 0.027904007583856583}, {'value': ['add', 'set'], 'probability': 0.008314782753586769}, {'value': ['translate'], 'probability': 0.008138763718307018}, {'value': ['plus'], 'probability': 0.00021597344311885536}, {'value': ['add', 'me'], 'probability': 0.00010079239291371778}, {'value': ['realloc'], 'probability': 4.589052332448773e-05}, {'value': ['subtract', 'local'], 'probability': 3.694024417200126e-05}, {'value': ['vector', 'add'], 'probability': 3.66003077942878e-05}, {'value': ['add', 'vertex'], 'probability': 3.055970955756493e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1028,1028,"public final Vec2 addLocal(float x, float y) {this.x += x;this.y += y;return this;}
","public final [MASK] addLocal(float x, float y) {this.x += x;this.y += y;return this;}
",Vec2,"[{'value': ['float'], 'probability': 0.6061484813690186}, {'value': ['void'], 'probability': 0.21670803427696228}, {'value': ['double'], 'probability': 0.12885132431983948}, {'value': ['long'], 'probability': 0.026103096082806587}, {'value': ['short'], 'probability': 0.002439203904941678}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['add', 'local'], 'probability': 0.6270249485969543}, {'value': ['add'], 'probability': 0.3283538818359375}, {'value': ['translate'], 'probability': 0.021178647875785828}, {'value': ['move'], 'probability': 0.00929172057658434}, {'value': ['add', 'me'], 'probability': 0.005208744667470455}, {'value': ['plus'], 'probability': 0.0038085172418504953}, {'value': ['add', 'set'], 'probability': 0.0027501711156219244}, {'value': ['inc'], 'probability': 0.0009548381785862148}, {'value': ['append', 'content'], 'probability': 0.0007755771512165666}, {'value': ['accelerate'], 'probability': 0.0006530124228447676}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1029,1029,"public final Vec2 subLocal(Vec2 v) {x -= v.x;y -= v.y;return this;}
","public final [MASK] subLocal([MASK] v) {x -= v.x;y -= v.y;return this;}
",Vec2,"[{'value': ['void'], 'probability': 0.2460993081331253}, {'value': ['long'], 'probability': 0.20592902600765228}, {'value': ['double'], 'probability': 0.16503459215164185}, {'value': ['String'], 'probability': 0.06765814870595932}, {'value': ['T'], 'probability': 0.049752578139305115}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['sub', 'local'], 'probability': 0.9999991655349731}, {'value': ['subtract'], 'probability': 6.462485657721118e-07}, {'value': ['sub'], 'probability': 1.0214746026804278e-07}, {'value': ['get', 'vector'], 'probability': 4.987830948266492e-08}, {'value': ['substract'], 'probability': 4.6307263801281806e-08}, {'value': ['get', 'normal'], 'probability': 3.234396217521862e-08}, {'value': ['from', 'value'], 'probability': 6.538082519824684e-09}, {'value': ['get', 'internal'], 'probability': 6.025967724809789e-09}, {'value': ['sub', 'set'], 'probability': 5.174239259275737e-09}, {'value': ['get', 'union'], 'probability': 3.26217564072806e-09}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1030,1030,"public final Vec2 mulLocal(float a) {x *= a;y *= a;return this;}
","public final [MASK] mulLocal(float a) {x *= a;y *= a;return this;}
",Vec2,"[{'value': ['float'], 'probability': 0.6830083131790161}, {'value': ['double'], 'probability': 0.17617350816726685}, {'value': ['long'], 'probability': 0.06477310508489609}, {'value': ['void'], 'probability': 0.03956643119454384}, {'value': ['String'], 'probability': 0.006752422079443932}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['scale'], 'probability': 0.7911414504051208}, {'value': ['mul', 'local'], 'probability': 0.1845143586397171}, {'value': ['mul'], 'probability': 0.013022823259234428}, {'value': ['multiply'], 'probability': 0.005439053755253553}, {'value': ['mult'], 'probability': 0.004580473992973566}, {'value': ['stretch'], 'probability': 0.0006385146407410502}, {'value': ['times'], 'probability': 0.00024077569833025336}, {'value': ['pow'], 'probability': 0.00016049463010858744}, {'value': ['reflect'], 'probability': 0.00015491331578232348}, {'value': ['max'], 'probability': 0.00010721254511736333}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1031,1031,"public final Vec2 skew() {return new Vec2(-y, x);}
","public final [MASK] skew() {return new [MASK](-y, x);}
",Vec2,"[{'value': ['long'], 'probability': 0.2614506185054779}, {'value': ['double'], 'probability': 0.10558120906352997}, {'value': ['Point'], 'probability': 0.08819343894720078}, {'value': ['void'], 'probability': 0.07422391325235367}, {'value': ['Long'], 'probability': 0.06160753220319748}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['negate'], 'probability': 0.8585864901542664}, {'value': ['negate', 'local'], 'probability': 0.09129896759986877}, {'value': ['clone'], 'probability': 0.013117312453687191}, {'value': ['conj'], 'probability': 0.008275226689875126}, {'value': ['skew'], 'probability': 0.006399821490049362}, {'value': ['cross'], 'probability': 0.006222377065569162}, {'value': ['flip'], 'probability': 0.005446147173643112}, {'value': ['inverse'], 'probability': 0.005068414378911257}, {'value': ['inv'], 'probability': 0.002877563936635852}, {'value': ['y'], 'probability': 0.0027076334226876497}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1032,1032,"public final void skew(Vec2 out) {out.x = -y;out.y = x;}
","public final [MASK] skew(Vec2 out) {out.x = -y;out.y = x;}
",void,"[{'value': ['void'], 'probability': 0.9360046982765198}, {'value': ['Point'], 'probability': 0.008412380702793598}, {'value': ['Color'], 'probability': 0.005970017518848181}, {'value': ['double'], 'probability': 0.005778899881988764}, {'value': ['T'], 'probability': 0.004151511006057262}]","[1.0, 0.0, 0.0, 0.14729977, 0.0]",0.9368559288799978,"[{'value': ['rotate'], 'probability': 0.3408888280391693}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.308889240026474}, {'value': ['multiply'], 'probability': 0.17366454005241394}, {'value': ['reflect'], 'probability': 0.10915804654359818}, {'value': ['equal'], 'probability': 0.013139194808900356}, {'value': ['mul'], 'probability': 0.011515052057802677}, {'value': ['draw', 'point'], 'probability': 0.011454353109002113}, {'value': ['show'], 'probability': 0.01122798677533865}, {'value': ['set'], 'probability': 0.010576424188911915}, {'value': ['invert'], 'probability': 0.009486343711614609}]","[0.16707228, 0.3029888, 0.11081921, 0.2471895, 0.3567892, -0.07154343, 0.30569452, 0.23962505, 0.29215682, 0.13437268]",0.21119196021288497
1033,1033,"public final float length() {return MathUtils.sqrt(x * x + y * y);}
","public final [MASK] length() {return MathUtils.sqrt(x * x + y * y);}
",float,"[{'value': ['long'], 'probability': 0.7445025444030762}, {'value': ['double'], 'probability': 0.15051811933517456}, {'value': ['short'], 'probability': 0.04798590764403343}, {'value': ['float'], 'probability': 0.011994200758635998}, {'value': ['Long'], 'probability': 0.011021537706255913}]","[0.31141275, 0.21689123, 0.32637516, 1.0, 0.0]",0.2921492547762158,"[{'value': ['length'], 'probability': 0.6182994842529297}, {'value': ['get', 'length'], 'probability': 0.29926222562789917}, {'value': ['abs'], 'probability': 0.027633437886834145}, {'value': ['len'], 'probability': 0.02181457355618477}, {'value': ['size'], 'probability': 0.017499973997473717}, {'value': ['mag'], 'probability': 0.005518871359527111}, {'value': ['get', 'message', 'length'], 'probability': 0.003520931815728545}, {'value': ['get', 'norm'], 'probability': 0.002311136806383729}, {'value': ['dist'], 'probability': 0.002244213130325079}, {'value': ['norm'], 'probability': 0.0018951519159600139}]","[0.28480592, 0.34680378, 0.090409875, -0.096147835, 0.27923638, -0.01532842, 0.32211065, 0.12760381, -0.17434953, -0.12844531]",0.2858779085823281
1034,1034,"public final float lengthSquared() {return (x * x + y * y);}
","public final [MASK] lengthSquared() {return (x * x + y * y);}
",float,"[{'value': ['long'], 'probability': 0.7127515077590942}, {'value': ['double'], 'probability': 0.1570269614458084}, {'value': ['short'], 'probability': 0.031390901654958725}, {'value': ['Long'], 'probability': 0.03092516027390957}, {'value': ['String'], 'probability': 0.021242797374725342}]","[0.31141275, 0.21689123, 0.32637516, 0.0, 0.0]",0.266262889414348,"[{'value': ['length', 'squared'], 'probability': 0.9442113637924194}, {'value': ['distance', 'squared'], 'probability': 0.030334435403347015}, {'value': ['norm', 'sq'], 'probability': 0.009703829884529114}, {'value': ['len'], 'probability': 0.006504587829113007}, {'value': ['is', 'hit', 'by'], 'probability': 0.003792146220803261}, {'value': ['get', 'absolute', 'position'], 'probability': 0.0017844527028501034}, {'value': ['get', 'closest', 'point'], 'probability': 0.0011393234599381685}, {'value': ['is', 'ccw'], 'probability': 0.0010643145069479942}, {'value': ['get', 'energy'], 'probability': 0.0009002585429698229}, {'value': ['mul', 'inv'], 'probability': 0.000565344758797437}]","[0.2792378, 0.27552143, 0.0069287643, -0.096147835, 0.2822064, 0.19625798, 0.23092106, 0.22339176, 0.26615834, -0.098045096]",0.27356454041999234
1035,1035,"public final float normalize() {float length = length();if (length < Settings.EPSILON) {return 0f;}float invLength = 1.0f / length;x *= invLength;y *= invLength;return length;}
","public final [MASK] normalize() {[MASK] length = length();if (length < Settings.EPSILON) {return 0f;}[MASK] invLength = 1.0f / length;x *= invLength;y *= invLength;return length;}
",float,"[{'value': ['long'], 'probability': 0.40697500109672546}, {'value': ['double'], 'probability': 0.16100111603736877}, {'value': ['void'], 'probability': 0.07282735407352448}, {'value': ['String'], 'probability': 0.0684276893734932}, {'value': ['short'], 'probability': 0.057839639484882355}]","[0.31141275, 0.21689123, 0.22919214, 0.0, 0.32637516]",0.1972258132680331,"[{'value': ['normalize'], 'probability': 1.0}, {'value': ['resolve'], 'probability': 1.3260225140143689e-09}, {'value': ['output'], 'probability': 6.430070365048834e-10}, {'value': ['parse'], 'probability': 5.032793071180208e-10}, {'value': ['to', 'absolute', 'path'], 'probability': 2.950697186587803e-10}, {'value': ['norm'], 'probability': 2.8949614927498146e-10}, {'value': ['out'], 'probability': 2.7582533479453275e-10}, {'value': ['filter'], 'probability': 1.5309241374605875e-10}, {'value': ['normalize', 'no', 'end', 'separator'], 'probability': 1.384708597784723e-10}, {'value': ['trim'], 'probability': 1.2998832565891405e-10}]","[0.09361644, 0.13112602, 0.22698985, 0.12132636, 0.3131113, -0.12844531, 0.33722353, 0.29802144, 0.33061078, 0.24775557]",0.09361644065272332
1036,1036,"public final boolean isValid() {return !Float.isNaN(x) && !Float.isInfinite(x) && !Float.isNaN(y) && !Float.isInfinite(y);}
","public final [MASK] isValid() {return !Float.isNaN(x) && !Float.isInfinite(x) && !Float.isNaN(y) && !Float.isInfinite(y);}
",boolean,"[{'value': ['float'], 'probability': 0.3271249532699585}, {'value': ['Long'], 'probability': 0.11705855280160904}, {'value': ['Point'], 'probability': 0.102389395236969}, {'value': ['void'], 'probability': 0.09394604712724686}, {'value': ['long'], 'probability': 0.08487601578235626}]","[0.055554304, 0.0, 0.0, 0.16551133, -0.07843863]",0.0270647753438824,"[{'value': ['is', 'valid'], 'probability': 0.9865179657936096}, {'value': ['is', 'finite'], 'probability': 0.008214062079787254}, {'value': ['is', 'infinite'], 'probability': 0.003065404249355197}, {'value': ['has', 'position'], 'probability': 0.00099061185028404}, {'value': ['needs', 'saving'], 'probability': 0.00034259582753293216}, {'value': ['is', 'line'], 'probability': 0.00021679159544873983}, {'value': ['is', 'undefined'], 'probability': 0.00018387111776974052}, {'value': ['valid'], 'probability': 0.0001813857670640573}, {'value': ['is', 'normal'], 'probability': 0.0001626199809834361}, {'value': ['is', 'same'], 'probability': 0.0001248022454092279}]","[0.21546, 0.44575065, 0.3550971, -0.032860797, -0.013321881, 0.011841768, 0.1833848, 0.2650742, 0.10587386, 0.1224834]",0.21738485472408361
1037,1037,"public final Vec2 abs() {return new Vec2(MathUtils.abs(x), MathUtils.abs(y));}
","public final [MASK] abs() {return new [MASK](MathUtils.abs(x), MathUtils.abs(y));}
",Vec2,"[{'value': ['String'], 'probability': 0.33325648307800293}, {'value': ['long'], 'probability': 0.19148482382297516}, {'value': ['double'], 'probability': 0.16410648822784424}, {'value': ['void'], 'probability': 0.05561355873942375}, {'value': ['Long'], 'probability': 0.023357389494776726}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['abs'], 'probability': 0.9855670928955078}, {'value': ['get', 'abs'], 'probability': 0.010878283530473709}, {'value': ['get', 'p'], 'probability': 0.001167654525488615}, {'value': ['clone'], 'probability': 0.000826315488666296}, {'value': ['get', 'normal'], 'probability': 0.0004923945525661111}, {'value': ['unit'], 'probability': 0.0002714296861086041}, {'value': ['abs', 'local'], 'probability': 0.00027130235685035586}, {'value': ['negative'], 'probability': 0.0002181522868340835}, {'value': ['get', 'result'], 'probability': 0.00019794233958236873}, {'value': ['build'], 'probability': 0.00010937337356153876}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1038,1038,"public final void absLocal() {x = MathUtils.abs(x);y = MathUtils.abs(y);}
","public final [MASK] absLocal() {x = MathUtils.abs(x);y = MathUtils.abs(y);}
",void,"[{'value': ['void'], 'probability': 0.769359827041626}, {'value': ['long'], 'probability': 0.05358786880970001}, {'value': ['String'], 'probability': 0.04538493603467941}, {'value': ['double'], 'probability': 0.03980698436498642}, {'value': ['Color'], 'probability': 0.01272482331842184}]","[1.0, 0.23130237, 0.0, 0.14729977, 0.0]",0.787618387371668,"[{'value': ['abs', 'local'], 'probability': 0.98506098985672}, {'value': ['eval'], 'probability': 0.005924397613853216}, {'value': ['apply'], 'probability': 0.0017039531376212835}, {'value': ['absolute'], 'probability': 0.0014832663582637906}, {'value': ['set', 'up'], 'probability': 0.0011407226556912065}, {'value': ['draw'], 'probability': 0.0010214474750682712}, {'value': ['abs'], 'probability': 0.0009496290003880858}, {'value': ['foo'], 'probability': 0.0009478158899582922}, {'value': ['update'], 'probability': 0.0009437695844098926}, {'value': ['spawn'], 'probability': 0.0008241240866482258}]","[0.024440244, 0.06177038, 0.3034649, 0.45187196, 0.2873761, 0.26491478, -0.07501452, -0.06380659, 0.017648075, 0.16523528]",0.026247949872087867
1039,1039,"public final Vec2 clone() {return new Vec2(x, y);}
","public final [MASK] clone() {return new [MASK](x, y);}
",Vec2,"[{'value': ['clone'], 'probability': 0.3610963523387909}, {'value': ['String'], 'probability': 0.099058598279953}, {'value': ['Date'], 'probability': 0.06537796556949615}, {'value': ['Type'], 'probability': 0.06528070569038391}, {'value': ['Long'], 'probability': 0.03585445135831833}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clone'], 'probability': 0.906792163848877}, {'value': ['get', 'point'], 'probability': 0.017746713012456894}, {'value': ['to', 'location'], 'probability': 0.017253687605261803}, {'value': ['get', 'vector'], 'probability': 0.016300557181239128}, {'value': ['get', 'normal'], 'probability': 0.009693359956145287}, {'value': ['copy'], 'probability': 0.00946755800396204}, {'value': ['get', 'p'], 'probability': 0.007387299090623856}, {'value': ['get', 'vertex'], 'probability': 0.005997469183057547}, {'value': ['negate', 'local'], 'probability': 0.004933007061481476}, {'value': ['get', 'position'], 'probability': 0.004428316839039326}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1040,1040,"public final String toString() {return ""("" + x + "","" + y + "")"";}
","public final [MASK] to[MASK]() {return ""("" + x + "","" + y + "")"";}
",String,"[{'value': ['String'], 'probability': 0.9916894435882568}, {'value': ['Long'], 'probability': 0.0008812217274680734}, {'value': ['Point'], 'probability': 0.0007644899887964129}, {'value': ['double'], 'probability': 0.0007025041850283742}, {'value': ['long'], 'probability': 0.0005423941765911877}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['to', 'string'], 'probability': 0.997796893119812}, {'value': ['description'], 'probability': 0.0011233289260417223}, {'value': ['as', 'string'], 'probability': 0.00029707912472076714}, {'value': ['get', 'label'], 'probability': 0.0001819291355786845}, {'value': ['get', 'debug', 'info'], 'probability': 0.0001248089683940634}, {'value': ['to', 'file', 'string'], 'probability': 0.00011882829858222976}, {'value': ['get', 'description'], 'probability': 0.00011306303349556401}, {'value': ['to', 'debug', 'string'], 'probability': 8.445455750916153e-05}, {'value': ['get', 'expected', 'json'], 'probability': 8.120049460558221e-05}, {'value': ['to', 'short', 'string'], 'probability': 7.852228736737743e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1041,1041,"public static final Vec2 abs(Vec2 a) {return new Vec2(MathUtils.abs(a.x), MathUtils.abs(a.y));}
","public static final [MASK] abs([MASK] a) {return new [MASK](MathUtils.abs(a.x), MathUtils.abs(a.y));}
",Vec2,"[{'value': ['long'], 'probability': 0.2165534645318985}, {'value': ['double'], 'probability': 0.13896453380584717}, {'value': ['String'], 'probability': 0.13769938051700592}, {'value': ['void'], 'probability': 0.06153319031000137}, {'value': ['List'], 'probability': 0.04152274504303932}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['abs'], 'probability': 0.9979713559150696}, {'value': ['absolute'], 'probability': 0.000472512561827898}, {'value': ['unit'], 'probability': 0.0004034732119180262}, {'value': ['format'], 'probability': 0.00031928560929372907}, {'value': ['apply'], 'probability': 0.0002945177839137614}, {'value': ['to'], 'probability': 0.00019630606402643025}, {'value': ['get', 'abs'], 'probability': 0.0001492989104008302}, {'value': ['min'], 'probability': 7.279697456397116e-05}, {'value': ['distance'], 'probability': 6.364214641507715e-05}, {'value': ['pow'], 'probability': 5.67072638659738e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1042,1042,"public static final void absToOut(Vec2 a, Vec2 out) {out.x = MathUtils.abs(a.x);out.y = MathUtils.abs(a.y);}
","public static final [MASK] absToOut(Vec2 a, Vec2 out) {out.x = MathUtils.abs(a.x);out.y = MathUtils.abs(a.y);}
",void,"[{'value': ['void'], 'probability': 0.42817842960357666}, {'value': ['String'], 'probability': 0.17370200157165527}, {'value': ['long'], 'probability': 0.07416070997714996}, {'value': ['double'], 'probability': 0.03227293863892555}, {'value': ['Point'], 'probability': 0.029879430308938026}]","[1.0, 0.0, 0.23130237, 0.14729977, 0.0]",0.4500857735874566,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9872166514396667}, {'value': ['mul', 'to', 'out'], 'probability': 0.003264264902099967}, {'value': ['reflect'], 'probability': 0.0027485403697937727}, {'value': ['set', 'center'], 'probability': 0.001326324068941176}, {'value': ['distance'], 'probability': 0.0012752142501994967}, {'value': ['add'], 'probability': 0.0010468898108229041}, {'value': ['projection'], 'probability': 0.0008377475896850228}, {'value': ['distance', 'to'], 'probability': 0.0007924935198388994}, {'value': ['eval'], 'probability': 0.0007814103737473488}, {'value': ['set'], 'probability': 0.0007104015094228089}]","[0.3029888, 0.32547766, 0.2471895, 0.2797051, 0.13074815, 0.17481552, 0.14157388, 0.26679638, 0.06177038, 0.29215682]",0.3021640225191195
1043,1043,"public static final float dot(final Vec2 a, final Vec2 b) {return a.x * b.x + a.y * b.y;}
","public static final [MASK] dot(final Vec2 a, final Vec2 b) {return a.x * b.x + a.y * b.y;}
",float,"[{'value': ['dot'], 'probability': 0.41629287600517273}, {'value': ['double'], 'probability': 0.32022616267204285}, {'value': ['##t'], 'probability': 0.02584218606352806}, {'value': ['Point'], 'probability': 0.014406610280275345}, {'value': ['Color'], 'probability': 0.013839872553944588}]","[0.22516389, 0.21689123, 0.0, 0.0, 0.0]",0.1631883701651442,"[{'value': ['dot'], 'probability': 0.9998335838317871}, {'value': ['dot', 'product'], 'probability': 0.0001203306601382792}, {'value': ['mul'], 'probability': 3.609558552852832e-05}, {'value': ['scalar', 'product'], 'probability': 4.140374585404061e-06}, {'value': ['get', 'dist'], 'probability': 1.9289302599645453e-06}, {'value': ['cross'], 'probability': 9.462775096835685e-07}, {'value': ['mul', 'trans'], 'probability': 9.390907962369965e-07}, {'value': ['log', 'p'], 'probability': 7.757602702440636e-07}, {'value': ['distance', 'squared'], 'probability': 6.181704179653025e-07}, {'value': ['same'], 'probability': 5.672185352523229e-07}]","[0.22516389, 0.26788056, -0.113391384, 0.16995549, 0.105751924, 0.3249464, 0.06694764, 0.24355008, 0.27552143, 0.2821407]",0.2251563577223984
1044,1044,"public static final float cross(final Vec2 a, final Vec2 b) {return a.x * b.y - a.y * b.x;}
","public static final [MASK] cross(final Vec2 a, final Vec2 b) {return a.x * b.y - a.y * b.x;}
",float,"[{'value': ['double'], 'probability': 0.8395134210586548}, {'value': ['Double'], 'probability': 0.027270518243312836}, {'value': ['T'], 'probability': 0.011364693753421307}, {'value': ['cross'], 'probability': 0.009627786464989185}, {'value': ['void'], 'probability': 0.008255187422037125}]","[0.21689123, 0.0, 0.0, 0.3249464, 0.22919214]",0.1871036364216007,"[{'value': ['cross'], 'probability': 0.9818785786628723}, {'value': ['det'], 'probability': 0.004195097368210554}, {'value': ['distance', 'squared'], 'probability': 0.002657670294865966}, {'value': ['determinant'], 'probability': 0.0023193967062979937}, {'value': ['mul', 'trans'], 'probability': 0.002071324037387967}, {'value': ['double', 'array', 'to', 'float', 'array'], 'probability': 0.0018910226644948125}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.0014176943805068731}, {'value': ['get', 'barycentric', 'coords'], 'probability': 0.001366142649203539}, {'value': ['length', 'squared'], 'probability': 0.001138953841291368}, {'value': ['dot', 'product'], 'probability': 0.0010641355765983462}]","[0.3249464, 0.014948839, 0.27552143, -0.07342005, 0.06694764, 0.54599214, 0.345456, 0.14042045, 0.2792378, 0.26788056]",0.3221384154686788
1045,1045,"public static final Vec2 cross(Vec2 a, float s) {return new Vec2(s * a.y, -s * a.x);}
","public static final [MASK] cross([MASK] a, float s) {return new [MASK](s * a.y, -s * a.x);}
",Vec2,"[{'value': ['double'], 'probability': 0.7440918684005737}, {'value': ['float'], 'probability': 0.10731494426727295}, {'value': ['Double'], 'probability': 0.04931177198886871}, {'value': ['final'], 'probability': 0.014290248043835163}, {'value': ['long'], 'probability': 0.01352724526077509}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['cross'], 'probability': 0.9990166425704956}, {'value': ['scale'], 'probability': 0.0006400321726687253}, {'value': ['mul'], 'probability': 0.00027803838020190597}, {'value': ['reflect'], 'probability': 2.0825294996029697e-05}, {'value': ['mult'], 'probability': 1.2081905879313126e-05}, {'value': ['dot'], 'probability': 1.0328585631214082e-05}, {'value': ['y'], 'probability': 6.617289727728348e-06}, {'value': ['times'], 'probability': 5.539682206290308e-06}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 5.2965428949391935e-06}, {'value': ['multiply'], 'probability': 4.661775619752007e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1046,1046,"public static final void crossToOut(Vec2 a, float s, Vec2 out) {final float tempy = -s * a.x;out.x = s * a.y;out.y = tempy;}
","public static final [MASK] crossToOut(Vec2 a, float s, Vec2 out) {final float tempy = -s * a.x;out.x = s * a.y;out.y = tempy;}
",void,"[{'value': ['double'], 'probability': 0.4800359606742859}, {'value': ['float'], 'probability': 0.42507296800613403}, {'value': ['void'], 'probability': 0.03749715909361839}, {'value': ['long'], 'probability': 0.013751954771578312}, {'value': ['Double'], 'probability': 0.006310494616627693}]","[0.14729977, 0.22919214, 1.0, 0.23130237, 0.0]",0.2088105859266692,"[{'value': ['cross', 'to', 'out'], 'probability': 0.9996634721755981}, {'value': ['mul', 'to', 'out'], 'probability': 0.00020962768758181483}, {'value': ['center', 'on'], 'probability': 0.00011366974649718031}, {'value': ['solve', 'to', 'out'], 'probability': 4.742761575471377e-06}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 1.6493376051585074e-06}, {'value': ['get', 'class'], 'probability': 1.5118134797376115e-06}, {'value': ['test', 'null', 'values'], 'probability': 1.482019797549583e-06}, {'value': ['to', 'ascii'], 'probability': 1.4040797395864502e-06}, {'value': ['between'], 'probability': 1.3503532727554557e-06}, {'value': ['to', 'class', 'name'], 'probability': 1.1980296221736353e-06}]","[0.3061188, 0.32547766, 0.2668092, 0.36831948, 0.3029888, 0.30301368, 0.5012616, 0.36131394, 0.25111422, 0.33720037]",0.30611903771418336
1047,1047,"public static final void crossToOutUnsafe(Vec2 a, float s, Vec2 out) {assert (out != a);out.x = s * a.y;out.y = -s * a.x;}
","public static final [MASK] crossToOutUnsafe(Vec2 a, float s, Vec2 out) {assert (out != a);out.x = s * a.y;out.y = -s * a.x;}
",void,"[{'value': ['double'], 'probability': 0.38562291860580444}, {'value': ['void'], 'probability': 0.25483256578445435}, {'value': ['float'], 'probability': 0.09603876620531082}, {'value': ['long'], 'probability': 0.035195428878068924}, {'value': ['Double'], 'probability': 0.021481074392795563}]","[0.14729977, 1.0, 0.22919214, 0.23130237, 0.0]",0.3417868477581189,"[{'value': ['mul'], 'probability': 0.9148008823394775}, {'value': ['scale'], 'probability': 0.05660387501120567}, {'value': ['cross', 'to', 'out'], 'probability': 0.01273360662162304}, {'value': ['reflect'], 'probability': 0.006301825400441885}, {'value': ['neg'], 'probability': 0.004815538413822651}, {'value': ['adapt'], 'probability': 0.0018431514035910368}, {'value': ['inverse'], 'probability': 0.0009880290599539876}, {'value': ['concat'], 'probability': 0.0008508567698299885}, {'value': ['normalized'], 'probability': 0.0005424682167358696}, {'value': ['pow'], 'probability': 0.0005196973215788603}]","[-0.07154343, 0.15490808, 0.3061188, 0.2471895, 0.018972496, 0.10010836, 0.35374278, 0.0, 0.116840295, 0.052711997]",-0.05050769161848524
1048,1048,"public static final Vec2 cross(float s, Vec2 a) {return new Vec2(-s * a.y, s * a.x);}
","public static final [MASK] cross(float s, [MASK] a) {return new [MASK](-s * a.y, s * a.x);}
",Vec2,"[{'value': ['double'], 'probability': 0.7533698678016663}, {'value': ['float'], 'probability': 0.06411606073379517}, {'value': ['Double'], 'probability': 0.05270463228225708}, {'value': ['final'], 'probability': 0.022796427831053734}, {'value': ['T'], 'probability': 0.013639813289046288}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['cross'], 'probability': 0.9997348189353943}, {'value': ['set', 'y'], 'probability': 0.00013180750829633325}, {'value': ['scale'], 'probability': 4.583225381793454e-05}, {'value': ['y'], 'probability': 4.1585892176954076e-05}, {'value': ['reflect'], 'probability': 1.4236012248147745e-05}, {'value': ['mul'], 'probability': 9.570037946105003e-06}, {'value': ['determinant'], 'probability': 6.794176897528814e-06}, {'value': ['intersects', 'line'], 'probability': 6.060827217879705e-06}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 4.779014943778748e-06}, {'value': ['cross', 'to', 'out'], 'probability': 4.542701390164439e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1049,1049,"public static final void crossToOut(float s, Vec2 a, Vec2 out) {final float tempY = s * a.x;out.x = -s * a.y;out.y = tempY;}
","public static final [MASK] crossToOut(float s, Vec2 a, Vec2 out) {final float tempY = s * a.x;out.x = -s * a.y;out.y = tempY;}
",void,"[{'value': ['float'], 'probability': 0.5064877271652222}, {'value': ['double'], 'probability': 0.42410022020339966}, {'value': ['void'], 'probability': 0.020614180713891983}, {'value': ['long'], 'probability': 0.013187728822231293}, {'value': ['Double'], 'probability': 0.006556488573551178}]","[0.22919214, 0.14729977, 1.0, 0.23130237, 0.0]",0.2022174019309425,"[{'value': ['cross', 'to', 'out'], 'probability': 0.9991620779037476}, {'value': ['mul', 'to', 'out'], 'probability': 0.0008036646759137511}, {'value': ['center', 'on'], 'probability': 1.2226208127685823e-05}, {'value': ['solve', 'to', 'out'], 'probability': 9.72346151684178e-06}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 5.5404625527444296e-06}, {'value': ['test', 'write', 'int'], 'probability': 1.704684905234899e-06}, {'value': ['normalized'], 'probability': 1.4367843732543406e-06}, {'value': ['mul', 'local'], 'probability': 1.3458778767017066e-06}, {'value': ['get', 'absolute', 'location'], 'probability': 1.291155854232784e-06}, {'value': ['invert', 'affine'], 'probability': 8.728993634576909e-07}]","[0.3061188, 0.32547766, 0.2668092, 0.36831948, 0.3029888, 0.23135512, 0.116840295, 0.041888956, 0.4414688, 0.1082548]",0.3061336764346239
1050,1050,"public static final void crossToOutUnsafe(float s, Vec2 a, Vec2 out) {assert (out != a);out.x = -s * a.y;out.y = s * a.x;}
","public static final [MASK] crossToOutUnsafe(float s, Vec2 a, Vec2 out) {assert (out != a);out.x = -s * a.y;out.y = s * a.x;}
",void,"[{'value': ['double'], 'probability': 0.41717812418937683}, {'value': ['void'], 'probability': 0.2505947947502136}, {'value': ['float'], 'probability': 0.10029218345880508}, {'value': ['long'], 'probability': 0.028257539495825768}, {'value': ['Double'], 'probability': 0.02567427046597004}]","[0.14729977, 1.0, 0.22919214, 0.23130237, 0.0]",0.3415672507056077,"[{'value': ['mul'], 'probability': 0.9558582305908203}, {'value': ['scale'], 'probability': 0.020435599610209465}, {'value': ['adapt'], 'probability': 0.009948029182851315}, {'value': ['cross', 'to', 'out'], 'probability': 0.006195112597197294}, {'value': ['neg'], 'probability': 0.003044388722628355}, {'value': ['reflect'], 'probability': 0.002502965973690152}, {'value': ['inverse'], 'probability': 0.0007490323623642325}, {'value': ['plus'], 'probability': 0.0005782280350103974}, {'value': ['cast'], 'probability': 0.00037920326576568186}, {'value': ['aa'], 'probability': 0.0003091120161116123}]","[-0.07154343, 0.15490808, 0.10010836, 0.3061188, 0.018972496, 0.2471895, 0.35374278, 0.114955954, 0.4281302, -0.09902111]",-0.061187773729039566
1051,1051,"public static final void negateToOut(Vec2 a, Vec2 out) {out.x = -a.x;out.y = -a.y;}
","public static final [MASK] negateToOut(Vec2 a, Vec2 out) {out.x = -a.x;out.y = -a.y;}
",void,"[{'value': ['void'], 'probability': 0.5693672895431519}, {'value': ['String'], 'probability': 0.08404954522848129}, {'value': ['long'], 'probability': 0.03145221993327141}, {'value': ['Point'], 'probability': 0.02929760329425335}, {'value': ['Type'], 'probability': 0.01982284151017666}]","[1.0, 0.0, 0.23130237, 0.0, 0.0]",0.5766422624189971,"[{'value': ['negate'], 'probability': 0.8351803421974182}, {'value': ['neg'], 'probability': 0.06438082456588745}, {'value': ['cross'], 'probability': 0.03194275125861168}, {'value': ['inverse'], 'probability': 0.023940950632095337}, {'value': ['apply'], 'probability': 0.02319396659731865}, {'value': ['eval'], 'probability': 0.006571284960955381}, {'value': ['evaluate'], 'probability': 0.005269752815365791}, {'value': ['normalize'], 'probability': 0.005070830229669809}, {'value': ['negate', 'local'], 'probability': 0.0028549409471452236}, {'value': ['reverse'], 'probability': 0.0015943830367177725}]","[0.25879222, 0.018972496, 0.092641465, 0.35374278, 0.3034649, 0.06177038, 0.12891859, 0.13025303, 0.25454596, 0.2289754]",0.23866391530489184
1052,1052,"public static final Vec2 min(Vec2 a, Vec2 b) {return new Vec2(a.x < b.x ? a.x : b.x, a.y < b.y ? a.y : b.y);}
","public static final [MASK] min([MASK] a, [MASK] b) {return new [MASK](a.x < b.x ? a.x : b.x, a.y < b.y ? a.y : b.y);}
",Vec2,"[{'value': ['double'], 'probability': 0.2737281620502472}, {'value': ['min'], 'probability': 0.18205486238002777}, {'value': ['long'], 'probability': 0.09331962466239929}, {'value': ['Block'], 'probability': 0.077716164290905}, {'value': ['Point'], 'probability': 0.05757337063550949}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['min'], 'probability': 0.9657394289970398}, {'value': ['intersects'], 'probability': 0.00956583209335804}, {'value': ['split'], 'probability': 0.005447567906230688}, {'value': ['abs'], 'probability': 0.005016419570893049}, {'value': ['m'], 'probability': 0.003787556430324912}, {'value': ['max'], 'probability': 0.0037556916940957308}, {'value': ['diff'], 'probability': 0.002734237117692828}, {'value': ['project'], 'probability': 0.0016603373223915696}, {'value': ['invert'], 'probability': 0.0012103449553251266}, {'value': ['eval'], 'probability': 0.0010826309444382787}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1053,1053,"public static final Vec2 max(Vec2 a, Vec2 b) {return new Vec2(a.x > b.x ? a.x : b.x, a.y > b.y ? a.y : b.y);}
","public static final [MASK] max([MASK] a, [MASK] b) {return new [MASK](a.x > b.x ? a.x : b.x, a.y > b.y ? a.y : b.y);}
",Vec2,"[{'value': ['double'], 'probability': 0.2907555103302002}, {'value': ['long'], 'probability': 0.2576007544994354}, {'value': ['Long'], 'probability': 0.1092471033334732}, {'value': ['Point'], 'probability': 0.07880992442369461}, {'value': ['short'], 'probability': 0.04670923575758934}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['max'], 'probability': 0.9412927627563477}, {'value': ['min'], 'probability': 0.05818422883749008}, {'value': ['m'], 'probability': 0.00043185477261431515}, {'value': ['intersection'], 'probability': 2.7578551453188993e-05}, {'value': ['get'], 'probability': 1.828796484915074e-05}, {'value': ['factory'], 'probability': 1.558683106850367e-05}, {'value': ['cross'], 'probability': 9.66177958616754e-06}, {'value': ['get', 'first'], 'probability': 9.660471732786391e-06}, {'value': ['sum'], 'probability': 5.661026534653502e-06}, {'value': ['union'], 'probability': 4.646855813916773e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1054,1054,"public static final void minToOut(Vec2 a, Vec2 b, Vec2 out) {out.x = a.x < b.x ? a.x : b.x;out.y = a.y < b.y ? a.y : b.y;}
","public static final [MASK] minToOut(Vec2 a, Vec2 b, Vec2 out) {out.x = a.x < b.x ? a.x : b.x;out.y = a.y < b.y ? a.y : b.y;}
",void,"[{'value': ['void'], 'probability': 0.5004082322120667}, {'value': ['double'], 'probability': 0.0991320088505745}, {'value': ['long'], 'probability': 0.09507565200328827}, {'value': ['Long'], 'probability': 0.03191080316901207}, {'value': ['String'], 'probability': 0.03114095889031887}]","[1.0, 0.14729977, 0.23130237, 0.0, 0.0]",0.5370015771975407,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.7751794457435608}, {'value': ['set'], 'probability': 0.046883199363946915}, {'value': ['translate'], 'probability': 0.035292599350214005}, {'value': ['add'], 'probability': 0.03524903580546379}, {'value': ['project'], 'probability': 0.023056909441947937}, {'value': ['clamp'], 'probability': 0.021973000839352608}, {'value': ['merge'], 'probability': 0.01815160922706127}, {'value': ['inverse', 'transform'], 'probability': 0.016920175403356552}, {'value': ['reflect'], 'probability': 0.014936815947294235}, {'value': ['union'], 'probability': 0.012357279658317566}]","[0.3029888, 0.29215682, 0.16127631, 0.17481552, 0.2628838, 0.098053016, 0.23589604, 0.4078402, 0.2471895, 0.26121444]",0.28674042658697496
1055,1055,"public static final void maxToOut(Vec2 a, Vec2 b, Vec2 out) {out.x = a.x > b.x ? a.x : b.x;out.y = a.y > b.y ? a.y : b.y;}
","public static final [MASK] maxToOut(Vec2 a, Vec2 b, Vec2 out) {out.x = a.x > b.x ? a.x : b.x;out.y = a.y > b.y ? a.y : b.y;}
",void,"[{'value': ['void'], 'probability': 0.6883137822151184}, {'value': ['double'], 'probability': 0.0702219307422638}, {'value': ['long'], 'probability': 0.04311086982488632}, {'value': ['Point'], 'probability': 0.0221831314265728}, {'value': ['String'], 'probability': 0.018964232876896858}]","[1.0, 0.14729977, 0.23130237, 0.0, 0.0]",0.7086291023956642,"[{'value': ['merge'], 'probability': 0.29761868715286255}, {'value': ['clamp'], 'probability': 0.22855022549629211}, {'value': ['assert', 'equals'], 'probability': 0.13753660023212433}, {'value': ['combine'], 'probability': 0.07008247822523117}, {'value': ['subtract'], 'probability': 0.06008460372686386}, {'value': ['translate'], 'probability': 0.05324947461485863}, {'value': ['union'], 'probability': 0.052644360810518265}, {'value': ['divide'], 'probability': 0.03624199330806732}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.03598328307271004}, {'value': ['add'], 'probability': 0.02800825983285904}]","[0.23589604, 0.098053016, 0.32385373, 0.0903228, 0.060511738, 0.16127631, 0.26121444, 0.31516382, 0.3029888, 0.17481552]",0.1966850404304613
1056,1056,"public static long getCPtr(btBvhSubtreeInfo obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btBvhSubtreeInfo obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.06220395117998123}, {'value': ['read'], 'probability': 0.05648732930421829}, {'value': ['process'], 'probability': 0.04111257568001747}, {'value': ['evaluate'], 'probability': 0.032277848571538925}, {'value': ['execute'], 'probability': 0.03220310062170029}]","[1.0, 0.5726487, 0.52250975, 0.40115592, 0.37713256]",0.1411263568273187,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1057,1057,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1058,1058,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btBvhSubtreeInfo(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btBvhSubtreeInfo(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8457657098770142}, {'value': ['start'], 'probability': 0.012026074342429638}, {'value': ['clear'], 'probability': 0.010250321589410305}, {'value': ['test'], 'probability': 0.009927763603627682}, {'value': ['execute'], 'probability': 0.008184896782040596}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1257813792227596,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1059,1059,"public void setQuantizedAabbMin(int[] value) {CollisionJNI.btBvhSubtreeInfo_quantizedAabbMin_set(swigCPtr, this, value);}
","public void [MASK](int[] value) {CollisionJNI.btBvhSubtreeInfo_quantizedAabbMin_set(swigCPtr, this, value);}
",setQuantizedAabbMin,"[{'value': ['set'], 'probability': 0.6632651090621948}, {'value': ['put'], 'probability': 0.07992066442966461}, {'value': ['execute'], 'probability': 0.01584642194211483}, {'value': ['get'], 'probability': 0.011336131952702999}, {'value': ['apply'], 'probability': 0.007958739995956421}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.5010617]",0.7436909631433207,"[{'value': ['set', 'value'], 'probability': 0.17686183750629425}, {'value': ['set', 'code'], 'probability': 0.15240396559238434}, {'value': ['set', 'flags'], 'probability': 0.14424185454845428}, {'value': ['set', 'id'], 'probability': 0.12109047174453735}, {'value': ['inject'], 'probability': 0.08941023796796799}, {'value': ['set', 'top'], 'probability': 0.07851280272006989}, {'value': ['set', 'to'], 'probability': 0.06738638877868652}, {'value': ['pack'], 'probability': 0.05836913734674454}, {'value': ['set', 'all'], 'probability': 0.056383173912763596}, {'value': ['set', 'node'], 'probability': 0.05534015968441963}]","[0.8399167, 0.852165, 0.7786614, 0.7939222, 0.21771094, 0.8966336, 0.9136955, 0.459913, 0.918451, 0.72929657]",0.7572972546409708
1060,1060,"public int[] getQuantizedAabbMin() {return CollisionJNI.btBvhSubtreeInfo_quantizedAabbMin_get(swigCPtr, this);}
","public int[] [MASK]() {return CollisionJNI.btBvhSubtreeInfo_quantizedAabbMin_get(swigCPtr, this);}
",getQuantizedAabbMin,"[{'value': ['values'], 'probability': 0.11281284689903259}, {'value': ['flags'], 'probability': 0.08354997634887695}, {'value': ['get'], 'probability': 0.055874962359666824}, {'value': ['size'], 'probability': 0.04150030016899109}, {'value': ['keys'], 'probability': 0.026497825980186462}]","[0.37543342, 0.19713469, 1.0, 0.43109724, 0.39512447]",0.1430598774592062,"[{'value': ['get', 'flags'], 'probability': 0.18518982827663422}, {'value': ['get', 'ids'], 'probability': 0.1501302868127823}, {'value': ['get', 'reserved'], 'probability': 0.1423209011554718}, {'value': ['get', 'data'], 'probability': 0.10919523239135742}, {'value': ['get', 'bits'], 'probability': 0.08930590003728867}, {'value': ['get', 'id'], 'probability': 0.07842478156089783}, {'value': ['get', 'keywords'], 'probability': 0.0757821649312973}, {'value': ['get', 'event', 'types'], 'probability': 0.06443716585636139}, {'value': ['to', 'array'], 'probability': 0.06032933294773102}, {'value': ['get', 'sequence'], 'probability': 0.04488454759120941}]","[0.75727946, 0.8027674, 0.855474, 0.82370985, 0.84125656, 0.82231325, 0.7609473, 0.8123146, 0.69582117, 0.80135465]",0.8000324358713463
1061,1061,"public void setQuantizedAabbMax(int[] value) {CollisionJNI.btBvhSubtreeInfo_quantizedAabbMax_set(swigCPtr, this, value);}
","public void [MASK](int[] value) {CollisionJNI.btBvhSubtreeInfo_quantizedAabbMax_set(swigCPtr, this, value);}
",setQuantizedAabbMax,"[{'value': ['set'], 'probability': 0.6653746366500854}, {'value': ['put'], 'probability': 0.07773436605930328}, {'value': ['execute'], 'probability': 0.016677530482411385}, {'value': ['get'], 'probability': 0.009520594961941242}, {'value': ['write'], 'probability': 0.00886403676122427}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.46259418]",0.7432878777669272,"[{'value': ['set', 'value'], 'probability': 0.17686183750629425}, {'value': ['set', 'code'], 'probability': 0.15240396559238434}, {'value': ['set', 'flags'], 'probability': 0.14424185454845428}, {'value': ['set', 'id'], 'probability': 0.12109047174453735}, {'value': ['inject'], 'probability': 0.08941023796796799}, {'value': ['set', 'top'], 'probability': 0.07851280272006989}, {'value': ['set', 'to'], 'probability': 0.06738638877868652}, {'value': ['pack'], 'probability': 0.05836913734674454}, {'value': ['set', 'all'], 'probability': 0.056383173912763596}, {'value': ['set', 'node'], 'probability': 0.05534015968441963}]","[0.8399167, 0.852165, 0.7786614, 0.7939222, 0.21771094, 0.8966336, 0.9136955, 0.459913, 0.918451, 0.72929657]",0.7572972546409708
1062,1062,"public int[] getQuantizedAabbMax() {return CollisionJNI.btBvhSubtreeInfo_quantizedAabbMax_get(swigCPtr, this);}
","public int[] [MASK]() {return CollisionJNI.btBvhSubtreeInfo_quantizedAabbMax_get(swigCPtr, this);}
",getQuantizedAabbMax,"[{'value': ['values'], 'probability': 0.10698661208152771}, {'value': ['flags'], 'probability': 0.10515259951353073}, {'value': ['get'], 'probability': 0.047598011791706085}, {'value': ['size'], 'probability': 0.03631887584924698}, {'value': ['keys'], 'probability': 0.03088740073144436}]","[0.37543342, 0.19713469, 1.0, 0.43109724, 0.39512447]",0.1363549207008845,"[{'value': ['get', 'flags'], 'probability': 0.18518982827663422}, {'value': ['get', 'ids'], 'probability': 0.1501302868127823}, {'value': ['get', 'reserved'], 'probability': 0.1423209011554718}, {'value': ['get', 'data'], 'probability': 0.10919523239135742}, {'value': ['get', 'bits'], 'probability': 0.08930590003728867}, {'value': ['get', 'id'], 'probability': 0.07842478156089783}, {'value': ['get', 'keywords'], 'probability': 0.0757821649312973}, {'value': ['get', 'event', 'types'], 'probability': 0.06443716585636139}, {'value': ['to', 'array'], 'probability': 0.06032933294773102}, {'value': ['get', 'sequence'], 'probability': 0.04488454759120941}]","[0.75727946, 0.8027674, 0.855474, 0.82370985, 0.84125656, 0.82231325, 0.7609473, 0.8123146, 0.69582117, 0.80135465]",0.8000324358713463
1063,1063,"public void setRootNodeIndex(int value) {CollisionJNI.btBvhSubtreeInfo_rootNodeIndex_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btBvhSubtreeInfo_rootNodeIndex_set(swigCPtr, this, value);}
",setRootNodeIndex,"[{'value': ['set'], 'probability': 0.6572707891464233}, {'value': ['put'], 'probability': 0.09396208822727203}, {'value': ['execute'], 'probability': 0.01610768958926201}, {'value': ['get'], 'probability': 0.012780847027897835}, {'value': ['value'], 'probability': 0.009025070816278458}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.47274652]",0.7501620516076283,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1064,1064,"public int getRootNodeIndex() {return CollisionJNI.btBvhSubtreeInfo_rootNodeIndex_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btBvhSubtreeInfo_rootNodeIndex_get(swigCPtr, this);}
",getRootNodeIndex,"[{'value': ['get'], 'probability': 0.1255359947681427}, {'value': ['start'], 'probability': 0.0638316199183464}, {'value': ['size'], 'probability': 0.0403829887509346}, {'value': ['run'], 'probability': 0.0390617810189724}, {'value': ['next'], 'probability': 0.037191733717918396}]","[1.0, 0.7199945, 0.43109724, 0.65114945, 0.6966621]",0.2402485337146278,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1065,1065,"public void setSubtreeSize(int value) {CollisionJNI.btBvhSubtreeInfo_subtreeSize_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btBvhSubtreeInfo_subtreeSize_set(swigCPtr, this, value);}
",setSubtreeSize,"[{'value': ['set'], 'probability': 0.6208069324493408}, {'value': ['put'], 'probability': 0.12852364778518677}, {'value': ['execute'], 'probability': 0.012858819216489792}, {'value': ['value'], 'probability': 0.012459153309464455}, {'value': ['get'], 'probability': 0.012250175699591637}]","[1.0, 0.7944568, 0.35167885, 0.47274652, 0.65028083]",0.7412916663950846,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1066,1066,"public int getSubtreeSize() {return CollisionJNI.btBvhSubtreeInfo_subtreeSize_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btBvhSubtreeInfo_subtreeSize_get(swigCPtr, this);}
",getSubtreeSize,"[{'value': ['get'], 'probability': 0.09662729501724243}, {'value': ['start'], 'probability': 0.05368940532207489}, {'value': ['size'], 'probability': 0.04888065904378891}, {'value': ['next'], 'probability': 0.04400688409805298}, {'value': ['run'], 'probability': 0.03665879741311073}]","[1.0, 0.7199945, 0.43109724, 0.6966621, 0.65114945]",0.2108839732970375,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1067,1067,"public void setPadding(int[] value) {CollisionJNI.btBvhSubtreeInfo_padding_set(swigCPtr, this, value);}
","public void [MASK](int[] value) {CollisionJNI.btBvhSubtreeInfo_padding_set(swigCPtr, this, value);}
",setPadding,"[{'value': ['set'], 'probability': 0.6719746589660645}, {'value': ['put'], 'probability': 0.11699015647172928}, {'value': ['execute'], 'probability': 0.011638849973678589}, {'value': ['add'], 'probability': 0.007653120439499617}, {'value': ['get'], 'probability': 0.0075891041196882725}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.65028083]",0.7778379872570842,"[{'value': ['set', 'value'], 'probability': 0.17686183750629425}, {'value': ['set', 'code'], 'probability': 0.15240396559238434}, {'value': ['set', 'flags'], 'probability': 0.14424185454845428}, {'value': ['set', 'id'], 'probability': 0.12109047174453735}, {'value': ['inject'], 'probability': 0.08941023796796799}, {'value': ['set', 'top'], 'probability': 0.07851280272006989}, {'value': ['set', 'to'], 'probability': 0.06738638877868652}, {'value': ['pack'], 'probability': 0.05836913734674454}, {'value': ['set', 'all'], 'probability': 0.056383173912763596}, {'value': ['set', 'node'], 'probability': 0.05534015968441963}]","[0.8399167, 0.852165, 0.7786614, 0.7939222, 0.21771094, 0.8966336, 0.9136955, 0.459913, 0.918451, 0.72929657]",0.7572972546409708
1068,1068,"public int[] getPadding() {return CollisionJNI.btBvhSubtreeInfo_padding_get(swigCPtr, this);}
","public int[] [MASK]() {return CollisionJNI.btBvhSubtreeInfo_padding_get(swigCPtr, this);}
",getPadding,"[{'value': ['flags'], 'probability': 0.1178518757224083}, {'value': ['values'], 'probability': 0.09662166237831116}, {'value': ['size'], 'probability': 0.05143953859806061}, {'value': ['get'], 'probability': 0.050068993121385574}, {'value': ['next'], 'probability': 0.03133133053779602}]","[0.19713469, 0.37543342, 0.43109724, 1.0, 0.6966621]",0.1535794811000522,"[{'value': ['get', 'flags'], 'probability': 0.18518982827663422}, {'value': ['get', 'ids'], 'probability': 0.1501302868127823}, {'value': ['get', 'reserved'], 'probability': 0.1423209011554718}, {'value': ['get', 'data'], 'probability': 0.10919523239135742}, {'value': ['get', 'bits'], 'probability': 0.08930590003728867}, {'value': ['get', 'id'], 'probability': 0.07842478156089783}, {'value': ['get', 'keywords'], 'probability': 0.0757821649312973}, {'value': ['get', 'event', 'types'], 'probability': 0.06443716585636139}, {'value': ['to', 'array'], 'probability': 0.06032933294773102}, {'value': ['get', 'sequence'], 'probability': 0.04488454759120941}]","[0.75727946, 0.8027674, 0.855474, 0.82370985, 0.84125656, 0.82231325, 0.7609473, 0.8123146, 0.69582117, 0.80135465]",0.8000324358713463
1069,1069,"public void setAabbFromQuantizeNode(btQuantizedBvhNode quantizedNode) {CollisionJNI.btBvhSubtreeInfo_setAabbFromQuantizeNode(swigCPtr, this, btQuantizedBvhNode.getCPtr(quantizedNode), quantizedNode);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK](btQuantizedBvhNode quantizedNode) {CollisionJNI.btBvhSubtreeInfo_[MASK](swigCPtr, this, btQuantizedBvhNode.getCPtr(quantizedNode), quantizedNode);}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",setAabbFromQuantizeNode,"[{'value': ['destroy'], 'probability': 0.30330389738082886}, {'value': ['set'], 'probability': 0.06187537685036659}, {'value': ['execute'], 'probability': 0.060788240283727646}, {'value': ['save'], 'probability': 0.053451020270586014}, {'value': ['create'], 'probability': 0.03055470623075962}]","[0.41348425, 1.0, 0.35167885, 0.5413879, 0.66197675]",0.2578289400809445,"[{'value': ['swap'], 'probability': 0.6864129900932312}, {'value': ['make', 'union'], 'probability': 0.10944683849811554}, {'value': ['set', 'nodes'], 'probability': 0.04918724298477173}, {'value': ['intersect'], 'probability': 0.029744848608970642}, {'value': ['add'], 'probability': 0.02443300560116768}, {'value': ['set', 'operand'], 'probability': 0.022532105445861816}, {'value': ['sub'], 'probability': 0.021639857441186905}, {'value': ['start', 'capture'], 'probability': 0.020184902474284172}, {'value': ['assign'], 'probability': 0.019655738025903702}, {'value': ['set', 'previous'], 'probability': 0.016762524843215942}]","[0.3554226, 0.69098675, 0.7400634, 0.11416183, 0.5084879, 0.66361094, 0.33460784, 0.7119248, 0.17613421, 0.90360475]",0.4269865924312512
1070,1070,"public static long getCPtr(btCollisionWorld obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btCollisionWorld obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.10250358283519745}, {'value': ['read'], 'probability': 0.03457446023821831}, {'value': ['update'], 'probability': 0.03294213488698006}, {'value': ['process'], 'probability': 0.029642565175890923}, {'value': ['evaluate'], 'probability': 0.02843496948480606}]","[1.0, 0.5726487, 0.36048478, 0.52250975, 0.40115592]",0.1610731266344925,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1071,1071,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1072,1072,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btCollisionWorld(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btCollisionWorld(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7935447692871094}, {'value': ['start'], 'probability': 0.016107816249132156}, {'value': ['clear'], 'probability': 0.01392784807831049}, {'value': ['test'], 'probability': 0.012955046258866787}, {'value': ['execute'], 'probability': 0.009657747112214565}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1207548647317979,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1073,1073,"public void setBroadphase(btBroadphaseInterface pairCache) {CollisionJNI.btCollisionWorld_setBroadphase(swigCPtr, this, btBroadphaseInterface.getCPtr(pairCache), pairCache);}
","public void [MASK](btBroadphaseInterface pairCache) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, btBroadphaseInterface.getCPtr(pairCache), pairCache);}
",setBroadphase,"[{'value': ['accept'], 'probability': 0.031595926731824875}, {'value': ['setup'], 'probability': 0.030890215188264847}, {'value': ['set'], 'probability': 0.030247768387198448}, {'value': ['write'], 'probability': 0.026849277317523956}, {'value': ['read'], 'probability': 0.02674766071140766}]","[0.44626972, 0.35182503, 1.0, 0.46259418, 0.4820371]",0.0805297088176706,"[{'value': ['collide'], 'probability': 0.9983024597167969}, {'value': ['remove', 'service'], 'probability': 0.0010566163109615445}, {'value': ['delete', 'message'], 'probability': 0.00025528648984618485}, {'value': ['discover', 'services'], 'probability': 0.00010094037133967504}, {'value': ['destroy', 'proxy'], 'probability': 8.899023669073358e-05}, {'value': ['is', 'subtype', 'of'], 'probability': 6.962058978388086e-05}, {'value': ['remove', 'receiver'], 'probability': 4.4561260438058525e-05}, {'value': ['remove', 'resource'], 'probability': 3.8207846955629066e-05}, {'value': ['mark', 'dead'], 'probability': 2.513630170142278e-05}, {'value': ['delete', 'bookmark'], 'probability': 1.8107415598933585e-05}]","[0.15105876, 0.608845, 0.3962198, 0.50796336, 0.37450475, 0.5490453, 0.44355252, 0.5079161, 0.573927, 0.05642782]",0.1517242427278914
1074,1074,"public btBroadphaseInterface getBroadphase() {long cPtr = CollisionJNI.btCollisionWorld_getBroadphase__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btBroadphaseInterface(cPtr, false);}
","public btBroadphaseInterface [MASK]() {long cPtr = CollisionJNI.btCollisionWorld_[MASK]__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btBroadphaseInterface(cPtr, false);}
",getBroadphase,"[{'value': ['create'], 'probability': 0.16960042715072632}, {'value': ['build'], 'probability': 0.10742015391588211}, {'value': ['get'], 'probability': 0.09948696196079254}, {'value': ['resolve'], 'probability': 0.08242875337600708}, {'value': ['clone'], 'probability': 0.06516927480697632}]","[0.62328804, 0.5626448, 1.0, 0.427468, 0.166604]",0.3117293840220028,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1075,1075,"public btOverlappingPairCache getPairCache() {long cPtr = CollisionJNI.btCollisionWorld_getPairCache(swigCPtr, this);return (cPtr == 0) ? null : new btOverlappingPairCache(cPtr, false);}
","public btOverlappingPairCache [MASK]() {long cPtr = CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);return (cPtr == 0) ? null : new btOverlappingPairCache(cPtr, false);}
",getPairCache,"[{'value': ['get'], 'probability': 0.22018085420131683}, {'value': ['build'], 'probability': 0.11149223148822784}, {'value': ['resolve'], 'probability': 0.07349030673503876}, {'value': ['clone'], 'probability': 0.06699049472808838}, {'value': ['create'], 'probability': 0.06216055899858475}]","[1.0, 0.5626448, 0.427468, 0.166604, 0.62328804]",0.3642309477013823,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1076,1076,"public btDispatcher getDispatcher() {long cPtr = CollisionJNI.btCollisionWorld_getDispatcher__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btDispatcher(cPtr, false);}
","public btDispatcher [MASK]() {long cPtr = CollisionJNI.btCollisionWorld_[MASK]__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btDispatcher(cPtr, false);}
",getDispatcher,"[{'value': ['clone'], 'probability': 0.07435625046491623}, {'value': ['create'], 'probability': 0.07048097252845764}, {'value': ['get'], 'probability': 0.06432303786277771}, {'value': ['execute'], 'probability': 0.04492184892296791}, {'value': ['resolve'], 'probability': 0.02756725624203682}]","[0.166604, 0.62328804, 1.0, 0.37713256, 0.427468]",0.1493666453591859,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1077,1077,"public void updateSingleAabb(btCollisionObject colObj) {CollisionJNI.btCollisionWorld_updateSingleAabb(swigCPtr, this, btCollisionObject.getCPtr(colObj), colObj);}
","public void [MASK](btCollisionObject colObj) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, btCollisionObject.getCPtr(colObj), colObj);}
",updateSingleAabb,"[{'value': ['test'], 'probability': 0.07449609041213989}, {'value': ['execute'], 'probability': 0.06114041060209274}, {'value': ['setup'], 'probability': 0.05844176560640335}, {'value': ['run'], 'probability': 0.05145936831831932}, {'value': ['read'], 'probability': 0.032268669456243515}]","[0.37940708, 0.2417731, 0.350659, 0.3326079, 0.3623474]",0.0923478428228183,"[{'value': ['upcast'], 'probability': 0.9975804090499878}, {'value': ['apply', 'gravity'], 'probability': 0.0014485151041299105}, {'value': ['contact', 'added'], 'probability': 0.0006450393702834845}, {'value': ['update', 'column', 'widths'], 'probability': 9.419534035259858e-05}, {'value': ['add', 'interceptor'], 'probability': 7.273286610143259e-05}, {'value': ['do', 'configure'], 'probability': 4.104718755115755e-05}, {'value': ['preprocess'], 'probability': 3.7263129343045875e-05}, {'value': ['cpy'], 'probability': 3.136225132038817e-05}, {'value': ['merge', 'into'], 'probability': 2.501904782548081e-05}, {'value': ['set', 'hash', 'key'], 'probability': 2.4412602215306833e-05}]","[0.0, 0.2155663, 0.4064025, 0.69285387, 0.4374603, 0.38043442, 0.0, 0.10113523, 0.3074472, 0.36878672]",0.0007069606728844098
1078,1078,"public void updateAabbs() {CollisionJNI.btCollisionWorld_updateAabbs(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);}
",updateAabbs,"[{'value': ['run'], 'probability': 0.5794857740402222}, {'value': ['test'], 'probability': 0.097393698990345}, {'value': ['execute'], 'probability': 0.049949005246162415}, {'value': ['setup'], 'probability': 0.028141474351286888}, {'value': ['start'], 'probability': 0.017884500324726105}]","[0.3326079, 0.37940708, 0.2417731, 0.350659, 0.46057966]",0.2598750268489513,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.29131207, 0.31137508, 0.10052309, -0.098711416, 0.3326079, 0.50968987, 0.102491766, 0.30971196, 0.3813853, 0.40955213]",0.24186574464409655
1079,1079,"public void computeOverlappingPairs() {CollisionJNI.btCollisionWorld_computeOverlappingPairs(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);}
",computeOverlappingPairs,"[{'value': ['run'], 'probability': 0.5794857740402222}, {'value': ['test'], 'probability': 0.097393698990345}, {'value': ['execute'], 'probability': 0.049949005246162415}, {'value': ['setup'], 'probability': 0.028141474351286888}, {'value': ['start'], 'probability': 0.017884500324726105}]","[0.18238093, 0.15396419, 0.30728686, 0.1587501, 0.114330426]",0.1425431736626913,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.12363701, 0.2930369, 0.18789496, 0.24766722, 0.18238093, 0.0807605, 0.25307298, 0.18796088, 0.36956352, 0.27040875]",0.1948477865086784
1080,1080,"public void setDebugDrawer(btIDebugDraw debugDrawer) {CollisionJNI.btCollisionWorld_setDebugDrawer(swigCPtr, this, btIDebugDraw.getCPtr(debugDrawer), debugDrawer);}
","public void [MASK](btIDebugDraw debugDrawer) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, btIDebugDraw.getCPtr(debugDrawer), debugDrawer);}
",setDebugDrawer,"[{'value': ['run'], 'probability': 0.08113005012273788}, {'value': ['apply'], 'probability': 0.060342270880937576}, {'value': ['execute'], 'probability': 0.035251252353191376}, {'value': ['set'], 'probability': 0.034351151436567307}, {'value': ['setup'], 'probability': 0.03400454297661781}]","[0.67632943, 0.5010617, 0.35167885, 1.0, 0.35182503]",0.1438177609424654,"[{'value': ['inject'], 'probability': 0.5751115679740906}, {'value': ['init'], 'probability': 0.12310189753770828}, {'value': ['assign'], 'probability': 0.09806474298238754}, {'value': ['make', 'union'], 'probability': 0.03791329637169838}, {'value': ['copy', 'to'], 'probability': 0.031907569617033005}, {'value': ['swap'], 'probability': 0.030615612864494324}, {'value': ['set', 'next'], 'probability': 0.028548728674650192}, {'value': ['set', 'priority'], 'probability': 0.026573138311505318}, {'value': ['add'], 'probability': 0.024501949548721313}, {'value': ['set', 'bounds'], 'probability': 0.023661453276872635}]","[0.21771094, -0.2256778, 0.17613421, 0.69098675, 0.6930786, 0.3554226, 0.9381617, 0.8584916, 0.5084879, 0.83062565]",0.2556016852688643
1081,1081,"public btIDebugDraw getDebugDrawer() {long cPtr = CollisionJNI.btCollisionWorld_getDebugDrawer(swigCPtr, this);return (cPtr == 0) ? null : new btIDebugDraw(cPtr, false);}
","public btIDebugDraw [MASK]() {long cPtr = CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);return (cPtr == 0) ? null : new btIDebugDraw(cPtr, false);}
",getDebugDrawer,"[{'value': ['build'], 'probability': 0.20720274746418}, {'value': ['create'], 'probability': 0.10248146951198578}, {'value': ['get'], 'probability': 0.08325521647930145}, {'value': ['paint'], 'probability': 0.04263764247298241}, {'value': ['trim'], 'probability': 0.028559789061546326}]","[0.5626448, 0.62328804, 1.0, 0.41529104, 0.29039297]",0.289712827233887,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1082,1082,"public void debugDrawWorld() {CollisionJNI.btCollisionWorld_debugDrawWorld(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);}
",debugDrawWorld,"[{'value': ['run'], 'probability': 0.5794857740402222}, {'value': ['test'], 'probability': 0.097393698990345}, {'value': ['execute'], 'probability': 0.049949005246162415}, {'value': ['setup'], 'probability': 0.028141474351286888}, {'value': ['start'], 'probability': 0.017884500324726105}]","[-0.015929056, 0.095379956, 0.26934344, 0.30903667, -0.027155621]",0.0217232647486303,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[-0.11009032, 0.28960437, 0.012728439, 0.34987378, -0.015929056, -0.036225833, 0.34513175, 0.0052960464, 0.17505288, 0.07235518]",0.07016504646813408
1083,1083,"public void debugDrawObject(Matrix4 worldTransform, btCollisionShape shape, Vector3 color) {CollisionJNI.btCollisionWorld_debugDrawObject(swigCPtr, this, worldTransform, btCollisionShape.getCPtr(shape), shape, color);}
","public void [MASK](Matrix4 worldTransform, btCollisionShape shape, Vector3 color) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, worldTransform, btCollisionShape.getCPtr(shape), shape, color);}
",debugDrawObject,"[{'value': ['paint'], 'probability': 0.1201435923576355}, {'value': ['apply'], 'probability': 0.06877560913562775}, {'value': ['add'], 'probability': 0.06460771709680557}, {'value': ['update'], 'probability': 0.06321029365062714}, {'value': ['fill'], 'probability': 0.04419148713350296}]","[0.11460727, 0.09323085, 0.1257411, 0.20718965, 0.038058143]",0.0430835469140393,"[{'value': ['set', 'world', 'transform'], 'probability': 0.5177372097969055}, {'value': ['scale'], 'probability': 0.09703163057565689}, {'value': ['resize'], 'probability': 0.07060540467500687}, {'value': ['set', 'left'], 'probability': 0.06617537140846252}, {'value': ['dump', 'info'], 'probability': 0.06534910202026367}, {'value': ['paint', 'shape'], 'probability': 0.0494927354156971}, {'value': ['paint'], 'probability': 0.0400659516453743}, {'value': ['collides'], 'probability': 0.03798291087150574}, {'value': ['rotate'], 'probability': 0.03789058327674866}, {'value': ['clip'], 'probability': 0.017669085413217545}]","[0.024916383, -0.0076778885, 0.35696715, -0.11442896, 0.12619972, 0.048288025, 0.11460727, 0.056112707, 0.048888393, 0.09857551]",0.05074083866679068
1084,1084,"public int getNumCollisionObjects() {return CollisionJNI.btCollisionWorld_getNumCollisionObjects(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);}
",getNumCollisionObjects,"[{'value': ['get'], 'probability': 0.06074114516377449}, {'value': ['start'], 'probability': 0.049860723316669464}, {'value': ['run'], 'probability': 0.04758179187774658}, {'value': ['execute'], 'probability': 0.034183319658041}, {'value': ['state'], 'probability': 0.027635175734758377}]","[1.0, 0.7199945, 0.65114945, 0.37713256, 0.49234587]",0.1541211563248891,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1085,1085,"public void rayTest(Vector3 rayFromWorld, Vector3 rayToWorld, RayResultCallback resultCallback) {CollisionJNI.btCollisionWorld_rayTest(swigCPtr, this, rayFromWorld, rayToWorld, RayResultCallback.getCPtr(resultCallback), resultCallback);}
","public void [MASK](Vector3 rayFromWorld, Vector3 rayToWorld, RayResultCallback resultCallback) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, rayFromWorld, rayToWorld, RayResultCallback.getCPtr(resultCallback), resultCallback);}
",rayTest,"[{'value': ['apply'], 'probability': 0.06593380868434906}, {'value': ['run'], 'probability': 0.06194835528731346}, {'value': ['process'], 'probability': 0.05491079390048981}, {'value': ['test'], 'probability': 0.04476425424218178}, {'value': ['execute'], 'probability': 0.043482858687639236}]","[0.10904424, 0.2900184, 0.20856087, 0.30581892, -0.0018691211]",0.0502165893079939,"[{'value': ['assert', 'content', 'type'], 'probability': 0.24982336163520813}, {'value': ['generate', 'index'], 'probability': 0.16349492967128754}, {'value': ['assert', 'that'], 'probability': 0.15009061992168427}, {'value': ['list', 'all'], 'probability': 0.12045304477214813}, {'value': ['get', 'min', 'max'], 'probability': 0.06572293490171432}, {'value': ['send', 'email'], 'probability': 0.0653158575296402}, {'value': ['drop'], 'probability': 0.056583330035209656}, {'value': ['on', 'result'], 'probability': 0.04421974718570709}, {'value': ['is', 'upper', 'case'], 'probability': 0.04334510862827301}, {'value': ['send', 'iq'], 'probability': 0.04095102846622467}]","[0.18549117, 0.18489467, 0.2058126, 0.30756265, 0.48288646, 0.21606836, 0.17510253, 0.29189554, 0.35657609, 0.23104867]",0.2380891139235741
1086,1086,"public void convexSweepTest(btConvexShape castShape, Matrix4 from, Matrix4 to, ConvexResultCallback resultCallback, float allowedCcdPenetration) {CollisionJNI.btCollisionWorld_convexSweepTest__SWIG_0(swigCPtr, this, btConvexShape.getCPtr(castShape), castShape, from, to, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedCcdPenetration);}
","public void [MASK](btConvexShape castShape, Matrix4 from, Matrix4 to, ConvexResultCallback resultCallback, float allowedCcdPenetration) {CollisionJNI.btCollisionWorld_[MASK]__SWIG_0(swigCPtr, this, btConvexShape.getCPtr(castShape), castShape, from, to, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedCcdPenetration);}
",convexSweepTest,"[{'value': ['apply'], 'probability': 0.12350413203239441}, {'value': ['write'], 'probability': 0.07163354754447937}, {'value': ['add'], 'probability': 0.04748828709125519}, {'value': ['execute'], 'probability': 0.04356632009148598}, {'value': ['run'], 'probability': 0.04215969145298004}]","[0.13631009, -0.0784469, 0.10073938, 0.042198304, -0.044170648]",0.0159755735496727,"[{'value': ['generate', 'index'], 'probability': 0.26028937101364136}, {'value': ['get', 'min', 'max'], 'probability': 0.13117685914039612}, {'value': ['rotate'], 'probability': 0.125206857919693}, {'value': ['list', 'all'], 'probability': 0.11303851008415222}, {'value': ['add', 'links'], 'probability': 0.1043209359049797}, {'value': ['copy', 'of', 'range'], 'probability': 0.06889408826828003}, {'value': ['set', 'range'], 'probability': 0.05273132398724556}, {'value': ['assert', 'content', 'type'], 'probability': 0.05236978828907013}, {'value': ['assert', 'that'], 'probability': 0.046610601246356964}, {'value': ['read', 'all'], 'probability': 0.045361753553152084}]","[0.08101199, -0.07981157, 0.24521367, 0.04040906, 0.083189085, 0.08157962, 0.17472643, 0.11196697, -0.0037561506, 0.0045056287]",0.0752926079519958
1087,1087,"public void convexSweepTest(btConvexShape castShape, Matrix4 from, Matrix4 to, ConvexResultCallback resultCallback) {CollisionJNI.btCollisionWorld_convexSweepTest__SWIG_1(swigCPtr, this, btConvexShape.getCPtr(castShape), castShape, from, to, ConvexResultCallback.getCPtr(resultCallback), resultCallback);}
","public void [MASK](btConvexShape castShape, Matrix4 from, Matrix4 to, ConvexResultCallback resultCallback) {CollisionJNI.btCollisionWorld_[MASK]__SWIG_1(swigCPtr, this, btConvexShape.getCPtr(castShape), castShape, from, to, ConvexResultCallback.getCPtr(resultCallback), resultCallback);}
",convexSweepTest,"[{'value': ['apply'], 'probability': 0.10843117535114288}, {'value': ['add'], 'probability': 0.07226897776126862}, {'value': ['execute'], 'probability': 0.05584492161870003}, {'value': ['write'], 'probability': 0.04798956215381622}, {'value': ['run'], 'probability': 0.04654635861515999}]","[0.13631009, 0.10073938, 0.042198304, -0.0784469, -0.044170648]",0.018596540645412,"[{'value': ['drop'], 'probability': 0.20884451270103455}, {'value': ['copy', 'to'], 'probability': 0.1750171035528183}, {'value': ['rotate'], 'probability': 0.12719014286994934}, {'value': ['get', 'matrix'], 'probability': 0.09713579714298248}, {'value': ['copy', 'properties'], 'probability': 0.08028057962656021}, {'value': ['apply', 'matrix'], 'probability': 0.07773494720458984}, {'value': ['replace', 'all'], 'probability': 0.07060278952121735}, {'value': ['draw', 'bitmap'], 'probability': 0.06638239324092865}, {'value': ['transfer'], 'probability': 0.04947301372885704}, {'value': ['copy', 'of', 'range'], 'probability': 0.04733876511454582}]","[0.10258207, -0.005108229, 0.24521367, 0.27710328, 0.17226632, 0.40813318, 0.10260972, 0.20570861, 0.21199253, 0.08157962]",0.15944068603379938
1088,1088,"public void contactTest(btCollisionObject colObj, ContactResultCallback resultCallback) {CollisionJNI.btCollisionWorld_contactTest(swigCPtr, this, btCollisionObject.getCPtr(colObj), colObj, ContactResultCallback.getCPtr(resultCallback), resultCallback);}
","public void [MASK](btCollisionObject colObj, ContactResultCallback resultCallback) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, btCollisionObject.getCPtr(colObj), colObj, ContactResultCallback.getCPtr(resultCallback), resultCallback);}
",contactTest,"[{'value': ['execute'], 'probability': 0.09679459035396576}, {'value': ['run'], 'probability': 0.06018584594130516}, {'value': ['setup'], 'probability': 0.03797723725438118}, {'value': ['update'], 'probability': 0.03643031045794487}, {'value': ['add'], 'probability': 0.030776383355259895}]","[0.14438275, 0.33754316, 0.23205265, 0.31679958, 0.32729545]",0.0647175853690787,"[{'value': ['upcast'], 'probability': 0.9970520734786987}, {'value': ['handle', 'open', 'file'], 'probability': 0.0007239467813633382}, {'value': ['apply', 'gravity'], 'probability': 0.0003657423076219857}, {'value': ['do', 'map'], 'probability': 0.0003232581075280905}, {'value': ['preprocess'], 'probability': 0.0003226747503504157}, {'value': ['merge', 'into'], 'probability': 0.0003104547504335642}, {'value': ['internal', 'get'], 'probability': 0.00027950829826295376}, {'value': ['funnel'], 'probability': 0.00022973204613663256}, {'value': ['set', 'clob'], 'probability': 0.00019988934218417853}, {'value': ['contact', 'added'], 'probability': 0.0001927433186210692}]","[0.0, 0.5587321, 0.38290814, 0.50016373, 0.0, 0.3771877, 0.60833824, 0.10110052, 0.27765346, 0.8569382]",0.0012372504018058066
1089,1089,"public void contactPairTest(btCollisionObject colObjA, btCollisionObject colObjB, ContactResultCallback resultCallback) {CollisionJNI.btCollisionWorld_contactPairTest(swigCPtr, this, btCollisionObject.getCPtr(colObjA), colObjA, btCollisionObject.getCPtr(colObjB), colObjB, ContactResultCallback.getCPtr(resultCallback), resultCallback);}
","public void [MASK](btCollisionObject colObjA, btCollisionObject colObjB, ContactResultCallback resultCallback) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, btCollisionObject.getCPtr(colObjA), colObjA, btCollisionObject.getCPtr(colObjB), colObjB, ContactResultCallback.getCPtr(resultCallback), resultCallback);}
",contactPairTest,"[{'value': ['execute'], 'probability': 0.0878695398569107}, {'value': ['run'], 'probability': 0.07795924693346024}, {'value': ['apply'], 'probability': 0.04546507075428963}, {'value': ['update'], 'probability': 0.03690929710865021}, {'value': ['add'], 'probability': 0.035630952566862106}]","[0.14438275, 0.33754316, 0.40173286, 0.31679958, 0.32729545]",0.0806209675025341,"[{'value': ['list', 'all'], 'probability': 0.2913610637187958}, {'value': ['generate', 'index'], 'probability': 0.26163607835769653}, {'value': ['retrieve'], 'probability': 0.10446520894765854}, {'value': ['delete', 'group'], 'probability': 0.09620638936758041}, {'value': ['update', 'password'], 'probability': 0.048886556178331375}, {'value': ['extract', 'string'], 'probability': 0.047115180641412735}, {'value': ['read', 'all'], 'probability': 0.042767979204654694}, {'value': ['copy', 'to'], 'probability': 0.040575090795755386}, {'value': ['add', 'links'], 'probability': 0.034093573689460754}, {'value': ['get', 'user', 'groups'], 'probability': 0.032892823219299316}]","[0.48444375, 0.3436245, 0.43651992, 0.45140088, 0.33041194, 0.2892343, 0.5094838, 0.5842587, 0.52646285, 0.6010653]",0.4330771115449163
1090,1090,"public static void rayTestSingle(Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObject collisionObject, btCollisionShape collisionShape, Matrix4 colObjWorldTransform, RayResultCallback resultCallback) {CollisionJNI.btCollisionWorld_rayTestSingle(rayFromTrans, rayToTrans, btCollisionObject.getCPtr(collisionObject), collisionObject, btCollisionShape.getCPtr(collisionShape), collisionShape, colObjWorldTransform, RayResultCallback.getCPtr(resultCallback), resultCallback);}
","public static void [MASK](Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObject collisionObject, btCollisionShape collisionShape, Matrix4 colObjWorldTransform, RayResultCallback resultCallback) {CollisionJNI.btCollisionWorld_[MASK](rayFromTrans, rayToTrans, btCollisionObject.getCPtr(collisionObject), collisionObject, btCollisionShape.getCPtr(collisionShape), collisionShape, colObjWorldTransform, RayResultCallback.getCPtr(resultCallback), resultCallback);}
",rayTestSingle,"[{'value': ['apply'], 'probability': 0.036078955978155136}, {'value': ['execute'], 'probability': 0.03377501294016838}, {'value': ['process'], 'probability': 0.03240308165550232}, {'value': ['evaluate'], 'probability': 0.026763983070850372}, {'value': ['test'], 'probability': 0.026548488065600395}]","[0.10904424, -0.0018691211, 0.20856087, 0.16109923, 0.30581892]",0.0230597743410481,"[{'value': ['paint', 'shape'], 'probability': 0.29399213194847107}, {'value': ['get', 'collision', 'shape'], 'probability': 0.2838476896286011}, {'value': ['send', 'email'], 'probability': 0.12117106467485428}, {'value': ['write', 'style'], 'probability': 0.07818864285945892}, {'value': ['send', 'datagram'], 'probability': 0.04452086240053177}, {'value': ['make', 'query'], 'probability': 0.042564138770103455}, {'value': ['bind', 'header', 'view'], 'probability': 0.037155210971832275}, {'value': ['read', 'model'], 'probability': 0.035914212465286255}, {'value': ['add', 'links'], 'probability': 0.034043289721012115}, {'value': ['create', 'input', 'source'], 'probability': 0.028602713719010353}]","[0.22749227, 0.31965315, 0.21606836, 0.22810936, 0.112177, 0.22243759, 0.20243146, 0.37980744, 0.19454747, 0.31093836]",0.25277120678547405
1091,1091,"public static void rayTestSingleInternal(Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObjectWrapper collisionObjectWrap, RayResultCallback resultCallback) {CollisionJNI.btCollisionWorld_rayTestSingleInternal(rayFromTrans, rayToTrans, btCollisionObjectWrapper.getCPtr(collisionObjectWrap), collisionObjectWrap, RayResultCallback.getCPtr(resultCallback), resultCallback);}
","public static void [MASK](Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObjectWrapper collisionObjectWrap, RayResultCallback resultCallback) {CollisionJNI.btCollisionWorld_[MASK](rayFromTrans, rayToTrans, btCollisionObjectWrapper.getCPtr(collisionObjectWrap), collisionObjectWrap, RayResultCallback.getCPtr(resultCallback), resultCallback);}
",rayTestSingleInternal,"[{'value': ['test'], 'probability': 0.05560770258307457}, {'value': ['apply'], 'probability': 0.053361911326646805}, {'value': ['run'], 'probability': 0.046946931630373}, {'value': ['setup'], 'probability': 0.04070061445236206}, {'value': ['execute'], 'probability': 0.03726917505264282}]","[0.30581892, 0.10904424, 0.2900184, 0.23039569, -0.0018691211]",0.0457477562727825,"[{'value': ['assert', 'content', 'type'], 'probability': 0.17941658198833466}, {'value': ['list', 'all'], 'probability': 0.15199075639247894}, {'value': ['metadata'], 'probability': 0.11640739440917969}, {'value': ['retrieve'], 'probability': 0.09609560668468475}, {'value': ['add', 'links'], 'probability': 0.09216894209384918}, {'value': ['collect'], 'probability': 0.08237046748399734}, {'value': ['draw', 'bitmap'], 'probability': 0.07972222566604614}, {'value': ['copy', 'to'], 'probability': 0.07327613979578018}, {'value': ['encode', 'table', 'name'], 'probability': 0.07265744358301163}, {'value': ['decorate'], 'probability': 0.05589443817734718}]","[0.18549117, 0.30756265, -0.057641435, 0.2314669, 0.19454747, 0.18304361, 0.09954407, 0.3525906, 0.25943953, -0.060903765]",0.17778694086430546
1092,1092,"public static void objectQuerySingleInternal(btConvexShape castShape, Matrix4 convexFromTrans, Matrix4 convexToTrans, btCollisionObjectWrapper colObjWrap, ConvexResultCallback resultCallback, float allowedPenetration) {CollisionJNI.btCollisionWorld_objectQuerySingleInternal(btConvexShape.getCPtr(castShape), castShape, convexFromTrans, convexToTrans, btCollisionObjectWrapper.getCPtr(colObjWrap), colObjWrap, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);}
","public static void [MASK](btConvexShape castShape, Matrix4 convexFromTrans, Matrix4 convexToTrans, btCollisionObjectWrapper colObjWrap, ConvexResultCallback resultCallback, float allowedPenetration) {CollisionJNI.btCollisionWorld_[MASK](btConvexShape.getCPtr(castShape), castShape, convexFromTrans, convexToTrans, btCollisionObjectWrapper.getCPtr(colObjWrap), colObjWrap, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);}
",objectQuerySingleInternal,"[{'value': ['apply'], 'probability': 0.08248218148946762}, {'value': ['write'], 'probability': 0.07957608997821808}, {'value': ['execute'], 'probability': 0.04108812287449837}, {'value': ['perform'], 'probability': 0.03597676381468773}, {'value': ['update'], 'probability': 0.0337061733007431}]","[0.43692705, 0.33324808, 0.15417431, 0.30879325, 0.12366667]",0.0841697202814202,"[{'value': ['sweep'], 'probability': 0.9999997615814209}, {'value': ['find', 'objects'], 'probability': 9.861615524187073e-08}, {'value': ['get', 'object', 'array'], 'probability': 7.429159154526133e-08}, {'value': ['cas'], 'probability': 3.021381900225606e-08}, {'value': ['get', 'work', 'area'], 'probability': 2.9678355772944087e-08}, {'value': ['collide'], 'probability': 2.7108608691150948e-08}, {'value': ['in', 'sphere'], 'probability': 1.616812994598149e-08}, {'value': ['end', 'job'], 'probability': 1.5489359128650904e-08}, {'value': ['process', 'command'], 'probability': 1.464462506817199e-08}, {'value': ['get', 'datanodes'], 'probability': 1.3151616684581313e-08}]","[0.12494004, 0.7716914, 0.7908269, 0.1347572, 0.4620837, 0.23039836, 0.5627808, 0.36273864, 0.406267, 0.3802476]",0.12494019476439495
1093,1093,"public void addCollisionObject(btCollisionObject collisionObject, short collisionFilterGroup, short collisionFilterMask) {CollisionJNI.btCollisionWorld_addCollisionObject__SWIG_0(swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject, collisionFilterGroup, collisionFilterMask);}
","public void [MASK](btCollisionObject collisionObject, short collisionFilterGroup, short collisionFilterMask) {CollisionJNI.btCollisionWorld_[MASK]__SWIG_0(swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject, collisionFilterGroup, collisionFilterMask);}
",addCollisionObject,"[{'value': ['add'], 'probability': 0.04308773949742317}, {'value': ['register'], 'probability': 0.036279190331697464}, {'value': ['execute'], 'probability': 0.03617371246218681}, {'value': ['process'], 'probability': 0.02772201970219612}, {'value': ['update'], 'probability': 0.02636992186307907}]","[1.0, 0.284, 0.24202506, 0.44585663, 0.5117927]",0.0880019552295522,"[{'value': ['init'], 'probability': 0.2947104573249817}, {'value': ['set', 'insets'], 'probability': 0.29355672001838684}, {'value': ['add', 'layer'], 'probability': 0.08830232173204422}, {'value': ['set', 'block'], 'probability': 0.0733921229839325}, {'value': ['register', 'handler'], 'probability': 0.06504786759614944}, {'value': ['sort'], 'probability': 0.04990580677986145}, {'value': ['add', 'class'], 'probability': 0.04230679199099541}, {'value': ['integrate'], 'probability': 0.034913308918476105}, {'value': ['put', 'in', 'cache'], 'probability': 0.033800918608903885}, {'value': ['set', 'order', 'id'], 'probability': 0.024063697084784508}]","[-0.12278596, 0.47495726, 0.848432, 0.5222647, 0.17974783, 0.46858332, 0.8115614, 0.36191303, 0.50957483, 0.52024615]",0.3282797450417168
1094,1094,"public void addCollisionObject(btCollisionObject collisionObject, short collisionFilterGroup) {CollisionJNI.btCollisionWorld_addCollisionObject__SWIG_1(swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject, collisionFilterGroup);}
","public void [MASK](btCollisionObject collisionObject, short collisionFilterGroup) {CollisionJNI.btCollisionWorld_[MASK]__SWIG_1(swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject, collisionFilterGroup);}
",addCollisionObject,"[{'value': ['add'], 'probability': 0.06621481478214264}, {'value': ['execute'], 'probability': 0.0333685539662838}, {'value': ['update'], 'probability': 0.029240082949399948}, {'value': ['start'], 'probability': 0.029038194566965103}, {'value': ['analyze'], 'probability': 0.026540856808423996}]","[1.0, 0.24202506, 0.5117927, 0.47805375, 0.33467996]",0.1120202133990469,"[{'value': ['init'], 'probability': 0.9457958936691284}, {'value': ['has', 'hit'], 'probability': 0.012642924673855305}, {'value': ['add', 'gap'], 'probability': 0.008051137439906597}, {'value': ['add', 'class'], 'probability': 0.005850036162883043}, {'value': ['add', 'subclass'], 'probability': 0.0055068121291697025}, {'value': ['create', 'collision', 'algorithm'], 'probability': 0.005466355010867119}, {'value': ['add', 'rigid', 'body'], 'probability': 0.005194800440222025}, {'value': ['integrate'], 'probability': 0.00408965814858675}, {'value': ['register', 'handler'], 'probability': 0.0037538406904786825}, {'value': ['add', 'options'], 'probability': 0.0036484929732978344}]","[-0.12278596, 0.39542153, 0.84975326, 0.8115614, 0.73886317, 0.4465288, 0.6927587, 0.36191303, 0.17974783, 0.8758902]",-0.08408309498530678
1095,1095,"public void addCollisionObject(btCollisionObject collisionObject) {CollisionJNI.btCollisionWorld_addCollisionObject__SWIG_2(swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject);}
","public void [MASK](btCollisionObject collisionObject) {CollisionJNI.btCollisionWorld_[MASK]__SWIG_2(swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject);}
",addCollisionObject,"[{'value': ['execute'], 'probability': 0.03737647831439972}, {'value': ['start'], 'probability': 0.03574882447719574}, {'value': ['add'], 'probability': 0.03016442432999611}, {'value': ['create'], 'probability': 0.024581268429756165}, {'value': ['skip'], 'probability': 0.024450130760669708}]","[0.24202506, 0.47805375, 1.0, 0.60979056, 0.30525398]",0.0787532536953239,"[{'value': ['has', 'hit'], 'probability': 0.3130715787410736}, {'value': ['init'], 'probability': 0.280521035194397}, {'value': ['create', 'collision', 'algorithm'], 'probability': 0.1324693262577057}, {'value': ['merge', 'into'], 'probability': 0.06854993104934692}, {'value': ['merge'], 'probability': 0.055437032133340836}, {'value': ['preallocate'], 'probability': 0.03535519912838936}, {'value': ['absorb'], 'probability': 0.033947303891181946}, {'value': ['examples'], 'probability': 0.03298526257276535}, {'value': ['add', 'options'], 'probability': 0.024251002818346024}, {'value': ['handle', 'collision'], 'probability': 0.023412393406033516}]","[0.39542153, -0.12278596, 0.4465288, 0.5066086, 0.36407283, 0.0, 0.5110168, 0.31495944, 0.8758902, 0.42270434]",0.2622880675665772
1096,1096,"public btCollisionObjectArray getCollisionObjectArray() {return new btCollisionObjectArray(CollisionJNI.btCollisionWorld_getCollisionObjectArray__SWIG_0(swigCPtr, this), false);}
","public btCollisionObjectArray [MASK]() {return new btCollisionObjectArray(CollisionJNI.btCollisionWorld_[MASK]__SWIG_0(swigCPtr, this), false);}
",getCollisionObjectArray,"[{'value': ['build'], 'probability': 0.27571985125541687}, {'value': ['create'], 'probability': 0.1336318552494049}, {'value': ['get'], 'probability': 0.13165222108364105}, {'value': ['extend'], 'probability': 0.022885972633957863}, {'value': ['resolve'], 'probability': 0.019781921058893204}]","[0.5626448, 0.62328804, 1.0, 0.5252367, 0.427468]",0.3905523841723584,"[{'value': ['copy'], 'probability': 0.3019181787967682}, {'value': ['edge', 'type'], 'probability': 0.17588894069194794}, {'value': ['parse'], 'probability': 0.08446554839611053}, {'value': ['get', 'statement', 'container'], 'probability': 0.07866345345973969}, {'value': ['get', 'elements'], 'probability': 0.07059407234191895}, {'value': ['float', 'val'], 'probability': 0.0675334632396698}, {'value': ['tags'], 'probability': 0.058855049312114716}, {'value': ['clone'], 'probability': 0.05528922751545906}, {'value': ['get', 'cd'], 'probability': 0.05449811741709709}, {'value': ['build'], 'probability': 0.05229397490620613}]","[0.4466728, 0.5832915, 0.04902999, 0.73810506, 0.82784235, 0.22965817, 0.2646367, 0.166604, 0.80065113, 0.5626448]",0.4714502995320333
1097,1097,"public void removeCollisionObject(btCollisionObject collisionObject) {CollisionJNI.btCollisionWorld_removeCollisionObject(swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject);}
","public void [MASK](btCollisionObject collisionObject) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, btCollisionObject.getCPtr(collisionObject), collisionObject);}
",removeCollisionObject,"[{'value': ['start'], 'probability': 0.04036702588200569}, {'value': ['execute'], 'probability': 0.03154939040541649}, {'value': ['update'], 'probability': 0.030072616413235664}, {'value': ['register'], 'probability': 0.027188431471586227}, {'value': ['add'], 'probability': 0.025411158800125122}]","[0.3728393, 0.31010044, 0.3102556, 0.36595076, 0.67838424]",0.0613522477453825,"[{'value': ['has', 'hit'], 'probability': 0.3130715787410736}, {'value': ['init'], 'probability': 0.280521035194397}, {'value': ['create', 'collision', 'algorithm'], 'probability': 0.1324693262577057}, {'value': ['merge', 'into'], 'probability': 0.06854993104934692}, {'value': ['merge'], 'probability': 0.055437032133340836}, {'value': ['preallocate'], 'probability': 0.03535519912838936}, {'value': ['absorb'], 'probability': 0.033947303891181946}, {'value': ['examples'], 'probability': 0.03298526257276535}, {'value': ['add', 'options'], 'probability': 0.024251002818346024}, {'value': ['handle', 'collision'], 'probability': 0.023412393406033516}]","[0.33275244, -0.13273348, 0.4052189, 0.48953477, 0.328406, 0.0, 0.4715787, 0.19672681, 0.5996908, 0.42791075]",0.2194427309036861
1098,1098,"public void performDiscreteCollisionDetection() {CollisionJNI.btCollisionWorld_performDiscreteCollisionDetection(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);}
",performDiscreteCollisionDetection,"[{'value': ['run'], 'probability': 0.5794857740402222}, {'value': ['test'], 'probability': 0.097393698990345}, {'value': ['execute'], 'probability': 0.049949005246162415}, {'value': ['setup'], 'probability': 0.028141474351286888}, {'value': ['start'], 'probability': 0.017884500324726105}]","[0.43236637, 0.38307607, 0.44851014, 0.26908815, 0.47809878]",0.326385087253783,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.29369822, 0.18752705, 0.39880008, -0.06521415, 0.43236637, 0.38168845, 0.04083573, 0.4186031, 0.5315676, 0.49612892]",0.2717566882084697
1099,1099,"public btDispatcherInfo getDispatchInfo() {return new btDispatcherInfo(CollisionJNI.btCollisionWorld_getDispatchInfo__SWIG_0(swigCPtr, this), false);}
","public btDispatcherInfo [MASK]() {return new btDispatcherInfo(CollisionJNI.btCollisionWorld_[MASK]__SWIG_0(swigCPtr, this), false);}
",getDispatchInfo,"[{'value': ['create'], 'probability': 0.21834084391593933}, {'value': ['build'], 'probability': 0.15540213882923126}, {'value': ['run'], 'probability': 0.09838342666625977}, {'value': ['clone'], 'probability': 0.07939579337835312}, {'value': ['get'], 'probability': 0.05611281469464302}]","[0.62328804, 0.5626448, 0.65114945, 0.166604, 1.0]",0.3569282233916161,"[{'value': ['copy'], 'probability': 0.3019181787967682}, {'value': ['edge', 'type'], 'probability': 0.17588894069194794}, {'value': ['parse'], 'probability': 0.08446554839611053}, {'value': ['get', 'statement', 'container'], 'probability': 0.07866345345973969}, {'value': ['get', 'elements'], 'probability': 0.07059407234191895}, {'value': ['float', 'val'], 'probability': 0.0675334632396698}, {'value': ['tags'], 'probability': 0.058855049312114716}, {'value': ['clone'], 'probability': 0.05528922751545906}, {'value': ['get', 'cd'], 'probability': 0.05449811741709709}, {'value': ['build'], 'probability': 0.05229397490620613}]","[0.4466728, 0.5832915, 0.04902999, 0.73810506, 0.82784235, 0.22965817, 0.2646367, 0.166604, 0.80065113, 0.5626448]",0.4714502995320333
1100,1100,"public boolean getForceUpdateAllAabbs() {return CollisionJNI.btCollisionWorld_getForceUpdateAllAabbs(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this);}
",getForceUpdateAllAabbs,"[{'value': ['run'], 'probability': 0.13295738399028778}, {'value': ['execute'], 'probability': 0.09155979752540588}, {'value': ['is'], 'probability': 0.045801494270563126}, {'value': ['matches'], 'probability': 0.040128424763679504}, {'value': ['supports'], 'probability': 0.028354058042168617}]","[0.65114945, 0.37713256, 0.60187685, 0.38072872, 0.28394556]",0.1720012210447996,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.5703676, 0.62151444, 0.46099013, 0.6966621, 0.72397053, 0.64987934, 0.6442169, 0.7820494, 0.61224985, 0.58208746]",0.6070901805749452
1101,1101,"public void setForceUpdateAllAabbs(boolean forceUpdateAllAabbs) {CollisionJNI.btCollisionWorld_setForceUpdateAllAabbs(swigCPtr, this, forceUpdateAllAabbs);}
","public void [MASK](boolean forceUpdateAllAabbs) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, forceUpdateAllAabbs);}
",setForceUpdateAllAabbs,"[{'value': ['execute'], 'probability': 0.27775710821151733}, {'value': ['run'], 'probability': 0.19804738461971283}, {'value': ['test'], 'probability': 0.03702707216143608}, {'value': ['apply'], 'probability': 0.029795393347740173}, {'value': ['setup'], 'probability': 0.025218840688467026}]","[0.35167885, 0.67632943, 0.5425338, 0.5010617, 0.35182503]",0.2755169632904862,"[{'value': ['set', 'dirty'], 'probability': 0.6187309622764587}, {'value': ['init'], 'probability': 0.14125777781009674}, {'value': ['reinit'], 'probability': 0.06631449609994888}, {'value': ['bind'], 'probability': 0.04962663725018501}, {'value': ['attach'], 'probability': 0.030891206115484238}, {'value': ['grow'], 'probability': 0.026309974491596222}, {'value': ['recycle'], 'probability': 0.018168888986110687}, {'value': ['extend'], 'probability': 0.017703834921121597}, {'value': ['deactivate'], 'probability': 0.016321968287229538}, {'value': ['set', 'directory'], 'probability': 0.01467419508844614}]","[0.7950754, -0.2256778, 0.0, 0.24931578, 0.2794136, 0.39089534, 0.053610556, 0.5463553, 0.008925546, 0.7706035]",0.5134478929569543
1102,1102,"public void serialize(SWIGTYPE_p_btSerializer serializer) {CollisionJNI.btCollisionWorld_serialize(swigCPtr, this, SWIGTYPE_p_btSerializer.getCPtr(serializer));}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btMultiSapBroadphase_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public void [MASK](SWIGTYPE_p_btSerializer [MASK]r) {CollisionJNI.btCollisionWorld_[MASK](swigCPtr, this, SWIGTYPE_p_btSerializer.getCPtr([MASK]r));}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btMultiSapBroadphase_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",serialize,"[{'value': ['set'], 'probability': 0.17086642980575562}, {'value': ['update'], 'probability': 0.08006973564624786}, {'value': ['destroy'], 'probability': 0.06802290678024292}, {'value': ['add'], 'probability': 0.05092683434486389}, {'value': ['put'], 'probability': 0.035688914358615875}]","[-0.1208439, 0.028937915, 0.16155708, -0.011267965, -0.13498063]",-0.0127326868802083,"[{'value': ['set', 'nodes'], 'probability': 0.40203118324279785}, {'value': ['set', 'previous'], 'probability': 0.16473792493343353}, {'value': ['swap'], 'probability': 0.13652005791664124}, {'value': ['set', 'next'], 'probability': 0.06958374381065369}, {'value': ['set', 'top'], 'probability': 0.05304041504859924}, {'value': ['start', 'capture'], 'probability': 0.04115287587046623}, {'value': ['set', 'operand'], 'probability': 0.03799059987068176}, {'value': ['set', 'cc'], 'probability': 0.03507864102721214}, {'value': ['add', 'unique'], 'probability': 0.03151613473892212}, {'value': ['add', 'last'], 'probability': 0.028348390012979507}]","[-0.046226013, -0.18851459, -0.03416147, -0.19099182, -0.278437, -0.11130164, 0.01853086, -0.21664245, -0.038883816, -0.21941483]",-0.10128329844195537
1103,1103,"public static long getCPtr(btMultiSapBroadphase obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btMultiSapBroadphase obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.06851397454738617}, {'value': ['skip'], 'probability': 0.04171067476272583}, {'value': ['read'], 'probability': 0.032712556421756744}, {'value': ['match'], 'probability': 0.03073030896484852}, {'value': ['process'], 'probability': 0.030378054827451706}]","[1.0, 0.49507433, 0.5726487, 0.4692583, 0.52250975]",0.1381899447716461,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1104,1104,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1105,1105,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btMultiSapBroadphase(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btMultiSapBroadphase(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8326825499534607}, {'value': ['clear'], 'probability': 0.01361528318375349}, {'value': ['start'], 'probability': 0.011854584328830242}, {'value': ['test'], 'probability': 0.009585972875356674}, {'value': ['execute'], 'probability': 0.008233771659433842}]","[0.13931048, 0.18840031, 0.15163165, 0.14537679, 0.33713183]",0.1245335032880165,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1106,1106,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.9233640432357788}, {'value': ['destroyed'], 'probability': 0.050856124609708786}, {'value': ['rebuild'], 'probability': 0.0034799552522599697}, {'value': ['save'], 'probability': 0.0028305735904723406}, {'value': ['run'], 'probability': 0.0025874029379338026}]","[0.0852853, -0.009507184, 0.19255844, 0.15556529, 0.1346719]",0.0797247637593708,"[{'value': ['reset'], 'probability': 0.9985418319702148}, {'value': ['destroy'], 'probability': 0.00038971612229943275}, {'value': ['reinit'], 'probability': 0.00034774377127178013}, {'value': ['stop'], 'probability': 0.0002485333534423262}, {'value': ['clear'], 'probability': 0.00011762959911720827}, {'value': ['start'], 'probability': 0.00011339568300172687}, {'value': ['restart'], 'probability': 9.017132833832875e-05}, {'value': ['shutdown'], 'probability': 6.212670268723741e-05}, {'value': ['update'], 'probability': 4.8486774176126346e-05}, {'value': ['unset'], 'probability': 4.041389547637664e-05}]","[1.0, 0.0852853, 0.0, 0.1610944, 0.10589813, 0.23268494, 0.38693747, 0.25621086, 0.31137508, 0.15494414]",0.9987261162513923
1107,1107,"public static long getCPtr(btMultiSapProxy obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btMultiSapProxy obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.07332509756088257}, {'value': ['execute'], 'probability': 0.04017443209886551}, {'value': ['read'], 'probability': 0.03384910896420479}, {'value': ['update'], 'probability': 0.031907472759485245}, {'value': ['match'], 'probability': 0.031195754185318947}]","[1.0, 0.37713256, 0.5726487, 0.36048478, 0.4692583]",0.1340008576596518,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1108,1108,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1109,1109,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btMultiSapBroadphase_btMultiSapProxy(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btMultiSapBroadphase_btMultiSapProxy(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8269002437591553}, {'value': ['start'], 'probability': 0.013636269606649876}, {'value': ['test'], 'probability': 0.009882241487503052}, {'value': ['clear'], 'probability': 0.009756403975188732}, {'value': ['flush'], 'probability': 0.009011803194880486}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.120570555]",0.1216248754771202,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1110,1110,"public void setAabbMin(btVector3 value) {CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMin_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMin_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setAabbMin,"[{'value': ['set'], 'probability': 0.4972683787345886}, {'value': ['put'], 'probability': 0.057127565145492554}, {'value': ['execute'], 'probability': 0.030766941606998444}, {'value': ['add'], 'probability': 0.023682475090026855}, {'value': ['apply'], 'probability': 0.022012753412127495}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.5010617]",0.5765458414936115,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1111,1111,"public btVector3 getAabbMin() {long cPtr = CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMin_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMin_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getAabbMin,"[{'value': ['get'], 'probability': 0.14808575809001923}, {'value': ['clone'], 'probability': 0.12587319314479828}, {'value': ['build'], 'probability': 0.03679237514734268}, {'value': ['test'], 'probability': 0.03127207234501839}, {'value': ['run'], 'probability': 0.025066997855901718}]","[1.0, 0.166604, 0.5626448, 0.4599198, 0.65114945]",0.2204627805267875,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1112,1112,"public void setAabbMax(btVector3 value) {CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMax_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMax_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setAabbMax,"[{'value': ['set'], 'probability': 0.5205816030502319}, {'value': ['put'], 'probability': 0.05571717396378517}, {'value': ['execute'], 'probability': 0.029451608657836914}, {'value': ['add'], 'probability': 0.019469667226076126}, {'value': ['apply'], 'probability': 0.019014427438378334}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.5010617]",0.5946314882119554,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1113,1113,"public btVector3 getAabbMax() {long cPtr = CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMax_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_aabbMax_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getAabbMax,"[{'value': ['get'], 'probability': 0.14686745405197144}, {'value': ['clone'], 'probability': 0.1185474544763565}, {'value': ['build'], 'probability': 0.03597920015454292}, {'value': ['run'], 'probability': 0.02662048488855362}, {'value': ['test'], 'probability': 0.025762829929590225}]","[1.0, 0.166604, 0.5626448, 0.65114945, 0.4599198]",0.2160441929813825,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1114,1114,"public void setShapeType(int value) {CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_shapeType_set(swigCPtr, this, value);}
","public void [MASK](int value) {CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_shapeType_set(swigCPtr, this, value);}
",setShapeType,"[{'value': ['set'], 'probability': 0.6204596161842346}, {'value': ['put'], 'probability': 0.09920889139175415}, {'value': ['get'], 'probability': 0.015048862434923649}, {'value': ['apply'], 'probability': 0.011986835859715939}, {'value': ['execute'], 'probability': 0.009557732380926609}]","[1.0, 0.7944568, 0.65028083, 0.5010617, 0.35167885]",0.7184301757907129,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1115,1115,"public int getShapeType() {return CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_shapeType_get(swigCPtr, this);}
","public int [MASK]() {return CollisionJNI.btMultiSapBroadphase_btMultiSapProxy_shapeType_get(swigCPtr, this);}
",getShapeType,"[{'value': ['get'], 'probability': 0.1353420913219452}, {'value': ['run'], 'probability': 0.04735357686877251}, {'value': ['start'], 'probability': 0.03332540765404701}, {'value': ['next'], 'probability': 0.025769224390387535}, {'value': ['version'], 'probability': 0.02388189360499382}]","[1.0, 0.65114945, 0.7199945, 0.6966621, 0.38924655]",0.2174188441407258,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1116,1116,"public SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t getBroadphaseArray() {return new SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t(CollisionJNI.btMultiSapBroadphase_getBroadphaseArray__SWIG_0(swigCPtr, this), false);}
","public SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t [MASK]() {return new SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t(CollisionJNI.btMultiSapBroadphase_[MASK]__SWIG_0(swigCPtr, this), false);}
",getBroadphaseArray,"[{'value': ['##x'], 'probability': 0.18096059560775757}, {'value': ['##b'], 'probability': 0.10753047466278076}, {'value': ['##t'], 'probability': 0.058699239045381546}, {'value': ['##r'], 'probability': 0.04277719929814339}, {'value': ['##s'], 'probability': 0.03738388046622276}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['copy'], 'probability': 0.3019181787967682}, {'value': ['edge', 'type'], 'probability': 0.17588894069194794}, {'value': ['parse'], 'probability': 0.08446554839611053}, {'value': ['get', 'statement', 'container'], 'probability': 0.07866345345973969}, {'value': ['get', 'elements'], 'probability': 0.07059407234191895}, {'value': ['float', 'val'], 'probability': 0.0675334632396698}, {'value': ['tags'], 'probability': 0.058855049312114716}, {'value': ['clone'], 'probability': 0.05528922751545906}, {'value': ['get', 'cd'], 'probability': 0.05449811741709709}, {'value': ['build'], 'probability': 0.05229397490620613}]","[0.4466728, 0.5832915, 0.04902999, 0.73810506, 0.82784235, 0.22965817, 0.2646367, 0.166604, 0.80065113, 0.5626448]",0.4714502995320333
1117,1117,"public void rayTest(Vector3 rayFrom, Vector3 rayTo, btBroadphaseRayCallback rayCallback, Vector3 aabbMin, Vector3 aabbMax) {CollisionJNI.btMultiSapBroadphase_rayTest__SWIG_0(swigCPtr, this, rayFrom, rayTo, btBroadphaseRayCallback.getCPtr(rayCallback), rayCallback, aabbMin, aabbMax);}
","public void [MASK](Vector3 rayFrom, Vector3 rayTo, btBroadphaseRayCallback rayCallback, Vector3 aabbMin, Vector3 aabbMax) {CollisionJNI.btMultiSapBroadphase_[MASK]__SWIG_0(swigCPtr, this, rayFrom, rayTo, btBroadphaseRayCallback.getCPtr(rayCallback), rayCallback, aabbMin, aabbMax);}
",rayTest,"[{'value': ['test'], 'probability': 0.09070180356502533}, {'value': ['apply'], 'probability': 0.07878332585096359}, {'value': ['setup'], 'probability': 0.03762216493487358}, {'value': ['run'], 'probability': 0.035248637199401855}, {'value': ['process'], 'probability': 0.03268570452928543}]","[0.30581892, 0.10904424, 0.23039569, 0.2900184, 0.20856087]",0.0620368922711411,"[{'value': ['get', 'aabb'], 'probability': 0.9998527765274048}, {'value': ['process', 'all', 'triangles'], 'probability': 7.948457641759887e-05}, {'value': ['get', 'bounding', 'sphere'], 'probability': 5.327200051397085e-05}, {'value': ['assert', 'values'], 'probability': 1.0336510968045332e-05}, {'value': ['get', 'renderer', 'component'], 'probability': 1.955852894752752e-06}, {'value': ['map', 'object'], 'probability': 8.131946174216864e-07}, {'value': ['get', 'extents'], 'probability': 4.7655123580625514e-07}, {'value': ['get', 'texture', 'coordinate'], 'probability': 3.284538081516075e-07}, {'value': ['local', 'get', 'supporting', 'vertex'], 'probability': 2.975698407681193e-07}, {'value': ['property', 'added'], 'probability': 2.9728505523962667e-07}]","[0.18092673, 0.24244195, 0.16866316, 0.0045095896, 0.2512214, 0.24282894, 0.23628025, 0.23717792, 0.2841079, 0.24865831]",0.1809294331568618
1118,1118,"public void rayTest(Vector3 rayFrom, Vector3 rayTo, btBroadphaseRayCallback rayCallback, Vector3 aabbMin) {CollisionJNI.btMultiSapBroadphase_rayTest__SWIG_1(swigCPtr, this, rayFrom, rayTo, btBroadphaseRayCallback.getCPtr(rayCallback), rayCallback, aabbMin);}
","public void [MASK](Vector3 rayFrom, Vector3 rayTo, btBroadphaseRayCallback rayCallback, Vector3 aabbMin) {CollisionJNI.btMultiSapBroadphase_[MASK]__SWIG_1(swigCPtr, this, rayFrom, rayTo, btBroadphaseRayCallback.getCPtr(rayCallback), rayCallback, aabbMin);}
",rayTest,"[{'value': ['test'], 'probability': 0.13487917184829712}, {'value': ['apply'], 'probability': 0.08763924241065979}, {'value': ['execute'], 'probability': 0.03871199116110802}, {'value': ['setup'], 'probability': 0.03716428950428963}, {'value': ['run'], 'probability': 0.03273777663707733}]","[0.30581892, 0.10904424, -0.0018691211, 0.23039569, 0.2900184]",0.0687898491489891,"[{'value': ['get', 'aabb'], 'probability': 0.9981245398521423}, {'value': ['get', 'bounding', 'sphere'], 'probability': 0.0009183012298308313}, {'value': ['process', 'all', 'triangles'], 'probability': 0.00045198362204246223}, {'value': ['assert', 'values'], 'probability': 0.0003515348653309047}, {'value': ['get', 'renderer', 'component'], 'probability': 4.617743979906663e-05}, {'value': ['property', 'added'], 'probability': 2.986732761200983e-05}, {'value': ['map', 'object'], 'probability': 2.9398277547443286e-05}, {'value': ['build', 'content', 'panel'], 'probability': 2.6970172257279046e-05}, {'value': ['on', 'checked', 'changed'], 'probability': 1.147401417256333e-05}, {'value': ['copy', 'values'], 'probability': 9.746323485160246e-06}]","[0.18092673, 0.16866316, 0.24244195, 0.0045095896, 0.2512214, 0.24865831, 0.24282894, 0.27737403, 0.34293693, 0.21570066]",0.1808931420339566
1119,1119,"public void rayTest(Vector3 rayFrom, Vector3 rayTo, btBroadphaseRayCallback rayCallback) {CollisionJNI.btMultiSapBroadphase_rayTest__SWIG_2(swigCPtr, this, rayFrom, rayTo, btBroadphaseRayCallback.getCPtr(rayCallback), rayCallback);}
","public void [MASK](Vector3 rayFrom, Vector3 rayTo, btBroadphaseRayCallback rayCallback) {CollisionJNI.btMultiSapBroadphase_[MASK]__SWIG_2(swigCPtr, this, rayFrom, rayTo, btBroadphaseRayCallback.getCPtr(rayCallback), rayCallback);}
",rayTest,"[{'value': ['test'], 'probability': 0.09305239468812943}, {'value': ['apply'], 'probability': 0.08835535496473312}, {'value': ['setup'], 'probability': 0.047524429857730865}, {'value': ['run'], 'probability': 0.046458736062049866}, {'value': ['execute'], 'probability': 0.034991588443517685}]","[0.30581892, 0.10904424, 0.23039569, 0.2900184, -0.0018691211]",0.0624497338664987,"[{'value': ['set'], 'probability': 0.24429164826869965}, {'value': ['add', 'tokens'], 'probability': 0.14663854241371155}, {'value': ['add', 'stat'], 'probability': 0.13543300330638885}, {'value': ['notify', 'error'], 'probability': 0.1060047522187233}, {'value': ['map', 'node'], 'probability': 0.10204949975013733}, {'value': ['build', 'where', 'clause'], 'probability': 0.08631416410207748}, {'value': ['save', 'xml'], 'probability': 0.0517704002559185}, {'value': ['report', 'result'], 'probability': 0.04816566780209541}, {'value': ['debug'], 'probability': 0.042215585708618164}, {'value': ['configure', 'message', 'converters'], 'probability': 0.037116676568984985}]","[0.30798122, 0.21482441, 0.24897316, 0.13263072, 0.1205422, 0.23540632, 0.09112159, 0.2466415, -0.058386493, 0.16786638]",0.20750049445775612
1120,1120,"public void addToChildBroadphase(btMultiSapBroadphase.btMultiSapProxy parentMultiSapProxy, btBroadphaseProxy childProxy, btBroadphaseInterface childBroadphase) {CollisionJNI.btMultiSapBroadphase_addToChildBroadphase(swigCPtr, this, btMultiSapBroadphase.btMultiSapProxy.getCPtr(parentMultiSapProxy), parentMultiSapProxy, btBroadphaseProxy.getCPtr(childProxy), childProxy, btBroadphaseInterface.getCPtr(childBroadphase), childBroadphase);}
","public void [MASK](btMultiSapBroadphase.btMultiSapProxy parentMultiSapProxy, btBroadphaseProxy childProxy, btBroadphaseInterface childBroadphase) {CollisionJNI.btMultiSapBroadphase_[MASK](swigCPtr, this, btMultiSapBroadphase.btMultiSapProxy.getCPtr(parentMultiSapProxy), parentMultiSapProxy, btBroadphaseProxy.getCPtr(childProxy), childProxy, btBroadphaseInterface.getCPtr(childBroadphase), childBroadphase);}
",addToChildBroadphase,"[{'value': ['test'], 'probability': 0.11485906690359116}, {'value': ['apply'], 'probability': 0.0854077935218811}, {'value': ['execute'], 'probability': 0.0709417462348938}, {'value': ['perform'], 'probability': 0.041555266827344894}, {'value': ['run'], 'probability': 0.041050925850868225}]","[0.30969554, 0.46110356, 0.24202506, 0.30545208, 0.41304266]",0.1217717854675141,"[{'value': ['insert', 'child'], 'probability': 0.9971644282341003}, {'value': ['add', 'structural', 'listener'], 'probability': 0.0019635986536741257}, {'value': ['combine'], 'probability': 0.0005062472773715854}, {'value': ['handle', 'notification'], 'probability': 0.0001680095592746511}, {'value': ['wait', 'for', 'replication'], 'probability': 8.30817298265174e-05}, {'value': ['set', 'u', 'int'], 'probability': 3.183428634656593e-05}, {'value': ['distribute'], 'probability': 2.5517754693282768e-05}, {'value': ['enforce', 'uri', 'permission'], 'probability': 2.001630127779208e-05}, {'value': ['rename', 'element'], 'probability': 1.9678032913361676e-05}, {'value': ['insert', 'child', 'before'], 'probability': 1.759243787091691e-05}]","[0.45471355, 0.7450346, 0.74683475, 0.35085395, 0.4982702, 0.4488415, 0.41972658, 0.17509851, 0.45540774, 0.51370937]",0.4554120558419725
1121,1121,"public boolean testAabbOverlap(btBroadphaseProxy proxy0, btBroadphaseProxy proxy1) {return CollisionJNI.btMultiSapBroadphase_testAabbOverlap(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0, btBroadphaseProxy.getCPtr(proxy1), proxy1);}
","public boolean [MASK](btBroadphaseProxy proxy0, btBroadphaseProxy proxy1) {return CollisionJNI.btMultiSapBroadphase_[MASK](swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0, btBroadphaseProxy.getCPtr(proxy1), proxy1);}
",testAabbOverlap,"[{'value': ['equals'], 'probability': 0.1924065500497818}, {'value': ['matches'], 'probability': 0.17630340158939362}, {'value': ['match'], 'probability': 0.05524381250143051}, {'value': ['execute'], 'probability': 0.0486464649438858}, {'value': ['apply'], 'probability': 0.03344956785440445}]","[0.1343151, 0.5619834, 0.63746053, 0.17788121, 0.3641234]",0.1809715044476014,"[{'value': ['set', 'proxy'], 'probability': 0.9520533680915833}, {'value': ['proxy'], 'probability': 0.014791478402912617}, {'value': ['get', 'proxy'], 'probability': 0.009266393259167671}, {'value': ['add', 'proxy'], 'probability': 0.008030292578041553}, {'value': ['create', 'proxy'], 'probability': 0.005614485125988722}, {'value': ['proxy', 'for'], 'probability': 0.003285934217274189}, {'value': ['handle', 'other'], 'probability': 0.002255307510495186}, {'value': ['invoke'], 'probability': 0.0018890057690441608}, {'value': ['register', 'command'], 'probability': 0.0016468582907691598}, {'value': ['update'], 'probability': 0.0011668700026348233}]","[0.44780847, 0.14680077, 0.40001407, 0.3239414, 0.32498848, 0.4485213, 0.4576348, 0.11774463, 0.40243044, 0.37940708]",0.44047544105216835
1122,1122,"public btOverlappingPairCache getOverlappingPairCache() {long cPtr = CollisionJNI.btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btOverlappingPairCache(cPtr, false);}
","public btOverlappingPairCache [MASK]() {long cPtr = CollisionJNI.btMultiSapBroadphase_[MASK]__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btOverlappingPairCache(cPtr, false);}
",getOverlappingPairCache,"[{'value': ['get'], 'probability': 0.16925467550754547}, {'value': ['build'], 'probability': 0.1265420764684677}, {'value': ['clone'], 'probability': 0.09082994610071182}, {'value': ['resolve'], 'probability': 0.07596533745527267}, {'value': ['create'], 'probability': 0.0484505333006382}]","[1.0, 0.5626448, 0.166604, 0.427468, 0.62328804]",0.3182569350680923,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1123,1123,"public void buildTree(Vector3 bvhAabbMin, Vector3 bvhAabbMax) {CollisionJNI.btMultiSapBroadphase_buildTree(swigCPtr, this, bvhAabbMin, bvhAabbMax);}
","public void [MASK](Vector3 bvhAabbMin, Vector3 bvhAabbMax) {CollisionJNI.btMultiSapBroadphase_[MASK](swigCPtr, this, bvhAabbMin, bvhAabbMax);}
",buildTree,"[{'value': ['execute'], 'probability': 0.0702473372220993}, {'value': ['read'], 'probability': 0.06770596653223038}, {'value': ['run'], 'probability': 0.052593763917684555}, {'value': ['write'], 'probability': 0.04998980462551117}, {'value': ['test'], 'probability': 0.04950045794248581}]","[0.30157945, 0.2728093, 0.55683017, 0.39291278, 0.40830132]",0.1087944998926055,"[{'value': ['build'], 'probability': 0.9938046932220459}, {'value': ['output'], 'probability': 0.0014147345209494233}, {'value': ['with'], 'probability': 0.001248471555300057}, {'value': ['add'], 'probability': 0.0011026152642443776}, {'value': ['add', 'listener'], 'probability': 0.0007123242830857635}, {'value': ['add', 'parameter'], 'probability': 0.0006789620965719223}, {'value': ['on'], 'probability': 0.0005640357849188149}, {'value': ['join'], 'probability': 0.00017382134683430195}, {'value': ['set', 'provider'], 'probability': 0.0001533745671622455}, {'value': ['write'], 'probability': 0.00014698269660584629}]","[1.0, 0.375957, 0.54980475, 0.45754796, 0.34367505, 0.31175104, 0.4951739, 0.56531745, 0.5352339, 0.39291278]",0.9965013654354189
1124,1124,"public void quicksort(btBroadphasePairArray a, int lo, int hi) {CollisionJNI.btMultiSapBroadphase_quicksort(swigCPtr, this, btBroadphasePairArray.getCPtr(a), a, lo, hi);}public static LongBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return BufferFactory.newLongBuffer(capacity);}
","public void quicksort(btBroadphasePairArray [MASK] int lo, int hi) {CollisionJNI.btMultiSapBroadphase_quicksort(swigCPtr, this, btBroadphasePairArray.getCPtr(a), [MASK] lo, hi);}public static LongBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return BufferFactory.newLongBuffer(capacity);}
","a,","[{'value': [','], 'probability': 0.9987747073173523}, {'value': [')'], 'probability': 0.0004953847965225577}, {'value': ['('], 'probability': 0.00015064113540574908}, {'value': ['{'], 'probability': 0.00013276966637931764}, {'value': ['<'], 'probability': 0.00011669922241708264}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['sort', 'by', 'node', 'id'], 'probability': 0.3648528754711151}, {'value': ['init'], 'probability': 0.22799727320671082}, {'value': ['inject'], 'probability': 0.14982102811336517}, {'value': ['merge', 'sort'], 'probability': 0.055814605206251144}, {'value': ['set'], 'probability': 0.05297327786684036}, {'value': ['pack'], 'probability': 0.03844974935054779}, {'value': ['sort'], 'probability': 0.035659365355968475}, {'value': ['swap'], 'probability': 0.033683620393276215}, {'value': ['set', 'range'], 'probability': 0.024028444662690163}, {'value': ['between'], 'probability': 0.016719823703169823}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1125,1125,"public static LongBuffer wrap(long[] array) {return wrap(array, 0, array.length);}
","public static LongBuffer [MASK](long[] array) {return [MASK](array, 0, array.length);}
",wrap,"[{'value': ['array'], 'probability': 0.13497714698314667}, {'value': ['transform'], 'probability': 0.07979738712310791}, {'value': ['create'], 'probability': 0.04019162803888321}, {'value': ['get'], 'probability': 0.030412796884775162}, {'value': ['expand'], 'probability': 0.028601011261343956}]","[0.22486223, 0.22017121, 0.38309482, 0.40682167, 0.322488]",0.0849136225472032,"[{'value': ['wrap'], 'probability': 0.999991774559021}, {'value': ['as', 'long', 'buffer'], 'probability': 5.970798611087957e-06}, {'value': ['buffer'], 'probability': 1.2087984941899776e-06}, {'value': ['get', 'wrap'], 'probability': 2.0868353090008895e-07}, {'value': ['put'], 'probability': 2.0338683270892943e-07}, {'value': ['create'], 'probability': 1.3546754473736655e-07}, {'value': ['compact'], 'probability': 1.3402495824266225e-07}, {'value': ['set', 'wrap'], 'probability': 1.1885418160773042e-07}, {'value': ['make'], 'probability': 1.1873659389038949e-07}, {'value': ['duplicate'], 'probability': 1.1474765670982379e-07}]","[0.99999994, 0.34058228, 0.19587526, 0.82322526, 0.51777744, 0.38309482, 0.20376484, 0.86703634, 0.50107455, 0.23869891]",0.999994531127515
1126,1126,"public static LongBuffer wrap(long[] array, int start, int len) {if (array == null) {throw new NullPointerException();}if (start < 0 || len < 0 || (long) len + (long) start > array.length) {throw new IndexOutOfBoundsException();}LongBuffer buf = BufferFactory.newLongBuffer(array);buf.position = start;buf.limit = start + len;return buf;}
","public static LongBuffer [MASK](long[] array, int start, int len) {if (array == null) {throw new NullPointerException();}if (start < 0 || len < 0 || (long) len + (long) start > array.length) {throw new IndexOutOfBoundsException();}LongBuffer buf = BufferFactory.newLongBuffer(array);buf.position = start;buf.limit = start + len;return buf;}
",wrap,"[{'value': ['array'], 'probability': 0.2920382022857666}, {'value': ['transform'], 'probability': 0.07006336748600006}, {'value': ['expand'], 'probability': 0.06045631691813469}, {'value': ['paint'], 'probability': 0.04004448652267456}, {'value': ['create'], 'probability': 0.03925146162509918}]","[0.22486223, 0.22017121, 0.322488, 0.4132295, 0.38309482]",0.1321753306562445,"[{'value': ['wrap'], 'probability': 0.9995898604393005}, {'value': ['get'], 'probability': 0.00038209083140827715}, {'value': ['put'], 'probability': 2.3763586796121672e-05}, {'value': ['find'], 'probability': 2.2671642909699585e-06}, {'value': ['create'], 'probability': 5.664749096467858e-07}, {'value': ['add'], 'probability': 3.9106694771362527e-07}, {'value': ['value', 'of'], 'probability': 3.5903883599530673e-07}, {'value': ['lookup'], 'probability': 3.552890177616064e-07}, {'value': ['unwrap'], 'probability': 2.0465357408738782e-07}, {'value': ['query'], 'probability': 1.1567934876666186e-07}]","[0.99999994, 0.40682167, 0.51777744, 0.39089862, 0.38309482, 0.54614455, 0.20929317, 0.09380651, 0.47580016, -0.005429376]",0.9997590695861847
1127,1127,"public final long[] array() {return protectedArray();}
","public final [MASK] array() {return protectedArray();}
",long[],"[{'value': ['array'], 'probability': 0.372368186712265}, {'value': ['String'], 'probability': 0.37050706148147583}, {'value': ['void'], 'probability': 0.04224281385540962}, {'value': ['Block'], 'probability': 0.039408519864082336}, {'value': ['double'], 'probability': 0.02024000696837902}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['array'], 'probability': 0.8845567107200623}, {'value': ['get', 'event', 'mask'], 'probability': 0.04400405287742615}, {'value': ['get', 'data'], 'probability': 0.022516045719385147}, {'value': ['to', 'array'], 'probability': 0.014846757985651493}, {'value': ['family'], 'probability': 0.0148151321336627}, {'value': ['wrap'], 'probability': 0.0077439225278794765}, {'value': ['get', 'history'], 'probability': 0.003668443765491247}, {'value': ['add', 'and', 'get'], 'probability': 0.0027849716134369373}, {'value': ['extract'], 'probability': 0.0025900627952069044}, {'value': ['pack'], 'probability': 0.002473832108080387}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1128,1128,"public final int arrayOffset() {return protectedArrayOffset();}
","public final [MASK] arrayOffset() {return protectedArrayOffset();}
",int,"[{'value': ['String'], 'probability': 0.7829834818840027}, {'value': ['long'], 'probability': 0.11068864911794662}, {'value': ['void'], 'probability': 0.047081854194402695}, {'value': ['double'], 'probability': 0.009286824613809586}, {'value': ['Long'], 'probability': 0.007040493190288544}]","[0.0, 0.028398475, -0.009351521, -0.006145916, 0.0]",0.0026460258169038,"[{'value': ['get', 'id'], 'probability': 0.4938295781612396}, {'value': ['get', 'preference'], 'probability': 0.10766050219535828}, {'value': ['hash', 'code'], 'probability': 0.10079383850097656}, {'value': ['array', 'offset'], 'probability': 0.06982983648777008}, {'value': ['size'], 'probability': 0.05708581954240799}, {'value': ['get', 'repository', 'id'], 'probability': 0.050265904515981674}, {'value': ['get', 'memory', 'class'], 'probability': 0.04304463416337967}, {'value': ['get', 'length'], 'probability': 0.02757316827774048}, {'value': ['get', 'row', 'count'], 'probability': 0.026228027418255806}, {'value': ['get', 'position', 'notification', 'period'], 'probability': 0.023688653483986855}]","[0.10877665, 0.012454133, 0.15652266, 0.06710563, 0.11546131, 0.04033058, 0.045612592, 0.07423024, 0.009003226, -0.029743027]",0.08768060170363032
1129,1129,"public boolean equals(Object other) {if (!(other instanceof LongBuffer)) {return false;}LongBuffer otherBuffer = (LongBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {equalSoFar = get(myPosition++) == otherBuffer.get(otherPosition++);}return equalSoFar;}
","public boolean [MASK](Object other) {if (!(other instanceof LongBuffer)) {return false;}LongBuffer otherBuffer = (LongBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {equalSoFar = get(myPosition++) == otherBuffer.get(otherPosition++);}return equalSoFar;}
",equals,"[{'value': ['equals'], 'probability': 0.39352670311927795}, {'value': ['is'], 'probability': 0.06001787260174751}, {'value': ['replace'], 'probability': 0.05552339553833008}, {'value': ['contains'], 'probability': 0.031197646632790565}, {'value': ['remaining'], 'probability': 0.026041042059659958}]","[1.0, 0.3373858, -0.026844, 0.20414257, 0.26837245]",0.4256428771733169,"[{'value': ['equals'], 'probability': 0.9999990463256836}, {'value': ['equals', 'ignore', 'case'], 'probability': 7.355066031777824e-07}, {'value': ['equal'], 'probability': 6.597601043267787e-08}, {'value': ['compare', 'to'], 'probability': 5.73213903010128e-08}, {'value': ['is', 'equal', 'to'], 'probability': 3.8064371210566605e-08}, {'value': ['are', 'equal'], 'probability': 3.106314494516482e-08}, {'value': ['merge'], 'probability': 1.889173972813296e-08}, {'value': ['is', 'same'], 'probability': 1.5461248281667395e-08}, {'value': ['is', 'equals'], 'probability': 1.405978178325995e-08}, {'value': ['is', 'assignable', 'from'], 'probability': 8.830751241362123e-09}]","[1.0, 0.5611027, 0.6404468, 0.22051907, 0.4424305, 0.4776952, 0.060867015, 0.33838725, 0.7526386, 0.28309217]",0.9999995650581871
1130,1130,"public LongBuffer get(long[] dest) {return get(dest, 0, dest.length);}
","public LongBuffer [MASK](long[] dest) {return [MASK](dest, 0, dest.length);}
",get,"[{'value': ['get'], 'probability': 0.061643779277801514}, {'value': ['create'], 'probability': 0.0586085170507431}, {'value': ['read'], 'probability': 0.05664573237299919}, {'value': ['write'], 'probability': 0.03146859258413315}, {'value': ['transform'], 'probability': 0.03093719854950905}]","[1.0, 0.62328804, 0.5726487, 0.60768855, 0.33052462]",0.1599604811383628,"[{'value': ['get'], 'probability': 0.9948704242706299}, {'value': ['get', 'item'], 'probability': 0.0022200315725058317}, {'value': ['get', 'instance'], 'probability': 0.0017239833250641823}, {'value': ['get', 'image'], 'probability': 0.00036933188675902784}, {'value': ['lookup'], 'probability': 0.0002779819187708199}, {'value': ['value', 'of'], 'probability': 0.0001417903695255518}, {'value': ['get', 'address'], 'probability': 0.00011671781248878688}, {'value': ['get', 'row'], 'probability': 9.980995673686266e-05}, {'value': ['get', 'delegate'], 'probability': 9.685847908258438e-05}, {'value': ['get', 'first'], 'probability': 8.3038947195746e-05}]","[1.0, 0.84754527, 0.9335536, 0.8605192, -0.11985079, 0.56153333, 0.86101466, 0.8690926, 0.80899054, 0.8991456]",0.9990658147538696
1131,1131,"public LongBuffer get(long[] dest, int off, int len) {int length = dest.length;if (off < 0 || len < 0 || (long) len + (long) off > length) {throw new IndexOutOfBoundsException();}if (len > remaining()) {throw new BufferUnderflowException();}for (int i = off; i < off + len; i++) {dest[i] = get();}return this;}
","public LongBuffer [MASK](long[] dest, int off, int len) {int length = dest.length;if (off < 0 || len < 0 || (long) len + (long) off > length) {throw new IndexOutOfBoundsException();}if (len > remaining()) {throw new BufferUnderflowException();}for (int i = off; i < off + len; i++) {dest[i] = [MASK]();}return this;}
",get,"[{'value': ['trim'], 'probability': 0.0650959238409996}, {'value': ['fill'], 'probability': 0.0640559047460556}, {'value': ['write'], 'probability': 0.06398691982030869}, {'value': ['paint'], 'probability': 0.029749898239970207}, {'value': ['update'], 'probability': 0.027098726481199265}]","[0.29039297, 0.611881, 0.60768855, 0.41529104, 0.36048478]",0.1191056534409292,"[{'value': ['get'], 'probability': 0.9730151891708374}, {'value': ['wrap'], 'probability': 0.02687429077923298}, {'value': ['put'], 'probability': 9.91220586001873e-05}, {'value': ['lookup'], 'probability': 1.0650376680132467e-05}, {'value': ['value', 'of'], 'probability': 1.9555236008272914e-07}, {'value': ['get', 'instance'], 'probability': 1.655786547871685e-07}, {'value': ['create'], 'probability': 1.3810992527396593e-07}, {'value': ['get', 'result'], 'probability': 7.519970779412688e-08}, {'value': ['add'], 'probability': 6.774666871933732e-08}, {'value': ['get', 'value'], 'probability': 4.194044933569785e-08}]","[1.0, 0.40682167, 0.8176035, -0.11985079, 0.56153333, 0.9335536, 0.62328804, 0.90688056, 0.54842544, 0.8500731]",0.9840284905832696
1132,1132,"public final boolean hasArray() {return protectedHasArray();}
","public final [MASK] hasArray() {return protectedHasArray();}
",boolean,"[{'value': ['String'], 'probability': 0.8322465419769287}, {'value': ['long'], 'probability': 0.051882240921258926}, {'value': ['void'], 'probability': 0.023186029866337776}, {'value': ['Long'], 'probability': 0.01816505938768387}, {'value': ['Block'], 'probability': 0.008282985538244247}]","[0.0, -0.07843863, 0.16551133, 0.0, 0.0]",-0.0002320214881204,"[{'value': ['has', 'array'], 'probability': 0.28610220551490784}, {'value': ['is', 'supported'], 'probability': 0.21808165311813354}, {'value': ['is', 'subselect', 'loading', 'enabled'], 'probability': 0.18352638185024261}, {'value': ['pause'], 'probability': 0.0570371076464653}, {'value': ['is', 'available'], 'probability': 0.0560099221765995}, {'value': ['clear', 'queue'], 'probability': 0.04801641032099724}, {'value': ['get', 'search', 'enabled'], 'probability': 0.0468420684337616}, {'value': ['supports', 'limit', 'offset'], 'probability': 0.03667633607983589}, {'value': ['is', 'cache', 'enabled'], 'probability': 0.03660232946276665}, {'value': ['writer', 'should', 'block'], 'probability': 0.03110552579164505}]","[0.046678755, 0.02799235, 0.122375056, 0.09785092, 0.11994634, 0.12244729, 0.02798073, 0.022316065, 0.14885294, -0.041097548]",0.06639651220220012
1133,1133,"public int hashCode() {int myPosition = position;int hash = 0;long l;while (myPosition < limit) {l = get(myPosition++);hash = hash + ((int) l) ^ ((int) (l >> 32));}return hash;}
","public int [MASK]() {int myPosition = position;int hash = 0;long l;while (myPosition < limit) {l = get(myPosition++);hash = hash + ((int) l) ^ ((int) (l >> 32));}return hash;}
",hashCode,"[{'value': ['limit'], 'probability': 0.2828609347343445}, {'value': ['position'], 'probability': 0.20435746014118195}, {'value': ['get'], 'probability': 0.13433004915714264}, {'value': ['start'], 'probability': 0.08398786932229996}, {'value': ['close'], 'probability': 0.05520891025662422}]","[0.08957034, 0.11419974, 0.13757937, 0.08084206, 0.068528876]",0.0777277206785336,"[{'value': ['hash', 'code'], 'probability': 0.9978836178779602}, {'value': ['size'], 'probability': 0.0005393951432779431}, {'value': ['get', 'position'], 'probability': 0.0005213295225985348}, {'value': ['index'], 'probability': 0.0003233506577089429}, {'value': ['get', 'index'], 'probability': 0.0002685707004275173}, {'value': ['length'], 'probability': 0.00016550358850508928}, {'value': ['int', 'value'], 'probability': 0.0001408992538927123}, {'value': ['get', 'hash'], 'probability': 7.348366489168257e-05}, {'value': ['get', 'width'], 'probability': 5.194577170186676e-05}, {'value': ['get', 'count'], 'probability': 3.180315252393484e-05}]","[0.75676125, 0.17934217, 0.14382741, 0.08314178, 0.1332771, 0.09381389, 0.22508815, 0.7259902, 0.17226648, 0.13760439]",0.7555079645407246
1134,1134,"public final LongBuffer put(long[] src) {return put(src, 0, src.length);}
","public final [MASK] put(long[] src) {return put(src, 0, src.length);}
",LongBuffer,"[{'value': ['long'], 'probability': 0.3664080798625946}, {'value': ['double'], 'probability': 0.3256014883518219}, {'value': ['void'], 'probability': 0.09391355514526367}, {'value': ['Long'], 'probability': 0.06233450025320053}, {'value': ['String'], 'probability': 0.04710562154650688}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['put'], 'probability': 0.9999587535858154}, {'value': ['add'], 'probability': 3.343684511492029e-05}, {'value': ['set'], 'probability': 3.2555719826632412e-06}, {'value': ['make'], 'probability': 1.391670707562298e-06}, {'value': ['put', 'if', 'absent'], 'probability': 1.0776419685498695e-06}, {'value': ['register'], 'probability': 6.648258477071067e-07}, {'value': ['wrap'], 'probability': 4.4547198285727063e-07}, {'value': ['append'], 'probability': 4.003121603091131e-07}, {'value': ['install'], 'probability': 2.957561093808181e-07}, {'value': ['get', 'and', 'put'], 'probability': 2.629964797051798e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1135,1135,"public LongBuffer put(long[] src, int off, int len) {int length = src.length;if (off < 0 || len < 0 || (long) len + (long) off > length) {throw new IndexOutOfBoundsException();}if (len > remaining()) {throw new BufferOverflowException();}for (int i = off; i < off + len; i++) {put(src[i]);}return this;}
","public LongBuffer [MASK](long[] src, int off, int len) {int length = src.length;if (off < 0 || len < 0 || (long) len + (long) off > length) {throw new IndexOutOfBoundsException();}if (len > remaining()) {throw new BufferOverflowException();}for (int i = off; i < off + len; i++) {[MASK](src[i]);}return this;}
",put,"[{'value': ['write'], 'probability': 0.0628051683306694}, {'value': ['trim'], 'probability': 0.055596042424440384}, {'value': ['fill'], 'probability': 0.05535252019762993}, {'value': ['filter'], 'probability': 0.032670360058546066}, {'value': ['update'], 'probability': 0.02876392938196659}]","[0.5574444, 0.36577114, 0.57227623, 0.29320115, 0.37657535]",0.1074335227751176,"[{'value': ['get'], 'probability': 0.6397688984870911}, {'value': ['wrap'], 'probability': 0.3464835286140442}, {'value': ['put'], 'probability': 0.013675554655492306}, {'value': ['lookup'], 'probability': 6.47862398182042e-05}, {'value': ['add'], 'probability': 2.942933633676148e-06}, {'value': ['value', 'of'], 'probability': 1.6695153135515284e-06}, {'value': ['create'], 'probability': 1.3445184094962315e-06}, {'value': ['get', 'instance'], 'probability': 5.470045607580687e-07}, {'value': ['of'], 'probability': 4.812368956663704e-07}, {'value': ['get', 'value'], 'probability': 2.3776787827500812e-07}]","[0.8176035, 0.51777744, 1.0, -0.14246872, 0.60947514, 0.6504943, 0.67969376, 0.8069214, 0.6243458, 0.7758372]",0.7161496895179111
1136,1136,"public LongBuffer put(LongBuffer src) {if (src == this) {throw new IllegalArgumentException();}if (src.remaining() > remaining()) {throw new BufferOverflowException();}long[] contents = new long[src.remaining()];src.get(contents);put(contents);return this;}
","public LongBuffer [MASK](LongBuffer src) {if (src == this) {throw new IllegalArgumentException();}if (src.remaining() > remaining()) {throw new BufferOverflowException();}long[] contents = new long[src.remaining()];src.get(contents);[MASK](contents);return this;}
",put,"[{'value': ['get'], 'probability': 0.254445880651474}, {'value': ['put'], 'probability': 0.06980466097593307}, {'value': ['load'], 'probability': 0.03382774069905281}, {'value': ['set'], 'probability': 0.03261171281337738}, {'value': ['create'], 'probability': 0.03163136541843414}]","[0.8176035, 1.0, 0.4163285, 0.7944568, 0.67969376]",0.3393322010046333,"[{'value': ['put'], 'probability': 0.9999736547470093}, {'value': ['append'], 'probability': 7.99547433416592e-06}, {'value': ['write'], 'probability': 5.534491265279939e-06}, {'value': ['set', 'region'], 'probability': 5.378032710723346e-06}, {'value': ['add'], 'probability': 2.1347095753299072e-06}, {'value': ['post'], 'probability': 1.7674253740551649e-06}, {'value': ['put', 'if', 'absent'], 'probability': 1.4768971823286847e-06}, {'value': ['put', 'short'], 'probability': 8.809699920675484e-07}, {'value': ['put', 'byte', 'array'], 'probability': 6.439447020056832e-07}, {'value': ['set', 'data'], 'probability': 5.751198841608129e-07}]","[1.0, -0.11104319, 0.5574444, 0.6963684, 0.60947514, 0.6028787, 0.8817487, 0.89370567, 0.6746638, 0.6935807]",0.9999848866810385
1137,1137,"private float getBaselineShift(float shift) {return shift;}
","private float [MASK](float shift) {return shift;}
",getBaselineShift,"[{'value': ['shift'], 'probability': 0.8984405398368835}, {'value': ['transform'], 'probability': 0.019689317792654037}, {'value': ['get'], 'probability': 0.007737325970083475}, {'value': ['position'], 'probability': 0.007644609548151493}, {'value': ['draw'], 'probability': 0.003951406106352806}]","[0.50977874, 0.33052462, 1.0, 0.5401049, 0.558067]",0.478585055621012,"[{'value': ['shift'], 'probability': 0.9527744054794312}, {'value': ['get', 'shift'], 'probability': 0.042635805904865265}, {'value': ['decode', 'float'], 'probability': 0.001601442345418036}, {'value': ['test', 'arg'], 'probability': 0.0010942488443106413}, {'value': ['bitpos'], 'probability': 0.0008090661140158772}, {'value': ['move', 'caret'], 'probability': 0.0005979885463602841}, {'value': ['is', 'shift', 'key', 'down'], 'probability': 0.00014056015061214566}, {'value': ['get', 'interpolation'], 'probability': 0.00012264505494385958}, {'value': ['get', 'expanded', 'height'], 'probability': 0.00011938107491005212}, {'value': ['to', 'float'], 'probability': 0.0001044801392708905}]","[0.50977874, 0.8928804, 0.2756675, 0.28119677, 0.0, 0.44297948, 0.7224488, 0.6918214, 0.7566128, 0.66664845]",0.5251332456218838
1138,1138,"public void resize(int width, int height) {super.resize(width, height);camera.setToOrtho(true, width, height);spriteBatch.setTransformMatrix(camera.view);spriteBatch.setProjectionMatrix(camera.projection);}
","public void [MASK](int width, int height) {super.[MASK](width, height);camera.setToOrtho(true, width, height);spriteBatch.setTransformMatrix(camera.view);spriteBatch.setProjectionMatrix(camera.projection);}
",resize,"[{'value': ['set'], 'probability': 0.24054354429244995}, {'value': ['paint'], 'probability': 0.11693710833787918}, {'value': ['fill'], 'probability': 0.04886849969625473}, {'value': ['apply'], 'probability': 0.04797638952732086}, {'value': ['adjust'], 'probability': 0.03228054940700531}]","[-0.12730242, 0.15850443, 0.19123738, 0.12804139, 0.3951292]",0.0161567080706529,"[{'value': ['set', 'projection', 'matrix'], 'probability': 0.5353281497955322}, {'value': ['render'], 'probability': 0.4237056374549866}, {'value': ['render', 'background'], 'probability': 0.01633589155972004}, {'value': ['set', 'size'], 'probability': 0.008043166249990463}, {'value': ['scale'], 'probability': 0.00397389056161046}, {'value': ['resize'], 'probability': 0.0038155096117407084}, {'value': ['draw'], 'probability': 0.002867605537176132}, {'value': ['change', 'size'], 'probability': 0.0022216946817934513}, {'value': ['set', 'indent'], 'probability': 0.002152880420908332}, {'value': ['set', 'view'], 'probability': 0.0015556266298517585}]","[0.07367443, 0.27569848, 0.07890614, -0.043681968, -0.031388633, 1.0, -0.062257376, 0.03490047, 0.10671466, -0.1437905]",0.16078850011157844
1139,1139,"public void dispose() {spriteBatch.dispose();regularTexture.dispose();distanceFieldTexture.dispose();descriptionFont.dispose();regularFont.dispose();distanceFieldFont.dispose();distanceFieldShader.dispose();}private int createBufferObject() {int result = Gdx.gl20.glGenBuffer();Gdx.gl20.glBindBuffer(GL20.GL_ARRAY_BUFFER, result);Gdx.gl20.glBufferData(GL20.GL_ARRAY_BUFFER, byteBuffer.capacity(), null, usage);Gdx.gl20.glBindBuffer(GL20.GL_ARRAY_BUFFER, 0);return result;}
","public void [MASK]() {spriteBatch.[MASK]();regularTexture.[MASK]();distanceFieldTexture.[MASK]();descriptionFont.[MASK]();regularFont.[MASK]();distanceFieldFont.[MASK]();distanceFieldShader.[MASK]();}private int createBufferObject() {int result = Gdx.gl20.glGenBuffer();Gdx.gl20.glBindBuffer(GL20.GL_ARRAY_BUFFER, result);Gdx.gl20.glBufferData(GL20.GL_ARRAY_BUFFER, byteBuffer.capacity(), null, usage);Gdx.gl20.glBindBuffer(GL20.GL_ARRAY_BUFFER, 0);return result;}
",dispose,"[{'value': ['run'], 'probability': 0.6943606734275818}, {'value': ['start'], 'probability': 0.05670415237545967}, {'value': ['finish'], 'probability': 0.023383349180221558}, {'value': ['clear'], 'probability': 0.022955862805247307}, {'value': ['close'], 'probability': 0.02272298000752926}]","[0.13288948, 0.14684053, 0.15473744, 0.20622805, 0.17637412]",0.1129598641432989,"[{'value': ['dispose'], 'probability': 0.988707423210144}, {'value': ['tear', 'down'], 'probability': 0.0027766097337007523}, {'value': ['do', 'quit'], 'probability': 0.002080132020637393}, {'value': ['do', 'revert'], 'probability': 0.0014846877893432975}, {'value': ['sync'], 'probability': 0.0011565274326130748}, {'value': ['test', 'dispose'], 'probability': 0.0009562727063894272}, {'value': ['key', 'pressed'], 'probability': 0.0007975356420502067}, {'value': ['run'], 'probability': 0.0007824978674761951}, {'value': ['dispose', 'icons'], 'probability': 0.0006649020942859352}, {'value': ['abort', 'report'], 'probability': 0.0005934671498835087}]","[0.99999994, 0.28730714, 0.28453806, 0.39620623, -0.055296957, 0.649357, 0.1641199, 0.13288948, 0.69316214, 0.23020782]",0.9920746158406272
1140,1140,"public VertexAttributes getAttributes() {return attributes;}
","public VertexAttributes [MASK]() {return attributes;}
",getAttributes,"[{'value': ['attributes'], 'probability': 0.6978536248207092}, {'value': ['attribute'], 'probability': 0.13754427433013916}, {'value': ['get'], 'probability': 0.033010564744472504}, {'value': ['list'], 'probability': 0.013096802867949009}, {'value': ['lists'], 'probability': 0.009442292153835297}]","[0.17080197, 0.19157547, 1.0, 0.48067126, 0.37582535]",0.1883993548829804,"[{'value': ['get', 'attributes'], 'probability': 0.9994428753852844}, {'value': ['get', 'attribute'], 'probability': 0.00020370051788631827}, {'value': ['attributes'], 'probability': 0.00011978545080637559}, {'value': ['get', 'offset'], 'probability': 0.00011971875210292637}, {'value': ['get', 'attribute', 'map'], 'probability': 8.350449206773192e-05}, {'value': ['build'], 'probability': 1.0055092388938647e-05}, {'value': ['get', 'channel'], 'probability': 8.890630851965398e-06}, {'value': ['get', 'atts'], 'probability': 4.507348876359174e-06}, {'value': ['get', 'offsets'], 'probability': 3.971345904574264e-06}, {'value': ['get', 'selector'], 'probability': 2.9951343094580807e-06}]","[0.84504366, 0.84224397, 0.17080197, 0.8314387, 0.74491614, 0.5626448, 0.8073473, 1.0, 0.81276387, 0.70428115]",0.8449493129521118
1141,1141,"public int getNumVertices() {return buffer.limit() * 4 / attributes.vertexSize;}
","public int [MASK]() {return buffer.limit() * 4 / attributes.vertexSize;}
",getNumVertices,"[{'value': ['limit'], 'probability': 0.6053249835968018}, {'value': ['size'], 'probability': 0.05722207576036453}, {'value': ['get'], 'probability': 0.026694972068071365}, {'value': ['buffer'], 'probability': 0.022685544565320015}, {'value': ['close'], 'probability': 0.015216575935482979}]","[0.4798918, 0.43109724, 1.0, 0.17766908, 0.6033417]",0.3550650656189416,"[{'value': ['get', 'num', 'vertices'], 'probability': 0.9550622701644897}, {'value': ['get', 'attribute', 'count'], 'probability': 0.013946509920060635}, {'value': ['size'], 'probability': 0.008952978998422623}, {'value': ['capacity'], 'probability': 0.005188875366002321}, {'value': ['get', 'vertex', 'count'], 'probability': 0.004352452699095011}, {'value': ['clear', 'attributes'], 'probability': 0.0030936035327613354}, {'value': ['get', 'n', 'channels'], 'probability': 0.0026386375539004803}, {'value': ['put', 'single'], 'probability': 0.0026317841839045286}, {'value': ['get', 'supported', 'hints'], 'probability': 0.0021962658502161503}, {'value': ['destroy', 'subcontext'], 'probability': 0.0019366273190826178}]","[0.5629198, 0.80226874, 0.43109724, 0.39120343, 0.72332424, 0.5471614, 0.7351799, 0.75443316, 0.8124715, 0.40928823]",0.5660451771358999
1142,1142,"public int getNumMaxVertices() {return byteBuffer.capacity() / attributes.vertexSize;}
","public int [MASK]() {return byteBuffer.capacity() / attributes.vertexSize;}
",getNumMaxVertices,"[{'value': ['size'], 'probability': 0.35714036226272583}, {'value': ['value'], 'probability': 0.0591600127518177}, {'value': ['capacity'], 'probability': 0.04891033470630646}, {'value': ['get'], 'probability': 0.03187805414199829}, {'value': ['length'], 'probability': 0.022592250257730484}]","[0.43109724, 0.46303764, 0.39120343, 1.0, 0.3304365]",0.2398327859339815,"[{'value': ['read', 'byte', 'buffer'], 'probability': 0.31432345509529114}, {'value': ['get', 'normals'], 'probability': 0.12778028845787048}, {'value': ['clear', 'flags'], 'probability': 0.11438967287540436}, {'value': ['read', 'fields'], 'probability': 0.08305802941322327}, {'value': ['write', 'buffers'], 'probability': 0.07378913462162018}, {'value': ['get', 'attributes'], 'probability': 0.06469590216875076}, {'value': ['get', 'attributes', 'map'], 'probability': 0.061859261244535446}, {'value': ['get', 'positions'], 'probability': 0.061567578464746475}, {'value': ['create', 'elements'], 'probability': 0.05353064462542534}, {'value': ['get', 'hash', 'map'], 'probability': 0.04500601813197136}]","[0.37897897, 0.8237326, 0.50254834, 0.61987543, 0.4771478, 0.84504366, 0.7409852, 0.85893106, 0.5370574, 0.7094015]",0.5826253937096461
1143,1143,"public FloatBuffer getBuffer() {isDirty = true;return buffer;}
","public FloatBuffer [MASK]() {isDirty = true;return buffer;}
",getBuffer,"[{'value': ['buffer'], 'probability': 0.956017255783081}, {'value': ['get'], 'probability': 0.003417501226067543}, {'value': ['next'], 'probability': 0.0016874882858246565}, {'value': ['run'], 'probability': 0.0009079425944946706}, {'value': ['read'], 'probability': 0.0008649436640553176}]","[0.17766908, 1.0, 0.6966621, 0.65114945, 0.5726487]",0.1755343300909146,"[{'value': ['buffer'], 'probability': 0.6856227517127991}, {'value': ['get', 'buffer'], 'probability': 0.29070988297462463}, {'value': ['next'], 'probability': 0.01195292267948389}, {'value': ['to', 'float', 'buffer'], 'probability': 0.003003413323312998}, {'value': ['clone'], 'probability': 0.002299456624314189}, {'value': ['get', 'raw', 'data'], 'probability': 0.0016065934905782342}, {'value': ['get', 'current', 'state'], 'probability': 0.0013683544239029288}, {'value': ['get', 'data'], 'probability': 0.001325705787166953}, {'value': ['get', 'byte', 'buffer'], 'probability': 0.001193785690702498}, {'value': ['as', 'float', 'buffer'], 'probability': 0.0009170835837721825}]","[0.17766908, 0.7848379, 0.6966621, 0.5877175, 0.166604, 0.77037233, 0.79897416, 0.82370985, 0.6370153, 0.52045214]",0.36511021281908274
1144,1144,"private void bufferChanged() {if (isBound) {Gdx.gl20.glBufferSubData(GL20.GL_ARRAY_BUFFER, 0, byteBuffer.limit(), byteBuffer);isDirty = false;}}
","private void [MASK]() {if (isBound) {Gdx.gl20.glBufferSubData(GL20.GL_ARRAY_BUFFER, 0, byteBuffer.limit(), byteBuffer);isDirty = false;}}
",bufferChanged,"[{'value': ['run'], 'probability': 0.3278440833091736}, {'value': ['close'], 'probability': 0.08439452201128006}, {'value': ['limit'], 'probability': 0.06531766802072525}, {'value': ['test'], 'probability': 0.032957494258880615}, {'value': ['apply'], 'probability': 0.031065549701452255}]","[0.24715526, 0.24467134, 0.35123017, 0.124739245, 0.20928234]",0.135231411911405,"[{'value': ['flush'], 'probability': 0.9391390681266785}, {'value': ['write', 'out'], 'probability': 0.0199978556483984}, {'value': ['init'], 'probability': 0.011620799079537392}, {'value': ['draw'], 'probability': 0.008206845261156559}, {'value': ['set', 'vertices'], 'probability': 0.007749076467007399}, {'value': ['flip'], 'probability': 0.004488218575716019}, {'value': ['update', 'buffer'], 'probability': 0.0028738295659422874}, {'value': ['fill'], 'probability': 0.00258241081610322}, {'value': ['force'], 'probability': 0.001679685665294528}, {'value': ['update'], 'probability': 0.0016622887924313545}]","[0.31670007, 0.20777175, -0.025592223, 0.2446835, 0.3219088, 0.05299129, 0.7575798, 0.27781296, 0.36385435, 0.11579947]",0.30972164353713605
1145,1145,"public void setVertices(float[] vertices, int offset, int count) {isDirty = true;if (isDirect) {BufferUtils.copy(vertices, byteBuffer, count, offset);buffer.position(0);buffer.limit(count);} else {buffer.clear();buffer.put(vertices, offset, count);buffer.flip();byteBuffer.position(0);byteBuffer.limit(buffer.limit() << 2);}bufferChanged();}
","public void [MASK](float[] vertices, int offset, int count) {isDirty = true;if (isDirect) {BufferUtils.copy(vertices, byteBuffer, count, offset);buffer.position(0);buffer.limit(count);} else {buffer.clear();buffer.put(vertices, offset, count);buffer.flip();byteBuffer.position(0);byteBuffer.limit(buffer.limit() << 2);}bufferChanged();}
",setVertices,"[{'value': ['put'], 'probability': 0.2913195490837097}, {'value': ['copy'], 'probability': 0.05462238937616348}, {'value': ['move'], 'probability': 0.04062924534082413}, {'value': ['set'], 'probability': 0.03057290054857731}, {'value': ['add'], 'probability': 0.028914138674736023}]","[0.7944568, 0.4086756, 0.69789916, 1.0, 0.5084879]",0.3273941351964238,"[{'value': ['add', 'line'], 'probability': 0.4877796471118927}, {'value': ['set'], 'probability': 0.11063721030950546}, {'value': ['on', 'filter', 'complete'], 'probability': 0.06737978011369705}, {'value': ['property', 'changed'], 'probability': 0.057311952114105225}, {'value': ['set', 'pointer'], 'probability': 0.05687587335705757}, {'value': ['put', 'short'], 'probability': 0.050774946808815}, {'value': ['clear', 'bit'], 'probability': 0.049925483763217926}, {'value': ['set', 'value', 'at'], 'probability': 0.041657574474811554}, {'value': ['set', 'progress'], 'probability': 0.04024131968617439}, {'value': ['change', 'cursor'], 'probability': 0.037416182458400726}]","[0.6637658, 1.0, 0.77611476, 0.57440424, 0.81417406, 0.7867326, 0.587762, 0.83252484, 0.86048734, 0.46255806]",0.7218360654296612
1146,1146,"public void bind(final ShaderProgram shader) {bind(shader, null);}
","public void [MASK](final ShaderProgram shader) {[MASK](shader, null);}
",bind,"[{'value': ['paint'], 'probability': 0.3025037348270416}, {'value': ['apply'], 'probability': 0.06330279260873795}, {'value': ['run'], 'probability': 0.05719039961695671}, {'value': ['render'], 'probability': 0.05214088037610054}, {'value': ['fill'], 'probability': 0.02686658687889576}]","[0.22538228, 0.32685208, 0.1176805, 0.35927853, 0.20480408]",0.11983531218156,"[{'value': ['bind'], 'probability': 0.9997041821479797}, {'value': ['set', 'shader', 'program'], 'probability': 0.00014905438001733273}, {'value': ['rebind'], 'probability': 5.16559521201998e-05}, {'value': ['configure'], 'probability': 3.8968759326962754e-05}, {'value': ['unbind'], 'probability': 2.827582648023963e-05}, {'value': ['start'], 'probability': 1.1499968422867823e-05}, {'value': ['consumes'], 'probability': 4.83924623040366e-06}, {'value': ['update', 'draw', 'state'], 'probability': 4.740047188533936e-06}, {'value': ['on', 'bind'], 'probability': 3.9035171539580915e-06}, {'value': ['prepared'], 'probability': 2.8901970381411957e-06}]","[1.0, 0.19505227, 0.0, 0.27854535, 0.0, 0.13085863, 0.1101187, 0.25865605, 0.7140437, 0.23226628]",0.9997508324905069
1147,1147,"public void unbind(final ShaderProgram shader) {unbind(shader, null);}
","public void [MASK](final ShaderProgram shader) {[MASK](shader, null);}
",unbind,"[{'value': ['paint'], 'probability': 0.3025037348270416}, {'value': ['apply'], 'probability': 0.06330279260873795}, {'value': ['run'], 'probability': 0.05719039961695671}, {'value': ['render'], 'probability': 0.05214088037610054}, {'value': ['fill'], 'probability': 0.02686658687889576}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['unbind'], 'probability': 0.9989722967147827}, {'value': ['after', 'completion'], 'probability': 0.0007415116997435689}, {'value': ['stop'], 'probability': 7.360187009908259e-05}, {'value': ['remove', 'header'], 'probability': 5.173631871002726e-05}, {'value': ['remove', 'binding'], 'probability': 4.661326966015622e-05}, {'value': ['on', 'stop'], 'probability': 3.855636532534845e-05}, {'value': ['leave', 'group'], 'probability': 3.372677747393027e-05}, {'value': ['on', 'unbind'], 'probability': 1.6036001397878863e-05}, {'value': ['cleanup'], 'probability': 1.4377895240613725e-05}, {'value': ['destroy', 'subcontext'], 'probability': 1.157548376795603e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1148,1148,"public void unbind(final ShaderProgram shader, final int[] locations) {final GL20 gl = Gdx.gl20;final int numAttributes = attributes.size();if (locations == null) {for (int i = 0; i < numAttributes; i++) {shader.disableVertexAttribute(attributes.get(i).alias);}} else {for (int i = 0; i < numAttributes; i++) {final int location = locations[i];if (location >= 0)shader.disableVertexAttribute(location);}}gl.glBindBuffer(GL20.GL_ARRAY_BUFFER, 0);isBound = false;}
","public void [MASK](final ShaderProgram shader, final int[] locations) {final GL20 gl = Gdx.gl20;final int numAttributes = attributes.size();if (locations == null) {for (int i = 0; i < numAttributes; i++) {shader.disableVertexAttribute(attributes.get(i).alias);}} else {for (int i = 0; i < numAttributes; i++) {final int location = locations[i];if (location >= 0)shader.disableVertexAttribute(location);}}gl.glBindBuffer(GL20.GL_ARRAY_BUFFER, 0);isBound = false;}
",unbind,"[{'value': ['paint'], 'probability': 0.4366050064563751}, {'value': ['apply'], 'probability': 0.049957215785980225}, {'value': ['render'], 'probability': 0.0336148776113987}, {'value': ['update'], 'probability': 0.027976809069514275}, {'value': ['add'], 'probability': 0.027421144768595695}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['unbind'], 'probability': 0.5435692667961121}, {'value': ['bind'], 'probability': 0.43109580874443054}, {'value': ['set', 'shader', 'program'], 'probability': 0.010524309240281582}, {'value': ['create', 'buffers'], 'probability': 0.0048311250284314156}, {'value': ['gl', 'shader', 'source'], 'probability': 0.0047727786004543304}, {'value': ['set', 'shaders'], 'probability': 0.0014653244288638234}, {'value': ['set', 'normals'], 'probability': 0.001303286524489522}, {'value': ['allocate'], 'probability': 0.0008495858055539429}, {'value': ['enable'], 'probability': 0.000799833214841783}, {'value': ['draw', 'geometry'], 'probability': 0.0007887008250690997}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1149,1149,"public void invalidate() {bufferHandle = createBufferObject();isDirty = true;}
","public void [MASK]() {bufferHandle = createBufferObject();isDirty = true;}
",invalidate,"[{'value': ['run'], 'probability': 0.5321521162986755}, {'value': ['close'], 'probability': 0.06585640460252762}, {'value': ['execute'], 'probability': 0.06521429121494293}, {'value': ['flush'], 'probability': 0.033339183777570724}, {'value': ['test'], 'probability': 0.029377203434705734}]","[0.045201052, -0.02010335, 0.24814302, -0.017247954, 0.1534215]",0.0428444341732724,"[{'value': ['invalidate'], 'probability': 0.9717241525650024}, {'value': ['clear'], 'probability': 0.009929963387548923}, {'value': ['reload'], 'probability': 0.003480290761217475}, {'value': ['clear', 'dirty'], 'probability': 0.0034158218186348677}, {'value': ['set', 'modified'], 'probability': 0.002776950830593705}, {'value': ['init'], 'probability': 0.0025423141196370125}, {'value': ['set', 'dirty'], 'probability': 0.001958532026037574}, {'value': ['destroy'], 'probability': 0.001880418392829597}, {'value': ['reset'], 'probability': 0.0012070470256730914}, {'value': ['update'], 'probability': 0.0010844703065231442}]","[0.99999994, 0.15613793, 0.011007515, 0.09956207, 0.1851246, 0.04759315, 0.060609847, 0.23304611, 0.07457803, 0.11686238]",0.9750616959710262
1150,1150,"public void dispose() {GL20 gl = Gdx.gl20;gl.glBindBuffer(GL20.GL_ARRAY_BUFFER, 0);gl.glDeleteBuffer(bufferHandle);bufferHandle = 0;}
","public void [MASK]() {GL20 gl = Gdx.gl20;gl.glBindBuffer(GL20.GL_ARRAY_BUFFER, 0);gl.glDeleteBuffer(bufferHandle);bufferHandle = 0;}
",dispose,"[{'value': ['run'], 'probability': 0.7855803966522217}, {'value': ['flush'], 'probability': 0.028912637382745743}, {'value': ['test'], 'probability': 0.02514142356812954}, {'value': ['start'], 'probability': 0.014860512688755989}, {'value': ['setup'], 'probability': 0.014345412142574787}]","[0.13288948, 0.23337094, 0.12328751, 0.14684053, 8.7891174e-05]",0.1164257492199343,"[{'value': ['enable'], 'probability': 0.6639090776443481}, {'value': ['bind'], 'probability': 0.10774555057287216}, {'value': ['invalidate'], 'probability': 0.07186442613601685}, {'value': ['end', 'rendering'], 'probability': 0.04910009354352951}, {'value': ['unbind'], 'probability': 0.044332098215818405}, {'value': ['destroy'], 'probability': 0.03554823622107506}, {'value': ['clear'], 'probability': 0.008884627372026443}, {'value': ['disable'], 'probability': 0.008486595936119556}, {'value': ['init'], 'probability': 0.006835644599050283}, {'value': ['reset'], 'probability': 0.0032937326468527317}]","[0.30986276, 0.25431812, 0.27988517, 0.23935778, 0.0, 0.5099461, 0.20622805, 0.4687381, -0.028260486, 0.15166157]",0.28923291024357245
1151,1151,"public void setDrawable(Skin skin, String drawableName) {setDrawable(skin.getDrawable(drawableName));}
","public void [MASK](Skin skin, String drawableName) {[MASK](skin.getDrawable(drawableName));}
",setDrawable,"[{'value': ['paint'], 'probability': 0.33702975511550903}, {'value': ['draw'], 'probability': 0.21923835575580597}, {'value': ['apply'], 'probability': 0.11374792456626892}, {'value': ['navigate'], 'probability': 0.020314505323767662}, {'value': ['render'], 'probability': 0.016335170716047287}]","[0.3280287, 0.6315808, 0.5010617, 0.27271438, 0.23491256]",0.3153942983334233,"[{'value': ['set', 'skin'], 'probability': 0.9157161116600037}, {'value': ['update', 'skin'], 'probability': 0.06252933293581009}, {'value': ['skin'], 'probability': 0.018445460125803947}, {'value': ['update', 'icon'], 'probability': 0.0006615236634388566}, {'value': ['update', 'issue'], 'probability': 0.0006117084412835538}, {'value': ['load', 'skin'], 'probability': 0.000448182545369491}, {'value': ['do', 'dynamic'], 'probability': 0.00042930804193019867}, {'value': ['child', 'added'], 'probability': 0.00041309191146865487}, {'value': ['get', 'skin'], 'probability': 0.0003924889024347067}, {'value': ['get', 'default', 'skin'], 'probability': 0.0003527456719893962}]","[0.73299366, 0.40270287, 0.2042804, 0.4261237, 0.59785706, 0.3474778, 0.61728066, 0.6480289, 0.5037627, 0.5690102]",0.7018973668210351
1152,1152,"public void setDrawable(Drawable drawable) {if (this.drawable == drawable)return;if (drawable != null) {if (getPrefWidth() != drawable.getMinWidth() || getPrefHeight() != drawable.getMinHeight())invalidateHierarchy();} elseinvalidateHierarchy();this.drawable = drawable;}
","public void [MASK](Drawable drawable) {if (this.drawable == drawable)return;if (drawable != null) {if (getPrefWidth() != drawable.getMinWidth() || getPrefHeight() != drawable.getMinHeight())invalidateHierarchy();} elseinvalidateHierarchy();this.drawable = drawable;}
",setDrawable,"[{'value': ['draw'], 'probability': 0.7159683108329773}, {'value': ['paint'], 'probability': 0.028579823672771454}, {'value': ['fill'], 'probability': 0.027590125799179077}, {'value': ['create'], 'probability': 0.020009497180581093}, {'value': ['select'], 'probability': 0.014901951886713505}]","[0.6315808, 0.3280287, 0.48556754, 0.66197675, 0.41006744]",0.49432035915616,"[{'value': ['set', 'image', 'drawable'], 'probability': 0.9953877329826355}, {'value': ['is', 'drawable'], 'probability': 0.0018353897612541914}, {'value': ['load', 'image'], 'probability': 0.0007495377212762833}, {'value': ['set', 'drawable'], 'probability': 0.0006396332173608243}, {'value': ['bound', 'center', 'bottom'], 'probability': 0.0005085021839477122}, {'value': ['get', 'drawable'], 'probability': 0.00024647501413710415}, {'value': ['set', 'icon'], 'probability': 0.00019391854584682733}, {'value': ['can', 'draw'], 'probability': 0.00019134885224048048}, {'value': ['load', 'icon'], 'probability': 0.00014008382277097553}, {'value': ['invalidate', 'drawable'], 'probability': 0.00010749638022389263}]","[0.8435568, 0.6348946, 0.49058554, 1.0, 0.6672867, 0.65028083, 0.7995382, 0.7542501, 0.40305117, 0.08604168]",0.8427033904423867
1153,1153,"public Drawable getDrawable() {return drawable;}
","public Drawable [MASK]() {return drawable;}
",getDrawable,"[{'value': ['draw'], 'probability': 0.5853047370910645}, {'value': ['get'], 'probability': 0.12424559891223907}, {'value': ['create'], 'probability': 0.06682264059782028}, {'value': ['finish'], 'probability': 0.02610122598707676}, {'value': ['paint'], 'probability': 0.020024798810482025}]","[0.558067, 1.0, 0.62328804, 0.52801555, 0.41529104]",0.5146325967527222,"[{'value': ['get', 'drawable'], 'probability': 0.9867439270019531}, {'value': ['get', 'display', 'icon'], 'probability': 0.0025884686037898064}, {'value': ['is', 'drawable'], 'probability': 0.002580158179625869}, {'value': ['peek', 'wallpaper'], 'probability': 0.0023574568331241608}, {'value': ['get', 'popup', 'background'], 'probability': 0.0018067770870402455}, {'value': ['get', 'icon'], 'probability': 0.0016886817757040262}, {'value': ['get', 'current'], 'probability': 0.000880994601175189}, {'value': ['bound', 'center', 'bottom'], 'probability': 0.0005239230231381953}, {'value': ['get', 'left', 'icon'], 'probability': 0.0004775134439114481}, {'value': ['peek', 'drawable'], 'probability': 0.0003521211910992861}]","[1.0, 0.73362243, 0.60187685, 0.28573632, 0.7483965, 0.82091, 0.88120216, 0.64497954, 0.83246624, 0.32689062]",0.9952347484631081
1154,1154,"public void setScaling(Scaling scaling) {if (scaling == null)throw new IllegalArgumentException(""scaling cannot be null."");this.scaling = scaling;}
","public void [MASK](Scaling scaling) {if (scaling == null)throw new IllegalArgumentException(""scaling cannot be null."");this.scaling = scaling;}
",setScaling,"[{'value': ['apply'], 'probability': 0.19176822900772095}, {'value': ['update'], 'probability': 0.13854631781578064}, {'value': ['set'], 'probability': 0.044635459780693054}, {'value': ['run'], 'probability': 0.03271719068288803}, {'value': ['process'], 'probability': 0.028687963262200356}]","[0.5010617, 0.41854778, 1.0, 0.67632943, 0.55405426]",0.2367337113538554,"[{'value': ['set', 'scaling'], 'probability': 0.9994826316833496}, {'value': ['set', 'to', 'translation', 'and', 'scaling'], 'probability': 0.00019843634800054133}, {'value': ['create', 'index', 'color', 'model'], 'probability': 0.0001357965375063941}, {'value': ['set', 'local', 'scaling'], 'probability': 8.695571887074038e-05}, {'value': ['get', 'default', 'scale'], 'probability': 4.629595423466526e-05}, {'value': ['set', 'session'], 'probability': 2.204068368882872e-05}, {'value': ['set', 'display', 'properties'], 'probability': 8.97157678991789e-06}, {'value': ['common', 'init'], 'probability': 8.828797035675962e-06}, {'value': ['init', 'node'], 'probability': 8.386900844925549e-06}, {'value': ['set', 'product', 'name'], 'probability': 1.6094080592665705e-06}]","[0.8355038, 0.85626334, 0.6280374, 0.84669876, 0.69023234, 0.85183275, 0.79431176, 0.29623833, -0.016800525, 0.79734296]",0.8354619751231531
1155,1155,"public void setAlign(int align) {this.align = align;}
","public void [MASK](int align) {this.align = align;}
",setAlign,"[{'value': ['set'], 'probability': 0.2289179414510727}, {'value': ['apply'], 'probability': 0.06888094544410706}, {'value': ['update'], 'probability': 0.06530173867940903}, {'value': ['paint'], 'probability': 0.05617595463991165}, {'value': ['render'], 'probability': 0.038057271391153336}]","[1.0, 0.5010617, 0.41854778, 0.3280287, 0.23491256]",0.3181308981492152,"[{'value': ['set', 'align'], 'probability': 0.9996994733810425}, {'value': ['set', 'alignment'], 'probability': 0.00015272026939783245}, {'value': ['get', 'align'], 'probability': 9.623591904528439e-05}, {'value': ['align'], 'probability': 4.0955026634037495e-05}, {'value': ['set', 'horizontal', 'alignment'], 'probability': 8.55371581565123e-06}, {'value': ['set', 'text', 'align'], 'probability': 7.320592771975498e-07}, {'value': ['set', 'size'], 'probability': 4.819917762688419e-07}, {'value': ['align', 'right'], 'probability': 2.8941897767253977e-07}, {'value': ['align', 'center'], 'probability': 2.519109614240733e-07}, {'value': ['align', 'left'], 'probability': 2.0219889051986684e-07}]","[0.7296063, 0.8006432, 0.5204697, 0.15327938, 0.68833697, 0.73831546, 0.8344828, 0.45955098, 0.47384992, 0.48087704]",0.729572853918615
1156,1156,"public float getMinWidth() {return 0;}
","public float [MASK]() {return 0;}
",getMinWidth,"[{'value': ['get'], 'probability': 0.11902123689651489}, {'value': ['next'], 'probability': 0.0462767593562603}, {'value': ['start'], 'probability': 0.04457392171025276}, {'value': ['value'], 'probability': 0.04454116150736809}, {'value': ['length'], 'probability': 0.03849995136260986}]","[1.0, 0.6966621, 0.7199945, 0.46303764, 0.3304365]",0.2166995037677849,"[{'value': ['get', 'progress'], 'probability': 0.7595232725143433}, {'value': ['get', 'token', 'score'], 'probability': 0.1375284194946289}, {'value': ['float', 'value'], 'probability': 0.02174360118806362}, {'value': ['get', 'value'], 'probability': 0.017533767968416214}, {'value': ['get', 'float', 'value'], 'probability': 0.013472716324031353}, {'value': ['freq'], 'probability': 0.013357573188841343}, {'value': ['get', 'scale'], 'probability': 0.0103947464376688}, {'value': ['get', 'position'], 'probability': 0.009946130216121674}, {'value': ['get', 'attenuation'], 'probability': 0.008411125279963017}, {'value': ['get', 'float'], 'probability': 0.008088769391179085}]","[0.8719993, 0.8198348, 0.45959836, 0.8500731, 0.78096455, -0.21266466, 0.82746357, 0.88500535, 0.7290076, 0.84481704]",0.8380026411932431
1157,1157,"public float getMinHeight() {return 0;}
","public float [MASK]() {return 0;}
",getMinHeight,"[{'value': ['get'], 'probability': 0.11902123689651489}, {'value': ['next'], 'probability': 0.0462767593562603}, {'value': ['start'], 'probability': 0.04457392171025276}, {'value': ['value'], 'probability': 0.04454116150736809}, {'value': ['length'], 'probability': 0.03849995136260986}]","[1.0, 0.6966621, 0.7199945, 0.46303764, 0.3304365]",0.2166995037677849,"[{'value': ['get', 'progress'], 'probability': 0.7595232725143433}, {'value': ['get', 'token', 'score'], 'probability': 0.1375284194946289}, {'value': ['float', 'value'], 'probability': 0.02174360118806362}, {'value': ['get', 'value'], 'probability': 0.017533767968416214}, {'value': ['get', 'float', 'value'], 'probability': 0.013472716324031353}, {'value': ['freq'], 'probability': 0.013357573188841343}, {'value': ['get', 'scale'], 'probability': 0.0103947464376688}, {'value': ['get', 'position'], 'probability': 0.009946130216121674}, {'value': ['get', 'attenuation'], 'probability': 0.008411125279963017}, {'value': ['get', 'float'], 'probability': 0.008088769391179085}]","[0.8719993, 0.8198348, 0.45959836, 0.8500731, 0.78096455, -0.21266466, 0.82746357, 0.88500535, 0.7290076, 0.84481704]",0.8380026411932431
1158,1158,"public float getPrefWidth() {if (drawable != null)return drawable.getMinWidth();return 0;}
","public float [MASK]() {if (drawable != null)return drawable.getMinWidth();return 0;}
",getPrefWidth,"[{'value': ['draw'], 'probability': 0.6447070240974426}, {'value': ['fill'], 'probability': 0.040343329310417175}, {'value': ['float'], 'probability': 0.02925758622586727}, {'value': ['get'], 'probability': 0.025203822180628777}, {'value': ['double'], 'probability': 0.021053902804851532}]","[0.558067, 0.611881, 0.2808844, 1.0, 0.5437231]",0.4293443622587121,"[{'value': ['get', 'min', 'width'], 'probability': 0.9545533061027527}, {'value': ['get', 'tile', 'size'], 'probability': 0.03087916225194931}, {'value': ['get', 'image', 'width'], 'probability': 0.0066335913725197315}, {'value': ['get', 'preferred', 'width'], 'probability': 0.001479462836869061}, {'value': ['get', 'max', 'width'], 'probability': 0.0014285693177953362}, {'value': ['get', 'texture'], 'probability': 0.0012909421930089593}, {'value': ['get', 'default', 'width'], 'probability': 0.0011882943799719214}, {'value': ['get', 'minimum', 'size'], 'probability': 0.0009932094253599644}, {'value': ['get', 'http'], 'probability': 0.0007842237828299403}, {'value': ['get', 'max', 'height'], 'probability': 0.0007690988713875413}]","[0.62363756, 0.73325694, 0.7443827, 0.78034776, 0.7438216, 0.7754086, 0.7264756, 0.7819635, 0.70797646, 0.7875107]",0.6288944952513896
1159,1159,"public float getPrefHeight() {if (drawable != null)return drawable.getMinHeight();return 0;}
","public float [MASK]() {if (drawable != null)return drawable.getMinHeight();return 0;}
",getPrefHeight,"[{'value': ['draw'], 'probability': 0.7190377116203308}, {'value': ['float'], 'probability': 0.02427949197590351}, {'value': ['get'], 'probability': 0.02194119803607464}, {'value': ['fill'], 'probability': 0.021940968930721283}, {'value': ['double'], 'probability': 0.01546601764857769}]","[0.558067, 0.2808844, 1.0, 0.611881, 0.5437231]",0.4518666574590171,"[{'value': ['get', 'min', 'height'], 'probability': 0.9492761492729187}, {'value': ['get', 'preferred', 'height'], 'probability': 0.02493833377957344}, {'value': ['get', 'height'], 'probability': 0.021615903824567795}, {'value': ['get', 'h'], 'probability': 0.0014518287498503923}, {'value': ['get', 'icon', 'size'], 'probability': 0.0010631270706653595}, {'value': ['set', 'min', 'height'], 'probability': 0.0005668832454830408}, {'value': ['get', 'max', 'height'], 'probability': 0.0005217494908720255}, {'value': ['get', 'area'], 'probability': 0.00022071160492487252}, {'value': ['get', 'max', 'y'], 'probability': 0.00018447265028953552}, {'value': ['get', 'dimension'], 'probability': 0.0001608026650501415}]","[0.6901914, 0.8146478, 0.8224554, 0.8091152, 0.78055066, 0.47626138, 0.7875107, 0.8575478, 0.6849645, 0.8371407]",0.6964119416019118
1160,1160,"public float getImageX() {return imageX;}
","public float [MASK]() {return imageX;}
",getImageX,"[{'value': ['image'], 'probability': 0.39434900879859924}, {'value': ['get'], 'probability': 0.09348984807729721}, {'value': ['paint'], 'probability': 0.06888290494680405}, {'value': ['x'], 'probability': 0.03689900040626526}, {'value': ['create'], 'probability': 0.034112002700567245}]","[0.43604967, 1.0, 0.41529104, 0.30854452, 0.62328804]",0.3266986439216512,"[{'value': ['get', 'size', 'y'], 'probability': 0.8095092177391052}, {'value': ['get', 'position', 'x'], 'probability': 0.08034267276525497}, {'value': ['draw', 'circle'], 'probability': 0.037492308765649796}, {'value': ['get', 'height'], 'probability': 0.021615689620375633}, {'value': ['touch', 'move'], 'probability': 0.017465831711888313}, {'value': ['get', 'functions'], 'probability': 0.013194694183766842}, {'value': ['get', 'width'], 'probability': 0.007870590314269066}, {'value': ['post', 'skew'], 'probability': 0.005124285351485014}, {'value': ['get', 'character', 'width'], 'probability': 0.003906114026904106}, {'value': ['get', 'texture', 'width'], 'probability': 0.003478638594970107}]","[0.6956879, 0.8029298, 0.5903381, 0.8224554, 0.8002139, 0.8071418, 0.7625303, 0.45310944, 0.74726015, 0.6365239]",0.7056693090119608
1161,1161,"public float getImageY() {return imageY;}
","public float [MASK]() {return imageY;}
",getImageY,"[{'value': ['image'], 'probability': 0.3810326159000397}, {'value': ['get'], 'probability': 0.07675515860319138}, {'value': ['paint'], 'probability': 0.03270860016345978}, {'value': ['x'], 'probability': 0.02841135673224926}, {'value': ['update'], 'probability': 0.021349595859646797}]","[0.43604967, 1.0, 0.41529104, 0.30854452, 0.36048478]",0.2729502663049069,"[{'value': ['get', 'height'], 'probability': 0.6229616403579712}, {'value': ['get', 'functions'], 'probability': 0.152406707406044}, {'value': ['region', 'updated'], 'probability': 0.07318442314863205}, {'value': ['get', 'position', 'x'], 'probability': 0.04448920488357544}, {'value': ['get', 'size', 'y'], 'probability': 0.035470835864543915}, {'value': ['get', 'position'], 'probability': 0.020649349316954613}, {'value': ['get', 'h'], 'probability': 0.015598722733557224}, {'value': ['create', 'line', 'string'], 'probability': 0.013256783597171307}, {'value': ['get', 'lat'], 'probability': 0.012034323997795582}, {'value': ['get', 'width'], 'probability': 0.00994797982275486}]","[0.8224554, 0.8071418, 0.4405249, 0.8029298, 0.6956879, 0.88500535, 0.8091152, 0.6501821, 0.65437555, 0.7625303]",0.7829857647412051
1162,1162,"public float getImageWidth() {return imageWidth;}
","public float [MASK]() {return imageWidth;}
",getImageWidth,"[{'value': ['image'], 'probability': 0.2581651210784912}, {'value': ['get'], 'probability': 0.03905356675386429}, {'value': ['size'], 'probability': 0.030518995597958565}, {'value': ['width'], 'probability': 0.028891772031784058}, {'value': ['length'], 'probability': 0.0230607520788908}]","[0.43604967, 1.0, 0.43109724, 0.19666797, 0.3304365]",0.1780852376372496,"[{'value': ['get', 'image', 'width'], 'probability': 0.9162132740020752}, {'value': ['get', 'width'], 'probability': 0.08073175698518753}, {'value': ['get', 'delta'], 'probability': 0.001419484498910606}, {'value': ['set', 'image', 'width'], 'probability': 0.00048382472596131265}, {'value': ['width'], 'probability': 0.00029651354998350143}, {'value': ['get', 'line', 'width'], 'probability': 0.00029037552303634584}, {'value': ['get', 'size'], 'probability': 0.00017569991177879274}, {'value': ['get', 'threshold'], 'probability': 0.00016611535102128983}, {'value': ['get', 'float', 'value'], 'probability': 0.00015397949027828872}, {'value': ['get', 'alignment'], 'probability': 6.898924766574055e-05}]","[0.7443827, 0.7625303, 0.7949913, 0.5717237, 0.19666797, 0.7531668, 0.83762157, 0.83993196, 0.78096455, 0.8012006]",0.74571805174026
1163,1163,"public float getImageHeight() {return imageHeight;}private static final float clamp(final float v) {return v < 0f ? 0f : (v > 1f ? 1f : v);}
","public float getImageHeight() [MASK] imageHeight;}private static final float clamp(final float v) [MASK] v < 0f ? 0f : (v > 1f ? 1f : v);}
",{return,"[{'value': ['{'], 'probability': 0.9673385620117188}, {'value': ['return'], 'probability': 0.03168615326285362}, {'value': ['='], 'probability': 0.0005202530301176012}, {'value': [':'], 'probability': 0.00011570085916901007}, {'value': ['<'], 'probability': 9.241920633940026e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'image', 'height'], 'probability': 0.9786219000816345}, {'value': ['get', 'height'], 'probability': 0.020665666088461876}, {'value': ['get', 'size', 'y'], 'probability': 0.0003784117288887501}, {'value': ['get', 'frame', 'rate'], 'probability': 8.298630564240739e-05}, {'value': ['height'], 'probability': 6.424755702028051e-05}, {'value': ['get', 'text', 'height'], 'probability': 4.677868491853587e-05}, {'value': ['get', 'descent'], 'probability': 4.2994794057449326e-05}, {'value': ['set', 'image', 'height'], 'probability': 4.1601142584113404e-05}, {'value': ['get', 'font', 'height'], 'probability': 3.6717712646350265e-05}, {'value': ['get', 'bean', 'classes'], 'probability': 1.874885128927417e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1164,1164,"public AmbientCubemap set(final float values[]) {for (int i = 0; i < data.length; i++) data[i] = values[i];return this;}
","public AmbientCubemap [MASK](final float values[]) {for (int i = 0; i < data.length; i++) data[i] = values[i];return this;}
",set,"[{'value': ['array'], 'probability': 0.06393830478191376}, {'value': ['set'], 'probability': 0.05352383106946945}, {'value': ['data'], 'probability': 0.04222941771149635}, {'value': ['read'], 'probability': 0.04134321212768555}, {'value': ['format'], 'probability': 0.03494870290160179}]","[0.46299207, 1.0, 0.47148952, 0.4820371, 0.44135]",0.138391059570939,"[{'value': ['set'], 'probability': 0.41706401109695435}, {'value': ['build'], 'probability': 0.30985528230667114}, {'value': ['copy', 'array'], 'probability': 0.08552257716655731}, {'value': ['append'], 'probability': 0.05420108512043953}, {'value': ['value', 'of'], 'probability': 0.037416961044073105}, {'value': ['vector'], 'probability': 0.030908599495887756}, {'value': ['$'], 'probability': 0.021375609561800957}, {'value': ['copy'], 'probability': 0.018376069143414497}, {'value': ['set', 'data'], 'probability': 0.01281436812132597}, {'value': ['get', 'data'], 'probability': 0.012465476989746094}]","[1.0, 0.58275604, 0.55841666, -0.14185604, 0.6285518, 0.211836, 0.45663777, 0.4086756, 0.8273227, 0.6595955]",0.703863133207955
1165,1165,"public AmbientCubemap set(final AmbientCubemap other) {return set(other.data);}
","public AmbientCubemap [MASK](final AmbientCubemap other) {return [MASK](other.data);}
",set,"[{'value': ['get'], 'probability': 0.062073782086372375}, {'value': ['create'], 'probability': 0.05864067003130913}, {'value': ['compare'], 'probability': 0.04906409978866577}, {'value': ['calculate'], 'probability': 0.045091383159160614}, {'value': ['read'], 'probability': 0.032998278737068176}]","[0.65028083, 0.66197675, 0.27144608, 0.2918639, 0.4820371]",0.1215693496068528,"[{'value': ['merge'], 'probability': 0.607745885848999}, {'value': ['set'], 'probability': 0.12402479350566864}, {'value': ['append'], 'probability': 0.0789879560470581}, {'value': ['xor'], 'probability': 0.0642276480793953}, {'value': ['or'], 'probability': 0.04305531457066536}, {'value': ['build'], 'probability': 0.019950512796640396}, {'value': ['add'], 'probability': 0.018850237131118774}, {'value': ['and'], 'probability': 0.018762214109301567}, {'value': ['data'], 'probability': 0.014026821590960026}, {'value': ['update'], 'probability': 0.01036857534199953}]","[0.38837323, 1.0, -0.14185604, -0.10305061, 0.6257754, 0.58275604, 0.5084879, 0.6945254, 0.47148952, 0.41854778]",0.4143718430996593
1166,1166,"public AmbientCubemap set(final Color color) {return set(color.r, color.g, color.b);}
","public AmbientCubemap [MASK](final Color color) {return [MASK](color.r, color.g, color.b);}
",set,"[{'value': ['paint'], 'probability': 0.10095471888780594}, {'value': ['create'], 'probability': 0.050812624394893646}, {'value': ['get'], 'probability': 0.04250086843967438}, {'value': ['update'], 'probability': 0.041948750615119934}, {'value': ['color'], 'probability': 0.02524723671376705}]","[0.3280287, 0.66197675, 0.65028083, 0.41854778, 0.36214757]",0.1210911042407996,"[{'value': ['color'], 'probability': 0.5175886750221252}, {'value': ['set'], 'probability': 0.2866520285606384}, {'value': ['set', 'color'], 'probability': 0.1083429679274559}, {'value': ['get', 'color'], 'probability': 0.03868580609560013}, {'value': ['get'], 'probability': 0.016638781875371933}, {'value': ['rgb'], 'probability': 0.008413519710302353}, {'value': ['get', 'background', 'color'], 'probability': 0.007703683339059353}, {'value': ['other'], 'probability': 0.005992354825139046}, {'value': ['grid'], 'probability': 0.005790822207927704}, {'value': ['parse', 'color'], 'probability': 0.004191436804831028}]","[0.36214757, 1.0, 0.80587685, 0.6114065, 0.65028083, -0.0054750526, 0.58991355, 0.6494406, 0.4665442, 0.29068756]",0.6081894276738822
1167,1167,"public AmbientCubemap set(float r, float g, float b) {for (int idx = 0; idx < data.length; ) {data[idx++] = r;data[idx++] = g;data[idx++] = b;}return this;}
","public AmbientCubemap [MASK](float r, float g, float b) {for (int idx = 0; idx < data.length; ) {data[idx++] = r;data[idx++] = g;data[idx++] = b;}return this;}
",set,"[{'value': ['update'], 'probability': 0.04693080857396126}, {'value': ['##up'], 'probability': 0.027274329215288162}, {'value': ['get'], 'probability': 0.02291332744061947}, {'value': ['create'], 'probability': 0.022309880703687668}, {'value': ['##code'], 'probability': 0.022111188620328903}]","[0.41854778, 0.0, 0.65028083, 0.66197675, 0.0]",0.0493115057960867,"[{'value': ['set', 'all'], 'probability': 0.3652517795562744}, {'value': ['set'], 'probability': 0.1949501782655716}, {'value': ['build'], 'probability': 0.09833177924156189}, {'value': ['project'], 'probability': 0.08869457989931107}, {'value': ['compose'], 'probability': 0.08332673460245132}, {'value': ['map', 'multiply', 'to', 'self'], 'probability': 0.047097474336624146}, {'value': ['set', 'data'], 'probability': 0.04539291933178902}, {'value': ['add', 'all'], 'probability': 0.02824483811855316}, {'value': ['assign'], 'probability': 0.024851452559232712}, {'value': ['and'], 'probability': 0.02385825663805008}]","[0.918451, 1.0, 0.58275604, 0.5483335, 0.2470989, 0.7267559, 0.8273227, 0.6964968, 0.17613421, 0.6945254]",0.7693463881123603
1168,1168,"public Color getColor(final Color out, int side) {side *= 3;return out.set(data[side], data[side + 1], data[side + 2], 1f);}
","public Color [MASK](final Color out, int side) {side *= 3;return out.set(data[side], data[side + 1], data[side + 2], 1f);}
",getColor,"[{'value': ['set'], 'probability': 0.7263593077659607}, {'value': ['get'], 'probability': 0.12004919350147247}, {'value': ['put'], 'probability': 0.01553142350167036}, {'value': ['update'], 'probability': 0.009363962337374687}, {'value': ['clear'], 'probability': 0.005879903677850962}]","[0.65028083, 1.0, 0.8176035, 0.36048478, 0.66159254]",0.6123509423680784,"[{'value': ['get'], 'probability': 0.43840450048446655}, {'value': ['get', 'data'], 'probability': 0.39589476585388184}, {'value': ['get', 'color'], 'probability': 0.038793303072452545}, {'value': ['set'], 'probability': 0.03666472062468529}, {'value': ['get', 'string'], 'probability': 0.022856706753373146}, {'value': ['get', 'value'], 'probability': 0.01712600141763687}, {'value': ['get', 'side'], 'probability': 0.015417716465890408}, {'value': ['get', 'state'], 'probability': 0.014930713921785355}, {'value': ['get', 'sides'], 'probability': 0.010103752836585045}, {'value': ['get', 'list'], 'probability': 0.009807940572500229}]","[1.0, 0.82370985, 0.82306665, 0.65028083, 0.82927686, 0.8500731, 0.8808294, 0.8487867, 0.8621602, 0.86849356]",0.8972742048983988
1169,1169,"public AmbientCubemap clear() {for (int i = 0; i < data.length; i++) data[i] = 0f;return this;}
","public AmbientCubemap [MASK]() {for (int i = 0; i < data.length; i++) data[i] = 0f;return this;}
",clear,"[{'value': ['data'], 'probability': 0.1586502492427826}, {'value': ['read'], 'probability': 0.037059515714645386}, {'value': ['##put'], 'probability': 0.03143751993775368}, {'value': ['format'], 'probability': 0.02860734798014164}, {'value': ['run'], 'probability': 0.02847365289926529}]","[0.47538483, 0.49591336, 0.0, 0.3131413, 0.5174217]",0.1174892590949946,"[{'value': ['clear'], 'probability': 0.26736316084861755}, {'value': ['clone'], 'probability': 0.21374797821044922}, {'value': ['data'], 'probability': 0.14442843198776245}, {'value': ['build'], 'probability': 0.10344431549310684}, {'value': ['copy'], 'probability': 0.08082662522792816}, {'value': ['get'], 'probability': 0.060433726757764816}, {'value': ['zero'], 'probability': 0.05233386158943176}, {'value': ['file'], 'probability': 0.03447083383798599}, {'value': ['get', 'data'], 'probability': 0.023989981040358543}, {'value': ['parent'], 'probability': 0.018961085006594658}]","[1.0, 0.025463026, 0.47538483, 0.51005095, 0.397783, 0.66159254, 0.46186468, 0.37297577, 0.6683787, 0.2848879]",0.524824872462104
1170,1170,"public AmbientCubemap clamp() {for (int i = 0; i < data.length; i++) data[i] = clamp(data[i]);return this;}
","public AmbientCubemap [MASK]() {for (int i = 0; i < data.length; i++) data[i] = [MASK](data[i]);return this;}
",clamp,"[{'value': ['data'], 'probability': 0.08657650649547577}, {'value': ['read'], 'probability': 0.04341631755232811}, {'value': ['format'], 'probability': 0.032127875834703445}, {'value': ['run'], 'probability': 0.031167393550276756}, {'value': ['get'], 'probability': 0.024998558685183525}]","[0.15136993, 0.013478795, 0.10674006, 0.18546966, 0.16959578]",0.0271398664340581,"[{'value': ['get', 'data'], 'probability': 0.6349629759788513}, {'value': ['data'], 'probability': 0.32007119059562683}, {'value': ['get'], 'probability': 0.027304820716381073}, {'value': ['get', 'value'], 'probability': 0.0044256169348955154}, {'value': ['copy', 'data'], 'probability': 0.0030828211456537247}, {'value': ['format'], 'probability': 0.002905816538259387}, {'value': ['set'], 'probability': 0.0023260812740772963}, {'value': ['set', 'data'], 'probability': 0.0021014453377574682}, {'value': ['copy'], 'probability': 0.0017843649256974459}, {'value': ['get', 'state'], 'probability': 0.0010348210344091058}]","[0.18977103, 0.15136993, 0.16959578, 0.09494976, 0.13165273, 0.10674006, 0.2784951, 0.2431845, 0.06704779, 0.152375]",0.17614991391410526
1171,1171,"public AmbientCubemap add(float r, float g, float b) {for (int idx = 0; idx < data.length; ) {data[idx++] += r;data[idx++] += g;data[idx++] += b;}return this;}
","public AmbientCubemap [MASK](float r, float g, float b) {for (int idx = 0; idx < data.length; ) {data[idx++] += r;data[idx++] += g;data[idx++] += b;}return this;}
",add,"[{'value': ['update'], 'probability': 0.04317890480160713}, {'value': ['data'], 'probability': 0.03017657995223999}, {'value': ['##up'], 'probability': 0.027019765228033066}, {'value': ['##code'], 'probability': 0.025548910722136497}, {'value': ['get'], 'probability': 0.02404930256307125}]","[0.5117927, 0.35996073, 0.0, 0.0, 0.54842544]",0.046150282246401,"[{'value': ['translate'], 'probability': 0.9864902496337891}, {'value': ['aggregate'], 'probability': 0.004529339261353016}, {'value': ['transform'], 'probability': 0.0031205727718770504}, {'value': ['collect'], 'probability': 0.0015782729024067521}, {'value': ['map'], 'probability': 0.0014791081193834543}, {'value': ['add', 'data'], 'probability': 0.0007974199834279716}, {'value': ['add', 'value'], 'probability': 0.0007646227604709566}, {'value': ['refine'], 'probability': 0.00047758148866705596}, {'value': ['add'], 'probability': 0.0004362747131381184}, {'value': ['write', 'byte'], 'probability': 0.00032652661320753396}]","[0.40724388, 0.2887252, 0.34067583, 0.41857067, 0.2809898, 0.8054864, 0.8428972, 0.34252396, 1.0, 0.39174375]",0.407203769898505
1172,1172,"public AmbientCubemap add(final Color color) {return add(color.r, color.g, color.b);}
","public AmbientCubemap [MASK](final Color color) {return [MASK](color.r, color.g, color.b);}
",add,"[{'value': ['paint'], 'probability': 0.10095471888780594}, {'value': ['create'], 'probability': 0.050812624394893646}, {'value': ['get'], 'probability': 0.04250086843967438}, {'value': ['update'], 'probability': 0.041948750615119934}, {'value': ['color'], 'probability': 0.02524723671376705}]","[0.4643906, 0.60979056, 0.54842544, 0.5117927, 0.5481706]",0.1364848979330696,"[{'value': ['add'], 'probability': 0.7001697421073914}, {'value': ['color'], 'probability': 0.06627275049686432}, {'value': ['add', 'minutes'], 'probability': 0.06179550662636757}, {'value': ['rgb'], 'probability': 0.04645400866866112}, {'value': ['get', 'color'], 'probability': 0.04601063206791878}, {'value': ['add', 'local'], 'probability': 0.031272388994693756}, {'value': ['encode', 'color'], 'probability': 0.018151549622416496}, {'value': ['diffuse'], 'probability': 0.011198950000107288}, {'value': ['subtract'], 'probability': 0.010096106678247452}, {'value': ['add', 'curve'], 'probability': 0.008578503504395485}]","[1.0, 0.5481706, 0.8603178, 0.12421752, 0.66371477, 0.8435897, 0.5420472, 0.23717052, 0.49539304, 0.7784311]",0.876526065245553
1173,1173,"public AmbientCubemap add(final Color color, final Vector3 direction) {return add(color.r, color.g, color.b, direction.x, direction.y, direction.z);}
","public AmbientCubemap [MASK](final Color color, final Vector3 direction) {return [MASK](color.r, color.g, color.b, direction.x, direction.y, direction.z);}
",add,"[{'value': ['paint'], 'probability': 0.17976149916648865}, {'value': ['create'], 'probability': 0.04039547219872475}, {'value': ['update'], 'probability': 0.03483327105641365}, {'value': ['fill'], 'probability': 0.02336907386779785}, {'value': ['draw'], 'probability': 0.018186867237091064}]","[0.4643906, 0.60979056, 0.5117927, 0.6158088, 0.44779792]",0.1484746661360507,"[{'value': ['add'], 'probability': 0.9990208148956299}, {'value': ['subtract'], 'probability': 0.00022531407012138516}, {'value': ['add', 'data'], 'probability': 0.00021469418425112963}, {'value': ['add', 'local'], 'probability': 0.0001720279542496428}, {'value': ['insert'], 'probability': 0.00012476461415644735}, {'value': ['add', 'layer'], 'probability': 7.673430081922561e-05}, {'value': ['add', 'minutes'], 'probability': 5.154404789209366e-05}, {'value': ['enlarge'], 'probability': 4.946931221638806e-05}, {'value': ['add', 'point'], 'probability': 3.446792470640503e-05}, {'value': ['sub'], 'probability': 3.0094464818830602e-05}]","[1.0, 0.49539304, 0.8054864, 0.8435897, 0.4981244, 0.848432, 0.8603178, 0.36965117, 0.84174263, 0.17964324]",0.9996747903483376
1174,1174,"public AmbientCubemap add(final float r, final float g, final float b, final Vector3 direction) {return add(r, g, b, direction.x, direction.y, direction.z);}
","public AmbientCubemap [MASK](final float r, final float g, final float b, final Vector3 direction) {return [MASK](r, g, b, direction.x, direction.y, direction.z);}
",add,"[{'value': ['update'], 'probability': 0.07118675857782364}, {'value': ['paint'], 'probability': 0.0642714723944664}, {'value': ['create'], 'probability': 0.04666240140795708}, {'value': ['fill'], 'probability': 0.0161670483648777}, {'value': ['trim'], 'probability': 0.015567801892757416}]","[0.5117927, 0.4643906, 0.60979056, 0.6158088, 0.5967047]",0.1139794161037199,"[{'value': ['add'], 'probability': 0.9983682036399841}, {'value': ['add', 'node'], 'probability': 0.0005204730550758541}, {'value': ['add', 'local'], 'probability': 0.000418046023696661}, {'value': ['subtract'], 'probability': 0.00020974734798073769}, {'value': ['insert'], 'probability': 0.00012031138612655923}, {'value': ['add', 'data'], 'probability': 0.00010325283074053004}, {'value': ['append'], 'probability': 8.063116547418758e-05}, {'value': ['add', 'layer'], 'probability': 6.231549923541024e-05}, {'value': ['to', 'list'], 'probability': 6.005031173117459e-05}, {'value': ['add', 'option'], 'probability': 5.689452154911123e-05}]","[1.0, 0.7639855, 0.8435897, 0.49539304, 0.4981244, 0.8054864, 0.105477236, 0.848432, 0.5584956, 0.87548465]",0.9995102263225007
1175,1175,"public AmbientCubemap add(final Color color, final float x, final float y, final float z) {return add(color.r, color.g, color.b, x, y, z);}
","public AmbientCubemap [MASK](final Color color, final float x, final float y, final float z) {return [MASK](color.r, color.g, color.b, x, y, z);}
",add,"[{'value': ['paint'], 'probability': 0.11566769331693649}, {'value': ['update'], 'probability': 0.07921072840690613}, {'value': ['create'], 'probability': 0.05357034131884575}, {'value': ['trim'], 'probability': 0.02276420220732689}, {'value': ['get'], 'probability': 0.019874518737196922}]","[0.4643906, 0.5117927, 0.60979056, 0.5967047, 0.54842544]",0.1514043514176621,"[{'value': ['add'], 'probability': 0.9686840176582336}, {'value': ['add', 'local'], 'probability': 0.012462501414120197}, {'value': ['add', 'node'], 'probability': 0.006842237897217274}, {'value': ['translate'], 'probability': 0.00497791450470686}, {'value': ['subtract'], 'probability': 0.002831012010574341}, {'value': ['insert'], 'probability': 0.001457010512240231}, {'value': ['to', 'list'], 'probability': 0.0012894297251477838}, {'value': ['add', 'data'], 'probability': 0.0006057803402654827}, {'value': ['push'], 'probability': 0.000429426203481853}, {'value': ['out'], 'probability': 0.0004205460427328944}]","[1.0, 0.8435897, 0.7639855, 0.40724388, 0.49539304, 0.4981244, 0.5584956, 0.8054864, 0.50270826, 0.48042142]",0.9902060914591001
1176,1176,"public AmbientCubemap add(final Color color, final Vector3 point, final Vector3 target) {return add(color.r, color.g, color.b, target.x - point.x, target.y - point.y, target.z - point.z);}
","public AmbientCubemap [MASK](final Color color, final Vector3 point, final Vector3 target) {return [MASK](color.r, color.g, color.b, target.x - point.x, target.y - point.y, target.z - point.z);}
",add,"[{'value': ['paint'], 'probability': 0.13310794532299042}, {'value': ['create'], 'probability': 0.05315690115094185}, {'value': ['update'], 'probability': 0.048720188438892365}, {'value': ['get'], 'probability': 0.01931433007121086}, {'value': ['render'], 'probability': 0.018764756619930267}]","[0.4643906, 0.60979056, 0.5117927, 0.54842544, 0.35490397]",0.1364154502304051,"[{'value': ['contains'], 'probability': 0.29728972911834717}, {'value': ['distance'], 'probability': 0.2202802449464798}, {'value': ['subtract'], 'probability': 0.13529165089130402}, {'value': ['minus'], 'probability': 0.08203388750553131}, {'value': ['distance', 'to'], 'probability': 0.06301349401473999}, {'value': ['overlaps'], 'probability': 0.061416465789079666}, {'value': ['intersects'], 'probability': 0.04762481898069382}, {'value': ['cross'], 'probability': 0.04006344452500343}, {'value': ['sub'], 'probability': 0.027221804484725}, {'value': ['get', 'offset'], 'probability': 0.025764459744095802}]","[0.45103642, 0.30528465, 0.49539304, 0.23873086, 0.5146724, 0.15979177, 0.10271566, 0.273424, 0.17964324, 0.5981277]",0.36633515948679146
1177,1177,"public AmbientCubemap add(final Color color, final Vector3 point, final Vector3 target, final float intensity) {final float t = intensity / (1f + target.dst(point));return add(color.r * t, color.g * t, color.b * t, target.x - point.x, target.y - point.y, target.z - point.z);}
","public AmbientCubemap [MASK](final Color color, final Vector3 point, final Vector3 target, final float intensity) {final float t = intensity / (1f + target.dst(point));return [MASK](color.r * t, color.g * t, color.b * t, target.x - point.x, target.y - point.y, target.z - point.z);}
",add,"[{'value': ['paint'], 'probability': 0.09816129505634308}, {'value': ['transform'], 'probability': 0.07736030966043472}, {'value': ['update'], 'probability': 0.06067154183983803}, {'value': ['generate'], 'probability': 0.02877192385494709}, {'value': ['##ize'], 'probability': 0.02698316052556038}]","[0.4643906, 0.34067583, 0.5117927, 0.5112783, 0.0]",0.1177016839215863,"[{'value': ['subtract'], 'probability': 0.5338191390037537}, {'value': ['add'], 'probability': 0.25265032052993774}, {'value': ['sub'], 'probability': 0.08293028920888901}, {'value': ['lerp'], 'probability': 0.04086659476161003}, {'value': ['and'], 'probability': 0.026252727955579758}, {'value': ['distance'], 'probability': 0.01660020463168621}, {'value': ['convert'], 'probability': 0.014649600721895695}, {'value': ['normalize'], 'probability': 0.01372242160141468}, {'value': ['or'], 'probability': 0.009942769072949886}, {'value': ['dot'], 'probability': 0.008565972559154034}]","[0.49539304, 1.0, 0.17964324, 0.0, 0.48293346, 0.30528465, 0.43924776, 0.1614869, 0.56623524, 0.2982599]",0.5665802088438262
1178,1178,"public String toString() {String result = """";for (int i = 0; i < data.length; i += 3) {result += Float.toString(data[i]) + "", "" + Float.toString(data[i + 1]) + "", "" + Float.toString(data[i + 2]) + ""\n"";}return result;}public static boolean test(Object data) {if (!(data instanceof byte[]))return false;byte[] b = (byte[]) data;for (int i = 0; i < b.length; ++i) {if (((int) b[i] & 0x080) != 0)return true;}return false;}
","public String toString() [MASK] result = """";for (int i = 0; i < data.length; i += 3) {result += Float.toString(data[i]) + "", "" + Float.toString(data[i + 1]) + "", "" + Float.toString(data[i + 2]) + ""\n"";}return result;}public static boolean test(Object data) {if (!(data instanceof byte[]))return false;byte[] b = (byte[]) data;for (int i = 0; i < b.length; ++i) {if (((int) b[i] & 0x080) != 0)return true;}return false;}
",{String,"[{'value': ['{'], 'probability': 0.9935454726219177}, {'value': ['String'], 'probability': 0.0064138383604586124}, {'value': [';'], 'probability': 1.9215951397200115e-05}, {'value': ['return'], 'probability': 6.621668035222683e-06}, {'value': ['##bject'], 'probability': 3.525397914927453e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['to', 'string'], 'probability': 0.9988051652908325}, {'value': ['get', 'message'], 'probability': 0.00035953469341620803}, {'value': ['get', 'description'], 'probability': 0.0003144746006000787}, {'value': ['get', 'name'], 'probability': 0.00016928430704865605}, {'value': ['get', 'signature'], 'probability': 8.567889017285779e-05}, {'value': ['get', 'text'], 'probability': 6.872488302178681e-05}, {'value': ['get', 'string', 'value'], 'probability': 5.579604476224631e-05}, {'value': ['get', 'string'], 'probability': 5.3078070777701214e-05}, {'value': ['to', 'external', 'form'], 'probability': 4.8873702326091006e-05}, {'value': ['get', 'label'], 'probability': 3.941366230719723e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1179,1179,"public static char[] decode16(byte[] s8, int offset, int length) {Object decoded = decode(s8, offset, length);if (decoded instanceof char[])return (char[]) decoded;return (char[]) widen(decoded, length, length);}
","public static char[] [MASK](byte[] s8, int offset, int length) {Object decoded = decode(s8, offset, length);if (decoded instanceof char[])return (char[]) decoded;return (char[]) widen(decoded, length, length);}
",decode16,"[{'value': ['evaluate'], 'probability': 0.09183932095766068}, {'value': ['process'], 'probability': 0.06854931265115738}, {'value': ['code'], 'probability': 0.05846214294433594}, {'value': ['read'], 'probability': 0.05465884506702423}, {'value': ['get'], 'probability': 0.04906189814209938}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'chars'], 'probability': 0.49006739258766174}, {'value': ['get', 'char', 'array'], 'probability': 0.27370375394821167}, {'value': ['to', 'chars'], 'probability': 0.10224810987710953}, {'value': ['get', 'char'], 'probability': 0.09805142879486084}, {'value': ['to', 'char', 'array'], 'probability': 0.017841514199972153}, {'value': ['to', 'int', 'array'], 'probability': 0.00509627815335989}, {'value': ['read', 'byte', 'array'], 'probability': 0.004816443659365177}, {'value': ['read', 'char', 'array'], 'probability': 0.0035651084035634995}, {'value': ['decode'], 'probability': 0.003102537477388978}, {'value': ['decode', 'base'], 'probability': 0.001507383887656033}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1180,1180,"private static void cram(Object data, int index, int val) {if (data instanceof byte[])((byte[]) data)[index] = (byte) val;else((char[]) data)[index] = (char) val;}
","private static void [MASK](Object data, int index, int val) {if (data instanceof byte[])((byte[]) data)[index] = (byte) val;else((char[]) data)[index] = (char) val;}
",cram,"[{'value': ['convert'], 'probability': 0.06373171508312225}, {'value': ['set'], 'probability': 0.048264432698488235}, {'value': ['write'], 'probability': 0.046788010746240616}, {'value': ['compare'], 'probability': 0.04338517785072327}, {'value': ['read'], 'probability': 0.04292203485965729}]","[0.25519612, 0.18029265, 0.22574611, 0.09801282, 0.21459588]",0.0489912162724215,"[{'value': ['set', 'byte'], 'probability': 0.6250829696655273}, {'value': ['set', 'int'], 'probability': 0.3574661910533905}, {'value': ['set', 'char'], 'probability': 0.011261627078056335}, {'value': ['write', 'byte'], 'probability': 0.003295108675956726}, {'value': ['get', 'id', 'value'], 'probability': 0.0008111983188427985}, {'value': ['get', 'byte'], 'probability': 0.0006738821975886822}, {'value': ['read', 'byte', 'array'], 'probability': 0.0005361851654015481}, {'value': ['set', 'byte', 'value'], 'probability': 0.00031344592571258545}, {'value': ['write'], 'probability': 0.0002963539445772767}, {'value': ['get', 'bytes'], 'probability': 0.0002630480448715389}]","[0.15398364, 0.10576063, 0.2516324, 0.18377358, 0.07494298, 0.21978071, 0.15453437, 0.06581148, 0.22574611, 0.2068646]",0.13793144809103225
1181,1181,"private static Object widen(Object data, int length, int capacity) {byte[] src = (byte[]) data;char[] result = new char[capacity];for (int i = 0; i < length; ++i) result[i] = (char) ((int) src[i] & 0x0ff);return result;}
","private static Object [MASK](Object data, int length, int capacity) {byte[] src = (byte[]) data;char[] result = new char[capacity];for (int i = 0; i < length; ++i) result[i] = (char) ((int) src[i] & 0x0ff);return result;}
",widen,"[{'value': ['execute'], 'probability': 0.16417810320854187}, {'value': ['transform'], 'probability': 0.11741171777248383}, {'value': ['result'], 'probability': 0.06694193929433823}, {'value': ['process'], 'probability': 0.05542461946606636}, {'value': ['convert'], 'probability': 0.048323407769203186}]","[0.06460674, 0.27179047, 0.2534643, 0.22157115, 0.23611094]",0.0831759730429768,"[{'value': ['new', 'data'], 'probability': 0.861457884311676}, {'value': ['get', 'value', 'at'], 'probability': 0.019839255139231682}, {'value': ['new', 'string'], 'probability': 0.01769990473985672}, {'value': ['set', 'data'], 'probability': 0.016243955120444298}, {'value': ['received'], 'probability': 0.015375303104519844}, {'value': ['on', 'data'], 'probability': 0.01515159010887146}, {'value': ['ensure', 'data'], 'probability': 0.014547843486070633}, {'value': ['get', 'struct', 'fields', 'data', 'as', 'list'], 'probability': 0.013879186473786831}, {'value': ['create', 'table'], 'probability': 0.013536500744521618}, {'value': ['create', 'data'], 'probability': 0.012268622405827045}]","[0.2393038, 0.23394899, 0.17604795, 0.25099817, 0.002766902, 0.2698138, 0.282121, 0.23894608, 0.25823435, 0.3488172]",0.2373111293117163
1182,1182,"public static long getCPtr(btConvexPolyhedron obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btConvexPolyhedron obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.10028861463069916}, {'value': ['skip'], 'probability': 0.044288694858551025}, {'value': ['evaluate'], 'probability': 0.035908691585063934}, {'value': ['update'], 'probability': 0.031832028180360794}, {'value': ['match'], 'probability': 0.031256020069122314}]","[1.0, 0.49507433, 0.40115592, 0.36048478, 0.4692583]",0.1627619035545819,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1183,1183,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1184,1184,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.delete_btConvexPolyhedron(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;CollisionJNI.[MASK]_btConvexPolyhedron(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.7932204604148865}, {'value': ['start'], 'probability': 0.02233169786632061}, {'value': ['clear'], 'probability': 0.010883579961955547}, {'value': ['test'], 'probability': 0.01000523753464222}, {'value': ['execute'], 'probability': 0.009170838631689548}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.33713183]",0.1204868954407373,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1185,1185,"public void setVertices(btVector3Array value) {CollisionJNI.btConvexPolyhedron_vertices_set(swigCPtr, this, btVector3Array.getCPtr(value), value);}
","public void [MASK](btVector3Array value) {CollisionJNI.btConvexPolyhedron_vertices_set(swigCPtr, this, btVector3Array.getCPtr(value), value);}
",setVertices,"[{'value': ['set'], 'probability': 0.3214554488658905}, {'value': ['put'], 'probability': 0.0771358385682106}, {'value': ['add'], 'probability': 0.04513058438897133}, {'value': ['execute'], 'probability': 0.032890863716602325}, {'value': ['apply'], 'probability': 0.030272236093878746}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.5010617]",0.4324201724658703,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1186,1186,"public btVector3Array getVertices() {long cPtr = CollisionJNI.btConvexPolyhedron_vertices_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3Array(cPtr, false);}
","public btVector3Array [MASK]() {long cPtr = CollisionJNI.btConvexPolyhedron_vertices_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3Array(cPtr, false);}
",getVertices,"[{'value': ['get'], 'probability': 0.1303357630968094}, {'value': ['create'], 'probability': 0.09920084476470947}, {'value': ['build'], 'probability': 0.09044001996517181}, {'value': ['update'], 'probability': 0.050614725798368454}, {'value': ['resolve'], 'probability': 0.04329757019877434}]","[1.0, 0.62328804, 0.5626448, 0.36048478, 0.427468]",0.279806231902318,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1187,1187,"public void setFaces(SWIGTYPE_p_btAlignedObjectArrayT_btFace_t value) {CollisionJNI.btConvexPolyhedron_faces_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btFace_t.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_btAlignedObjectArrayT_btFace_t value) {CollisionJNI.btConvexPolyhedron_faces_set(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btFace_t.getCPtr(value));}
",setFaces,"[{'value': ['set'], 'probability': 0.5906085968017578}, {'value': ['put'], 'probability': 0.04837369918823242}, {'value': ['add'], 'probability': 0.03355113044381142}, {'value': ['update'], 'probability': 0.02569945901632309}, {'value': ['setup'], 'probability': 0.020376471802592278}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.35182503]",0.6640251575690774,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1188,1188,"public SWIGTYPE_p_btAlignedObjectArrayT_btFace_t getFaces() {long cPtr = CollisionJNI.btConvexPolyhedron_faces_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btFace_t(cPtr, false);}
","public SWIGTYPE_p_btAlignedObjectArrayT_btFace_t [MASK]() {long cPtr = CollisionJNI.btConvexPolyhedron_faces_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_btFace_t(cPtr, false);}
",getFaces,"[{'value': ['##x'], 'probability': 0.322990357875824}, {'value': ['='], 'probability': 0.1582842320203781}, {'value': ['##s'], 'probability': 0.12925855815410614}, {'value': ['##b'], 'probability': 0.028102288022637367}, {'value': ['##c'], 'probability': 0.02771751768887043}]","[0.0, 0.22116649, 0.0, 0.0, 0.0]",0.0350071682570618,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1189,1189,"public void setUniqueEdges(btVector3Array value) {CollisionJNI.btConvexPolyhedron_uniqueEdges_set(swigCPtr, this, btVector3Array.getCPtr(value), value);}
","public void [MASK](btVector3Array value) {CollisionJNI.btConvexPolyhedron_uniqueEdges_set(swigCPtr, this, btVector3Array.getCPtr(value), value);}
",setUniqueEdges,"[{'value': ['set'], 'probability': 0.48955127596855164}, {'value': ['put'], 'probability': 0.07331642508506775}, {'value': ['add'], 'probability': 0.029474515467882156}, {'value': ['apply'], 'probability': 0.021573292091488838}, {'value': ['execute'], 'probability': 0.02077770233154297}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.5809020692101259,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1190,1190,"public btVector3Array getUniqueEdges() {long cPtr = CollisionJNI.btConvexPolyhedron_uniqueEdges_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3Array(cPtr, false);}
","public btVector3Array [MASK]() {long cPtr = CollisionJNI.btConvexPolyhedron_uniqueEdges_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3Array(cPtr, false);}
",getUniqueEdges,"[{'value': ['get'], 'probability': 0.14909584820270538}, {'value': ['create'], 'probability': 0.09853065013885498}, {'value': ['build'], 'probability': 0.07670377194881439}, {'value': ['update'], 'probability': 0.05568686127662659}, {'value': ['resolve'], 'probability': 0.044604793190956116}]","[1.0, 0.62328804, 0.5626448, 0.36048478, 0.427468]",0.2928071881144767,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1191,1191,"public void setLocalCenter(btVector3 value) {CollisionJNI.btConvexPolyhedron_localCenter_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btConvexPolyhedron_localCenter_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setLocalCenter,"[{'value': ['set'], 'probability': 0.4628126919269562}, {'value': ['put'], 'probability': 0.06808744370937347}, {'value': ['execute'], 'probability': 0.029523910954594612}, {'value': ['add'], 'probability': 0.02634381502866745}, {'value': ['get'], 'probability': 0.01900574378669262}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.65028083]",0.5530427397797693,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1192,1192,"public btVector3 getLocalCenter() {long cPtr = CollisionJNI.btConvexPolyhedron_localCenter_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btConvexPolyhedron_localCenter_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getLocalCenter,"[{'value': ['get'], 'probability': 0.13544820249080658}, {'value': ['clone'], 'probability': 0.0816018208861351}, {'value': ['build'], 'probability': 0.03266512602567673}, {'value': ['create'], 'probability': 0.022290237247943878}, {'value': ['expand'], 'probability': 0.018142491579055786}]","[1.0, 0.166604, 0.5626448, 0.62328804, 0.47652406]",0.1899608265153002,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1193,1193,"public void setExtents(btVector3 value) {CollisionJNI.btConvexPolyhedron_extents_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btConvexPolyhedron_extents_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setExtents,"[{'value': ['set'], 'probability': 0.32756853103637695}, {'value': ['put'], 'probability': 0.07991580665111542}, {'value': ['add'], 'probability': 0.03749588131904602}, {'value': ['apply'], 'probability': 0.024188300594687462}, {'value': ['execute'], 'probability': 0.020261162891983986}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.4293696395780597,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1194,1194,"public btVector3 getExtents() {long cPtr = CollisionJNI.btConvexPolyhedron_extents_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btConvexPolyhedron_extents_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getExtents,"[{'value': ['get'], 'probability': 0.11624831706285477}, {'value': ['clone'], 'probability': 0.08078553527593613}, {'value': ['expand'], 'probability': 0.03549937531352043}, {'value': ['build'], 'probability': 0.029090750962495804}, {'value': ['extend'], 'probability': 0.027579577639698982}]","[1.0, 0.166604, 0.47652406, 0.5626448, 0.5252367]",0.1774773826670787,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1195,1195,"public void setRadius(float value) {CollisionJNI.btConvexPolyhedron_radius_set(swigCPtr, this, value);}
","public void [MASK](float value) {CollisionJNI.btConvexPolyhedron_radius_set(swigCPtr, this, value);}
",setRadius,"[{'value': ['set'], 'probability': 0.5583534240722656}, {'value': ['put'], 'probability': 0.12920837104320526}, {'value': ['add'], 'probability': 0.017892099916934967}, {'value': ['get'], 'probability': 0.015442117117345333}, {'value': ['update'], 'probability': 0.011499007232487202}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.41854778]",0.684956403162026,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
1196,1196,"public float getRadius() {return CollisionJNI.btConvexPolyhedron_radius_get(swigCPtr, this);}
","public float [MASK]() {return CollisionJNI.btConvexPolyhedron_radius_get(swigCPtr, this);}
",getRadius,"[{'value': ['get'], 'probability': 0.076712965965271}, {'value': ['build'], 'probability': 0.029843799769878387}, {'value': ['start'], 'probability': 0.025228634476661682}, {'value': ['run'], 'probability': 0.024807367473840714}, {'value': ['next'], 'probability': 0.02383068948984146}]","[1.0, 0.5626448, 0.7199945, 0.65114945, 0.6966621]",0.144424144389039,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
1197,1197,"public void setMC(btVector3 value) {CollisionJNI.btConvexPolyhedron_mC_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btConvexPolyhedron_mC_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setMC,"[{'value': ['set'], 'probability': 0.3213898241519928}, {'value': ['put'], 'probability': 0.0630766898393631}, {'value': ['add'], 'probability': 0.031288061290979385}, {'value': ['update'], 'probability': 0.030161116272211075}, {'value': ['execute'], 'probability': 0.02823052555322647}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.35167885]",0.4099630749645792,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1198,1198,"public btVector3 getMC() {long cPtr = CollisionJNI.btConvexPolyhedron_mC_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btConvexPolyhedron_mC_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getMC,"[{'value': ['clone'], 'probability': 0.12461353093385696}, {'value': ['get'], 'probability': 0.1208522841334343}, {'value': ['build'], 'probability': 0.026866793632507324}, {'value': ['double'], 'probability': 0.025528371334075928}, {'value': ['update'], 'probability': 0.02327718771994114}]","[0.166604, 1.0, 0.5626448, 0.5437231, 0.36048478]",0.1790012949258996,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1199,1199,"public void setME(btVector3 value) {CollisionJNI.btConvexPolyhedron_mE_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {CollisionJNI.btConvexPolyhedron_mE_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setME,"[{'value': ['set'], 'probability': 0.3514488935470581}, {'value': ['put'], 'probability': 0.06192542240023613}, {'value': ['add'], 'probability': 0.035646919161081314}, {'value': ['update'], 'probability': 0.027825728058815002}, {'value': ['execute'], 'probability': 0.024721799418330193}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.35167885]",0.4391125222191041,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1200,1200,"public btVector3 getME() {long cPtr = CollisionJNI.btConvexPolyhedron_mE_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = CollisionJNI.btConvexPolyhedron_mE_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getME,"[{'value': ['get'], 'probability': 0.13137683272361755}, {'value': ['clone'], 'probability': 0.1256026178598404}, {'value': ['build'], 'probability': 0.028322657570242882}, {'value': ['double'], 'probability': 0.02688138745725155}, {'value': ['update'], 'probability': 0.02469380386173725}]","[1.0, 0.166604, 0.5626448, 0.5437231, 0.36048478]",0.1917560982822883,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1201,1201,"public void initialize() {CollisionJNI.btConvexPolyhedron_initialize(swigCPtr, this);}
","public void [MASK]() {CollisionJNI.btConvexPolyhedron_[MASK](swigCPtr, this);}
",initialize,"[{'value': ['run'], 'probability': 0.46006014943122864}, {'value': ['test'], 'probability': 0.11621176451444626}, {'value': ['setup'], 'probability': 0.0442025363445282}, {'value': ['execute'], 'probability': 0.0390070378780365}, {'value': ['start'], 'probability': 0.031388115137815475}]","[-0.23605645, -0.091899745, 0.014491055, 0.21664008, -0.19079572]",-0.1161776844607648,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[-0.20265365, 0.31637356, 0.09013856, 0.40061924, -0.23605645, -0.1701189, 0.50471497, -0.07023217, 0.08861618, 0.09575271]",0.03133242705418539
1202,1202,"public boolean testContainment() {return CollisionJNI.btConvexPolyhedron_testContainment(swigCPtr, this);}
","public boolean [MASK]() {return CollisionJNI.btConvexPolyhedron_[MASK](swigCPtr, this);}
",testContainment,"[{'value': ['run'], 'probability': 0.08106040209531784}, {'value': ['execute'], 'probability': 0.06036917492747307}, {'value': ['matches'], 'probability': 0.0438457727432251}, {'value': ['exists'], 'probability': 0.037600327283144}, {'value': ['is'], 'probability': 0.03755810856819153}]","[0.46093667, 0.17788121, 0.5619834, 0.3582434, 0.47265917]",0.1039651038752523,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.452045, 0.54839444, 0.2447277, 0.5609878, 0.44388127, 0.44489843, 0.5988175, 0.5628906, 0.6041815, 0.48169065]",0.466942458654902
1203,1203,"public void dispose() {if (rayTestCB != null)rayTestCB.dispose();rayTestCB = null;super.dispose();}
","public void [MASK]() {if (rayTestCB != null)rayTestCB.[MASK]();rayTestCB = null;super.[MASK]();}
",dispose,"[{'value': ['run'], 'probability': 0.5355797410011292}, {'value': ['test'], 'probability': 0.05128795653581619}, {'value': ['scan'], 'probability': 0.0314672626554966}, {'value': ['start'], 'probability': 0.027339385822415352}, {'value': ['close'], 'probability': 0.02159739099442959}]","[0.13288948, 0.12328751, 0.18775588, 0.14684053, 0.17637412]",0.0912279916300038,"[{'value': ['dispose'], 'probability': 0.9999738931655884}, {'value': ['hide'], 'probability': 8.574115781811997e-06}, {'value': ['do', 'dispose'], 'probability': 5.788825546915177e-06}, {'value': ['on', 'dispose'], 'probability': 4.1334587876917794e-06}, {'value': ['dispose', 'ui', 'resources'], 'probability': 2.902078676925157e-06}, {'value': ['close', 'window'], 'probability': 1.3401547676039627e-06}, {'value': ['dispose', 'internal'], 'probability': 1.1530423762451392e-06}, {'value': ['clean'], 'probability': 9.844452506513335e-07}, {'value': ['dispose', 'com', 'interfaces'], 'probability': 8.054601039475529e-07}, {'value': ['do', 'close'], 'probability': 4.982886707693979e-07}]","[0.99999994, 0.4591369, 0.72280186, 0.66587484, 0.5923022, 0.107879795, 0.6983693, 0.39792028, 0.40118712, 0.2695895]",0.999988224337123
1204,1204,"public void resize(int width, int height) {hud.getViewport().update(width, height, true);}
","public void [MASK](int width, int height) {hud.getViewport().update(width, height, true);}
",resize,"[{'value': ['update'], 'probability': 0.9761039614677429}, {'value': ['add'], 'probability': 0.002279514679685235}, {'value': ['updated'], 'probability': 0.002242445480078459}, {'value': ['adjust'], 'probability': 0.002012198092415929}, {'value': ['expand'], 'probability': 0.0013852879637852311}]","[0.08713582, 0.18571174, 0.06278022, 0.3951292, 0.13479394]",0.086599541132971,"[{'value': ['update'], 'probability': 0.7596759796142578}, {'value': ['on', 'update'], 'probability': 0.11575012654066086}, {'value': ['paint', 'border'], 'probability': 0.033884063363075256}, {'value': ['redraw'], 'probability': 0.03331982344388962}, {'value': ['size', 'changed'], 'probability': 0.03272594138979912}, {'value': ['on', 'resize'], 'probability': 0.006876051891595125}, {'value': ['set', 'image', 'size'], 'probability': 0.005700730253010988}, {'value': ['set', 'height'], 'probability': 0.004324133507907391}, {'value': ['repaint'], 'probability': 0.004108095075935125}, {'value': ['do', 'repaint'], 'probability': 0.0036350886803120375}]","[0.08713582, -0.11864722, -0.030497814, 0.42811495, -0.043202918, 0.38686702, -0.0023121515, -0.10544546, 0.49847522, 0.25923935]",0.06946014534188866
1205,1205,"public void dispose() {tests[testIndex].dispose();app = null;}
","public void [MASK]() {tests[testIndex].[MASK]();app = null;}
",dispose,"[{'value': ['test'], 'probability': 0.7964534163475037}, {'value': ['run'], 'probability': 0.08498071879148483}, {'value': ['app'], 'probability': 0.03581267595291138}, {'value': ['update'], 'probability': 0.011544118635356426}, {'value': ['start'], 'probability': 0.005657413974404335}]","[0.12328751, 0.13288948, -0.09028035, -0.0014854032, 0.14684053]",0.1070662083317258,"[{'value': ['run'], 'probability': 0.8693460822105408}, {'value': ['execute'], 'probability': 0.126893550157547}, {'value': ['tear', 'down'], 'probability': 0.0011884154519066215}, {'value': ['dispose'], 'probability': 0.000659098441246897}, {'value': ['next'], 'probability': 0.0005213350523263216}, {'value': ['call'], 'probability': 0.000454402674222365}, {'value': ['clean'], 'probability': 0.00033207039814442396}, {'value': ['run', 'test'], 'probability': 0.00025145141989924014}, {'value': ['remove'], 'probability': 0.000183605428901501}, {'value': ['finish'], 'probability': 0.00016989829600788653}]","[0.13288948, 0.36579466, 0.28730714, 0.99999994, 0.16022362, 0.06259459, 0.39792028, 0.14945792, 0.48666665, 0.15473744]",0.1633418070441919
1206,1206,"public void next() {titleLabel.setText(""Loading..."");loading = 1;}
","public void [MASK]() {titleLabel.setText(""Loading..."");loading = 1;}
",next,"[{'value': ['run'], 'probability': 0.17995725572109222}, {'value': ['load'], 'probability': 0.15703321993350983}, {'value': ['clear'], 'probability': 0.0960516408085823}, {'value': ['test'], 'probability': 0.08417223393917084}, {'value': ['execute'], 'probability': 0.05123081058263779}]","[0.67547876, 0.3184038, 0.61128706, 0.5609878, 0.26023158]",0.2908238726013838,"[{'value': ['loading'], 'probability': 0.6650103330612183}, {'value': ['hide', 'loading'], 'probability': 0.15291546285152435}, {'value': ['get', 'loading'], 'probability': 0.038590073585510254}, {'value': ['show', 'loading'], 'probability': 0.035306427627801895}, {'value': ['set', 'loading'], 'probability': 0.02946992963552475}, {'value': ['on', 'pre', 'execute'], 'probability': 0.02483840100467205}, {'value': ['show', 'wait', 'indicator'], 'probability': 0.022091351449489594}, {'value': ['on', 'start', 'loading'], 'probability': 0.011421083472669125}, {'value': ['load'], 'probability': 0.0111914137378335}, {'value': ['is', 'loading'], 'probability': 0.009165526367723942}]","[0.27343193, 0.38006714, 0.62005204, 0.6193502, 0.65701133, 0.76790565, 0.7540892, 0.79613656, 0.3184038, 0.6439323]",0.3594006832479787
1207,1207,"public boolean keyDown(int keycode) {return tests[testIndex].keyDown(keycode);}
","public boolean [MASK](int keycode) {return tests[testIndex].[MASK](keycode);}
",keyDown,"[{'value': ['matches'], 'probability': 0.17106030881404877}, {'value': ['equals'], 'probability': 0.12434034794569016}, {'value': ['test'], 'probability': 0.10833632946014404}, {'value': ['tests'], 'probability': 0.08616042137145996}, {'value': ['execute'], 'probability': 0.06079574674367905}]","[0.35601643, 0.21110253, 0.49116206, 0.40373605, 0.22337563]",0.1887258940512568,"[{'value': ['key', 'down'], 'probability': 0.972944974899292}, {'value': ['keydown'], 'probability': 0.00855205673724413}, {'value': ['handle', 'key', 'down'], 'probability': 0.00646758358925581}, {'value': ['key'], 'probability': 0.006264592986553907}, {'value': ['on', 'key', 'down'], 'probability': 0.003226224798709154}, {'value': ['is', 'key', 'down'], 'probability': 0.001102516776882112}, {'value': ['on', 'key', 'long', 'press'], 'probability': 0.0008503679418936372}, {'value': ['key', 'code'], 'probability': 0.00026390692801214755}, {'value': ['is', 'modifier'], 'probability': 0.0001916595792863518}, {'value': ['is', 'key', 'pressed'], 'probability': 0.00013620854588225484}]","[0.8832202, 0.0, 0.8359695, 1.0, 0.8415376, 0.8468888, 0.79011285, 0.81470764, 0.5661142, 0.84936494]",0.8757557351111592
1208,1208,"public boolean keyTyped(char character) {return tests[testIndex].keyTyped(character);}
","public boolean [MASK](char character) {return tests[testIndex].[MASK](character);}
",keyTyped,"[{'value': ['equals'], 'probability': 0.15236210823059082}, {'value': ['matches'], 'probability': 0.11689341068267822}, {'value': ['test'], 'probability': 0.049808163195848465}, {'value': ['tests'], 'probability': 0.03514305129647255}, {'value': ['is'], 'probability': 0.03327188268303871}]","[0.21110253, 0.35601643, 0.49116206, 0.40373605, 0.57648766]",0.1316132278392789,"[{'value': ['key', 'typed'], 'probability': 0.9999955892562866}, {'value': ['get', 'restricted'], 'probability': 1.2035370673402213e-06}, {'value': ['set', 'character'], 'probability': 8.57562156397762e-07}, {'value': ['symbol'], 'probability': 7.006752866800525e-07}, {'value': ['on', 'key', 'typed'], 'probability': 6.633429734392848e-07}, {'value': ['process', 'key', 'typed'], 'probability': 3.9383823491334624e-07}, {'value': ['rx'], 'probability': 1.7564471477271582e-07}, {'value': ['stopping'], 'probability': 1.4406752768536535e-07}, {'value': ['read', 'class'], 'probability': 1.4197524933479144e-07}, {'value': ['test', 'missing', 'value'], 'probability': 1.3926266717589897e-07}]","[0.7427608, 0.5426204, 0.5952632, 0.3584011, 0.8034258, 0.7768215, -0.08215505, 0.41995415, 0.3899196, 0.6698379]",0.7427599721370909
1209,1209,"public boolean keyUp(int keycode) {boolean result = tests[testIndex].keyUp(keycode);if ((result == false) && (keycode == Keys.SPACE || keycode == Keys.MENU)) {next();result = true;}return result;}
","public boolean [MASK](int keycode) {boolean result = tests[testIndex].[MASK](keycode);if ((result == false) && (keycode == Keys.SPACE || keycode == Keys.MENU)) {next();result = true;}return result;}
",keyUp,"[{'value': ['next'], 'probability': 0.6042261123657227}, {'value': ['matches'], 'probability': 0.07561405748128891}, {'value': ['equals'], 'probability': 0.025780078023672104}, {'value': ['contains'], 'probability': 0.020051980391144753}, {'value': ['match'], 'probability': 0.016235802322626114}]","[0.64301246, 0.35601643, 0.21110253, 0.39989024, 0.39315984]",0.4352888643722586,"[{'value': ['key', 'up'], 'probability': 0.9605776071548462}, {'value': ['handle', 'key', 'up'], 'probability': 0.016970982775092125}, {'value': ['on', 'key', 'up'], 'probability': 0.012808073312044144}, {'value': ['key'], 'probability': 0.006310510914772749}, {'value': ['key', 'released'], 'probability': 0.0006559199537150562}, {'value': ['release', 'keys'], 'probability': 0.000632751383818686}, {'value': ['handle', 'key'], 'probability': 0.0005512874340638518}, {'value': ['key', 'down'], 'probability': 0.0005373093299567699}, {'value': ['key', 'code'], 'probability': 0.0005139426793903112}, {'value': ['release', 'key'], 'probability': 0.0004416398296598345}]","[0.89777696, 0.83723843, 0.851399, 1.0, 0.7996136, 0.5838813, 0.8672001, 0.8832202, 0.81470764, 0.8428569]",0.8964460200873441
1210,1210,"public boolean touchDown(int x, int y, int pointer, int button) {return tests[testIndex].touchDown(x, y, pointer, button);}
","public boolean [MASK](int x, int y, int pointer, int button) {return tests[testIndex].[MASK](x, y, pointer, button);}
",touchDown,"[{'value': ['matches'], 'probability': 0.08937842398881912}, {'value': ['equals'], 'probability': 0.05910015478730202}, {'value': ['execute'], 'probability': 0.051398154348134995}, {'value': ['tests'], 'probability': 0.043316230177879333}, {'value': ['test'], 'probability': 0.041711870580911636}]","[0.2817338, 0.14792998, 0.21277837, 0.33165824, 0.4283521]",0.0770935762254487,"[{'value': ['touch', 'down'], 'probability': 0.9983763694763184}, {'value': ['is', 'touched'], 'probability': 0.0006592879071831703}, {'value': ['upload'], 'probability': 0.0005984422168694437}, {'value': ['submit'], 'probability': 8.506937592756003e-05}, {'value': ['read'], 'probability': 7.538820500485599e-05}, {'value': ['post'], 'probability': 5.7810688304016367e-05}, {'value': ['use'], 'probability': 4.5498934923671186e-05}, {'value': ['call'], 'probability': 4.23356395913288e-05}, {'value': ['refresh'], 'probability': 3.0277045880211517e-05}, {'value': ['allocate', 'direct'], 'probability': 2.95136051136069e-05}]","[0.8479191, 0.6149044, 0.26284423, 0.2128286, 0.50986487, 0.42953643, 0.55088836, 0.55319244, 0.2881595, 0.34980932]",0.8472539969184534
1211,1211,"public boolean touchDragged(int x, int y, int pointer) {return tests[testIndex].touchDragged(x, y, pointer);}
","public boolean [MASK](int x, int y, int pointer) {return tests[testIndex].[MASK](x, y, pointer);}
",touchDragged,"[{'value': ['tests'], 'probability': 0.11985471099615097}, {'value': ['test'], 'probability': 0.07807191461324692}, {'value': ['evaluate'], 'probability': 0.07531797885894775}, {'value': ['matches'], 'probability': 0.052327897399663925}, {'value': ['equals'], 'probability': 0.04479911923408508}]","[0.33165824, 0.4283521, 0.23648123, 0.2817338, 0.14792998]",0.1123740300573366,"[{'value': ['touch', 'dragged'], 'probability': 0.9999573230743408}, {'value': ['get', 'blocks'], 'probability': 2.0869407308055088e-05}, {'value': ['create', 'callable'], 'probability': 7.827715307939798e-06}, {'value': ['change', 'state'], 'probability': 5.554144536290551e-06}, {'value': ['on', 'pointer', 'drag'], 'probability': 2.9554830689448863e-06}, {'value': ['drag'], 'probability': 1.541121605441731e-06}, {'value': ['do', 'move'], 'probability': 1.5375162547570653e-06}, {'value': ['clear', 'notifications'], 'probability': 1.1622727242865949e-06}, {'value': ['on', 'start', 'command'], 'probability': 6.191189640958328e-07}, {'value': ['update', 'mouse'], 'probability': 6.19002094026655e-07}]","[0.79102063, 0.5984785, 0.347102, 0.44750223, 0.52301216, 0.36695853, 0.62032133, 0.47729617, 0.49839625, 0.5154138]",0.7910088114632067
1212,1212,"public boolean touchUp(int x, int y, int pointer, int button) {return tests[testIndex].touchUp(x, y, pointer, button);}
","public boolean [MASK](int x, int y, int pointer, int button) {return tests[testIndex].[MASK](x, y, pointer, button);}
",touchUp,"[{'value': ['matches'], 'probability': 0.08937842398881912}, {'value': ['equals'], 'probability': 0.05910015478730202}, {'value': ['execute'], 'probability': 0.051398154348134995}, {'value': ['tests'], 'probability': 0.043316230177879333}, {'value': ['test'], 'probability': 0.041711870580911636}]","[0.2817338, 0.14792998, 0.21277837, 0.33165824, 0.4283521]",0.0770935762254487,"[{'value': ['touch', 'up'], 'probability': 0.9999961853027344}, {'value': ['pointer'], 'probability': 1.0726969321694924e-06}, {'value': ['process', 'next', 'event'], 'probability': 6.888936354698671e-07}, {'value': ['ended'], 'probability': 6.295868502093072e-07}, {'value': ['get', 'next', 'entry'], 'probability': 5.512867460311099e-07}, {'value': ['drag'], 'probability': 4.055756335219485e-07}, {'value': ['mouse', 'down'], 'probability': 1.9323657340919453e-07}, {'value': ['touch', 'down'], 'probability': 1.8017198044617544e-07}, {'value': ['tap'], 'probability': 8.571370813115209e-08}, {'value': ['play', 'video'], 'probability': 8.241828197697032e-08}]","[0.8641351, 0.22612654, 0.48348936, 0.29265872, 0.5762789, 0.36695853, 0.6473024, 0.8479191, 0.49483702, 0.60655504]",0.8641334002619266
1213,1213,"public boolean mouseMoved(int x, int y) {return tests[testIndex].mouseMoved(x, y);}
","public boolean [MASK](int x, int y) {return tests[testIndex].[MASK](x, y);}
",mouseMoved,"[{'value': ['tests'], 'probability': 0.20476840436458588}, {'value': ['test'], 'probability': 0.13893575966358185}, {'value': ['equals'], 'probability': 0.09525594115257263}, {'value': ['evaluate'], 'probability': 0.07217632979154587}, {'value': ['matches'], 'probability': 0.06378626078367233}]","[0.24331082, 0.2605848, -0.02369154, 0.06686715, 0.09527807]",0.0946738138284493,"[{'value': ['mouse', 'moved'], 'probability': 0.9983752965927124}, {'value': ['set', 'mouse', 'position'], 'probability': 0.0007301180739887059}, {'value': ['mouse', 'drag'], 'probability': 0.0002888161689043045}, {'value': ['mouse', 'dragged'], 'probability': 0.00017311156261712313}, {'value': ['get', 'data', 'at'], 'probability': 0.00014597681001760066}, {'value': ['is', 'activated'], 'probability': 8.643876208225265e-05}, {'value': ['classify'], 'probability': 5.4882970289327204e-05}, {'value': ['set', 'mouse', 'pos'], 'probability': 5.192192838876508e-05}, {'value': ['mouse', 'exited'], 'probability': 5.0395727157592773e-05}, {'value': ['handle', 'mouse', 'moved'], 'probability': 4.2901840060949326e-05}]","[0.7916642, 0.63633704, 0.8480189, 0.8096148, 0.33780134, 0.37356323, 0.09592599, 0.65370816, 0.8131441, 0.69725335]",0.7914193573405176
1214,1214,"public boolean scrolled(int amount) {return tests[testIndex].scrolled(amount);}
","public boolean [MASK](int amount) {return tests[testIndex].[MASK](amount);}
",scrolled,"[{'value': ['equals'], 'probability': 0.28658953309059143}, {'value': ['test'], 'probability': 0.09198372066020966}, {'value': ['tests'], 'probability': 0.0760296881198883}, {'value': ['is'], 'probability': 0.021907178685069084}, {'value': ['evaluate'], 'probability': 0.02157679758965969}]","[0.015544081, -0.111615404, -0.10995595, -0.13805602, -0.039499186]",-0.0180486298929313,"[{'value': ['scrolled'], 'probability': 0.9986791014671326}, {'value': ['amount'], 'probability': 0.0005825723637826741}, {'value': ['request', 'rectangle', 'on', 'screen'], 'probability': 0.0002621338062454015}, {'value': ['top'], 'probability': 0.00016147963469848037}, {'value': ['scale'], 'probability': 9.738696098793298e-05}, {'value': ['scroll'], 'probability': 5.929517647018656e-05}, {'value': ['answer'], 'probability': 4.576464925776236e-05}, {'value': ['chop'], 'probability': 3.795650991378352e-05}, {'value': ['create', 'image', 'icon'], 'probability': 3.757847298402339e-05}, {'value': ['get', 'amount'], 'probability': 3.670712612802163e-05}]","[1.0, -0.06333743, 0.1248125, -0.0592089, -0.055413567, 0.35617834, -0.024561249, 0.12043506, 0.037773725, -0.058673378]",0.998683795479029
1215,1215,"public boolean touchDown(float x, float y, int pointer, int button) {return tests[testIndex].touchDown(x, y, pointer, button);}
","public boolean [MASK](float x, float y, int pointer, int button) {return tests[testIndex].[MASK](x, y, pointer, button);}
",touchDown,"[{'value': ['matches'], 'probability': 0.0701039731502533}, {'value': ['test'], 'probability': 0.059571243822574615}, {'value': ['evaluate'], 'probability': 0.05770055577158928}, {'value': ['tests'], 'probability': 0.05159696191549301}, {'value': ['equals'], 'probability': 0.04981609433889389}]","[0.2817338, 0.4283521, 0.23648123, 0.33165824, 0.14792998]",0.0833950765296573,"[{'value': ['touch', 'down'], 'probability': 0.9983855485916138}, {'value': ['is', 'touched'], 'probability': 0.0006572787533514202}, {'value': ['upload'], 'probability': 0.0005963704315945506}, {'value': ['submit'], 'probability': 8.293498831335455e-05}, {'value': ['read'], 'probability': 7.513854507124051e-05}, {'value': ['post'], 'probability': 5.7125820603687316e-05}, {'value': ['use'], 'probability': 4.524586984189227e-05}, {'value': ['call'], 'probability': 4.158910087426193e-05}, {'value': ['refresh'], 'probability': 2.9924665795988403e-05}, {'value': ['allocate', 'direct'], 'probability': 2.8898593882331625e-05}]","[0.8479191, 0.6149044, 0.26284423, 0.2128286, 0.50986487, 0.42953643, 0.55088836, 0.55319244, 0.2881595, 0.34980932]",0.8472582552756007
1216,1216,"public boolean tap(float x, float y, int count, int button) {return tests[testIndex].tap(x, y, count, button);}
","public boolean [MASK](float x, float y, int count, int button) {return tests[testIndex].[MASK](x, y, count, button);}
",tap,"[{'value': ['tests'], 'probability': 0.14011387526988983}, {'value': ['test'], 'probability': 0.11417704075574875}, {'value': ['evaluate'], 'probability': 0.06056816875934601}, {'value': ['matches'], 'probability': 0.058032650500535965}, {'value': ['execute'], 'probability': 0.04242541640996933}]","[0.23300529, 0.26546603, 0.28537676, 0.16894855, 0.13821533]",0.0959105222999841,"[{'value': ['tap'], 'probability': 0.9997854828834534}, {'value': ['mouse', 'click'], 'probability': 0.00014952951460145414}, {'value': ['run', 'flow'], 'probability': 2.7697187761077657e-05}, {'value': ['find', 'button'], 'probability': 2.3261529349838383e-05}, {'value': ['source', 'init'], 'probability': 3.0546898415195756e-06}, {'value': ['get', 'fail', 'count'], 'probability': 2.356466438868665e-06}, {'value': ['get', 'entry'], 'probability': 2.353751142436522e-06}, {'value': ['at'], 'probability': 2.3506063371314667e-06}, {'value': ['calculate', 'minimum', 'size'], 'probability': 1.991105591514497e-06}, {'value': ['one', 'result'], 'probability': 1.9035734339922783e-06}]","[0.99999994, 0.33729276, 0.54264396, 0.49438366, 0.28771588, 0.39154682, 0.46004546, 0.2850047, 0.27772895, 0.33476165]",0.999867132497817
1217,1217,"public boolean longPress(float x, float y) {return tests[testIndex].longPress(x, y);}
","public boolean [MASK](float x, float y) {return tests[testIndex].[MASK](x, y);}
",longPress,"[{'value': ['tests'], 'probability': 0.22544343769550323}, {'value': ['test'], 'probability': 0.15429958701133728}, {'value': ['evaluate'], 'probability': 0.09063255041837692}, {'value': ['equals'], 'probability': 0.06486501544713974}, {'value': ['matches'], 'probability': 0.05686284974217415}]","[0.40962365, 0.44699913, 0.21023844, 0.1916152, 0.35412797]",0.2129390404239604,"[{'value': ['long', 'press'], 'probability': 0.45141154527664185}, {'value': ['on', 'long', 'press'], 'probability': 0.38479307293891907}, {'value': ['get', 'binding'], 'probability': 0.1296306550502777}, {'value': ['bind', 'key'], 'probability': 0.013813824392855167}, {'value': ['has', 'edge'], 'probability': 0.01203425507992506}, {'value': ['has', 'binding'], 'probability': 0.0028910208493471146}, {'value': ['test', 'partial'], 'probability': 0.0018558127339929342}, {'value': ['on', 'scroll', 'changed'], 'probability': 0.0015501106390729547}, {'value': ['set', 'new', 'name'], 'probability': 0.00113051722291857}, {'value': ['get', 'time', 'position'], 'probability': 0.0008891583420336246}]","[0.84425265, 0.8266283, 0.5652614, 0.49055958, 0.73877543, 0.6060572, 0.53242517, 0.63811815, 0.6944981, 0.7331749]",0.7932949682826863
1218,1218,"public boolean fling(float velocityX, float velocityY, int button) {if (tests[testIndex].fling(velocityX, velocityY, button) == false)next();return true;}
","public boolean [MASK](float velocityX, float velocityY, int button) {if (tests[testIndex].[MASK](velocityX, velocityY, button) == false)next();return true;}
",fling,"[{'value': ['next'], 'probability': 0.1911388337612152}, {'value': ['matches'], 'probability': 0.08482608199119568}, {'value': ['equals'], 'probability': 0.05865541473031044}, {'value': ['count'], 'probability': 0.019632643088698387}, {'value': ['start'], 'probability': 0.01890741102397442}]","[0.16913222, 0.10470811, 0.0006822342, -0.011636868, 0.19245602]",0.0446601131751564,"[{'value': ['fling'], 'probability': 0.9999097585678101}, {'value': ['on', 'fling'], 'probability': 5.9077152400277555e-05}, {'value': ['check', 'equal'], 'probability': 1.7745758668752387e-05}, {'value': ['do', 'fling'], 'probability': 5.209422397456365e-06}, {'value': ['check', 'files'], 'probability': 3.4307556688872864e-06}, {'value': ['get', 'velocity', 'x'], 'probability': 1.4339896097226301e-06}, {'value': ['on', 'size', 'changed'], 'probability': 8.575106562602741e-07}, {'value': ['handle', 'data', 'changed'], 'probability': 8.343743616023858e-07}, {'value': ['check', 'exists'], 'probability': 8.290213600048446e-07}, {'value': ['expect', 'error'], 'probability': 8.118724963424029e-07}]","[1.0, 0.5480093, 0.022024306, 0.6065893, 0.007924191, 0.046806406, 0.002455013, -0.044335384, -0.0051298076, 0.043813273]",0.9999457749514739
1219,1219,"public boolean pan(float x, float y, float deltaX, float deltaY) {return tests[testIndex].pan(x, y, deltaX, deltaY);}
","public boolean [MASK](float x, float y, float deltaX, float deltaY) {return tests[testIndex].[MASK](x, y, deltaX, deltaY);}
",pan,"[{'value': ['test'], 'probability': 0.15466006100177765}, {'value': ['tests'], 'probability': 0.14744780957698822}, {'value': ['evaluate'], 'probability': 0.11548393964767456}, {'value': ['execute'], 'probability': 0.05771172419190407}, {'value': ['perform'], 'probability': 0.0426069051027298}]","[0.14728577, 0.0906768, 0.11154929, 0.0777337, 0.092287436]",0.0574497016049937,"[{'value': ['pan'], 'probability': 0.8504218459129333}, {'value': ['dragged'], 'probability': 0.032534994184970856}, {'value': ['scroll'], 'probability': 0.023429160937666893}, {'value': ['post', 'translate'], 'probability': 0.02055971883237362}, {'value': ['pre', 'translate'], 'probability': 0.018686946481466293}, {'value': ['drag'], 'probability': 0.014296644367277622}, {'value': ['translated'], 'probability': 0.013849794864654541}, {'value': ['get', 'pan'], 'probability': 0.011828633025288582}, {'value': ['to', 'radians'], 'probability': 0.00731215113773942}, {'value': ['bounce'], 'probability': 0.00708013353869319}]","[1.0000001, 0.10464764, 0.21191731, 0.22786489, 0.22201727, 0.20876238, 0.17794406, 0.8064611, 0.27783823, 0.09809598]",0.8853398993892692
1220,1220,"public boolean panStop(float x, float y, int pointer, int button) {return tests[testIndex].panStop(x, y, pointer, button);}
","public boolean [MASK](float x, float y, int pointer, int button) {return tests[testIndex].[MASK](x, y, pointer, button);}
",panStop,"[{'value': ['matches'], 'probability': 0.0701039731502533}, {'value': ['test'], 'probability': 0.059571243822574615}, {'value': ['evaluate'], 'probability': 0.05770055577158928}, {'value': ['tests'], 'probability': 0.05159696191549301}, {'value': ['equals'], 'probability': 0.04981609433889389}]","[0.20039599, 0.14728577, 0.11154929, 0.0906768, 0.13009037]",0.0404182490927633,"[{'value': ['touch', 'down'], 'probability': 0.5509021282196045}, {'value': ['touch', 'up'], 'probability': 0.2640919089317322}, {'value': ['tap'], 'probability': 0.10009440779685974}, {'value': ['set', 'button'], 'probability': 0.0289412010461092}, {'value': ['get', 'data', 'as', 'int'], 'probability': 0.019178522750735283}, {'value': ['button'], 'probability': 0.011366713792085648}, {'value': ['get', 'class', 'id'], 'probability': 0.008146457374095917}, {'value': ['create', 'button'], 'probability': 0.007941051386296749}, {'value': ['get', 'save', 'button'], 'probability': 0.005374829284846783}, {'value': ['add', 'button'], 'probability': 0.003962768707424402}]","[0.34350196, 0.36101985, 0.2923074, 0.318067, 0.28371197, 0.17870599, 0.22283773, 0.30948028, 0.28113014, 0.41369015]",0.3379377573293135
1221,1221,"public boolean zoom(float originalDistance, float currentDistance) {return tests[testIndex].zoom(originalDistance, currentDistance);}
","public boolean [MASK](float originalDistance, float currentDistance) {return tests[testIndex].[MASK](originalDistance, currentDistance);}
",zoom,"[{'value': ['test'], 'probability': 0.23434662818908691}, {'value': ['tests'], 'probability': 0.16689912974834442}, {'value': ['matches'], 'probability': 0.05445389822125435}, {'value': ['execute'], 'probability': 0.04798615351319313}, {'value': ['evaluate'], 'probability': 0.0335271880030632}]","[0.0023358844, -0.02478432, -0.0063069277, 0.12008558, 0.13542129]",0.0063702288030908,"[{'value': ['zoom'], 'probability': 0.9966588020324707}, {'value': ['get', 'zoom'], 'probability': 0.0018119252054020762}, {'value': ['get', 'service', 'status'], 'probability': 0.0004099802172277123}, {'value': ['check'], 'probability': 0.0002346097317058593}, {'value': ['get', 'float'], 'probability': 0.00022210919996723533}, {'value': ['test', 'pipe'], 'probability': 0.0001647618628339842}, {'value': ['do', 'lookup'], 'probability': 0.00014643983740825206}, {'value': ['is', 'float'], 'probability': 0.00013599720841739327}, {'value': ['create', 'web', 'driver'], 'probability': 0.00011484354763524607}, {'value': ['exact', 'match'], 'probability': 0.0001005763842840679}]","[1.0, 0.7516389, 0.07645907, 0.1777225, 0.21078148, -0.030011931, 0.16263224, 0.15680343, 0.20472208, 0.043449763]",0.9982086510166841
1222,1222,"private static void check(boolean condition) {if (!condition)throw new GdxRuntimeException("""");}
","private static void [MASK](boolean condition) {if (!condition)throw new GdxRuntimeException("""");}
",check,"[{'value': ['run'], 'probability': 0.1363607943058014}, {'value': ['execute'], 'probability': 0.06025635823607445}, {'value': ['apply'], 'probability': 0.05366942286491394}, {'value': ['set'], 'probability': 0.053161751478910446}, {'value': ['accept'], 'probability': 0.04607721045613289}]","[0.45308027, 0.27193576, 0.5622735, 0.53695804, 0.44762778]",0.157516207416013,"[{'value': ['assert'], 'probability': 0.37519675493240356}, {'value': ['ensure'], 'probability': 0.23034746944904327}, {'value': ['check', 'type'], 'probability': 0.15539930760860443}, {'value': ['assert', 'true'], 'probability': 0.1392512321472168}, {'value': ['check', 'state'], 'probability': 0.03385470435023308}, {'value': ['check', 'float'], 'probability': 0.02713565155863762}, {'value': ['invariant'], 'probability': 0.01157095655798912}, {'value': ['require'], 'probability': 0.010783609934151173}, {'value': ['check', 'int'], 'probability': 0.010286005213856697}, {'value': ['assume', 'true'], 'probability': 0.006174307782202959}]","[0.1096351, 0.5627983, 0.8341612, 0.28403828, 0.78229314, 0.82956374, 0.006610946, 0.5819143, 0.65526503, 0.4188281]",0.40462737181463865
1223,1223,"private static void check(boolean condition, String msg) {if (!condition)throw new GdxRuntimeException(msg);}
","private static void [MASK](boolean condition, String msg) {if (!condition)throw new GdxRuntimeException(msg);}
",check,"[{'value': ['run'], 'probability': 0.1580842286348343}, {'value': ['execute'], 'probability': 0.07622046768665314}, {'value': ['update'], 'probability': 0.05951843038201332}, {'value': ['apply'], 'probability': 0.057113341987133026}, {'value': ['set'], 'probability': 0.030845263972878456}]","[0.45308027, 0.27193576, 0.44275245, 0.5622735, 0.53695804]",0.1673797775484891,"[{'value': ['assert'], 'probability': 0.4923558831214905}, {'value': ['assert', 'true'], 'probability': 0.23461973667144775}, {'value': ['check', 'type'], 'probability': 0.17996950447559357}, {'value': ['check', 'state'], 'probability': 0.03661689907312393}, {'value': ['require'], 'probability': 0.02173633687198162}, {'value': ['ensure'], 'probability': 0.01649037003517151}, {'value': ['print', 'log'], 'probability': 0.005381424445658922}, {'value': ['invariant'], 'probability': 0.005221887491643429}, {'value': ['check', 'float'], 'probability': 0.0044021038338541985}, {'value': ['validate', 'location'], 'probability': 0.003205798100680113}]","[0.1096351, 0.28403828, 0.8341612, 0.78229314, 0.5819143, 0.5627983, 0.57427967, 0.006610946, 0.82956374, 0.51238376]",0.3297380260630724
1224,1224,"private static void checkEqual(Matrix3 matrix, Affine2 affine) {checkEqual(matrix, new Matrix3().set(affine));}
","private static void [MASK](Matrix3 matrix, Affine2 affine) {[MASK](matrix, new Matrix3().set(affine));}
",checkEqual,"[{'value': ['set'], 'probability': 0.17355701327323914}, {'value': ['apply'], 'probability': 0.09498845040798187}, {'value': ['add'], 'probability': 0.08278611302375793}, {'value': ['fill'], 'probability': 0.044056400656700134}, {'value': ['update'], 'probability': 0.03492584452033043}]","[0.53695804, 0.5622735, 0.48442864, 0.5438802, 0.44275245]",0.2261311949732652,"[{'value': ['invert'], 'probability': 0.5231581926345825}, {'value': ['set'], 'probability': 0.37035468220710754}, {'value': ['set', 'transform'], 'probability': 0.029836684465408325}, {'value': ['transpose'], 'probability': 0.019088884815573692}, {'value': ['affine'], 'probability': 0.015376810915768147}, {'value': ['test', 'inverse'], 'probability': 0.012355685234069824}, {'value': ['project'], 'probability': 0.009440711699426174}, {'value': ['set', 'matrix'], 'probability': 0.008296876214444637}, {'value': ['decompose'], 'probability': 0.007036163937300444}, {'value': ['div'], 'probability': 0.0050553507171571255}]","[0.07689209, 0.53695804, 0.45128703, 0.053529985, 0.07592047, 0.37334204, 0.33274454, 0.44162986, 0.04765197, -0.07760291]",0.26610716967189846
1225,1225,"private static void checkEqual(Affine2 a, Affine2 b) {checkEqual(new Matrix3().set(a), new Matrix3().set(b));}
","private static void [MASK](Affine2 a, Affine2 b) {[MASK](new Matrix3().set(a), new Matrix3().set(b));}
",checkEqual,"[{'value': ['run'], 'probability': 0.07420843839645386}, {'value': ['apply'], 'probability': 0.06310469657182693}, {'value': ['add'], 'probability': 0.06112922728061676}, {'value': ['perform'], 'probability': 0.0472390353679657}, {'value': ['update'], 'probability': 0.043394144624471664}]","[0.45308027, 0.5622735, 0.48442864, 0.42218876, 0.44275245]",0.1378738800985971,"[{'value': ['set'], 'probability': 0.8680057525634766}, {'value': ['invert'], 'probability': 0.10551073402166367}, {'value': ['div'], 'probability': 0.008712276816368103}, {'value': ['divide'], 'probability': 0.0044413418509066105}, {'value': ['decompose'], 'probability': 0.003948824945837259}, {'value': ['fill'], 'probability': 0.0031166360713541508}, {'value': ['set', 'transform'], 'probability': 0.001887985854409635}, {'value': ['test', 'inverse'], 'probability': 0.0017431898741051555}, {'value': ['add'], 'probability': 0.001382658607326448}, {'value': ['index'], 'probability': 0.0012506440980359912}]","[0.53695804, 0.07689209, -0.07760291, 0.21251358, 0.04765197, 0.5438802, 0.45128703, 0.37334204, 0.48442864, 0.3661119]",0.4789771065306147
1226,1226,"private static void checkEqual(Matrix3 a, Matrix3 b) {for (int i = 0; i < 9; i++) check(MathUtils.isEqual(a.val[i], b.val[i], TOLERANCE), ""matrices are not equal"");}
","private static void [MASK](Matrix3 a, Matrix3 b) {for (int i = 0; i < 9; i++) check(MathUtils.isEqual(a.val[i], b.val[i], TOLERANCE), ""matrices are not equal"");}
",checkEqual,"[{'value': ['check'], 'probability': 0.2636421322822571}, {'value': ['evaluate'], 'probability': 0.07408330589532852}, {'value': ['perform'], 'probability': 0.05939491093158722}, {'value': ['verify'], 'probability': 0.056245554238557816}, {'value': ['test'], 'probability': 0.04852352291345596}]","[1.0, 0.4817207, 0.42218876, 0.5701169, 0.45448598]",0.3785252576966347,"[{'value': ['is', 'equal'], 'probability': 0.37224647402763367}, {'value': ['test', 'inverse'], 'probability': 0.16054950654506683}, {'value': ['assert', 'equals'], 'probability': 0.11893128603696823}, {'value': ['assert', 'equal'], 'probability': 0.0983080342411995}, {'value': ['eq'], 'probability': 0.07667388021945953}, {'value': ['equals', 'exact'], 'probability': 0.07615537196397781}, {'value': ['same'], 'probability': 0.06849727034568787}, {'value': ['equal'], 'probability': 0.010348347947001457}, {'value': ['is', 'straight'], 'probability': 0.009171905927360058}, {'value': ['is', 'same'], 'probability': 0.009117868728935719}]","[0.42168584, 0.37334204, 0.16198349, 0.27863723, 0.0633129, 0.3933497, 0.53975487, 0.32147944, 0.43482476, 0.49666935]",0.34719352302075607
1227,1227,"private static void checkEqual(Matrix3 matrix, float[] vals) {for (int i = 0; i < 9; i++) check(MathUtils.isEqual(matrix.val[i], vals[i], TOLERANCE), ""matrices are not equal"");}
","private static void [MASK](Matrix3 matrix, float[] vals) {for (int i = 0; i < 9; i++) check(MathUtils.isEqual(matrix.val[i], vals[i], TOLERANCE), ""matrices are not equal"");}
",checkEqual,"[{'value': ['check'], 'probability': 0.17027714848518372}, {'value': ['perform'], 'probability': 0.06083161011338234}, {'value': ['write'], 'probability': 0.05279615893959999}, {'value': ['update'], 'probability': 0.04796762764453888}, {'value': ['compare'], 'probability': 0.042875390499830246}]","[1.0, 0.42218876, 0.55229974, 0.44275245, 0.5050978]",0.2680129255902874,"[{'value': ['same'], 'probability': 0.18771639466285706}, {'value': ['is', 'equal'], 'probability': 0.11644909530878067}, {'value': ['assert', 'equal'], 'probability': 0.11332375556230545}, {'value': ['is', 'identical'], 'probability': 0.1101311519742012}, {'value': ['check'], 'probability': 0.10295116156339645}, {'value': ['eq'], 'probability': 0.10181892663240433}, {'value': ['randomize'], 'probability': 0.07763465493917465}, {'value': ['equals', 'exact'], 'probability': 0.07462421804666519}, {'value': ['assert', 'equals'], 'probability': 0.06337352842092514}, {'value': ['is', 'solved'], 'probability': 0.051977045834064484}]","[0.53975487, 0.42168584, 0.27863723, 0.41427907, 1.0, 0.0633129, -0.115842655, 0.3933497, 0.16198349, 0.41419888]",0.3891789431256435
1228,1228,"private static void checkEqual(float a, float b) {check(MathUtils.isEqual(a, b, TOLERANCE));}public void add(float value) {float[] items = this.items;if (size == items.length)items = resize(Math.max(8, (int) (size * 1.75f)));items[size++] = value;}
","private static void [MASK](float a, float b) {check(MathUtils.isEqual(a, b, TOLERANCE));}public void add(float value) {float[] items = this.items;if (size == items.length)items = resize(Math.max(8, (int) (size * 1.75f)));items[size++] = value;}
",checkEqual,"[{'value': ['add'], 'probability': 0.6823413968086243}, {'value': ['update'], 'probability': 0.10672495514154434}, {'value': ['fill'], 'probability': 0.01795802265405655}, {'value': ['set'], 'probability': 0.011092204600572586}, {'value': ['put'], 'probability': 0.010279943235218525}]","[0.48442864, 0.44275245, 0.5438802, 0.53695804, 0.61712337]",0.3998655081459554,"[{'value': ['check'], 'probability': 0.6584683060646057}, {'value': ['assert', 'equals'], 'probability': 0.0903463140130043}, {'value': ['equal'], 'probability': 0.08670119941234589}, {'value': ['eq'], 'probability': 0.07603338360786438}, {'value': ['assert', 'equal'], 'probability': 0.019927550107240677}, {'value': ['is', 'equal'], 'probability': 0.01468618679791689}, {'value': ['intersect'], 'probability': 0.01434854045510292}, {'value': ['assert', 'not', 'equals'], 'probability': 0.014107548631727695}, {'value': ['equals'], 'probability': 0.013335363008081913}, {'value': ['compare'], 'probability': 0.012045612558722496}]","[1.0, 0.16198349, 0.32147944, 0.0633129, 0.27863723, 0.42168584, 0.019797776, 0.4216214, 0.12188985, 0.5050978]",0.731476750137696
1229,1229,"public void addAll(FloatArray array) {addAll(array, 0, array.size);}
","public void [MASK](FloatArray array) {[MASK](array, 0, array.size);}
",addAll,"[{'value': ['array'], 'probability': 0.047156304121017456}, {'value': ['add'], 'probability': 0.03836574777960777}, {'value': ['execute'], 'probability': 0.036635324358940125}, {'value': ['fill'], 'probability': 0.035565175116062164}, {'value': ['update'], 'probability': 0.03492768108844757}]","[0.41265363, 1.0, 0.24202506, 0.6158088, 0.5117927]",0.10646871444335,"[{'value': ['add', 'all'], 'probability': 0.995940089225769}, {'value': ['prepend'], 'probability': 0.0025336656253784895}, {'value': ['concat'], 'probability': 0.0005140870343893766}, {'value': ['add', 'array'], 'probability': 0.0003192105796188116}, {'value': ['add', 'types'], 'probability': 0.00023066284484229982}, {'value': ['float', 'array'], 'probability': 0.0001551541790831834}, {'value': ['add', 'layers'], 'probability': 0.00011553370859473944}, {'value': ['add', 'exceptions'], 'probability': 6.80102821206674e-05}, {'value': ['add'], 'probability': 6.405336898751557e-05}, {'value': ['append'], 'probability': 5.959019472356886e-05}]","[0.8761935, 0.0, 0.0, 0.8697127, 0.86094534, 0.4758184, 0.85652006, 0.8540601, 1.0, 0.105477236]",0.8734136479641167
1230,1230,"public void addAll(FloatArray array, int offset, int length) {if (offset + length > array.size)throw new IllegalArgumentException(""offset + length must be <= size: "" + offset + "" + "" + length + "" <= "" + array.size);addAll(array.items, offset, length);}
","public void [MASK](FloatArray array, int offset, int length) {if (offset + length > array.size)throw new IllegalArgumentException(""offset + length must be <= size: "" + offset + "" + "" + length + "" <= "" + array.size);[MASK](array.items, offset, length);}
",addAll,"[{'value': ['array'], 'probability': 0.12392700463533401}, {'value': ['add'], 'probability': 0.09998561441898346}, {'value': ['evaluate'], 'probability': 0.05575880408287048}, {'value': ['read'], 'probability': 0.040864840149879456}, {'value': ['update'], 'probability': 0.02928237058222294}]","[0.41265363, 1.0, 0.33404627, 0.36516917, 0.5117927]",0.1996596466167802,"[{'value': ['add', 'all'], 'probability': 0.9944977164268494}, {'value': ['add', 'range'], 'probability': 0.0011106135789304972}, {'value': ['append'], 'probability': 0.0010112154996022582}, {'value': ['concat'], 'probability': 0.0009900137083604932}, {'value': ['add'], 'probability': 0.0009258468635380268}, {'value': ['set'], 'probability': 0.0007537418277934194}, {'value': ['add', 'contents'], 'probability': 0.00023989425972104073}, {'value': ['to', 'list'], 'probability': 0.00019407321815378964}, {'value': ['write', 'bytes'], 'probability': 0.00014111670316196978}, {'value': ['add', 'values'], 'probability': 0.0001357482688035816}]","[0.8761935, 0.83414394, 0.105477236, 0.0, 1.0, 0.5084879, 0.8711507, 0.5584956, 0.42776152, 0.8206819]",0.8742037656964926
1231,1231,"public void addAll(float... array) {addAll(array, 0, array.length);}
","public void [MASK](float... array) {[MASK](array, 0, array.length);}
",addAll,"[{'value': ['array'], 'probability': 0.08004002273082733}, {'value': ['evaluate'], 'probability': 0.06614145636558533}, {'value': ['fill'], 'probability': 0.05732249468564987}, {'value': ['add'], 'probability': 0.04811250790953636}, {'value': ['search'], 'probability': 0.029188169166445732}]","[0.41265363, 0.33404627, 0.6158088, 1.0, 0.35030815]",0.1487601698667613,"[{'value': ['add', 'all'], 'probability': 0.9672132730484009}, {'value': ['add', 'values'], 'probability': 0.011329596862196922}, {'value': ['add', 'objects', 'from', 'array'], 'probability': 0.007821974344551563}, {'value': ['append'], 'probability': 0.003468557959422469}, {'value': ['test', 'add', 'all', 'self'], 'probability': 0.002890878589823842}, {'value': ['concat'], 'probability': 0.0019213963532820344}, {'value': ['add', 'results'], 'probability': 0.0016701278509572148}, {'value': ['add', 'dependencies'], 'probability': 0.001631706953048706}, {'value': ['add', 'elements'], 'probability': 0.0012434296077117324}, {'value': ['set'], 'probability': 0.0008090086048468947}]","[0.8761935, 0.8206819, 0.71029466, 0.105477236, 0.6978261, 0.0, 0.81491673, 0.6931898, 0.8535628, 0.5084879]",0.8686678831713519
1232,1232,"public void addAll(float[] array, int offset, int length) {float[] items = this.items;int sizeNeeded = size + length;if (sizeNeeded > items.length)items = resize(Math.max(8, (int) (sizeNeeded * 1.75f)));System.arraycopy(array, offset, items, size, length);size += length;}
","public void [MASK](float[] array, int offset, int length) {float[] items = this.items;int sizeNeeded = size + length;if (sizeNeeded > items.length)items = resize(Math.max(8, (int) (sizeNeeded * 1.75f)));System.arraycopy(array, offset, items, size, length);size += length;}
",addAll,"[{'value': ['array'], 'probability': 0.22279316186904907}, {'value': ['search'], 'probability': 0.062257882207632065}, {'value': ['evaluate'], 'probability': 0.049429599195718765}, {'value': ['process'], 'probability': 0.04385722801089287}, {'value': ['scan'], 'probability': 0.04036196693778038}]","[0.41265363, 0.35030815, 0.33404627, 0.44585663, 0.25275394]",0.1600133050892683,"[{'value': ['add', 'all'], 'probability': 0.9974512457847595}, {'value': ['drain', 'to'], 'probability': 0.0011709019308909774}, {'value': ['ensure', 'capacity'], 'probability': 0.0009218640625476837}, {'value': ['concat'], 'probability': 0.00026562699349597096}, {'value': ['add', 'quoted'], 'probability': 4.8158388381125405e-05}, {'value': ['retain', 'all'], 'probability': 4.341082967584953e-05}, {'value': ['put', 'sub', 'buffer'], 'probability': 3.7715766666224226e-05}, {'value': ['add', 'all', 'absent'], 'probability': 2.4997161744977348e-05}, {'value': ['bounds', 'check'], 'probability': 1.972063364519272e-05}, {'value': ['skip', 'bytes'], 'probability': 1.6366013369406573e-05}]","[0.8761935, 0.6748535, 0.49794227, 0.0, 0.73589224, 0.6189039, 0.45684004, 0.7972124, 0.35716575, 0.3712724]",0.8753221048933815
1233,1233,"public float get(int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);return items[index];}
","public float [MASK](int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);return items[index];}
",get,"[{'value': ['item'], 'probability': 0.14202402532100677}, {'value': ['add'], 'probability': 0.07978466153144836}, {'value': ['items'], 'probability': 0.07936757802963257}, {'value': ['evaluate'], 'probability': 0.05189420282840729}, {'value': ['count'], 'probability': 0.03997762128710747}]","[0.3522904, 0.54842544, 0.40574458, 0.40115592, 0.4437648]",0.1645509301001473,"[{'value': ['get'], 'probability': 0.9944782257080078}, {'value': ['get', 'card'], 'probability': 0.001669450313784182}, {'value': ['peek'], 'probability': 0.0007996074273250997}, {'value': ['check', 'index'], 'probability': 0.0004964733379893005}, {'value': ['get', 'size'], 'probability': 0.0004958913195878267}, {'value': ['at'], 'probability': 0.0004756281850859523}, {'value': ['get', 'list'], 'probability': 0.000475466251373291}, {'value': ['get', 'double'], 'probability': 0.0004227041790727526}, {'value': ['get', 'depth'], 'probability': 0.00035518285585567355}, {'value': ['get', 'boolean'], 'probability': 0.00033128951326943934}]","[1.0, 0.8599779, 0.32689062, 0.49942204, 0.83762157, 0.5592328, 0.86849356, 0.8848232, 0.8296087, 0.65116465]",0.9984019507742776
1234,1234,"public void set(int index, float value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] = value;}
","public void [MASK](int index, float value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] = value;}
",set,"[{'value': ['evaluate'], 'probability': 0.1531534492969513}, {'value': ['put'], 'probability': 0.10725923627614975}, {'value': ['add'], 'probability': 0.08404562622308731}, {'value': ['weigh'], 'probability': 0.0383492112159729}, {'value': ['compare'], 'probability': 0.037103913724422455}]","[0.31490386, 0.7944568, 0.5084879, 0.29325742, 0.27144608]",0.1974955238895177,"[{'value': ['set'], 'probability': 0.978648841381073}, {'value': ['set', 'item'], 'probability': 0.011377627030014992}, {'value': ['check', 'index'], 'probability': 0.004929945804178715}, {'value': ['check', 'bound', 'exclusive'], 'probability': 0.0018565566278994083}, {'value': ['range', 'check'], 'probability': 0.0012480615405365825}, {'value': ['set', 'element', 'at'], 'probability': 0.0005210862727835774}, {'value': ['assign'], 'probability': 0.00040848960634320974}, {'value': ['at'], 'probability': 0.00035717894206754863}, {'value': ['set', 'top'], 'probability': 0.0003265069390181452}, {'value': ['set', 'element'], 'probability': 0.0003256840573158115}]","[1.0, 0.83644855, 0.5014283, 0.6194909, 0.621476, 0.87148684, 0.17613421, 0.6249999, 0.8966336, 0.86911386]",0.9938885348335035
1235,1235,"public void incr(int index, float value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] += value;}
","public void [MASK](int index, float value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] += value;}
",incr,"[{'value': ['evaluate'], 'probability': 0.1388564556837082}, {'value': ['put'], 'probability': 0.12978875637054443}, {'value': ['add'], 'probability': 0.08881136029958725}, {'value': ['weigh'], 'probability': 0.03870973736047745}, {'value': ['index'], 'probability': 0.036605700850486755}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['check', 'index'], 'probability': 0.3861324191093445}, {'value': ['set'], 'probability': 0.2263338565826416}, {'value': ['add'], 'probability': 0.07678716629743576}, {'value': ['set', 'element', 'at'], 'probability': 0.06526631861925125}, {'value': ['at'], 'probability': 0.059022728353738785}, {'value': ['to', 'base'], 'probability': 0.04809821397066116}, {'value': ['get', 'id', 'value'], 'probability': 0.03783287853002548}, {'value': ['put', 'at'], 'probability': 0.03653811663389206}, {'value': ['consistent'], 'probability': 0.035520706325769424}, {'value': ['add', 'impl'], 'probability': 0.028467612341046333}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1236,1236,"public void mul(int index, float value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] *= value;}
","public void [MASK](int index, float value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] *= value;}
",mul,"[{'value': ['evaluate'], 'probability': 0.13178801536560059}, {'value': ['put'], 'probability': 0.09831862896680832}, {'value': ['add'], 'probability': 0.07794098556041718}, {'value': ['compare'], 'probability': 0.042860247194767}, {'value': ['index'], 'probability': 0.040741465985774994}]","[-0.12822376, -0.09742199, -0.091368824, -0.26408878, -0.18524252]",-0.0524640898480162,"[{'value': ['set', 'times'], 'probability': 0.3826150894165039}, {'value': ['set', 'quick'], 'probability': 0.22609473764896393}, {'value': ['set', 'item'], 'probability': 0.08320210874080658}, {'value': ['mul', 'assign'], 'probability': 0.06595563888549805}, {'value': ['set', 'count'], 'probability': 0.05867541953921318}, {'value': ['set', 'out'], 'probability': 0.05463728681206703}, {'value': ['list', 'size'], 'probability': 0.03838604688644409}, {'value': ['set', 'alignment'], 'probability': 0.032343875616788864}, {'value': ['write', 'number'], 'probability': 0.03140081837773323}, {'value': ['remove', 'item', 'at', 'int'], 'probability': 0.02668897807598114}]","[-0.19274941, -0.1133308, -0.17063811, 0.7177816, -0.14632729, -0.10696802, -0.25842026, -0.117898315, -0.24350232, -0.08331152]",-0.10426098643840073
1237,1237,"public void insert(int index, float value) {if (index > size)throw new IndexOutOfBoundsException(""index can't be > size: "" + index + "" > "" + size);float[] items = this.items;if (size == items.length)items = resize(Math.max(8, (int) (size * 1.75f)));if (ordered)System.arraycopy(items, index, items, index + 1, size - index);elseitems[size] = items[index];size++;items[index] = value;}
","public void [MASK](int index, float value) {if (index > size)throw new IndexOutOfBoundsException(""index can't be > size: "" + index + "" > "" + size);float[] items = this.items;if (size == items.length)items = resize(Math.max(8, (int) (size * 1.75f)));if (ordered)System.arraycopy(items, index, items, index + 1, size - index);elseitems[size] = items[index];size++;items[index] = value;}
",insert,"[{'value': ['index'], 'probability': 0.1032356321811676}, {'value': ['count'], 'probability': 0.07956840842962265}, {'value': ['compare'], 'probability': 0.06711222976446152}, {'value': ['array'], 'probability': 0.044759105890989304}, {'value': ['evaluate'], 'probability': 0.04442256689071655}]","[0.08625044, 0.031412024, 0.2919383, 0.22102182, 0.25345668]",0.0521480892616255,"[{'value': ['add'], 'probability': 0.3793018162250519}, {'value': ['set'], 'probability': 0.32948562502861023}, {'value': ['set', 'size'], 'probability': 0.07522042095661163}, {'value': ['put'], 'probability': 0.05357765778899193}, {'value': ['add', 'value'], 'probability': 0.0392487533390522}, {'value': ['insert'], 'probability': 0.03382895514369011}, {'value': ['set', 'quick'], 'probability': 0.027732601389288902}, {'value': ['move'], 'probability': 0.023664461448788643}, {'value': ['set', 'item'], 'probability': 0.020481331273913383}, {'value': ['insert', 'item'], 'probability': 0.017458267509937286}]","[0.4981244, 0.31022063, 0.31742662, 0.35016164, 0.36977416, 1.0, 0.33199987, 0.30411452, 0.47022155, 0.84467006]",0.4229138278303658
1238,1238,"public void swap(int first, int second) {if (first >= size)throw new IndexOutOfBoundsException(""first can't be >= size: "" + first + "" >= "" + size);if (second >= size)throw new IndexOutOfBoundsException(""second can't be >= size: "" + second + "" >= "" + size);float[] items = this.items;float firstValue = items[first];items[first] = items[second];items[second] = firstValue;}
","public void [MASK](int first, int second) {if (first >= size)throw new IndexOutOfBoundsException(""first can't be >= size: "" + first + "" >= "" + size);if (second >= size)throw new IndexOutOfBoundsException(""second can't be >= size: "" + second + "" >= "" + size);float[] items = this.items;float firstValue = items[first];items[first] = items[second];items[second] = firstValue;}
",swap,"[{'value': ['next'], 'probability': 0.099203921854496}, {'value': ['start'], 'probability': 0.060676272958517075}, {'value': ['evaluate'], 'probability': 0.05523214861750603}, {'value': ['read'], 'probability': 0.05297757685184479}, {'value': ['compare'], 'probability': 0.05282168462872505}]","[0.339146, 0.31498596, 0.23767383, 0.19274043, 0.2790103]",0.0908327373233791,"[{'value': ['assert', 'equals'], 'probability': 0.32463881373405457}, {'value': ['check'], 'probability': 0.25159552693367004}, {'value': ['pop'], 'probability': 0.12057603150606155}, {'value': ['like'], 'probability': 0.10357700288295746}, {'value': ['remove', 'index'], 'probability': 0.051579296588897705}, {'value': ['modulo'], 'probability': 0.046987134963274}, {'value': ['get', 'num', 'nondefault', 'elements'], 'probability': 0.03187429532408714}, {'value': ['truncate'], 'probability': 0.028513193130493164}, {'value': ['set', 'item'], 'probability': 0.02171429432928562}, {'value': ['frame'], 'probability': 0.018944332376122475}]","[0.27393213, 0.37294447, 0.16064274, 0.22858907, 0.3947497, 0.06341855, 0.3320512, 0.03494379, 0.39001173, 0.14209756]",0.2718881947861261
1239,1239,"public boolean contains(float value) {int i = size - 1;float[] items = this.items;while (i >= 0) if (items[i--] == value)return true;return false;}
","public boolean [MASK](float value) {int i = size - 1;float[] items = this.items;while (i >= 0) if (items[i--] == value)return true;return false;}
",contains,"[{'value': ['equals'], 'probability': 0.2806028127670288}, {'value': ['value'], 'probability': 0.09621669352054596}, {'value': ['contains'], 'probability': 0.08284097164869308}, {'value': ['evaluate'], 'probability': 0.04151676595211029}, {'value': ['compare'], 'probability': 0.029571710154414177}]","[0.20414257, 0.38048333, 0.99999994, 0.10717903, 0.23145871]",0.1880271506625407,"[{'value': ['contains'], 'probability': 0.9994421601295471}, {'value': ['contains', 'value'], 'probability': 0.0003589671687223017}, {'value': ['intersects'], 'probability': 5.750204582000151e-05}, {'value': ['in'], 'probability': 3.747886512428522e-05}, {'value': ['match'], 'probability': 3.064349220949225e-05}, {'value': ['exists'], 'probability': 2.2293252186500467e-05}, {'value': ['contains', 'all'], 'probability': 1.8649034245754592e-05}, {'value': ['includes'], 'probability': 1.1717328561644536e-05}, {'value': ['equals'], 'probability': 1.1552952855709009e-05}, {'value': ['index', 'of'], 'probability': 9.07753474166384e-06}]","[0.99999994, 0.82444495, 0.1944798, 0.3999801, 0.21868116, 0.5643323, 0.8578542, 0.77851814, 0.20414257, 0.45148757]",0.9998150817245613
1240,1240,"public int indexOf(float value) {float[] items = this.items;for (int i = 0, n = size; i < n; i++) if (items[i] == value)return i;return -1;}
","public int [MASK](float value) {float[] items = this.items;for (int i = 0, n = size; i < n; i++) if (items[i] == value)return i;return -1;}
",indexOf,"[{'value': ['compare'], 'probability': 0.35225680470466614}, {'value': ['size'], 'probability': 0.1370757669210434}, {'value': ['get'], 'probability': 0.057458240538835526}, {'value': ['evaluate'], 'probability': 0.05384904518723488}, {'value': ['value'], 'probability': 0.04864698275923729}]","[0.27857816, 0.32011688, 0.24769717, 0.16766599, 0.5229666]",0.1907129652890299,"[{'value': ['index', 'of'], 'probability': 0.9961709380149841}, {'value': ['first', 'index', 'of'], 'probability': 0.0013222497655078769}, {'value': ['get', 'index'], 'probability': 0.0006129454122856259}, {'value': ['index', 'of', 'value'], 'probability': 0.0005308872205205262}, {'value': ['get', 'component', 'index'], 'probability': 0.00038308740477077663}, {'value': ['find', 'item'], 'probability': 0.000308111310005188}, {'value': ['last', 'index', 'of'], 'probability': 0.0003002990270033479}, {'value': ['get', 'selected', 'index'], 'probability': 0.00021105233463458717}, {'value': ['count'], 'probability': 9.124453936237842e-05}, {'value': ['get', 'count'], 'probability': 6.916658458067104e-05}]","[0.85326165, 0.7491561, 0.85867995, 0.8053415, 0.8513591, 0.3003981, 0.7536404, 0.7964892, 0.16607247, 0.24489406]",0.8527841102527488
1241,1241,"public int lastIndexOf(char value) {float[] items = this.items;for (int i = size - 1; i >= 0; i--) if (items[i] == value)return i;return -1;}
","public int [MASK](char value) {float[] items = this.items;for (int i = size - 1; i >= 0; i--) if (items[i] == value)return i;return -1;}
",lastIndexOf,"[{'value': ['compare'], 'probability': 0.33393698930740356}, {'value': ['size'], 'probability': 0.21448370814323425}, {'value': ['get'], 'probability': 0.05329587310552597}, {'value': ['sort'], 'probability': 0.030298223719000816}, {'value': ['add'], 'probability': 0.026743391528725624}]","[0.23642024, 0.40456098, 0.62151444, 0.46235108, 0.39022568]",0.2232897337154045,"[{'value': ['last', 'index', 'of'], 'probability': 0.9381299614906311}, {'value': ['index', 'of'], 'probability': 0.026716602966189384}, {'value': ['get', 'index'], 'probability': 0.012480986304581165}, {'value': ['first', 'index', 'of'], 'probability': 0.00968771893531084}, {'value': ['index', 'of', 'ignore', 'case'], 'probability': 0.005537416320294142}, {'value': ['get', 'selected', 'index'], 'probability': 0.001989771844819188}, {'value': ['peek'], 'probability': 0.0015245231334120035}, {'value': ['get', 'span', 'start'], 'probability': 0.0013943271478638053}, {'value': ['index', 'of', 'value'], 'probability': 0.0012780650286003947}, {'value': ['find', 'index', 'of', 'value'], 'probability': 0.001260549295693636}]","[0.80715156, 0.5947453, 0.57837963, 0.7450149, 0.67995423, 0.62005335, 0.10262002, 0.73765475, 0.58653533, 0.6402825]",0.7952795500749269
1242,1242,"public boolean removeValue(float value) {float[] items = this.items;for (int i = 0, n = size; i < n; i++) {if (items[i] == value) {removeIndex(i);return true;}}return false;}
","public boolean [MASK](float value) {float[] items = this.items;for (int i = 0, n = size; i < n; i++) {if (items[i] == value) {removeIndex(i);return true;}}return false;}
",removeValue,"[{'value': ['remove'], 'probability': 0.2113385945558548}, {'value': ['add'], 'probability': 0.1395384818315506}, {'value': ['contains'], 'probability': 0.07388568669557571}, {'value': ['equals'], 'probability': 0.05825701355934143}, {'value': ['put'], 'probability': 0.03545118123292923}]","[0.99999994, 0.67838424, 0.36894462, 0.04568455, 0.63358456]",0.3583817822407028,"[{'value': ['remove', 'value'], 'probability': 0.9604673981666565}, {'value': ['remove'], 'probability': 0.034796420484781265}, {'value': ['remove', 'item'], 'probability': 0.0020140151027590036}, {'value': ['remove', 'from', 'list'], 'probability': 0.0016048494726419449}, {'value': ['remove', 'all'], 'probability': 0.0006107049994170666}, {'value': ['remove', 'attribute'], 'probability': 0.0001520074874861166}, {'value': ['do', 'remove'], 'probability': 0.00013835188292432576}, {'value': ['remove', 'vertex'], 'probability': 8.56951592140831e-05}, {'value': ['remove', 'row'], 'probability': 7.690401980653405e-05}, {'value': ['remove', 'at'], 'probability': 5.3620522521669045e-05}]","[0.7676675, 0.99999994, 0.83545727, 0.7401141, 0.84920514, 0.81772447, 0.83079267, 0.6833006, 0.8104942, 0.7718763]",0.7759065500847968
1243,1243,"public float removeIndex(int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);float[] items = this.items;float value = items[index];size--;if (ordered)System.arraycopy(items, index + 1, items, index, size - index);elseitems[index] = items[size];return value;}
","public float [MASK](int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);float[] items = this.items;float value = items[index];size--;if (ordered)System.arraycopy(items, index + 1, items, index, size - index);elseitems[index] = items[size];return value;}
",removeIndex,"[{'value': ['count'], 'probability': 0.17419297993183136}, {'value': ['index'], 'probability': 0.09754721075296402}, {'value': ['get'], 'probability': 0.04940539225935936}, {'value': ['compare'], 'probability': 0.04778745025396347}, {'value': ['value'], 'probability': 0.043536245822906494}]","[0.1747158, 0.09149969, 0.48684114, 0.18829212, 0.2523219]",0.0833955320477125,"[{'value': ['remove', 'index'], 'probability': 0.4862340986728668}, {'value': ['remove', 'at'], 'probability': 0.14525428414344788}, {'value': ['pop'], 'probability': 0.11007092893123627}, {'value': ['get', 'item', 'count'], 'probability': 0.08150389790534973}, {'value': ['get', 'size'], 'probability': 0.05140798166394234}, {'value': ['size'], 'probability': 0.04418917000293732}, {'value': ['get', 'num', 'nondefault', 'elements'], 'probability': 0.03528090938925743}, {'value': ['remove'], 'probability': 0.01852571591734886}, {'value': ['get', 'count'], 'probability': 0.01627432554960251}, {'value': ['calc', 'size'], 'probability': 0.011258606798946857}]","[0.6131121, 0.7718763, 0.2049971, 0.45173335, 0.50905836, 0.37715468, 0.47812778, 0.99999994, 0.39474952, 0.2389899]",0.5569618871059746
1244,1244,"public void removeRange(int start, int end) {if (end >= size)throw new IndexOutOfBoundsException(""end can't be >= size: "" + end + "" >= "" + size);if (start > end)throw new IndexOutOfBoundsException(""start can't be > end: "" + start + "" > "" + end);float[] items = this.items;int count = end - start + 1;if (ordered)System.arraycopy(items, start + count, items, start, size - (start + count));else {int lastIndex = this.size - 1;for (int i = 0; i < count; i++) items[start + i] = items[lastIndex - i];}size -= count;}
","public void [MASK](int start, int end) {if (end >= size)throw new IndexOutOfBoundsException(""end can't be >= size: "" + end + "" >= "" + size);if (start > end)throw new IndexOutOfBoundsException(""start can't be > end: "" + start + "" > "" + end);float[] items = this.items;int count = end - start + 1;if (ordered)System.arraycopy(items, start + count, items, start, size - (start + count));else {int lastIndex = this.size - 1;for (int i = 0; i < count; i++) items[start + i] = items[lastIndex - i];}size -= count;}
",removeRange,"[{'value': ['start'], 'probability': 0.420995831489563}, {'value': ['read'], 'probability': 0.042289938777685165}, {'value': ['count'], 'probability': 0.039695680141448975}, {'value': ['next'], 'probability': 0.03554105758666992}, {'value': ['add'], 'probability': 0.027491122484207153}]","[0.3728393, 0.34332725, 0.1747158, 0.4148229, 0.67838424]",0.2118113321879821,"[{'value': ['pop'], 'probability': 0.24659663438796997}, {'value': ['count'], 'probability': 0.19874514639377594}, {'value': ['truncate'], 'probability': 0.14183329045772552}, {'value': ['size'], 'probability': 0.09479416161775589}, {'value': ['get', 'num', 'nondefault', 'elements'], 'probability': 0.09024745970964432}, {'value': ['check'], 'probability': 0.09019222110509872}, {'value': ['flush', 'buffer'], 'probability': 0.05958818271756172}, {'value': ['remove', 'index'], 'probability': 0.03560549020767212}, {'value': ['modulo'], 'probability': 0.02472294494509697}, {'value': ['check', 'size'], 'probability': 0.0176745243370533}]","[0.2049971, 0.1747158, 0.10390935, 0.37715468, 0.47812778, 0.49686256, 0.404536, 0.6131121, 0.1257206, 0.5066565]",0.281727152378841
1245,1245,"public boolean removeAll(FloatArray array) {int size = this.size;int startSize = size;float[] items = this.items;for (int i = 0, n = array.size; i < n; i++) {float item = array.get(i);for (int ii = 0; ii < size; ii++) {if (item == items[ii]) {removeIndex(ii);size--;break;}}}return size != startSize;}
","public boolean [MASK](FloatArray array) {int size = this.size;int startSize = size;float[] items = this.items;for (int i = 0, n = array.size; i < n; i++) {float item = array.get(i);for (int ii = 0; ii < size; ii++) {if (item == items[ii]) {removeIndex(ii);size--;break;}}}return size != startSize;}
",removeAll,"[{'value': ['equals'], 'probability': 0.10679735243320465}, {'value': ['add'], 'probability': 0.06330611556768417}, {'value': ['contains'], 'probability': 0.0619942843914032}, {'value': ['remove'], 'probability': 0.04527003690600395}, {'value': ['matches'], 'probability': 0.03419587016105652}]","[0.04568455, 0.67838424, 0.36894462, 0.99999994, 0.13965063]",0.1207428267049775,"[{'value': ['add'], 'probability': 0.47264695167541504}, {'value': ['add', 'all'], 'probability': 0.35614168643951416}, {'value': ['init'], 'probability': 0.04934285208582878}, {'value': ['make', 'array'], 'probability': 0.0359799787402153}, {'value': ['allocate'], 'probability': 0.02373088337481022}, {'value': ['is', 'in', 'use'], 'probability': 0.013885521329939365}, {'value': ['finish'], 'probability': 0.013765564188361168}, {'value': ['_'], 'probability': 0.013291318900883198}, {'value': ['access'], 'probability': 0.010975848883390427}, {'value': ['visit'], 'probability': 0.010239390656352043}]","[0.67838424, 0.66067475, -0.13273348, 0.554322, 0.32412246, 0.48361012, 0.2444726, 0.38498446, 0.40697297, 0.24778867]",0.5992183323004873
1246,1246,"public float pop() {return items[--size];}
","public float [MASK]() {return items[--size];}
",pop,"[{'value': ['##s'], 'probability': 0.3588155508041382}, {'value': ['size'], 'probability': 0.23504090309143066}, {'value': ['items'], 'probability': 0.13176052272319794}, {'value': ['sizes'], 'probability': 0.0376923531293869}, {'value': ['item'], 'probability': 0.03472958505153656}]","[0.0, 0.24893323, 0.24314585, 0.15222916, 0.25015834]",0.1049722855385399,"[{'value': ['pop'], 'probability': 0.9908814430236816}, {'value': ['remove', 'last'], 'probability': 0.008411450311541557}, {'value': ['previous'], 'probability': 0.0005174704128876328}, {'value': ['dequeue'], 'probability': 0.00010898322943830863}, {'value': ['close', 'action'], 'probability': 2.728192339418456e-05}, {'value': ['poll', 'first'], 'probability': 2.052735726465471e-05}, {'value': ['shift'], 'probability': 1.6238291209447198e-05}, {'value': ['duplicate'], 'probability': 7.711234502494335e-06}, {'value': ['wait', 'until', 'finished'], 'probability': 5.586875886365306e-06}, {'value': ['remove'], 'probability': 3.407894610063522e-06}]","[1.0, 0.31590593, 0.34230047, 0.0, 0.33008313, 0.33559886, 0.24850689, 0.0852977, 0.28108573, 0.2049971]",0.9937386567603174
1247,1247,"public float peek() {return items[size - 1];}
","public float [MASK]() {return items[size - 1];}
",peek,"[{'value': ['size'], 'probability': 0.4564211964607239}, {'value': ['##s'], 'probability': 0.21772944927215576}, {'value': ['items'], 'probability': 0.10025889426469803}, {'value': ['sizes'], 'probability': 0.050843246281147}, {'value': ['item'], 'probability': 0.03515637665987015}]","[0.045054156, 0.0, 0.117878154, 0.03208961, 0.16853108]",0.0399384871915834,"[{'value': ['peek'], 'probability': 0.45389485359191895}, {'value': ['get', 'last'], 'probability': 0.3422161340713501}, {'value': ['last'], 'probability': 0.10166975110769272}, {'value': ['top'], 'probability': 0.03938228264451027}, {'value': ['get', 'max'], 'probability': 0.024915102869272232}, {'value': ['peek', 'last'], 'probability': 0.018756432458758354}, {'value': ['get', 'end'], 'probability': 0.011592323891818523}, {'value': ['max'], 'probability': 0.0034923141356557608}, {'value': ['get', 'last', 'element'], 'probability': 0.002263895934447646}, {'value': ['get', 'last', 'component'], 'probability': 0.0018168064998462796}]","[1.0000001, 0.23819597, 0.10262002, 0.15912856, 0.28473702, 0.6559036, 0.26807413, 0.12248105, 0.22740717, 0.18559618]",0.5758936274798668
1248,1248,"public float first() {if (size == 0)throw new IllegalStateException(""Array is empty."");return items[0];}
","public float [MASK]() {if (size == 0)throw new IllegalStateException(""Array is empty."");return items[0];}
",first,"[{'value': ['size'], 'probability': 0.5665948390960693}, {'value': ['count'], 'probability': 0.07383087277412415}, {'value': ['##s'], 'probability': 0.053143348544836044}, {'value': ['items'], 'probability': 0.02417103387415409}, {'value': ['get'], 'probability': 0.020191090181469917}]","[0.4233269, 0.42523217, 0.0, 0.3540174, 0.61224985]",0.2921690632774872,"[{'value': ['min'], 'probability': 0.5252090692520142}, {'value': ['max'], 'probability': 0.2851041555404663}, {'value': ['in'], 'probability': 0.03253450617194176}, {'value': ['get', 'last'], 'probability': 0.02903616987168789}, {'value': ['get', 'first', 'item'], 'probability': 0.02634076587855816}, {'value': ['top'], 'probability': 0.023781245574355125}, {'value': ['get', 'min'], 'probability': 0.022134196013212204}, {'value': ['peek', 'min'], 'probability': 0.022087763994932175}, {'value': ['get', 'max'], 'probability': 0.01724931038916111}, {'value': ['with', 'items'], 'probability': 0.01652277074754238}]","[0.19325696, 0.31381834, 0.7752052, 0.80370796, 0.83713275, 0.6417601, 0.55146515, 0.24727833, 0.5815893, 0.63851935]",0.3150914987508312
1249,1249,"public void clear() {size = 0;}
","public void [MASK]() {size = 0;}
",clear,"[{'value': ['size'], 'probability': 0.5672956109046936}, {'value': ['expand'], 'probability': 0.08306580036878586}, {'value': ['next'], 'probability': 0.02566731534898281}, {'value': ['build'], 'probability': 0.022996824234724045}, {'value': ['count'], 'probability': 0.015339711681008339}]","[0.36001065, 0.3758312, 0.61128706, 0.51005095, 0.34894526]",0.2682235515315728,"[{'value': ['clear'], 'probability': 0.8457370400428772}, {'value': ['reset'], 'probability': 0.13568919897079468}, {'value': ['reset', 'writer'], 'probability': 0.006444792728871107}, {'value': ['remove', 'all', 'elements'], 'probability': 0.0036202799528837204}, {'value': ['remove', 'all'], 'probability': 0.0034583385568112135}, {'value': ['init'], 'probability': 0.0019673060160130262}, {'value': ['set', 'empty'], 'probability': 0.001840800978243351}, {'value': ['close'], 'probability': 0.0005058564129285514}, {'value': ['n'], 'probability': 0.00038075679913163185}, {'value': ['init', 'fields'], 'probability': 0.00035561551339924335}]","[1.0, 0.10589813, 0.2412056, 0.70545393, 0.71209234, -0.2771442, 0.67174983, 0.6670826, 0.24322042, 0.15956345]",0.8678555190582122
1250,1250,"public float[] shrink() {if (items.length != size)resize(size);return items;}
","public float[] [MASK]() {if (items.length != size)resize(size);return items;}
",shrink,"[{'value': ['items'], 'probability': 0.4038665294647217}, {'value': ['sizes'], 'probability': 0.18247178196907043}, {'value': ['size'], 'probability': 0.1648523509502411}, {'value': ['types'], 'probability': 0.028397448360919952}, {'value': ['flags'], 'probability': 0.01873680204153061}]","[0.25753754, 0.31739143, 0.42053863, 0.17647873, 0.004294569]",0.2363445675459035,"[{'value': ['to', 'array'], 'probability': 0.5927183032035828}, {'value': ['get', 'items'], 'probability': 0.2541796863079071}, {'value': ['get', 'size'], 'probability': 0.06880529224872589}, {'value': ['get', 'array'], 'probability': 0.03209152817726135}, {'value': ['get', 'bytes'], 'probability': 0.019674619659781456}, {'value': ['get', 'item', 'count'], 'probability': 0.019136574119329453}, {'value': ['get', 'length'], 'probability': 0.0037721304688602686}, {'value': ['get', 'dimensions'], 'probability': 0.003295524511486292}, {'value': ['size'], 'probability': 0.003222408937290311}, {'value': ['get', 'rows'], 'probability': 0.0031040064059197903}]","[0.35016704, 0.344897, 0.4392732, 0.28372055, 0.3617393, 0.32471573, 0.37117937, 0.36580387, 0.42053863, 0.33448276]",0.35287563846180664
1251,1251,"public float[] ensureCapacity(int additionalCapacity) {int sizeNeeded = size + additionalCapacity;if (sizeNeeded > items.length)resize(Math.max(8, sizeNeeded));return items;}
","public float[] [MASK](int additionalCapacity) {int sizeNeeded = size + additionalCapacity;if (sizeNeeded > items.length)resize(Math.max(8, sizeNeeded));return items;}
",ensureCapacity,"[{'value': ['size'], 'probability': 0.22084248065948486}, {'value': ['equals'], 'probability': 0.06802371889352798}, {'value': ['sizes'], 'probability': 0.06656821072101593}, {'value': ['get'], 'probability': 0.04975312203168869}, {'value': ['contains'], 'probability': 0.03819312900304794}]","[0.33820274, 0.17036933, 0.20847932, 0.5819947, 0.23888949]",0.1382367741840167,"[{'value': ['ensure', 'capacity'], 'probability': 0.9484344720840454}, {'value': ['grow'], 'probability': 0.05104408785700798}, {'value': ['make', 'space'], 'probability': 0.00014464517880696803}, {'value': ['check', 'available'], 'probability': 0.0001424988586222753}, {'value': ['reserve'], 'probability': 0.00010743705934146419}, {'value': ['get', 'ranges'], 'probability': 4.828373494092375e-05}, {'value': ['remaining'], 'probability': 2.974249036924448e-05}, {'value': ['reserve', 'space'], 'probability': 1.7926064174389467e-05}, {'value': ['expand', 'buffer'], 'probability': 1.618326859897934e-05}, {'value': ['add', 'layers'], 'probability': 1.4830363397777546e-05}]","[0.859025, 0.37427303, 0.58638984, 0.6062608, 0.3527641, 0.4933087, 0.4808065, 0.44909573, 0.55374193, 0.36781865]",0.8341030436073742
1252,1252,"protected float[] resize(int newSize) {float[] newItems = new float[newSize];float[] items = this.items;System.arraycopy(items, 0, newItems, 0, Math.min(size, newItems.length));this.items = newItems;return newItems;}
","protected float[] [MASK](int newSize) {float[] newItems = new float[newSize];float[] items = this.items;System.arraycopy(items, 0, newItems, 0, Math.min(size, newItems.length));this.items = newItems;return newItems;}
",resize,"[{'value': ['evaluate'], 'probability': 0.15515711903572083}, {'value': ['size'], 'probability': 0.07996918261051178}, {'value': ['compare'], 'probability': 0.07460034638643265}, {'value': ['array'], 'probability': 0.055500056594610214}, {'value': ['index'], 'probability': 0.04035520553588867}]","[0.25900555, 0.041446958, 0.195084, 0.051039167, -0.06489888]",0.0582680372125559,"[{'value': ['resize'], 'probability': 0.9990177154541016}, {'value': ['copy', 'of'], 'probability': 0.000932475843001157}, {'value': ['resize', 'array'], 'probability': 1.474560394854052e-05}, {'value': ['search', 'users'], 'probability': 8.941955456975847e-06}, {'value': ['with', 'items'], 'probability': 7.3326746132806875e-06}, {'value': ['transfer'], 'probability': 5.323357527231565e-06}, {'value': ['new', 'array'], 'probability': 3.665923031803686e-06}, {'value': ['write', 'bytes'], 'probability': 3.5213438422943e-06}, {'value': ['from', 'array'], 'probability': 3.235869371565059e-06}, {'value': ['int', 'array'], 'probability': 2.936749069704092e-06}]","[1.0, -0.15786467, 0.6626351, -0.0054717558, -0.099753134, -0.022781033, -0.08132391, 0.21935248, -0.17254467, -0.0010825247]",0.9988792925377505
1253,1253,"public void sort() {Arrays.sort(items, 0, size);}
","public void [MASK]() {Arrays.[MASK](items, 0, size);}
",sort,"[{'value': ['add'], 'probability': 0.06992413848638535}, {'value': ['list'], 'probability': 0.06309846043586731}, {'value': ['test'], 'probability': 0.05644179508090019}, {'value': ['evaluate'], 'probability': 0.0431295707821846}, {'value': ['consume'], 'probability': 0.04284244775772095}]","[0.46858332, 0.4064386, 0.4086159, 0.34478912, 0.22773433]",0.1061012507290966,"[{'value': ['sort'], 'probability': 0.9999042749404907}, {'value': ['sort', 'desc'], 'probability': 2.163195313187316e-05}, {'value': ['run'], 'probability': 2.1251620637485757e-05}, {'value': ['resort'], 'probability': 8.917106242734008e-06}, {'value': ['sort', 'descending'], 'probability': 8.743117177800741e-06}, {'value': ['sort', 'by', 'name'], 'probability': 8.026364412216935e-06}, {'value': ['real', 'run'], 'probability': 7.365756573562976e-06}, {'value': ['refresh', 'model'], 'probability': 6.6838292696047574e-06}, {'value': ['merge', 'duplicates'], 'probability': 6.614155154238688e-06}, {'value': ['sort', 'ascending'], 'probability': 6.492476131825242e-06}]","[0.99999994, 0.6421592, 0.45343876, 0.29323313, 0.7206778, 0.73564893, 0.65497077, 0.39520395, 0.25952312, 0.6753969]",0.9999561301156977
1254,1254,"public void reverse() {float[] items = this.items;for (int i = 0, lastIndex = size - 1, n = size / 2; i < n; i++) {int ii = lastIndex - i;float temp = items[i];items[i] = items[ii];items[ii] = temp;}}
","public void [MASK]() {float[] items = this.items;for (int i = 0, lastIndex = size - 1, n = size / 2; i < n; i++) {int ii = lastIndex - i;float temp = items[i];items[i] = items[ii];items[ii] = temp;}}
",reverse,"[{'value': ['test'], 'probability': 0.0704936757683754}, {'value': ['list'], 'probability': 0.04967707768082619}, {'value': ['update'], 'probability': 0.04923213645815849}, {'value': ['evaluate'], 'probability': 0.040476709604263306}, {'value': ['add'], 'probability': 0.03536217287182808}]","[0.42161942, 0.248607, 0.36172023, 0.3432774, 0.42401972]",0.0887688294840026,"[{'value': ['reverse'], 'probability': 0.9853026866912842}, {'value': ['get', 'size'], 'probability': 0.006221477873623371}, {'value': ['sort'], 'probability': 0.003328859806060791}, {'value': ['size'], 'probability': 0.002245273208245635}, {'value': ['less', 'than'], 'probability': 0.0007310163928195834}, {'value': ['loop'], 'probability': 0.0006436018738895655}, {'value': ['like'], 'probability': 0.0005689947865903378}, {'value': ['pop'], 'probability': 0.00034958470496349037}, {'value': ['test', 'size'], 'probability': 0.00030801116372458637}, {'value': ['count'], 'probability': 0.0003005328180734068}]","[0.99999994, 0.45228785, 0.43340397, 0.33670035, 0.37423456, 0.3839902, 0.38448784, 0.22912018, 0.46426326, 0.32456484]",0.9913753693053775
1255,1255,"public void shuffle() {float[] items = this.items;for (int i = size - 1; i >= 0; i--) {int ii = MathUtils.random(i);float temp = items[i];items[i] = items[ii];items[ii] = temp;}}
","public void [MASK]() {float[] items = this.items;for (int i = size - 1; i >= 0; i--) {int ii = MathUtils.random(i);float temp = items[i];items[i] = items[ii];items[ii] = temp;}}
",shuffle,"[{'value': ['next'], 'probability': 0.13111598789691925}, {'value': ['flush'], 'probability': 0.03875814378261566}, {'value': ['test'], 'probability': 0.03272733464837074}, {'value': ['run'], 'probability': 0.031155133619904518}, {'value': ['sort'], 'probability': 0.029682287946343422}]","[0.29136842, 0.24265926, 0.06282892, 0.13474886, 0.2522914]",0.0613510094047475,"[{'value': ['shuffle'], 'probability': 0.9966498017311096}, {'value': ['reverse'], 'probability': 0.0029344793874770403}, {'value': ['randomize'], 'probability': 0.00010532001033425331}, {'value': ['cycle'], 'probability': 8.15455787233077e-05}, {'value': ['clear', 'items'], 'probability': 6.980925536481664e-05}, {'value': ['remove', 'all'], 'probability': 4.521082519204356e-05}, {'value': ['sort'], 'probability': 3.558024764060974e-05}, {'value': ['reverse', 'array'], 'probability': 3.3036372769856825e-05}, {'value': ['permute'], 'probability': 2.520206180633977e-05}, {'value': ['real', 'run'], 'probability': 1.996105129364878e-05}]","[1.0, 0.23616289, 0.040357634, 0.15300667, 0.06630126, 0.22841577, 0.2522914, 0.2768479, 0.0, 0.14573598]",0.9973955313391106
1256,1256,"public void truncate(int newSize) {if (size > newSize)size = newSize;}
","public void [MASK](int newSize) {if (size > newSize)size = newSize;}
",truncate,"[{'value': ['size'], 'probability': 0.1983509212732315}, {'value': ['expand'], 'probability': 0.17597302794456482}, {'value': ['add'], 'probability': 0.13951340317726135}, {'value': ['put'], 'probability': 0.07335394620895386}, {'value': ['update'], 'probability': 0.04473648965358734}]","[0.0011999246, 0.14172377, 0.095867775, -0.19270174, -0.098711416]",0.0200009706822229,"[{'value': ['set', 'size', 'raw'], 'probability': 0.5294990539550781}, {'value': ['set', 'size'], 'probability': 0.4179137945175171}, {'value': ['resize'], 'probability': 0.027432547882199287}, {'value': ['set', 'new', 'size'], 'probability': 0.006639246363192797}, {'value': ['adjust', 'size'], 'probability': 0.0048332554288208485}, {'value': ['change', 'size'], 'probability': 0.004662427119910717}, {'value': ['set', 'buffer', 'size'], 'probability': 0.0027558919973671436}, {'value': ['to', 'size'], 'probability': 0.002235598163679242}, {'value': ['truncate'], 'probability': 0.002045163419097662}, {'value': ['realloc', 'array'], 'probability': 0.001983087509870529}]","[-0.107733294, -0.11370749, 0.42355284, -0.17688271, 0.09398765, -0.051475704, -0.11556905, -0.014102544, 1.0, -0.0062503344]",-0.09222283056979749
1257,1257,"public float random() {if (size == 0)return 0;return items[MathUtils.random(0, size - 1)];}
","public float [MASK]() {if (size == 0)return 0;return items[MathUtils.[MASK](0, size - 1)];}
",random,"[{'value': ['size'], 'probability': 0.8053309917449951}, {'value': ['sizes'], 'probability': 0.02071981318295002}, {'value': ['weight'], 'probability': 0.019861677661538124}, {'value': ['##s'], 'probability': 0.01902817189693451}, {'value': ['count'], 'probability': 0.015514309518039227}]","[0.3036178, 0.29088572, 0.25870368, 0.0, 0.32680106]",0.2607483078145982,"[{'value': ['random'], 'probability': 0.9785816073417664}, {'value': ['in'], 'probability': 0.016603948548436165}, {'value': ['sample'], 'probability': 0.003687076736241579}, {'value': ['min'], 'probability': 0.00026484468253329396}, {'value': ['choose'], 'probability': 0.0002439670352032408}, {'value': ['max'], 'probability': 0.00022898265160620213}, {'value': ['min', 'value'], 'probability': 0.0001110699595301412}, {'value': ['mean'], 'probability': 0.00010835215653060004}, {'value': ['get', 'audio', 'url'], 'probability': 9.479564323555678e-05}, {'value': ['at'], 'probability': 7.528195419581607e-05}]","[0.99999994, 0.2621837, 0.5484596, -0.052988477, 0.3203432, 0.22991583, 0.19796132, 0.36256042, 0.4591792, 0.24242958]",0.9851968626439613
1258,1258,"public float[] toArray() {float[] array = new float[size];System.arraycopy(items, 0, array, 0, size);return array;}
","public float[] [MASK]() {float[] array = new float[size];System.arraycopy(items, 0, array, 0, size);return array;}
",toArray,"[{'value': ['size'], 'probability': 0.3910594880580902}, {'value': ['sizes'], 'probability': 0.19021674990653992}, {'value': ['array'], 'probability': 0.1508406400680542}, {'value': ['expand'], 'probability': 0.017663292586803436}, {'value': ['evaluate'], 'probability': 0.015377029776573181}]","[0.45955554, 0.21089613, 0.27827993, 0.6401671, 0.46906468]",0.280325733590296,"[{'value': ['to', 'array'], 'probability': 0.8738721609115601}, {'value': ['to', 'byte', 'array'], 'probability': 0.09887505322694778}, {'value': ['get', 'array'], 'probability': 0.011144265532493591}, {'value': ['get', 'float', 'array'], 'probability': 0.004208880942314863}, {'value': ['array'], 'probability': 0.003885531798005104}, {'value': ['to', 'float', 'array'], 'probability': 0.0031794095411896706}, {'value': ['to', 'double', 'array'], 'probability': 0.0014916080981492996}, {'value': ['trim'], 'probability': 0.0014405744150280952}, {'value': ['to', 'object', 'array'], 'probability': 0.0012182674836367369}, {'value': ['get', 'bytes'], 'probability': 0.0006842443835921586}]","[0.8564837, 0.72012085, 0.6652523, 0.686203, 0.27827993, 0.82124007, 0.82483, 0.31686705, 0.7836335, 0.55387473]",0.8366739226737481
1259,1259,"public int hashCode() {if (!ordered)return super.hashCode();float[] items = this.items;int h = 1;for (int i = 0, n = size; i < n; i++) h = h * 31 + Float.floatToIntBits(items[i]);return h;}
","public int [MASK]() {if (!ordered)return super.[MASK]();float[] items = this.items;int h = 1;for (int i = 0, n = size; i < n; i++) h = h * 31 + Float.floatToIntBits(items[i]);return h;}
",hashCode,"[{'value': ['ordered'], 'probability': 0.24205408990383148}, {'value': ['order'], 'probability': 0.12322467565536499}, {'value': ['get'], 'probability': 0.10274473577737808}, {'value': ['size'], 'probability': 0.06454772502183914}, {'value': ['count'], 'probability': 0.05670776218175888}]","[0.001816404, 0.11961969, 0.13757937, 0.17934217, 0.0950139]",0.0462794757082001,"[{'value': ['hash', 'code'], 'probability': 0.9999585151672363}, {'value': ['get', 'hash', 'code'], 'probability': 1.38793075166177e-05}, {'value': ['calc', 'hash', 'code'], 'probability': 1.0880797162826639e-05}, {'value': ['get', 'id'], 'probability': 3.925234977941727e-06}, {'value': ['generate', 'hash', 'code'], 'probability': 3.3744602205842966e-06}, {'value': ['calculate', 'hash', 'code'], 'probability': 2.4954454147518845e-06}, {'value': ['hashcode'], 'probability': 2.175356257794192e-06}, {'value': ['hash'], 'probability': 1.6848737232066924e-06}, {'value': ['hash', 'code', 'of'], 'probability': 1.6556688251512242e-06}, {'value': ['sxhash'], 'probability': 1.4418761793422163e-06}]","[0.75676125, 0.6153521, 0.70661014, 0.24132282, 0.62317514, 0.72110593, 0.0, 1.0, 0.5694589, 0.0]",0.7567535623467873
1260,1260,"public boolean equals(Object object) {if (object == this)return true;if (!ordered)return false;if (!(object instanceof FloatArray))return false;FloatArray array = (FloatArray) object;if (!array.ordered)return false;int n = size;if (n != array.size)return false;float[] items1 = this.items;float[] items2 = array.items;for (int i = 0; i < n; i++) if (items1[i] != items2[i])return false;return true;}
","public boolean [MASK](Object object) {if (object == this)return true;if (!ordered)return false;if (!(object instanceof FloatArray))return false;FloatArray array = (FloatArray) object;if (!array.ordered)return false;int n = size;if (n != array.size)return false;float[] items1 = this.items;float[] items2 = array.items;for (int i = 0; i < n; i++) if (items1[i] != items2[i])return false;return true;}
",equals,"[{'value': ['ordered'], 'probability': 0.671451210975647}, {'value': ['equals'], 'probability': 0.08817919343709946}, {'value': ['order'], 'probability': 0.020881788805127144}, {'value': ['ordering'], 'probability': 0.017388319596648216}, {'value': ['is'], 'probability': 0.011990717612206936}]","[-0.019451225, 1.0, 0.17971729, 0.057654634, 0.3373858]",0.0839194782779123,"[{'value': ['equals'], 'probability': 0.999700665473938}, {'value': ['is', 'equal'], 'probability': 0.0002651567629072815}, {'value': ['equal'], 'probability': 1.9437198716332205e-05}, {'value': ['is', 'identical'], 'probability': 4.800264832738321e-06}, {'value': ['deep', 'equals'], 'probability': 3.686012632897473e-06}, {'value': ['matches'], 'probability': 2.137785259037628e-06}, {'value': ['is', 'same'], 'probability': 1.472354256293329e-06}, {'value': ['same', 'as'], 'probability': 1.2011986427751253e-06}, {'value': ['equals', 'ignore', 'case'], 'probability': 8.238736199928098e-07}, {'value': ['equivalent'], 'probability': 7.047206622701196e-07}]","[1.0, 0.5507263, 0.6404468, 0.31409773, 0.67461926, 0.21920882, 0.33838725, 0.2859683, 0.5611027, 0.53695774]",0.9998652882109674
1261,1261,"public boolean equals(Object object, float epsilon) {if (object == this)return true;if (!(object instanceof FloatArray))return false;FloatArray array = (FloatArray) object;int n = size;if (n != array.size)return false;if (!ordered)return false;if (!array.ordered)return false;float[] items1 = this.items;float[] items2 = array.items;for (int i = 0; i < n; i++) if (Math.abs(items1[i] - items2[i]) > epsilon)return false;return true;}
","public boolean [MASK](Object object, float epsilon) {if (object == this)return true;if (!(object instanceof FloatArray))return false;FloatArray array = (FloatArray) object;int n = size;if (n != array.size)return false;if (!ordered)return false;if (!array.ordered)return false;float[] items1 = this.items;float[] items2 = array.items;for (int i = 0; i < n; i++) if (Math.abs(items1[i] - items2[i]) > epsilon)return false;return true;}
",equals,"[{'value': ['ordered'], 'probability': 0.2954755127429962}, {'value': ['equals'], 'probability': 0.10712707787752151}, {'value': ['count'], 'probability': 0.03930883854627609}, {'value': ['is'], 'probability': 0.026886384934186935}, {'value': ['contains'], 'probability': 0.02655799686908722}]","[-0.019451225, 1.0, 0.18283634, 0.3373858, 0.20414257]",0.1230595036016183,"[{'value': ['equals'], 'probability': 0.9964358806610107}, {'value': ['is', 'equal'], 'probability': 0.003277580952271819}, {'value': ['equivalent'], 'probability': 0.0001088703575078398}, {'value': ['equal'], 'probability': 5.914675784879364e-05}, {'value': ['matches'], 'probability': 3.1452294933842495e-05}, {'value': ['epsilon', 'equals'], 'probability': 3.1418119760928676e-05}, {'value': ['deep', 'equals'], 'probability': 2.079555815726053e-05}, {'value': ['are', 'equal'], 'probability': 1.2667534974752925e-05}, {'value': ['is', 'identical'], 'probability': 1.2411343959684018e-05}, {'value': ['contains'], 'probability': 9.691771992947906e-06}]","[1.0, 0.5507263, 0.53695774, 0.6404468, 0.21920882, 0.7155806, 0.67461926, 0.4776952, 0.31409773, 0.20414257]",0.9983926038250841
1262,1262,"public String toString() {if (size == 0)return ""[]"";float[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append('[');buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append("", "");buffer.append(items[i]);}buffer.append(']');return buffer.toString();}
","public String [MASK]() {if (size == 0)return ""[]"";float[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append('[');buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append("", "");buffer.append(items[i]);}buffer.append(']');return buffer.[MASK]();}
",toString,"[{'value': ['size'], 'probability': 0.4809419512748718}, {'value': ['next'], 'probability': 0.14822497963905334}, {'value': ['list'], 'probability': 0.06926518678665161}, {'value': ['get'], 'probability': 0.026009369641542435}, {'value': ['expand'], 'probability': 0.02266382798552513}]","[0.45955554, 0.73751295, 0.48583958, 0.7566794, 0.6401671]",0.3981785388659862,"[{'value': ['to', 'string'], 'probability': 0.9995478987693787}, {'value': ['get', 'name'], 'probability': 0.00010026717063738033}, {'value': ['get', 'text'], 'probability': 7.682356226723641e-05}, {'value': ['get', 'label'], 'probability': 6.209044659044594e-05}, {'value': ['to', 'json'], 'probability': 5.292665446177125e-05}, {'value': ['get', 'string'], 'probability': 4.934642856824212e-05}, {'value': ['get', 'id'], 'probability': 4.1085295379161835e-05}, {'value': ['get', 'description'], 'probability': 2.5512044885545038e-05}, {'value': ['get', 'type', 'name'], 'probability': 2.4430861230939627e-05}, {'value': ['to', 'json', 'string'], 'probability': 1.950487967405934e-05}]","[0.84910345, 0.7662066, 0.6951814, 0.67679405, 0.770154, 0.6703567, 0.62274474, 0.70010555, 0.71424925, 0.728808]",0.8490407766057336
1263,1263,"public String toString(String separator) {if (size == 0)return """";float[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append(separator);buffer.append(items[i]);}return buffer.toString();}
","public String [MASK](String separator) {if (size == 0)return """";float[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append(separator);buffer.append(items[i]);}return buffer.[MASK]();}
",toString,"[{'value': ['add'], 'probability': 0.07894519716501236}, {'value': ['next'], 'probability': 0.05603490024805069}, {'value': ['read'], 'probability': 0.0559617355465889}, {'value': ['expand'], 'probability': 0.05499381572008133}, {'value': ['get'], 'probability': 0.04160678759217262}]","[0.55505466, 0.73751295, 0.5323113, 0.6401671, 0.7566794]",0.1816226618318777,"[{'value': ['to', 'string'], 'probability': 0.9757227897644043}, {'value': ['encode'], 'probability': 0.007100876420736313}, {'value': ['get', 'text'], 'probability': 0.003319726325571537}, {'value': ['get', 'path', 'string'], 'probability': 0.0026098410598933697}, {'value': ['to', 'csv'], 'probability': 0.0023823913652449846}, {'value': ['get', 'string', 'representation'], 'probability': 0.0023102383129298687}, {'value': ['to', 'byte', 'array'], 'probability': 0.001969079952687025}, {'value': ['get', 'separator'], 'probability': 0.0017383963568136096}, {'value': ['to', 'json'], 'probability': 0.0016157450154423714}, {'value': ['get', 'image', 'path'], 'probability': 0.0012308198492974043}]","[0.84910345, 0.19696154, 0.6951814, 0.6861634, 0.76971716, 0.6667916, 0.72012085, 0.574684, 0.770154, 0.70648265]",0.84189192047082
1264,1264,"public void addAll(ByteArray array) {addAll(array, 0, array.size);}
","public void [MASK](ByteArray array) {[MASK](array, 0, array.size);}
",addAll,"[{'value': ['array'], 'probability': 0.040364813059568405}, {'value': ['execute'], 'probability': 0.03790115565061569}, {'value': ['update'], 'probability': 0.03754288703203201}, {'value': ['read'], 'probability': 0.02927408739924431}, {'value': ['generate'], 'probability': 0.02498602122068405}]","[0.41265363, 0.24202506, 0.5117927, 0.36516917, 0.5112783]",0.0685086961130013,"[{'value': ['add', 'all'], 'probability': 0.988749623298645}, {'value': ['concat'], 'probability': 0.003150267293676734}, {'value': ['copy', 'into'], 'probability': 0.00201239250600338}, {'value': ['test', 'add', 'all'], 'probability': 0.001997231040149927}, {'value': ['add', 'objects', 'from', 'array'], 'probability': 0.001484674634411931}, {'value': ['trim'], 'probability': 0.0007718582637608051}, {'value': ['prepend'], 'probability': 0.0007238832185976207}, {'value': ['sort'], 'probability': 0.00041603780118748546}, {'value': ['read', 'byte', 'array'], 'probability': 0.0003552050038706511}, {'value': ['add', 'messages'], 'probability': 0.00033882842399179935}]","[0.8761935, 0.0, 0.5093182, 0.7602584, 0.71029466, 0.5967047, 0.0, 0.46858332, 0.44155413, 0.79597855]",0.8710159715521767
1265,1265,"public void addAll(ByteArray array, int offset, int length) {if (offset + length > array.size)throw new IllegalArgumentException(""offset + length must be <= size: "" + offset + "" + "" + length + "" <= "" + array.size);addAll(array.items, offset, length);}
","public void [MASK](ByteArray array, int offset, int length) {if (offset + length > array.size)throw new IllegalArgumentException(""offset + length must be <= size: "" + offset + "" + "" + length + "" <= "" + array.size);[MASK](array.items, offset, length);}
",addAll,"[{'value': ['array'], 'probability': 0.08839739859104156}, {'value': ['add'], 'probability': 0.08569992333650589}, {'value': ['evaluate'], 'probability': 0.04661606252193451}, {'value': ['read'], 'probability': 0.045284293591976166}, {'value': ['select'], 'probability': 0.0351913757622242}]","[0.41265363, 1.0, 0.33404627, 0.36516917, 0.45399264]",0.1702624055250591,"[{'value': ['add', 'all'], 'probability': 0.9964616894721985}, {'value': ['add'], 'probability': 0.0008152984082698822}, {'value': ['add', 'range'], 'probability': 0.0007936234469525516}, {'value': ['append'], 'probability': 0.0004886910901404917}, {'value': ['concat'], 'probability': 0.00044797625741921365}, {'value': ['set'], 'probability': 0.00030027152388356626}, {'value': ['to', 'list'], 'probability': 0.000244626629864797}, {'value': ['copy'], 'probability': 0.0001587776787346229}, {'value': ['add', 'contents'], 'probability': 0.00015652728325221688}, {'value': ['write', 'bytes'], 'probability': 0.00013264018343761563}]","[0.8761935, 1.0, 0.83414394, 0.105477236, 0.0, 0.5084879, 0.5584956, 0.33687755, 0.8711507, 0.42776152]",0.8751579888844849
1266,1266,"public void addAll(byte... array) {addAll(array, 0, array.length);}
","public void [MASK](byte... array) {[MASK](array, 0, array.length);}
",addAll,"[{'value': ['search'], 'probability': 0.05004679411649704}, {'value': ['write'], 'probability': 0.04491208493709564}, {'value': ['read'], 'probability': 0.043447915464639664}, {'value': ['evaluate'], 'probability': 0.03747563064098358}, {'value': ['array'], 'probability': 0.036129988729953766}]","[0.35030815, 0.45824197, 0.36516917, 0.33404627, 0.41265363]",0.0814060068510642,"[{'value': ['add', 'all'], 'probability': 0.8458133935928345}, {'value': ['append'], 'probability': 0.07577134668827057}, {'value': ['add', 'objects', 'from', 'array'], 'probability': 0.032176386564970016}, {'value': ['add', 'requests'], 'probability': 0.011141601949930191}, {'value': ['add', 'aliases'], 'probability': 0.007442291360348463}, {'value': ['add', 'range'], 'probability': 0.007024213206022978}, {'value': ['union'], 'probability': 0.006718659307807684}, {'value': ['add', 'statements'], 'probability': 0.005276610143482685}, {'value': ['add'], 'probability': 0.004451987333595753}, {'value': ['add', 'exceptions'], 'probability': 0.004183630924671888}]","[0.8761935, 0.105477236, 0.71029466, 0.8289604, 0.760145, 0.83414394, 0.23663513, 0.77349544, 1.0, 0.8540601]",0.8063918019879469
1267,1267,"public void addAll(byte[] array, int offset, int length) {byte[] items = this.items;int sizeNeeded = size + length;if (sizeNeeded > items.length)items = resize(Math.max(8, (int) (sizeNeeded * 1.75f)));System.arraycopy(array, offset, items, size, length);size += length;}
","public void [MASK](byte[] array, int offset, int length) {byte[] items = this.items;int sizeNeeded = size + length;if (sizeNeeded > items.length)items = resize(Math.max(8, (int) (sizeNeeded * 1.75f)));System.arraycopy(array, offset, items, size, length);size += length;}
",addAll,"[{'value': ['array'], 'probability': 0.21930941939353943}, {'value': ['search'], 'probability': 0.07386332005262375}, {'value': ['process'], 'probability': 0.05641836300492287}, {'value': ['scan'], 'probability': 0.04929450526833534}, {'value': ['copy'], 'probability': 0.03607013449072838}]","[0.41265363, 0.35030815, 0.44585663, 0.25275394, 0.33687755]",0.1661388504492778,"[{'value': ['add', 'all'], 'probability': 0.9973856806755066}, {'value': ['drain', 'to'], 'probability': 0.0012099810410290956}, {'value': ['ensure', 'capacity'], 'probability': 0.0009496561833657324}, {'value': ['concat'], 'probability': 0.00026308250380679965}, {'value': ['add', 'quoted'], 'probability': 4.903153239865787e-05}, {'value': ['retain', 'all'], 'probability': 4.173445267952047e-05}, {'value': ['put', 'sub', 'buffer'], 'probability': 3.750747418962419e-05}, {'value': ['add', 'all', 'absent'], 'probability': 2.570155447756406e-05}, {'value': ['bounds', 'check'], 'probability': 2.0202722225803882e-05}, {'value': ['skip', 'bytes'], 'probability': 1.7325814042123966e-05}]","[0.8761935, 0.6748535, 0.49794227, 0.0, 0.73589224, 0.6189039, 0.45684004, 0.7972124, 0.35716575, 0.3712724]",0.8753054686677615
1268,1268,"public byte get(int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);return items[index];}
","public byte [MASK](int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);return items[index];}
",get,"[{'value': ['compare'], 'probability': 0.11501745134592056}, {'value': ['index'], 'probability': 0.0718996599316597}, {'value': ['size'], 'probability': 0.06210368126630783}, {'value': ['item'], 'probability': 0.05505146086215973}, {'value': ['add'], 'probability': 0.044560521841049194}]","[0.46117607, 0.24769717, 0.43109724, 0.3522904, 0.54842544]",0.1414575884166256,"[{'value': ['get'], 'probability': 0.994594395160675}, {'value': ['get', 'card'], 'probability': 0.0019359159050509334}, {'value': ['peek'], 'probability': 0.001211365801282227}, {'value': ['at'], 'probability': 0.0003814437077380717}, {'value': ['get', 'double'], 'probability': 0.0003356922243256122}, {'value': ['as', 'int'], 'probability': 0.000320365303196013}, {'value': ['get', 'item'], 'probability': 0.00032025043037720025}, {'value': ['get', 'size'], 'probability': 0.00031813906389288604}, {'value': ['get', 'depth'], 'probability': 0.00029721742612309754}, {'value': ['get', 'boolean'], 'probability': 0.00028529088012874126}]","[1.0, 0.8599779, 0.32689062, 0.5592328, 0.8848232, 0.4417901, 0.84754527, 0.83762157, 0.8296087, 0.65116465]",0.998277354871573
1269,1269,"public void set(int index, byte value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] = value;}
","public void [MASK](int index, byte value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] = value;}
",set,"[{'value': ['evaluate'], 'probability': 0.17606478929519653}, {'value': ['put'], 'probability': 0.12566281855106354}, {'value': ['add'], 'probability': 0.06648320704698563}, {'value': ['compare'], 'probability': 0.04900874197483063}, {'value': ['set'], 'probability': 0.029942473396658897}]","[0.31490386, 0.7944568, 0.5084879, 0.27144608, 1.0]",0.2323287683876351,"[{'value': ['set'], 'probability': 0.9731085300445557}, {'value': ['set', 'item'], 'probability': 0.017377188429236412}, {'value': ['check', 'index'], 'probability': 0.004069341346621513}, {'value': ['check', 'bound', 'exclusive'], 'probability': 0.001908315229229629}, {'value': ['range', 'check'], 'probability': 0.0013798336731269956}, {'value': ['set', 'element', 'at'], 'probability': 0.0007439868641085923}, {'value': ['set', 'data'], 'probability': 0.0003986659867223352}, {'value': ['at'], 'probability': 0.00035440674400888383}, {'value': ['set', 'element'], 'probability': 0.00033211521804332733}, {'value': ['assign'], 'probability': 0.0003275470226071775}]","[1.0, 0.83644855, 0.5014283, 0.6194909, 0.621476, 0.87148684, 0.8273227, 0.6249999, 0.86911386, 0.17613421]",0.9932698969899877
1270,1270,"public void incr(int index, byte value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] += value;}
","public void [MASK](int index, byte value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] += value;}
",incr,"[{'value': ['evaluate'], 'probability': 0.1566341370344162}, {'value': ['put'], 'probability': 0.14703460037708282}, {'value': ['add'], 'probability': 0.07041212916374207}, {'value': ['compare'], 'probability': 0.044104110449552536}, {'value': ['index'], 'probability': 0.030817069113254547}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['check', 'index'], 'probability': 0.2752900719642639}, {'value': ['set'], 'probability': 0.2023543417453766}, {'value': ['add'], 'probability': 0.11558657884597778}, {'value': ['set', 'element', 'at'], 'probability': 0.08474999666213989}, {'value': ['put', 'byte'], 'probability': 0.06874216347932816}, {'value': ['check', 'type'], 'probability': 0.06861457973718643}, {'value': ['to', 'base'], 'probability': 0.06671085953712463}, {'value': ['at'], 'probability': 0.043523579835891724}, {'value': ['range', 'check'], 'probability': 0.03982894867658615}, {'value': ['set', 'byte'], 'probability': 0.03459884226322174}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1271,1271,"public void mul(int index, byte value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] *= value;}
","public void [MASK](int index, byte value) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);items[index] *= value;}
",mul,"[{'value': ['evaluate'], 'probability': 0.14671367406845093}, {'value': ['put'], 'probability': 0.10793028771877289}, {'value': ['add'], 'probability': 0.06268606334924698}, {'value': ['compare'], 'probability': 0.05765198543667793}, {'value': ['index'], 'probability': 0.03408920019865036}]","[-0.12822376, -0.09742199, -0.091368824, -0.26408878, -0.18524252]",-0.056594526193076,"[{'value': ['set', 'count'], 'probability': 0.22389620542526245}, {'value': ['set', 'times'], 'probability': 0.19212156534194946}, {'value': ['set', 'quick'], 'probability': 0.13350163400173187}, {'value': ['set', 'item'], 'probability': 0.1274762600660324}, {'value': ['set', 'byte'], 'probability': 0.10311967134475708}, {'value': ['set', 'out'], 'probability': 0.06373044103384018}, {'value': ['set', 'attribute', 'value'], 'probability': 0.06083567440509796}, {'value': ['list', 'size'], 'probability': 0.03252875432372093}, {'value': ['set', 'items'], 'probability': 0.03209972754120827}, {'value': ['mul', 'assign'], 'probability': 0.030690032988786697}]","[-0.14632729, -0.19274941, -0.1133308, -0.17063811, -0.050174765, -0.10696802, -0.22522023, -0.25842026, -0.18037413, 0.7177816]",-0.1245354559643477
1272,1272,"public void insert(int index, byte value) {if (index > size)throw new IndexOutOfBoundsException(""index can't be > size: "" + index + "" > "" + size);byte[] items = this.items;if (size == items.length)items = resize(Math.max(8, (int) (size * 1.75f)));if (ordered)System.arraycopy(items, index, items, index + 1, size - index);elseitems[size] = items[index];size++;items[index] = value;}
","public void [MASK](int index, byte value) {if (index > size)throw new IndexOutOfBoundsException(""index can't be > size: "" + index + "" > "" + size);byte[] items = this.items;if (size == items.length)items = resize(Math.max(8, (int) (size * 1.75f)));if (ordered)System.arraycopy(items, index, items, index + 1, size - index);elseitems[size] = items[index];size++;items[index] = value;}
",insert,"[{'value': ['index'], 'probability': 0.09361692517995834}, {'value': ['compare'], 'probability': 0.07190321385860443}, {'value': ['count'], 'probability': 0.06695063412189484}, {'value': ['search'], 'probability': 0.05110209062695503}, {'value': ['evaluate'], 'probability': 0.0401388444006443}]","[0.08625044, 0.2919383, 0.031412024, 0.21685319, 0.25345668]",0.0524239677299147,"[{'value': ['add'], 'probability': 0.29598182439804077}, {'value': ['set'], 'probability': 0.21747000515460968}, {'value': ['put'], 'probability': 0.180550679564476}, {'value': ['set', 'item'], 'probability': 0.0844423845410347}, {'value': ['add', 'value'], 'probability': 0.06185058131814003}, {'value': ['move'], 'probability': 0.04329857975244522}, {'value': ['remove', 'at'], 'probability': 0.0398477241396904}, {'value': ['put', 'byte'], 'probability': 0.02937164157629013}, {'value': ['insert'], 'probability': 0.023869002237915993}, {'value': ['insert', 'item'], 'probability': 0.023317523300647736}]","[0.4981244, 0.31022063, 0.35016164, 0.47022155, 0.36977416, 0.30411452, 0.41847384, 0.43471032, 1.0, 0.84467006]",0.4268744771367388
1273,1273,"public void swap(int first, int second) {if (first >= size)throw new IndexOutOfBoundsException(""first can't be >= size: "" + first + "" >= "" + size);if (second >= size)throw new IndexOutOfBoundsException(""second can't be >= size: "" + second + "" >= "" + size);byte[] items = this.items;byte firstValue = items[first];items[first] = items[second];items[second] = firstValue;}
","public void [MASK](int first, int second) {if (first >= size)throw new IndexOutOfBoundsException(""first can't be >= size: "" + first + "" >= "" + size);if (second >= size)throw new IndexOutOfBoundsException(""second can't be >= size: "" + second + "" >= "" + size);byte[] items = this.items;byte firstValue = items[first];items[first] = items[second];items[second] = firstValue;}
",swap,"[{'value': ['next'], 'probability': 0.08957614749670029}, {'value': ['read'], 'probability': 0.06848061084747314}, {'value': ['start'], 'probability': 0.05606045573949814}, {'value': ['compare'], 'probability': 0.05456996709108353}, {'value': ['evaluate'], 'probability': 0.05429747700691223}]","[0.339146, 0.19274043, 0.31498596, 0.2790103, 0.23767383]",0.0893673018433869,"[{'value': ['assert', 'equals'], 'probability': 0.3249201476573944}, {'value': ['check'], 'probability': 0.2525502145290375}, {'value': ['pop'], 'probability': 0.12028147280216217}, {'value': ['like'], 'probability': 0.10303586721420288}, {'value': ['remove', 'index'], 'probability': 0.051134444773197174}, {'value': ['modulo'], 'probability': 0.04701314494013786}, {'value': ['get', 'num', 'nondefault', 'elements'], 'probability': 0.0318770706653595}, {'value': ['truncate'], 'probability': 0.0284469835460186}, {'value': ['set', 'item'], 'probability': 0.021675094962120056}, {'value': ['frame'], 'probability': 0.019065553322434425}]","[0.27393213, 0.37294447, 0.16064274, 0.22858907, 0.3947497, 0.06341855, 0.3320512, 0.03494379, 0.39001173, 0.14209756]",0.27197687955320665
1274,1274,"public boolean contains(byte value) {int i = size - 1;byte[] items = this.items;while (i >= 0) if (items[i--] == value)return true;return false;}
","public boolean [MASK](byte value) {int i = size - 1;byte[] items = this.items;while (i >= 0) if (items[i--] == value)return true;return false;}
",contains,"[{'value': ['equals'], 'probability': 0.17436954379081726}, {'value': ['value'], 'probability': 0.11350890249013901}, {'value': ['contains'], 'probability': 0.07400069385766983}, {'value': ['evaluate'], 'probability': 0.04192458465695381}, {'value': ['matches'], 'probability': 0.037290919572114944}]","[0.20414257, 0.38048333, 0.99999994, 0.10717903, 0.28268832]",0.1678203251991816,"[{'value': ['contains'], 'probability': 0.9980494976043701}, {'value': ['contains', 'value'], 'probability': 0.0014610012294724584}, {'value': ['match'], 'probability': 0.00011417327186791226}, {'value': ['in'], 'probability': 0.00011191232624696568}, {'value': ['exists'], 'probability': 8.461704419460148e-05}, {'value': ['intersects'], 'probability': 6.979797763051465e-05}, {'value': ['contains', 'all'], 'probability': 4.7472469304921106e-05}, {'value': ['index', 'of'], 'probability': 3.2195730454986915e-05}, {'value': ['is', 'valid', 'value'], 'probability': 1.4928119526302908e-05}, {'value': ['equals'], 'probability': 1.4319162801257335e-05}]","[0.99999994, 0.82444495, 0.21868116, 0.3999801, 0.5643323, 0.1944798, 0.8578542, 0.45148757, 0.52571505, 0.20414257]",0.9994510409989417
1275,1275,"public int indexOf(byte value) {byte[] items = this.items;for (int i = 0, n = size; i < n; i++) if (items[i] == value)return i;return -1;}
","public int [MASK](byte value) {byte[] items = this.items;for (int i = 0, n = size; i < n; i++) if (items[i] == value)return i;return -1;}
",indexOf,"[{'value': ['compare'], 'probability': 0.43668973445892334}, {'value': ['size'], 'probability': 0.10255331546068192}, {'value': ['read'], 'probability': 0.05852480232715607}, {'value': ['evaluate'], 'probability': 0.04204266145825386}, {'value': ['value'], 'probability': 0.03986020013689995}]","[0.27857816, 0.32011688, 0.25420102, 0.16766599, 0.5229666]",0.197253014178739,"[{'value': ['index', 'of'], 'probability': 0.995963454246521}, {'value': ['first', 'index', 'of'], 'probability': 0.001562174060381949}, {'value': ['get', 'index'], 'probability': 0.0006213769083842635}, {'value': ['index', 'of', 'value'], 'probability': 0.0005627169157378376}, {'value': ['find', 'item'], 'probability': 0.00032493285834789276}, {'value': ['get', 'selected', 'index'], 'probability': 0.0002738892799243331}, {'value': ['get', 'component', 'index'], 'probability': 0.00026704222545959055}, {'value': ['last', 'index', 'of'], 'probability': 0.0002565830945968628}, {'value': ['find'], 'probability': 9.268007124774158e-05}, {'value': ['count'], 'probability': 7.51285842852667e-05}]","[0.85326165, 0.7491561, 0.85867995, 0.8053415, 0.3003981, 0.7964892, 0.8513591, 0.7536404, 0.215606, 0.16607247]",0.8527434141648078
1276,1276,"public int lastIndexOf(byte value) {byte[] items = this.items;for (int i = size - 1; i >= 0; i--) if (items[i] == value)return i;return -1;}
","public int [MASK](byte value) {byte[] items = this.items;for (int i = size - 1; i >= 0; i--) if (items[i] == value)return i;return -1;}
",lastIndexOf,"[{'value': ['compare'], 'probability': 0.387832373380661}, {'value': ['size'], 'probability': 0.18897709250450134}, {'value': ['read'], 'probability': 0.04969767853617668}, {'value': ['get'], 'probability': 0.041215285658836365}, {'value': ['evaluate'], 'probability': 0.03581279516220093}]","[0.23642024, 0.40456098, 0.4283292, 0.62151444, 0.2202089]",0.2229333408788957,"[{'value': ['last', 'index', 'of'], 'probability': 0.92290860414505}, {'value': ['index', 'of'], 'probability': 0.032265402376651764}, {'value': ['get', 'index'], 'probability': 0.018261883407831192}, {'value': ['first', 'index', 'of'], 'probability': 0.011737366206943989}, {'value': ['index', 'of', 'ignore', 'case'], 'probability': 0.005093058571219444}, {'value': ['get', 'selected', 'index'], 'probability': 0.0030264195520430803}, {'value': ['index', 'of', 'value'], 'probability': 0.002298859180882573}, {'value': ['get', 'span', 'start'], 'probability': 0.0015389013569802046}, {'value': ['get', 'count'], 'probability': 0.0015325478743761778}, {'value': ['peek'], 'probability': 0.00133699516300112}]","[0.80715156, 0.5947453, 0.57837963, 0.7450149, 0.67995423, 0.62005335, 0.58653533, 0.73765475, 0.605976, 0.10262002]",0.792312648094695
1277,1277,"public boolean removeValue(byte value) {byte[] items = this.items;for (int i = 0, n = size; i < n; i++) {if (items[i] == value) {removeIndex(i);return true;}}return false;}
","public boolean [MASK](byte value) {byte[] items = this.items;for (int i = 0, n = size; i < n; i++) {if (items[i] == value) {removeIndex(i);return true;}}return false;}
",removeValue,"[{'value': ['remove'], 'probability': 0.24464531242847443}, {'value': ['add'], 'probability': 0.09806285798549652}, {'value': ['contains'], 'probability': 0.07318628579378128}, {'value': ['equals'], 'probability': 0.06721840053796768}, {'value': ['put'], 'probability': 0.034795407205820084}]","[0.99999994, 0.67838424, 0.36894462, 0.04568455, 0.63358456]",0.3632879568193586,"[{'value': ['remove', 'value'], 'probability': 0.9630821347236633}, {'value': ['remove'], 'probability': 0.03231702372431755}, {'value': ['remove', 'item'], 'probability': 0.0022949695121496916}, {'value': ['remove', 'from', 'list'], 'probability': 0.0013327181804925203}, {'value': ['remove', 'all'], 'probability': 0.0004630457842722535}, {'value': ['remove', 'attribute'], 'probability': 0.00015242828521877527}, {'value': ['do', 'remove'], 'probability': 0.00014825259859208018}, {'value': ['remove', 'vertex'], 'probability': 8.566842006985098e-05}, {'value': ['remove', 'row'], 'probability': 7.096270564943552e-05}, {'value': ['remove', 'at'], 'probability': 5.2838007832178846e-05}]","[0.7676675, 0.99999994, 0.83545727, 0.7401141, 0.84920514, 0.81772447, 0.83079267, 0.6833006, 0.8104942, 0.7718763]",0.775345457844523
1278,1278,"public int removeIndex(int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);byte[] items = this.items;int value = items[index];size--;if (ordered)System.arraycopy(items, index + 1, items, index, size - index);elseitems[index] = items[size];return value;}
","public int [MASK](int index) {if (index >= size)throw new IndexOutOfBoundsException(""index can't be >= size: "" + index + "" >= "" + size);byte[] items = this.items;int value = items[index];size--;if (ordered)System.arraycopy(items, index + 1, items, index, size - index);elseitems[index] = items[size];return value;}
",removeIndex,"[{'value': ['compare'], 'probability': 0.35129204392433167}, {'value': ['index'], 'probability': 0.08688000589609146}, {'value': ['get'], 'probability': 0.08231551200151443}, {'value': ['count'], 'probability': 0.070647232234478}, {'value': ['read'], 'probability': 0.04800692945718765}]","[0.18829212, 0.09149969, 0.48684114, 0.1747158, 0.34332725]",0.1429948691782795,"[{'value': ['remove', 'index'], 'probability': 0.48280051350593567}, {'value': ['remove', 'at'], 'probability': 0.15102876722812653}, {'value': ['pop'], 'probability': 0.11335322260856628}, {'value': ['get', 'item', 'count'], 'probability': 0.08587397634983063}, {'value': ['size'], 'probability': 0.04759905859827995}, {'value': ['get', 'num', 'nondefault', 'elements'], 'probability': 0.03870082646608353}, {'value': ['get', 'size'], 'probability': 0.035649605095386505}, {'value': ['remove'], 'probability': 0.018384354189038277}, {'value': ['get', 'count'], 'probability': 0.017557501792907715}, {'value': ['calc', 'size'], 'probability': 0.009052060544490814}]","[0.6131121, 0.7718763, 0.2049971, 0.45173335, 0.37715468, 0.47812778, 0.50905836, 0.99999994, 0.39474952, 0.2389899]",0.5566979806793332
1279,1279,"public void removeRange(int start, int end) {if (end >= size)throw new IndexOutOfBoundsException(""end can't be >= size: "" + end + "" >= "" + size);if (start > end)throw new IndexOutOfBoundsException(""start can't be > end: "" + start + "" > "" + end);byte[] items = this.items;int count = end - start + 1;if (ordered)System.arraycopy(items, start + count, items, start, size - (start + count));else {int lastIndex = this.size - 1;for (int i = 0; i < count; i++) items[start + i] = items[lastIndex - i];}size -= count;}
","public void [MASK](int start, int end) {if (end >= size)throw new IndexOutOfBoundsException(""end can't be >= size: "" + end + "" >= "" + size);if (start > end)throw new IndexOutOfBoundsException(""start can't be > end: "" + start + "" > "" + end);byte[] items = this.items;int count = end - start + 1;if (ordered)System.arraycopy(items, start + count, items, start, size - (start + count));else {int lastIndex = this.size - 1;for (int i = 0; i < count; i++) items[start + i] = items[lastIndex - i];}size -= count;}
",removeRange,"[{'value': ['start'], 'probability': 0.4648207426071167}, {'value': ['read'], 'probability': 0.05104757845401764}, {'value': ['count'], 'probability': 0.032913029193878174}, {'value': ['next'], 'probability': 0.0277833491563797}, {'value': ['write'], 'probability': 0.020400062203407288}]","[0.3728393, 0.34332725, 0.1747158, 0.4148229, 0.3362492]",0.2149645666675712,"[{'value': ['pop'], 'probability': 0.246475487947464}, {'value': ['count'], 'probability': 0.19776023924350739}, {'value': ['truncate'], 'probability': 0.14180567860603333}, {'value': ['size'], 'probability': 0.0948498472571373}, {'value': ['check'], 'probability': 0.09082800894975662}, {'value': ['get', 'num', 'nondefault', 'elements'], 'probability': 0.0904494896531105}, {'value': ['flush', 'buffer'], 'probability': 0.05993799865245819}, {'value': ['remove', 'index'], 'probability': 0.03533857315778732}, {'value': ['modulo'], 'probability': 0.024808747693896294}, {'value': ['check', 'size'], 'probability': 0.017745912075042725}]","[0.2049971, 0.1747158, 0.10390935, 0.37715468, 0.49686256, 0.47812778, 0.404536, 0.6131121, 0.1257206, 0.5066565]",0.2819856864441854
1280,1280,"public boolean removeAll(ByteArray array) {int size = this.size;int startSize = size;byte[] items = this.items;for (int i = 0, n = array.size; i < n; i++) {int item = array.get(i);for (int ii = 0; ii < size; ii++) {if (item == items[ii]) {removeIndex(ii);size--;break;}}}return size != startSize;}
","public boolean [MASK](ByteArray array) {int size = this.size;int startSize = size;byte[] items = this.items;for (int i = 0, n = array.size; i < n; i++) {int item = array.get(i);for (int ii = 0; ii < size; ii++) {if (item == items[ii]) {removeIndex(ii);size--;break;}}}return size != startSize;}
",removeAll,"[{'value': ['equals'], 'probability': 0.09497898817062378}, {'value': ['add'], 'probability': 0.06578607112169266}, {'value': ['contains'], 'probability': 0.060422949492931366}, {'value': ['remove'], 'probability': 0.058014877140522}, {'value': ['matches'], 'probability': 0.04204486310482025}]","[0.04568455, 0.67838424, 0.36894462, 0.99999994, 0.13965063]",0.1351464935462136,"[{'value': ['add'], 'probability': 0.4653891623020172}, {'value': ['is', 'in', 'use'], 'probability': 0.10773888975381851}, {'value': ['init'], 'probability': 0.09119870513677597}, {'value': ['finish'], 'probability': 0.08693058788776398}, {'value': ['allocate'], 'probability': 0.06982851773500443}, {'value': ['remove'], 'probability': 0.05956537649035454}, {'value': ['add', 'all'], 'probability': 0.04016144946217537}, {'value': ['_'], 'probability': 0.034640949219465256}, {'value': ['enter'], 'probability': 0.022483371198177338}, {'value': ['after'], 'probability': 0.022062892094254494}]","[0.67838424, 0.48361012, -0.13273348, 0.2444726, 0.32412246, 0.99999994, 0.66067475, 0.38498446, 0.42775658, 0.4227678]",0.5179764528091405
1281,1281,"public byte pop() {return items[--size];}
","public byte [MASK]() {return items[--size];}
",pop,"[{'value': ['size'], 'probability': 0.7143353223800659}, {'value': ['sizes'], 'probability': 0.0626668855547905}, {'value': ['items'], 'probability': 0.021751150488853455}, {'value': ['get'], 'probability': 0.015497848391532898}, {'value': ['expand'], 'probability': 0.014269609935581684}]","[0.24893323, 0.15222916, 0.24314585, 0.38630247, 0.13852753]",0.2006138164641415,"[{'value': ['pop'], 'probability': 0.99468994140625}, {'value': ['remove', 'last'], 'probability': 0.004107492510229349}, {'value': ['previous'], 'probability': 0.0007198222447186708}, {'value': ['dequeue'], 'probability': 0.0003710341698024422}, {'value': ['shift'], 'probability': 3.413362355786376e-05}, {'value': ['poll', 'first'], 'probability': 2.3289188902708702e-05}, {'value': ['duplicate'], 'probability': 1.9029121176572517e-05}, {'value': ['close', 'action'], 'probability': 1.8476261175237596e-05}, {'value': ['wait', 'until', 'finished'], 'probability': 1.1484431524877436e-05}, {'value': ['get', 'item', 'count'], 'probability': 5.324228823155863e-06}]","[1.0, 0.31590593, 0.34230047, 0.0, 0.24850689, 0.33559886, 0.0852977, 0.33008313, 0.28108573, 0.3604093]",0.9962630852600174
1282,1282,"public byte peek() {return items[size - 1];}
","public byte [MASK]() {return items[size - 1];}
",peek,"[{'value': ['size'], 'probability': 0.8302991986274719}, {'value': ['sizes'], 'probability': 0.04289368912577629}, {'value': ['count'], 'probability': 0.008895703591406345}, {'value': ['items'], 'probability': 0.008489513769745827}, {'value': ['get'], 'probability': 0.008200782351195812}]","[0.045054156, 0.03208961, -0.09931113, 0.117878154, 0.32689062]",0.0415829162971119,"[{'value': ['peek'], 'probability': 0.9868339896202087}, {'value': ['get', 'last'], 'probability': 0.0043798633851110935}, {'value': ['peek', 'last'], 'probability': 0.004176681395620108}, {'value': ['read', 'byte'], 'probability': 0.0022215931676328182}, {'value': ['last'], 'probability': 0.001958661712706089}, {'value': ['last', 'char'], 'probability': 0.00010256889800075442}, {'value': ['max', 'value'], 'probability': 9.512125689070672e-05}, {'value': ['get', 'end'], 'probability': 9.414683881914243e-05}, {'value': ['top'], 'probability': 7.107470446499065e-05}, {'value': ['get', 'max'], 'probability': 6.621985812671483e-05}]","[1.0000001, 0.23819597, 0.6559036, 0.23116788, 0.10262002, 0.19399853, 0.11722417, 0.26807413, 0.15912856, 0.28473702]",0.9914178656796221
1283,1283,"public byte first() {if (size == 0)throw new IllegalStateException(""Array is empty."");return items[0];}
","public byte [MASK]() {if (size == 0)throw new IllegalStateException(""Array is empty."");return items[0];}
",first,"[{'value': ['size'], 'probability': 0.9007955193519592}, {'value': ['count'], 'probability': 0.021753448992967606}, {'value': ['sizes'], 'probability': 0.01469762995839119}, {'value': ['expand'], 'probability': 0.010306909680366516}, {'value': ['list'], 'probability': 0.00377529370598495}]","[0.4233269, 0.42523217, 0.14145347, 0.38498655, 0.5974765]",0.3988839513275048,"[{'value': ['peek'], 'probability': 0.27352064847946167}, {'value': ['min'], 'probability': 0.22819945216178894}, {'value': ['get', 'first', 'item'], 'probability': 0.1329898089170456}, {'value': ['max'], 'probability': 0.13015873730182648}, {'value': ['get', 'item'], 'probability': 0.04952353984117508}, {'value': ['get', 'last'], 'probability': 0.049333758652210236}, {'value': ['min', 'value'], 'probability': 0.03752566874027252}, {'value': ['depth'], 'probability': 0.03632158786058426}, {'value': ['peek', 'min'], 'probability': 0.032851364463567734}, {'value': ['first'], 'probability': 0.02957540936768055}]","[0.16617282, 0.19325696, 0.83713275, 0.31381834, 0.59267145, 0.80370796, 0.42686126, 0.31010488, 0.24727833, 0.99999994]",0.37571086993573166
1284,1284,"public void clear() {size = 0;}
","public void [MASK]() {size = 0;}
",clear,"[{'value': ['size'], 'probability': 0.5672956109046936}, {'value': ['expand'], 'probability': 0.08306580036878586}, {'value': ['next'], 'probability': 0.02566731534898281}, {'value': ['build'], 'probability': 0.022996824234724045}, {'value': ['count'], 'probability': 0.015339711681008339}]","[0.36001065, 0.3758312, 0.61128706, 0.51005095, 0.34894526]",0.2682235515315728,"[{'value': ['clear'], 'probability': 0.8457370400428772}, {'value': ['reset'], 'probability': 0.13568919897079468}, {'value': ['reset', 'writer'], 'probability': 0.006444792728871107}, {'value': ['remove', 'all', 'elements'], 'probability': 0.0036202799528837204}, {'value': ['remove', 'all'], 'probability': 0.0034583385568112135}, {'value': ['init'], 'probability': 0.0019673060160130262}, {'value': ['set', 'empty'], 'probability': 0.001840800978243351}, {'value': ['close'], 'probability': 0.0005058564129285514}, {'value': ['n'], 'probability': 0.00038075679913163185}, {'value': ['init', 'fields'], 'probability': 0.00035561551339924335}]","[1.0, 0.10589813, 0.2412056, 0.70545393, 0.71209234, -0.2771442, 0.67174983, 0.6670826, 0.24322042, 0.15956345]",0.8678555190582122
1285,1285,"public byte[] shrink() {if (items.length != size)resize(size);return items;}
","public byte[] [MASK]() {if (items.length != size)resize(size);return items;}
",shrink,"[{'value': ['size'], 'probability': 0.4417542815208435}, {'value': ['sizes'], 'probability': 0.27477240562438965}, {'value': ['items'], 'probability': 0.12855744361877441}, {'value': ['bits'], 'probability': 0.014310749247670174}, {'value': ['columns'], 'probability': 0.007156538777053356}]","[0.42053863, 0.31739143, 0.25753754, 0.17919427, 0.14787264]",0.3097161764601677,"[{'value': ['to', 'array'], 'probability': 0.5237848162651062}, {'value': ['get', 'items'], 'probability': 0.2425653636455536}, {'value': ['get', 'size'], 'probability': 0.07199153304100037}, {'value': ['get', 'bytes'], 'probability': 0.06354521214962006}, {'value': ['get', 'array'], 'probability': 0.04679783061146736}, {'value': ['get', 'item', 'count'], 'probability': 0.024842197075486183}, {'value': ['to', 'byte', 'array'], 'probability': 0.008578579872846603}, {'value': ['get', 'data'], 'probability': 0.0066647897474467754}, {'value': ['get', 'length'], 'probability': 0.006051854230463505}, {'value': ['size'], 'probability': 0.0051778769120574}]","[0.35016704, 0.344897, 0.4392732, 0.3617393, 0.28372055, 0.32471573, 0.342876, 0.3676555, 0.37117937, 0.42053863]",0.3528427114479754
1286,1286,"public byte[] ensureCapacity(int additionalCapacity) {int sizeNeeded = size + additionalCapacity;if (sizeNeeded > items.length)resize(Math.max(8, sizeNeeded));return items;}
","public byte[] [MASK](int additionalCapacity) {int sizeNeeded = size + additionalCapacity;if (sizeNeeded > items.length)resize(Math.max(8, sizeNeeded));return items;}
",ensureCapacity,"[{'value': ['compare'], 'probability': 0.240286186337471}, {'value': ['size'], 'probability': 0.13571730256080627}, {'value': ['evaluate'], 'probability': 0.05845066159963608}, {'value': ['get'], 'probability': 0.043938133865594864}, {'value': ['min'], 'probability': 0.03123743273317814}]","[0.36806354, 0.33820274, 0.5646883, 0.5819947, 0.017501293]",0.1934654116377218,"[{'value': ['ensure', 'capacity'], 'probability': 0.9511573910713196}, {'value': ['grow'], 'probability': 0.04828353598713875}, {'value': ['check', 'available'], 'probability': 0.00016849370149429888}, {'value': ['make', 'space'], 'probability': 0.0001399862376274541}, {'value': ['reserve'], 'probability': 0.00011892584734596312}, {'value': ['get', 'ranges'], 'probability': 4.858100874116644e-05}, {'value': ['remaining'], 'probability': 3.300726166344248e-05}, {'value': ['reserve', 'space'], 'probability': 2.0337123714853078e-05}, {'value': ['expand', 'buffer'], 'probability': 1.5616704331478104e-05}, {'value': ['add', 'layers'], 'probability': 1.4085850125411525e-05}]","[0.859025, 0.37427303, 0.6062608, 0.58638984, 0.3527641, 0.4933087, 0.4808065, 0.44909573, 0.55374193, 0.36781865]",0.8354281910993304
1287,1287,"protected byte[] resize(int newSize) {byte[] newItems = new byte[newSize];byte[] items = this.items;System.arraycopy(items, 0, newItems, 0, Math.min(size, newItems.length));this.items = newItems;return newItems;}
","protected byte[] [MASK](int newSize) {byte[] newItems = new byte[newSize];byte[] items = this.items;System.arraycopy(items, 0, newItems, 0, Math.min(size, newItems.length));this.items = newItems;return newItems;}
",resize,"[{'value': ['compare'], 'probability': 0.14923568069934845}, {'value': ['size'], 'probability': 0.09652191400527954}, {'value': ['evaluate'], 'probability': 0.06647806614637375}, {'value': ['read'], 'probability': 0.0516175739467144}, {'value': ['get'], 'probability': 0.033767350018024445}]","[0.195084, 0.041446958, 0.25900555, 0.049979586, -0.025137851]",0.0520632082862778,"[{'value': ['resize'], 'probability': 0.9986249208450317}, {'value': ['copy', 'of'], 'probability': 0.0013094174209982157}, {'value': ['resize', 'array'], 'probability': 1.8974718841491267e-05}, {'value': ['with', 'items'], 'probability': 1.0374073099228553e-05}, {'value': ['search', 'users'], 'probability': 1.0319190550944768e-05}, {'value': ['transfer'], 'probability': 7.5753127930511255e-06}, {'value': ['write', 'bytes'], 'probability': 6.8626786742242984e-06}, {'value': ['new', 'array'], 'probability': 4.6096347432467155e-06}, {'value': ['int', 'array'], 'probability': 3.7383967992354883e-06}, {'value': ['from', 'array'], 'probability': 3.1260030937119154e-06}]","[1.0, -0.15786467, 0.6626351, -0.099753134, -0.0054717558, -0.022781033, 0.21935248, -0.08132391, -0.0010825247, -0.17254467]",0.9984301065768317
1288,1288,"public void sort() {Arrays.sort(items, 0, size);}
","public void [MASK]() {Arrays.[MASK](items, 0, size);}
",sort,"[{'value': ['add'], 'probability': 0.06992413848638535}, {'value': ['list'], 'probability': 0.06309846043586731}, {'value': ['test'], 'probability': 0.05644179508090019}, {'value': ['evaluate'], 'probability': 0.0431295707821846}, {'value': ['consume'], 'probability': 0.04284244775772095}]","[0.46858332, 0.4064386, 0.4086159, 0.34478912, 0.22773433]",0.1061012507290966,"[{'value': ['sort'], 'probability': 0.9999042749404907}, {'value': ['sort', 'desc'], 'probability': 2.163195313187316e-05}, {'value': ['run'], 'probability': 2.1251620637485757e-05}, {'value': ['resort'], 'probability': 8.917106242734008e-06}, {'value': ['sort', 'descending'], 'probability': 8.743117177800741e-06}, {'value': ['sort', 'by', 'name'], 'probability': 8.026364412216935e-06}, {'value': ['real', 'run'], 'probability': 7.365756573562976e-06}, {'value': ['refresh', 'model'], 'probability': 6.6838292696047574e-06}, {'value': ['merge', 'duplicates'], 'probability': 6.614155154238688e-06}, {'value': ['sort', 'ascending'], 'probability': 6.492476131825242e-06}]","[0.99999994, 0.6421592, 0.45343876, 0.29323313, 0.7206778, 0.73564893, 0.65497077, 0.39520395, 0.25952312, 0.6753969]",0.9999561301156977
1289,1289,"public void reverse() {byte[] items = this.items;for (int i = 0, lastIndex = size - 1, n = size / 2; i < n; i++) {int ii = lastIndex - i;byte temp = items[i];items[i] = items[ii];items[ii] = temp;}}
","public void [MASK]() {byte[] items = this.items;for (int i = 0, lastIndex = size - 1, n = size / 2; i < n; i++) {int ii = lastIndex - i;byte temp = items[i];items[i] = items[ii];items[ii] = temp;}}
",reverse,"[{'value': ['test'], 'probability': 0.16965721547603607}, {'value': ['run'], 'probability': 0.05142723768949509}, {'value': ['list'], 'probability': 0.03552256152033806}, {'value': ['empty'], 'probability': 0.02649950049817562}, {'value': ['evaluate'], 'probability': 0.02357199788093567}]","[0.42161942, 0.47641775, 0.248607, 0.19145493, 0.3432774]",0.1180279762183549,"[{'value': ['reverse'], 'probability': 0.9957389831542969}, {'value': ['sort'], 'probability': 0.0018016158137470484}, {'value': ['pop'], 'probability': 0.0010833499254658818}, {'value': ['size'], 'probability': 0.0007096283370628953}, {'value': ['test', 'size'], 'probability': 0.0002447893493808806}, {'value': ['count'], 'probability': 9.782971756067127e-05}, {'value': ['new', 'buffer'], 'probability': 8.424148836638778e-05}, {'value': ['total', 'size'], 'probability': 8.122032159008086e-05}, {'value': ['sqrt'], 'probability': 8.104537846520543e-05}, {'value': ['loop'], 'probability': 7.738716521998867e-05}]","[0.99999994, 0.43340397, 0.22912018, 0.33670035, 0.46426326, 0.32456484, 0.48377046, 0.37425125, 0.0, 0.3839902]",0.9972531653469284
1290,1290,"public void shuffle() {byte[] items = this.items;for (int i = size - 1; i >= 0; i--) {int ii = MathUtils.random(i);byte temp = items[i];items[i] = items[ii];items[ii] = temp;}}
","public void [MASK]() {byte[] items = this.items;for (int i = size - 1; i >= 0; i--) {int ii = MathUtils.random(i);byte temp = items[i];items[i] = items[ii];items[ii] = temp;}}
",shuffle,"[{'value': ['next'], 'probability': 0.11523104459047318}, {'value': ['test'], 'probability': 0.06013542786240578}, {'value': ['run'], 'probability': 0.05692199245095253}, {'value': ['flush'], 'probability': 0.04767690598964691}, {'value': ['start'], 'probability': 0.04507746919989586}]","[0.29136842, 0.06282892, 0.13474886, 0.24265926, 0.230716]",0.0669924417911258,"[{'value': ['shuffle'], 'probability': 0.9971197843551636}, {'value': ['reverse'], 'probability': 0.0025631096214056015}, {'value': ['clear', 'items'], 'probability': 6.658358324784786e-05}, {'value': ['cycle'], 'probability': 6.079496961319819e-05}, {'value': ['randomize'], 'probability': 4.552642712951638e-05}, {'value': ['remove', 'all'], 'probability': 3.979149551014416e-05}, {'value': ['sort'], 'probability': 3.506697612465359e-05}, {'value': ['reverse', 'array'], 'probability': 3.30007060256321e-05}, {'value': ['permute'], 'probability': 2.2564678147318773e-05}, {'value': ['build', 'list'], 'probability': 1.3760821275354829e-05}]","[1.0, 0.23616289, 0.06630126, 0.15300667, 0.040357634, 0.22841577, 0.2522914, 0.2768479, 0.0, 0.1398755]",0.9977696467604475
1291,1291,"public void truncate(int newSize) {if (size > newSize)size = newSize;}
","public void [MASK](int newSize) {if (size > newSize)size = newSize;}
",truncate,"[{'value': ['size'], 'probability': 0.1983509212732315}, {'value': ['expand'], 'probability': 0.17597302794456482}, {'value': ['add'], 'probability': 0.13951340317726135}, {'value': ['put'], 'probability': 0.07335394620895386}, {'value': ['update'], 'probability': 0.04473648965358734}]","[0.0011999246, 0.14172377, 0.095867775, -0.19270174, -0.098711416]",0.0200009706822229,"[{'value': ['set', 'size', 'raw'], 'probability': 0.5294990539550781}, {'value': ['set', 'size'], 'probability': 0.4179137945175171}, {'value': ['resize'], 'probability': 0.027432547882199287}, {'value': ['set', 'new', 'size'], 'probability': 0.006639246363192797}, {'value': ['adjust', 'size'], 'probability': 0.0048332554288208485}, {'value': ['change', 'size'], 'probability': 0.004662427119910717}, {'value': ['set', 'buffer', 'size'], 'probability': 0.0027558919973671436}, {'value': ['to', 'size'], 'probability': 0.002235598163679242}, {'value': ['truncate'], 'probability': 0.002045163419097662}, {'value': ['realloc', 'array'], 'probability': 0.001983087509870529}]","[-0.107733294, -0.11370749, 0.42355284, -0.17688271, 0.09398765, -0.051475704, -0.11556905, -0.014102544, 1.0, -0.0062503344]",-0.09222283056979749
1292,1292,"public byte random() {if (size == 0)return 0;return items[MathUtils.random(0, size - 1)];}
","public byte [MASK]() {if (size == 0)return 0;return items[MathUtils.[MASK](0, size - 1)];}
",random,"[{'value': ['size'], 'probability': 0.9020710587501526}, {'value': ['sizes'], 'probability': 0.0281175896525383}, {'value': ['count'], 'probability': 0.009951657615602016}, {'value': ['expand'], 'probability': 0.009356816299259663}, {'value': ['weight'], 'probability': 0.005648268852382898}]","[0.3036178, 0.29088572, 0.32680106, 0.08172936, 0.25870368]",0.2875420070598912,"[{'value': ['random'], 'probability': 0.894975483417511}, {'value': ['in'], 'probability': 0.0692242980003357}, {'value': ['sample'], 'probability': 0.025490105152130127}, {'value': ['choose'], 'probability': 0.001965092960745096}, {'value': ['min', 'value'], 'probability': 0.0018872017972171307}, {'value': ['peek'], 'probability': 0.0015171411214396358}, {'value': ['max'], 'probability': 0.001382292597554624}, {'value': ['min'], 'probability': 0.0013679353287443519}, {'value': ['mean'], 'probability': 0.0011532646603882313}, {'value': ['get', 'audio', 'url'], 'probability': 0.0010371935786679387}]","[0.99999994, 0.2621837, 0.5484596, 0.3203432, 0.19796132, 0.1791623, 0.22991583, -0.052988477, 0.36256042, 0.4591792]",0.92951982877078
1293,1293,"public byte[] toArray() {byte[] array = new byte[size];System.arraycopy(items, 0, array, 0, size);return array;}
","public byte[] [MASK]() {byte[] array = new byte[size];System.arraycopy(items, 0, array, 0, size);return array;}
",toArray,"[{'value': ['size'], 'probability': 0.6219527721405029}, {'value': ['sizes'], 'probability': 0.12034795433282852}, {'value': ['array'], 'probability': 0.10270675271749496}, {'value': ['expand'], 'probability': 0.02414163574576378}, {'value': ['evaluate'], 'probability': 0.007278503384441137}]","[0.45955554, 0.21089613, 0.27827993, 0.6401671, 0.46906468]",0.3586527564645687,"[{'value': ['to', 'byte', 'array'], 'probability': 0.8646242022514343}, {'value': ['to', 'array'], 'probability': 0.12188359349966049}, {'value': ['get', 'array'], 'probability': 0.007009269203990698}, {'value': ['get', 'bytes'], 'probability': 0.0021319384686648846}, {'value': ['array'], 'probability': 0.001709480187855661}, {'value': ['get', 'byte', 'array'], 'probability': 0.001567573519423604}, {'value': ['read', 'byte', 'array'], 'probability': 0.0005146597977727652}, {'value': ['to', 'object', 'array'], 'probability': 0.00020211302035022527}, {'value': ['as', 'array'], 'probability': 0.00018734890909399837}, {'value': ['trim'], 'probability': 0.00016993268218357116}]","[0.72012085, 0.8564837, 0.6652523, 0.55387473, 0.27827993, 0.5496694, 0.40175244, 0.7836335, 0.64578503, 0.31686705]",0.7347463286632723
1294,1294,"public int hashCode() {if (!ordered)return super.hashCode();byte[] items = this.items;int h = 1;for (int i = 0, n = size; i < n; i++) h = h * 31 + items[i];return h;}
","public int [MASK]() {if (!ordered)return super.[MASK]();byte[] items = this.items;int h = 1;for (int i = 0, n = size; i < n; i++) h = h * 31 + items[i];return h;}
",hashCode,"[{'value': ['ordered'], 'probability': 0.22641998529434204}, {'value': ['order'], 'probability': 0.17381343245506287}, {'value': ['size'], 'probability': 0.11732328683137894}, {'value': ['get'], 'probability': 0.0688147023320198}, {'value': ['count'], 'probability': 0.03680141270160675}]","[0.001816404, 0.11961969, 0.17934217, 0.13757937, 0.0950139]",0.0552079203627567,"[{'value': ['hash', 'code'], 'probability': 0.9999641180038452}, {'value': ['get', 'hash', 'code'], 'probability': 1.2027826414851006e-05}, {'value': ['calc', 'hash', 'code'], 'probability': 9.091799256566446e-06}, {'value': ['generate', 'hash', 'code'], 'probability': 3.7780916954943677e-06}, {'value': ['get', 'id'], 'probability': 3.6642938994191354e-06}, {'value': ['hashcode'], 'probability': 1.9338976926519535e-06}, {'value': ['sxhash'], 'probability': 1.4249866353566176e-06}, {'value': ['hash'], 'probability': 1.3877419178243144e-06}, {'value': ['get', 'index'], 'probability': 1.3478680784828612e-06}, {'value': ['calculate', 'hash', 'code'], 'probability': 1.2632569905690616e-06}]","[0.75676125, 0.6153521, 0.70661014, 0.62317514, 0.24132282, 0.0, 0.0, 1.0, 0.1332771, 0.72110593]",0.7567536386160577
1295,1295,"public boolean equals(Object object) {if (object == this)return true;if (!ordered)return false;if (!(object instanceof ByteArray))return false;ByteArray array = (ByteArray) object;if (!array.ordered)return false;int n = size;if (n != array.size)return false;byte[] items1 = this.items;byte[] items2 = array.items;for (int i = 0; i < n; i++) if (items1[i] != items2[i])return false;return true;}
","public boolean [MASK](Object object) {if (object == this)return true;if (!ordered)return false;if (!(object instanceof ByteArray))return false;ByteArray array = (ByteArray) object;if (!array.ordered)return false;int n = size;if (n != array.size)return false;byte[] items1 = this.items;byte[] items2 = array.items;for (int i = 0; i < n; i++) if (items1[i] != items2[i])return false;return true;}
",equals,"[{'value': ['ordered'], 'probability': 0.5962494015693665}, {'value': ['equals'], 'probability': 0.10762689262628555}, {'value': ['order'], 'probability': 0.023839104920625687}, {'value': ['ordering'], 'probability': 0.020506329834461212}, {'value': ['is'], 'probability': 0.013542460277676582}]","[-0.019451225, 1.0, 0.17971729, 0.057654634, 0.3373858]",0.1060647293112531,"[{'value': ['equals'], 'probability': 0.9993634819984436}, {'value': ['is', 'equal'], 'probability': 0.0005789558636024594}, {'value': ['equal'], 'probability': 3.463378016022034e-05}, {'value': ['is', 'identical'], 'probability': 6.245473286980996e-06}, {'value': ['matches'], 'probability': 5.631734893540852e-06}, {'value': ['deep', 'equals'], 'probability': 4.263464234099956e-06}, {'value': ['same', 'as'], 'probability': 3.181660304107936e-06}, {'value': ['equals', 'ignore', 'case'], 'probability': 1.4425251038119313e-06}, {'value': ['is', 'same'], 'probability': 1.2564277085402864e-06}, {'value': ['same', 'value'], 'probability': 1.0650256854205509e-06}]","[1.0, 0.5507263, 0.6404468, 0.31409773, 0.21920882, 0.67461926, 0.2859683, 0.5611027, 0.33838725, 0.4832903]",0.9997132408771927
1296,1296,"public String toString() {if (size == 0)return ""[]"";byte[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append('[');buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append("", "");buffer.append(items[i]);}buffer.append(']');return buffer.toString();}
","public String [MASK]() {if (size == 0)return ""[]"";byte[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append('[');buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append("", "");buffer.append(items[i]);}buffer.append(']');return buffer.[MASK]();}
",toString,"[{'value': ['size'], 'probability': 0.5581884980201721}, {'value': ['next'], 'probability': 0.11569458991289139}, {'value': ['list'], 'probability': 0.07721082866191864}, {'value': ['build'], 'probability': 0.023275360465049744}, {'value': ['get'], 'probability': 0.02111281454563141}]","[0.45955554, 0.73751295, 0.48583958, 0.68664783, 0.7566794]",0.4113145567474867,"[{'value': ['to', 'string'], 'probability': 0.9995231628417969}, {'value': ['get', 'name'], 'probability': 0.00010654387733666226}, {'value': ['get', 'text'], 'probability': 8.096816600300372e-05}, {'value': ['get', 'label'], 'probability': 6.387205939972773e-05}, {'value': ['to', 'json'], 'probability': 5.5918964790180326e-05}, {'value': ['get', 'string'], 'probability': 5.2431205403991044e-05}, {'value': ['get', 'id'], 'probability': 4.5014025090495124e-05}, {'value': ['get', 'description'], 'probability': 2.6667512429412454e-05}, {'value': ['get', 'type', 'name'], 'probability': 2.4655138986418024e-05}, {'value': ['to', 'json', 'string'], 'probability': 2.0863430108875036e-05}]","[0.84910345, 0.7662066, 0.6951814, 0.67679405, 0.770154, 0.6703567, 0.62274474, 0.70010555, 0.71424925, 0.728808]",0.8490374478329957
1297,1297,"public String toString(String separator) {if (size == 0)return """";byte[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append(separator);buffer.append(items[i]);}return buffer.toString();}
","public String [MASK](String separator) {if (size == 0)return """";byte[] items = this.items;StringBuilder buffer = new StringBuilder(32);buffer.append(items[0]);for (int i = 1; i < size; i++) {buffer.append(separator);buffer.append(items[i]);}return buffer.[MASK]();}
",toString,"[{'value': ['read'], 'probability': 0.06544429808855057}, {'value': ['expand'], 'probability': 0.06542152166366577}, {'value': ['add'], 'probability': 0.0625070258975029}, {'value': ['next'], 'probability': 0.0560867004096508}, {'value': ['select'], 'probability': 0.04341656342148781}]","[0.5323113, 0.6401671, 0.55505466, 0.73751295, 0.46858394]",0.1731212360087601,"[{'value': ['to', 'string'], 'probability': 0.9771754741668701}, {'value': ['encode'], 'probability': 0.006544204894453287}, {'value': ['get', 'text'], 'probability': 0.0032143748831003904}, {'value': ['to', 'byte', 'array'], 'probability': 0.0022293133661150932}, {'value': ['to', 'csv'], 'probability': 0.0022197647485882044}, {'value': ['get', 'path', 'string'], 'probability': 0.002194052329286933}, {'value': ['get', 'string', 'representation'], 'probability': 0.002077855635434389}, {'value': ['get', 'separator'], 'probability': 0.0015949076041579247}, {'value': ['to', 'json'], 'probability': 0.0015603048959746957}, {'value': ['to', 'hex', 'string'], 'probability': 0.0011897055665031075}]","[0.84910345, 0.19696154, 0.6951814, 0.72012085, 0.76971716, 0.6861634, 0.6667916, 0.574684, 0.770154, 0.7460366]",0.8424573446542347
1298,1298,"public static ByteArray with(byte... array) {return new ByteArray(array);}public void draw(Batch batch, float parentAlpha) {if (drawTitleTable)super.draw(batch, parentAlpha);}
","public static ByteArray [MASK](byte... array) {return new ByteArray(array);}public void draw(Batch batch, float parentAlpha) {if (drawTitleTable)super.draw(batch, parentAlpha);}
",with,"[{'value': ['create'], 'probability': 0.15207861363887787}, {'value': ['generate'], 'probability': 0.10705190151929855}, {'value': ['fill'], 'probability': 0.0989316999912262}, {'value': ['get'], 'probability': 0.07393865287303925}, {'value': ['paint'], 'probability': 0.05224328488111496}]","[0.6111532, 0.36414072, 0.43535483, 0.6409013, 0.39668986]",0.2431074410993594,"[{'value': ['get', 'byte', 'array'], 'probability': 0.35227081179618835}, {'value': ['wrap'], 'probability': 0.23502621054649353}, {'value': ['create'], 'probability': 0.0951128900051117}, {'value': ['new', 'instance'], 'probability': 0.07984522730112076}, {'value': ['get'], 'probability': 0.07024899125099182}, {'value': ['array'], 'probability': 0.05782543122768402}, {'value': ['set', 'byte', 'array'], 'probability': 0.03895819932222366}, {'value': ['read', 'byte', 'array'], 'probability': 0.03548243269324303}, {'value': ['keys'], 'probability': 0.019421124830842018}, {'value': ['create', 'byte', 'array'], 'probability': 0.015808667987585068}]","[0.5704971, 0.3733936, 0.6111532, 0.7489405, 0.6409013, 0.45399278, 0.55835676, 0.43859679, 0.32528952, 0.5122747]",0.5296605530887387
1299,1299,"public boolean touchDown(InputEvent event, float x, float y, int pointer, int button) {toFront();return false;}
","public boolean [MASK](InputEvent event, float x, float y, int pointer, int button) {toFront();return false;}
",touchDown,"[{'value': ['update'], 'probability': 0.13807831704616547}, {'value': ['execute'], 'probability': 0.13709592819213867}, {'value': ['process'], 'probability': 0.05897519364953041}, {'value': ['generate'], 'probability': 0.05778885632753372}, {'value': ['apply'], 'probability': 0.04298100247979164}]","[0.28119618, 0.21277837, 0.41519156, 0.35684654, 0.37392274]",0.1291774738681326,"[{'value': ['event', 'handler'], 'probability': 0.7311552166938782}, {'value': ['touch', 'down'], 'probability': 0.1825750321149826}, {'value': ['touch', 'up'], 'probability': 0.04707769304513931}, {'value': ['mouse', 'down'], 'probability': 0.010097700171172619}, {'value': ['mouse', 'up'], 'probability': 0.008370856754481792}, {'value': ['handle', 'double', 'click'], 'probability': 0.008060021325945854}, {'value': ['pick'], 'probability': 0.003667353419587016}, {'value': ['update', 'drag'], 'probability': 0.003502174047753215}, {'value': ['update', 'focus'], 'probability': 0.0029951396863907576}, {'value': ['clicked'], 'probability': 0.0024988888762891293}]","[0.36380863, 0.8479191, 0.8641351, 0.6473024, 0.6639071, 0.6268328, 0.4946978, 0.41733256, 0.45734873, 0.37724712]",0.48422526901988716
1300,1300,"public void touchUp(InputEvent event, float x, float y, int pointer, int button) {dragging = false;}
","public void [MASK](InputEvent event, float x, float y, int pointer, int button) {dragging = false;}
",touchUp,"[{'value': ['update'], 'probability': 0.07432106137275696}, {'value': ['execute'], 'probability': 0.06213364377617836}, {'value': ['process'], 'probability': 0.061521437019109726}, {'value': ['apply'], 'probability': 0.05323459953069687}, {'value': ['add'], 'probability': 0.0347914844751358}]","[0.28119618, 0.21277837, 0.41519156, 0.37392274, 0.5372621]",0.0982604479923885,"[{'value': ['touch', 'up'], 'probability': 0.43579715490341187}, {'value': ['touch', 'down'], 'probability': 0.21410290896892548}, {'value': ['mouse', 'up'], 'probability': 0.13858820497989655}, {'value': ['mouse', 'down'], 'probability': 0.12069930881261826}, {'value': ['on', 'mouse', 'up'], 'probability': 0.026840094476938248}, {'value': ['event', 'handler'], 'probability': 0.017755266278982162}, {'value': ['mouse', 'move'], 'probability': 0.014340253546833992}, {'value': ['show', 'menu'], 'probability': 0.013074144721031189}, {'value': ['set', 'action'], 'probability': 0.009826845489442348}, {'value': ['on', 'touch', 'up'], 'probability': 0.008975827135145664}]","[0.8641351, 0.8479191, 0.6639071, 0.6473024, 0.6542635, 0.36380863, 0.6314974, 0.54597056, 0.5269355, 0.76708704]",0.7805455080557817
1301,1301,"public boolean mouseMoved(InputEvent event, float x, float y) {return isModal;}
","public boolean [MASK](InputEvent event, float x, float y) {return isModal;}
",mouseMoved,"[{'value': ['equals'], 'probability': 0.25751832127571106}, {'value': ['is'], 'probability': 0.24688255786895752}, {'value': ['execute'], 'probability': 0.04526335373520851}, {'value': ['matches'], 'probability': 0.04216981306672096}, {'value': ['apply'], 'probability': 0.04071870818734169}]","[-0.02369154, 0.32969156, 0.14438215, 0.09527807, 0.108614296]",0.0902698021227488,"[{'value': ['event', 'handler'], 'probability': 0.9655563831329346}, {'value': ['pick'], 'probability': 0.012877663597464561}, {'value': ['update', 'focus'], 'probability': 0.006626912858337164}, {'value': ['update', 'drag'], 'probability': 0.004100805148482323}, {'value': ['calculate', 'width'], 'probability': 0.0021252308506518602}, {'value': ['keep', 'row'], 'probability': 0.002084900625050068}, {'value': ['is', 'sane'], 'probability': 0.0019935397431254387}, {'value': ['check', 'event'], 'probability': 0.0017255643615499139}, {'value': ['process', 'script'], 'probability': 0.001520455814898014}, {'value': ['handle', 'double', 'click', 'or', 'enter'], 'probability': 0.0013884962536394596}]","[0.25173172, 0.25212985, 0.18029349, 0.28036427, 0.18644054, 0.30108824, 0.32412603, 0.22808607, 0.3325074, 0.39776307]",0.2517740798691274
1302,1302,"public boolean scrolled(InputEvent event, float x, float y, int amount) {return isModal;}
","public boolean [MASK](InputEvent event, float x, float y, int amount) {return isModal;}
",scrolled,"[{'value': ['equals'], 'probability': 0.2787957191467285}, {'value': ['is'], 'probability': 0.2649221122264862}, {'value': ['apply'], 'probability': 0.04430553317070007}, {'value': ['contains'], 'probability': 0.029190678149461746}, {'value': ['matches'], 'probability': 0.027146421372890472}]","[0.015544081, -0.13805602, -0.03949916, -0.054192927, -0.039346375]",-0.0366405433390154,"[{'value': ['event', 'handler'], 'probability': 0.6682996153831482}, {'value': ['check', 'event'], 'probability': 0.07062572985887527}, {'value': ['show'], 'probability': 0.05373870208859444}, {'value': ['calculate', 'width'], 'probability': 0.042859796434640884}, {'value': ['pick'], 'probability': 0.038971442729234695}, {'value': ['vote'], 'probability': 0.03424045816063881}, {'value': ['update', 'focus'], 'probability': 0.030899059027433395}, {'value': ['get', 'expanded'], 'probability': 0.021474672481417656}, {'value': ['parse', 'xml', 'file'], 'probability': 0.01988360472023487}, {'value': ['test'], 'probability': 0.019006898626685143}]","[-0.107285365, -0.06477408, -0.07933319, 0.17994669, -0.02840767, -0.04034124, -0.044878185, -0.03145998, 0.272014, -0.111615404]",-0.07408778969594813
1303,1303,"public boolean keyDown(InputEvent event, int keycode) {return isModal;}
","public boolean [MASK](InputEvent event, int keycode) {return isModal;}
",keyDown,"[{'value': ['is'], 'probability': 0.20639429986476898}, {'value': ['execute'], 'probability': 0.16685111820697784}, {'value': ['equals'], 'probability': 0.10556679964065552}, {'value': ['matches'], 'probability': 0.03935736045241356}, {'value': ['process'], 'probability': 0.03308117762207985}]","[0.57648766, 0.22337563, 0.21110253, 0.35601643, 0.5802426]",0.2117466342997768,"[{'value': ['key', 'event'], 'probability': 0.17173795402050018}, {'value': ['verify'], 'probability': 0.16753868758678436}, {'value': ['event', 'handler'], 'probability': 0.11659445613622665}, {'value': ['vote'], 'probability': 0.10920306295156479}, {'value': ['mime', 'type', 'of'], 'probability': 0.10391747206449509}, {'value': ['check', 'event'], 'probability': 0.0894702672958374}, {'value': ['get', 'from', 'context'], 'probability': 0.07550782710313797}, {'value': ['start', 'blocking'], 'probability': 0.06255748867988586}, {'value': ['is', 'modal'], 'probability': 0.051787350326776505}, {'value': ['make', 'dialog'], 'probability': 0.05168541148304939}]","[0.8215228, 0.24759486, 0.3790938, 0.49467102, 0.4526953, 0.5166044, 0.635733, 0.6483463, 0.44935268, 0.5398874]",0.5137886945231049
1304,1304,"public boolean keyUp(InputEvent event, int keycode) {return isModal;}
","public boolean [MASK](InputEvent event, int keycode) {return isModal;}
",keyUp,"[{'value': ['is'], 'probability': 0.20639429986476898}, {'value': ['execute'], 'probability': 0.16685111820697784}, {'value': ['equals'], 'probability': 0.10556679964065552}, {'value': ['matches'], 'probability': 0.03935736045241356}, {'value': ['process'], 'probability': 0.03308117762207985}]","[0.57648766, 0.22337563, 0.21110253, 0.35601643, 0.5802426]",0.2117466342997768,"[{'value': ['key', 'event'], 'probability': 0.17173795402050018}, {'value': ['verify'], 'probability': 0.16753868758678436}, {'value': ['event', 'handler'], 'probability': 0.11659445613622665}, {'value': ['vote'], 'probability': 0.10920306295156479}, {'value': ['mime', 'type', 'of'], 'probability': 0.10391747206449509}, {'value': ['check', 'event'], 'probability': 0.0894702672958374}, {'value': ['get', 'from', 'context'], 'probability': 0.07550782710313797}, {'value': ['start', 'blocking'], 'probability': 0.06255748867988586}, {'value': ['is', 'modal'], 'probability': 0.051787350326776505}, {'value': ['make', 'dialog'], 'probability': 0.05168541148304939}]","[0.8215228, 0.24759486, 0.3790938, 0.49467102, 0.4526953, 0.5166044, 0.635733, 0.6483463, 0.44935268, 0.5398874]",0.5137886945231049
1305,1305,"public boolean keyTyped(InputEvent event, char character) {return isModal;}
","public boolean [MASK](InputEvent event, char character) {return isModal;}
",keyTyped,"[{'value': ['is'], 'probability': 0.3763733506202698}, {'value': ['equals'], 'probability': 0.15587131679058075}, {'value': ['execute'], 'probability': 0.10841599106788635}, {'value': ['generate'], 'probability': 0.023290645331144333}, {'value': ['matches'], 'probability': 0.02238912507891655}]","[0.57648766, 0.21110253, 0.22337563, 0.3332276, 0.35601643]",0.2898288946695222,"[{'value': ['verify'], 'probability': 0.17914924025535583}, {'value': ['show'], 'probability': 0.15501412749290466}, {'value': ['vote'], 'probability': 0.13597071170806885}, {'value': ['is', 'modal'], 'probability': 0.10653000324964523}, {'value': ['is', 'showing'], 'probability': 0.09553513675928116}, {'value': ['check', 'event'], 'probability': 0.09015581011772156}, {'value': ['is', 'note'], 'probability': 0.07817469537258148}, {'value': ['get', 'type', 'for'], 'probability': 0.07219160348176956}, {'value': ['test'], 'probability': 0.04697659984230995}, {'value': ['parse', 'xml', 'file'], 'probability': 0.04030202329158783}]","[0.24759486, 0.46899074, 0.49467102, 0.44935268, 0.63939184, 0.5166044, 0.64104813, 0.60963196, 0.49116206, 0.2029133]",0.46522120070558853
1306,1306,"public void setStyle(WindowStyle style) {if (style == null)throw new IllegalArgumentException(""style cannot be null."");this.style = style;setBackground(style.background);titleLabel.setStyle(new LabelStyle(style.titleFont, style.titleFontColor));invalidateHierarchy();}
","public void [MASK](WindowStyle style) {if (style == null)throw new IllegalArgumentException(""style cannot be null."");this.style = style;setBackground(style.background);titleLabel.[MASK](new LabelStyle(style.titleFont, style.titleFontColor));invalidateHierarchy();}
",setStyle,"[{'value': ['paint'], 'probability': 0.4706537127494812}, {'value': ['set'], 'probability': 0.11300526559352875}, {'value': ['apply'], 'probability': 0.08664092421531677}, {'value': ['create'], 'probability': 0.03996910899877548}, {'value': ['update'], 'probability': 0.03925472870469093}]","[0.3280287, 1.0, 0.5010617, 0.66197675, 0.41854778]",0.3536942426839601,"[{'value': ['set', 'title'], 'probability': 0.4205314815044403}, {'value': ['set', 'label', 'style'], 'probability': 0.24889352917671204}, {'value': ['set', 'style'], 'probability': 0.21233758330345154}, {'value': ['set', 'background', 'color'], 'probability': 0.053808316588401794}, {'value': ['set', 'background'], 'probability': 0.032297782599925995}, {'value': ['show'], 'probability': 0.012060769833624363}, {'value': ['on', 'attach'], 'probability': 0.009293763898313046}, {'value': ['paint'], 'probability': 0.003851406741887331}, {'value': ['set', 'title', 'font'], 'probability': 0.0036299508064985275}, {'value': ['add', 'paragraph'], 'probability': 0.0032955144997686148}]","[0.8680511, 0.7883765, 0.85754097, 0.7244218, 0.849517, 0.6068332, 0.67399985, 0.3280287, 0.76864225, 0.47700483]",0.8289785874636556
1307,1307,"public WindowStyle getStyle() {return style;}
","public WindowStyle [MASK]() {return style;}
",getStyle,"[{'value': ['style'], 'probability': 0.9479048252105713}, {'value': ['paint'], 'probability': 0.0059861368499696255}, {'value': ['get'], 'probability': 0.005753441248089075}, {'value': ['create'], 'probability': 0.004845964722335339}, {'value': ['type'], 'probability': 0.003649312537163496}]","[0.37756702, 0.41529104, 1.0, 0.62328804, 0.4339052]",0.3707409208008424,"[{'value': ['get', 'style'], 'probability': 0.7174984216690063}, {'value': ['get', 'instance'], 'probability': 0.1024472638964653}, {'value': ['is', 'plain'], 'probability': 0.05359829217195511}, {'value': ['widget', 'style'], 'probability': 0.05225931107997894}, {'value': ['get', 'pane'], 'probability': 0.01649715192615986}, {'value': ['get', 'factory'], 'probability': 0.015355055220425129}, {'value': ['get', 'composite'], 'probability': 0.014481141231954098}, {'value': ['get', 'line', 'style'], 'probability': 0.012465773150324821}, {'value': ['get', 'ui'], 'probability': 0.008763259276747704}, {'value': ['get', 'window', 'style'], 'probability': 0.006634325720369816}]","[0.82790756, 0.9335536, 0.5495046, 0.27216384, 0.7339611, 0.82863146, 0.7212855, 0.7976193, 0.7200318, 0.7802857]",0.7900444053765527
1308,1308,"public void draw(Batch batch, float parentAlpha) {Stage stage = getStage();if (stage.getKeyboardFocus() == null)stage.setKeyboardFocus(this);keepWithinStage();if (style.stageBackground != null) {stageToLocalCoordinates(tmpPosition.set(0, 0));stageToLocalCoordinates(tmpSize.set(stage.getWidth(), stage.getHeight()));drawStageBackground(batch, parentAlpha, getX() + tmpPosition.x, getY() + tmpPosition.y, getX() + tmpSize.x, getY() + tmpSize.y);}super.draw(batch, parentAlpha);}
","public void [MASK](Batch batch, float parentAlpha) {Stage stage = getStage();if (stage.getKeyboardFocus() == null)stage.setKeyboardFocus(this);keepWithinStage();if (style.stageBackground != null) {stageToLocalCoordinates(tmpPosition.set(0, 0));stageToLocalCoordinates(tmpSize.set(stage.getWidth(), stage.getHeight()));[MASK]StageBackground(batch, parentAlpha, getX() + tmpPosition.x, getY() + tmpPosition.y, getX() + tmpSize.x, getY() + tmpSize.y);}super.[MASK](batch, parentAlpha);}
",draw,"[{'value': ['perform'], 'probability': 0.155935600399971}, {'value': ['execute'], 'probability': 0.06466227024793625}, {'value': ['set'], 'probability': 0.06384783238172531}, {'value': ['run'], 'probability': 0.06109747290611267}, {'value': ['start'], 'probability': 0.0497959703207016}]","[0.30919057, 0.15086548, 0.6315808, 0.44320115, 0.547485]",0.1526352058147569,"[{'value': ['draw', 'background'], 'probability': 0.7520607709884644}, {'value': ['draw'], 'probability': 0.14719489216804504}, {'value': ['paint'], 'probability': 0.09676835685968399}, {'value': ['set', 'owner'], 'probability': 0.0009825503220781684}, {'value': ['fill'], 'probability': 0.0007433155551552773}, {'value': ['drag'], 'probability': 0.0005864177946932614}, {'value': ['add', 'document'], 'probability': 0.0005175454425625503}, {'value': ['draw', 'border'], 'probability': 0.0004005541268270463}, {'value': ['draw', 'item'], 'probability': 0.0003997008898295462}, {'value': ['hit'], 'probability': 0.0003458621504250914}]","[0.8432241, 1.0, 0.351799, 0.5069552, 0.40689027, 0.32880735, 0.4873967, 0.77027017, 0.8108282, 0.36612102]",0.8173985464405187
1309,1309,"protected void drawStageBackground(Batch batch, float parentAlpha, float x, float y, float width, float height) {Color color = getColor();batch.setColor(color.r, color.g, color.b, color.a * parentAlpha);style.stageBackground.draw(batch, x, y, width, height);}
","protected void [MASK](Batch batch, float parentAlpha, float x, float y, float width, float height) {Color color = getColor();batch.setColor(color.r, color.g, color.b, color.a * parentAlpha);style.stageBackground.draw(batch, x, y, width, height);}
",drawStageBackground,"[{'value': ['draw'], 'probability': 0.9353334307670593}, {'value': ['paint'], 'probability': 0.04620533809065819}, {'value': ['fill'], 'probability': 0.00541833508759737}, {'value': ['create'], 'probability': 0.0009181976784020662}, {'value': ['show'], 'probability': 0.0008252756670117378}]","[1.0, 0.351799, 0.40689027, 0.49934256, 0.4781555]",0.9546461961384838,"[{'value': ['draw'], 'probability': 0.9540480971336365}, {'value': ['redraw'], 'probability': 0.02529696561396122}, {'value': ['draw', 'background'], 'probability': 0.015348448418080807}, {'value': ['fill'], 'probability': 0.0014661585446447134}, {'value': ['update'], 'probability': 0.001038394751958549}, {'value': ['paint'], 'probability': 0.0008912474731914699}, {'value': ['draw', 'border'], 'probability': 0.0008069876930676401}, {'value': ['draw', 'image'], 'probability': 0.0004324728506617248}, {'value': ['draw', 'line'], 'probability': 0.0004032535944133997}, {'value': ['polygon'], 'probability': 0.00026796417660079896}]","[1.0, 0.1578816, 0.8432241, 0.40689027, 0.39218104, 0.351799, 0.77027017, 0.83466685, 0.8277805, 0.09168865]",0.9736424925284253
1310,1310,"public boolean isMovable() {return isMovable;}
","public boolean [MASK]() {return [MASK];}
",isMovable,"[{'value': ['equals'], 'probability': 0.09117130935192108}, {'value': ['is'], 'probability': 0.0804816484451294}, {'value': ['exists'], 'probability': 0.04379364103078842}, {'value': ['next'], 'probability': 0.03853735700249672}, {'value': ['run'], 'probability': 0.025117989629507065}]","[0.3373858, 0.99999994, 0.65599275, 0.6951459, 0.5624562]",0.1808867146316264,"[{'value': ['is', 'movable'], 'probability': 0.9878925681114197}, {'value': ['set', 'movable'], 'probability': 0.008613980375230312}, {'value': ['test', 'visibility'], 'probability': 0.0010462169302627444}, {'value': ['target', 'to', 'source'], 'probability': 0.0009327937732450664}, {'value': ['consistent'], 'probability': 0.0003924570919480175}, {'value': ['initialize', 'settings'], 'probability': 0.000341727863997221}, {'value': ['is', 'fulfilled'], 'probability': 0.0002518090477678925}, {'value': ['is', 'moving'], 'probability': 0.00021006593306083232}, {'value': ['is', 'popup'], 'probability': 0.00018354559142608196}, {'value': ['get', 'relative', 'url'], 'probability': 0.0001348338118987158}]","[0.7951091, 0.486886, 0.48490265, 0.71226305, 0.5083969, 0.079610236, 0.84147626, 0.9086473, 0.72484547, 0.5927386]",0.7916905646555046
1311,1311,"public void setMovable(boolean isMovable) {this.isMovable = isMovable;}
","public void [MASK](boolean isMovable) {this.isMovable = isMovable;}
",setMovable,"[{'value': ['apply'], 'probability': 0.13827170431613922}, {'value': ['set'], 'probability': 0.06976283341646194}, {'value': ['update'], 'probability': 0.04333346337080002}, {'value': ['accept'], 'probability': 0.03249651566147804}, {'value': ['run'], 'probability': 0.026332851499319077}]","[0.5010617, 1.0, 0.41854778, 0.44626972, 0.67632943]",0.1894945039748584,"[{'value': ['set', 'movable'], 'probability': 0.9992923736572266}, {'value': ['set', 'uncaught', 'exception', 'handler'], 'probability': 0.0003570428816601634}, {'value': ['set', 'enabled'], 'probability': 0.0001479138882132247}, {'value': ['is', 'movable'], 'probability': 8.525045268470421e-05}, {'value': ['set', 'perspective'], 'probability': 5.046194200986065e-05}, {'value': ['set', 'bool'], 'probability': 2.684356877580285e-05}, {'value': ['set', 'angle'], 'probability': 2.2937016183277592e-05}, {'value': ['set', 'attr'], 'probability': 6.345673227770021e-06}, {'value': ['set', 'elevation', 'model'], 'probability': 5.549085017264588e-06}, {'value': ['set', 'visibility'], 'probability': 5.283009613776812e-06}]","[0.779374, 0.73539054, 0.89065737, 0.55688274, 0.8514158, 0.5558365, 0.79805154, 1.0, 0.73546255, 0.77425766]",0.7793549823638504
1312,1312,"public boolean isModal() {return isModal;}
","public boolean [MASK]() {return [MASK];}
",isModal,"[{'value': ['equals'], 'probability': 0.09117130935192108}, {'value': ['is'], 'probability': 0.0804816484451294}, {'value': ['exists'], 'probability': 0.04379364103078842}, {'value': ['next'], 'probability': 0.03853735700249672}, {'value': ['run'], 'probability': 0.025117989629507065}]","[0.3373858, 0.99999994, 0.65599275, 0.6951459, 0.5624562]",0.1808867146316264,"[{'value': ['is', 'modal'], 'probability': 0.9980113506317139}, {'value': ['is', 'showing'], 'probability': 0.0019154325127601624}, {'value': ['calculate', 'name'], 'probability': 2.478888382029254e-05}, {'value': ['get', 'font', 'bold'], 'probability': 9.362380296806805e-06}, {'value': ['show', 'impl'], 'probability': 8.75964997248957e-06}, {'value': ['process', 'exception'], 'probability': 8.444118066108786e-06}, {'value': ['get', 'current', 'user'], 'probability': 8.14314898889279e-06}, {'value': ['show', 'modal'], 'probability': 5.1517827159841545e-06}, {'value': ['test', 'is'], 'probability': 4.538902430795133e-06}, {'value': ['get', 'visible'], 'probability': 3.851264864351833e-06}]","[0.7585707, 0.89037895, 0.58556914, 0.5762745, 0.6088991, 0.73310995, 0.7124878, 0.48942992, 0.84906566, 0.6757344]",0.7588138443517656
1313,1313,"public void setModal(boolean isModal) {this.isModal = isModal;}
","public void [MASK](boolean isModal) {this.isModal = isModal;}
",setModal,"[{'value': ['apply'], 'probability': 0.1317518800497055}, {'value': ['set'], 'probability': 0.09918718039989471}, {'value': ['accept'], 'probability': 0.05379291623830795}, {'value': ['update'], 'probability': 0.03139658644795418}, {'value': ['visit'], 'probability': 0.029468104243278503}]","[0.5010617, 1.0, 0.44626972, 0.41854778, 0.46053246]",0.2159211381743392,"[{'value': ['is', 'modal'], 'probability': 0.6419023871421814}, {'value': ['start', 'blocking'], 'probability': 0.1384630799293518}, {'value': ['set', 'modal'], 'probability': 0.10868982970714569}, {'value': ['show', 'modal'], 'probability': 0.05712953209877014}, {'value': ['open', 'node'], 'probability': 0.019195949658751488}, {'value': ['process', 'exception'], 'probability': 0.01084880344569683}, {'value': ['read', 'private', 'field'], 'probability': 0.008393001742661}, {'value': ['set', 'last', 'check'], 'probability': 0.006595424376428127}, {'value': ['from', 'component'], 'probability': 0.005638901609927416}, {'value': ['view', 'url'], 'probability': 0.003143062349408865}]","[0.5031344, 0.6426506, 0.7276112, 0.50018126, 0.5481227, 0.6197051, 0.68202573, 0.8934722, 0.61745375, 0.36674008]",0.5531019265077635
1314,1314,"public void setKeepWithinStage(boolean keepWithinStage) {this.keepWithinStage = keepWithinStage;}
","public void [MASK](boolean keepWithinStage) {this.keepWithinStage = keepWithinStage;}
",setKeepWithinStage,"[{'value': ['keep'], 'probability': 0.3547455966472626}, {'value': ['set'], 'probability': 0.1623050421476364}, {'value': ['run'], 'probability': 0.03314799815416336}, {'value': ['restore'], 'probability': 0.029138153418898582}, {'value': ['use'], 'probability': 0.025801928713917732}]","[0.67230886, 1.0, 0.67632943, 0.47623703, 0.6192659]",0.4530775400075036,"[{'value': ['set', 'family', 'flag'], 'probability': 0.49046528339385986}, {'value': ['set', 'friend', 'flag'], 'probability': 0.13846826553344727}, {'value': ['set', 'show', 'logical', 'structure'], 'probability': 0.13336850702762604}, {'value': ['set', 'discriminator'], 'probability': 0.07116962969303131}, {'value': ['set', 'update', 'locks', 'on', 'demand'], 'probability': 0.06317413598299026}, {'value': ['set', 'extended', 'arc', 'surface', 'support'], 'probability': 0.04124941676855087}, {'value': ['set', 'override', 'by', 'name'], 'probability': 0.031380992382764816}, {'value': ['set', 'gml', 'prefixing'], 'probability': 0.01631915010511875}, {'value': ['set', 'error', 'page'], 'probability': 0.007511560805141926}, {'value': ['set', 'is', 'abortable'], 'probability': 0.006893088109791279}]","[0.7708584, 0.7864717, 0.8295754, 0.8042778, 0.83763963, 0.8087432, 0.7887988, 0.5369938, 0.77354413, 0.8921909]",0.7866144325842056
1315,1315,"public boolean isResizable() {return isResizable;}
","public boolean [MASK]() {return [MASK];}
",isResizable,"[{'value': ['equals'], 'probability': 0.09117130935192108}, {'value': ['is'], 'probability': 0.0804816484451294}, {'value': ['exists'], 'probability': 0.04379364103078842}, {'value': ['next'], 'probability': 0.03853735700249672}, {'value': ['run'], 'probability': 0.025117989629507065}]","[0.3373858, 0.99999994, 0.65599275, 0.6951459, 0.5624562]",0.1808867146316264,"[{'value': ['get', 'resizable'], 'probability': 0.9999159574508667}, {'value': ['is', 'resizable'], 'probability': 8.399812213610858e-05}, {'value': ['get', 'output', 'type'], 'probability': 1.1700169721962084e-08}, {'value': ['is', 'left', 'to', 'right'], 'probability': 9.68358904174238e-09}, {'value': ['set', 'up', 'widgets'], 'probability': 6.7860717045675756e-09}, {'value': ['is', 'compressed'], 'probability': 6.631578841620467e-09}, {'value': ['is', 'three', 'way'], 'probability': 6.082264469853271e-09}, {'value': ['get', 'selected', 'indices'], 'probability': 3.692008032629701e-09}, {'value': ['scale', 'image'], 'probability': 2.816757715962126e-09}, {'value': ['get', 'current', 'file'], 'probability': 2.6163136102042017e-09}]","[0.60187685, 0.99999994, 0.7096376, 0.8188119, 0.5975258, 0.7952391, 0.88372666, 0.5068614, 0.6127129, 0.6910213]",0.6019103011930079
1316,1316,"public void setResizable(boolean isResizable) {this.isResizable = isResizable;}
","public void [MASK](boolean isResizable) {this.isResizable = isResizable;}
",setResizable,"[{'value': ['apply'], 'probability': 0.14069029688835144}, {'value': ['accept'], 'probability': 0.07545188069343567}, {'value': ['set'], 'probability': 0.06826872378587723}, {'value': ['evaluate'], 'probability': 0.06247155740857124}, {'value': ['update'], 'probability': 0.040541764348745346}]","[0.5010617, 0.44626972, 1.0, 0.31490386, 0.41854778]",0.2090763294579493,"[{'value': ['set', 'resizable'], 'probability': 0.9954078793525696}, {'value': ['is', 'resizable'], 'probability': 0.003030843799933791}, {'value': ['get', 'resizable'], 'probability': 0.001341541763395071}, {'value': ['set', 'depth'], 'probability': 6.297494837781414e-05}, {'value': ['set', 'exists'], 'probability': 4.7295328840846196e-05}, {'value': ['set', 'home', 'directory'], 'probability': 4.24665558966808e-05}, {'value': ['set', 'integer', 'property'], 'probability': 2.8913977075717412e-05}, {'value': ['move', 'to', 'position'], 'probability': 1.4106767594057601e-05}, {'value': ['set', 'containers'], 'probability': 1.2133130439906381e-05}, {'value': ['set', 'passive'], 'probability': 1.186192730529001e-05}]","[1.0, 0.6348946, 0.65028083, 0.7943753, 0.84262985, 0.8117513, 0.73370785, 0.7358945, 0.7867596, 0.7864411]",0.998379345155934
1317,1317,"public void setResizeBorder(int resizeBorder) {this.resizeBorder = resizeBorder;}
","public void [MASK](int resizeBorder) {this.resizeBorder = resizeBorder;}
",setResizeBorder,"[{'value': ['paint'], 'probability': 0.10512763261795044}, {'value': ['apply'], 'probability': 0.10192449390888214}, {'value': ['set'], 'probability': 0.07960744202136993}, {'value': ['update'], 'probability': 0.05124875158071518}, {'value': ['add'], 'probability': 0.04808180406689644}]","[0.3280287, 0.5010617, 1.0, 0.41854778, 0.5084879]",0.2110618473324961,"[{'value': ['set', 'place', 'in', 'page'], 'probability': 0.3067881464958191}, {'value': ['set', 'max', 'swf', 'file', 'size'], 'probability': 0.20380112528800964}, {'value': ['set', 'max', 'mortgage', 'day', 'lates', 'x'], 'probability': 0.15920665860176086}, {'value': ['set', 'cache', 'seconds'], 'probability': 0.1457519382238388}, {'value': ['set', 'family', 'flag'], 'probability': 0.08483849465847015}, {'value': ['set', 'num', 'of', 'connection'], 'probability': 0.023272942751646042}, {'value': ['set', 'scale', 'denominator', 'min'], 'probability': 0.02323838882148266}, {'value': ['set', 'highlight'], 'probability': 0.01998806744813919}, {'value': ['set', 'exceptions'], 'probability': 0.017863821238279343}, {'value': ['set', 'friend', 'flag'], 'probability': 0.015250430442392826}]","[0.86466724, 0.71938246, 0.7749108, 0.7615165, 0.7708584, 0.7842569, 0.7131102, 0.87497497, 0.8329557, 0.7864717]",0.7908289064856089
1318,1318,"public boolean isDragging() {return dragging;}
","public boolean [MASK]() {return dragging;}
",isDragging,"[{'value': ['dragging'], 'probability': 0.5254049301147461}, {'value': ['drag'], 'probability': 0.25272366404533386}, {'value': ['dragged'], 'probability': 0.18646585941314697}, {'value': ['pull'], 'probability': 0.0005556480027735233}, {'value': ['trailing'], 'probability': 0.0005353640299290419}]","[0.22120638, 0.37102023, 0.19259441, 0.39755458, 0.2280878]",0.2462438074031502,"[{'value': ['is', 'dragging'], 'probability': 0.9999707937240601}, {'value': ['dragging'], 'probability': 2.519046211091336e-05}, {'value': ['set', 'dragging', 'enable'], 'probability': 1.3372626881391625e-06}, {'value': ['is', 'delete'], 'probability': 1.1474093071228708e-06}, {'value': ['handle', 'response'], 'probability': 4.6134857711876975e-07}, {'value': ['set', 'dragging'], 'probability': 4.2751756268444296e-07}, {'value': ['get', 'selected', 'item', 'id'], 'probability': 2.0126974220602278e-07}, {'value': ['item', 'released'], 'probability': 1.9866516254296585e-07}, {'value': ['delete', 'bookmark'], 'probability': 1.30956991029052e-07}, {'value': ['is', 'food'], 'probability': 1.265493096980208e-07}]","[0.8568764, 0.22120638, 0.5729879, 0.75925606, 0.5595753, 0.5717046, 0.5799703, 0.534373, 0.03255597, 0.8469526]",0.8568594204446542
1319,1319,"public float getPrefWidth() {return Math.max(super.getPrefWidth(), titleLabel.getPrefWidth() + getPadLeft() + getPadRight());}
","public float [MASK]() {return Math.max(super.[MASK](), titleLabel.[MASK]() + getPadLeft() + getPadRight());}
",getPrefWidth,"[{'value': ['float'], 'probability': 0.0548001229763031}, {'value': ['get'], 'probability': 0.04518198221921921}, {'value': ['start'], 'probability': 0.044905293732881546}, {'value': ['boost'], 'probability': 0.04285338521003723}, {'value': ['bar'], 'probability': 0.03767409920692444}]","[0.2808844, 1.0, 0.7199945, 0.48529312, 0.45318797]",0.130775946562754,"[{'value': ['get', 'height'], 'probability': 0.2712627053260803}, {'value': ['get', 'size'], 'probability': 0.15042121708393097}, {'value': ['get', 'level'], 'probability': 0.12534396350383759}, {'value': ['get', 'max', 'value'], 'probability': 0.1147223562002182}, {'value': ['get', 'id'], 'probability': 0.09291279315948486}, {'value': ['get', 'font', 'height'], 'probability': 0.06039104983210564}, {'value': ['get', 'width'], 'probability': 0.05729958787560463}, {'value': ['height'], 'probability': 0.04733742028474808}, {'value': ['get', 'max', 'x'], 'probability': 0.043995629996061325}, {'value': ['get', 'latitude'], 'probability': 0.03631327673792839}]","[0.8224554, 0.83762157, 0.87522423, 0.8324454, 0.82231325, 0.66095966, 0.7625303, 0.30686238, 0.74264467, 0.7543885]",0.7889073570142263
1320,1320,"public Table getTitleTable() {return titleTable;}
","public Table [MASK]() {return titleTable;}
",getTitleTable,"[{'value': ['title'], 'probability': 0.1986459642648697}, {'value': ['format'], 'probability': 0.16492170095443726}, {'value': ['get'], 'probability': 0.03852058947086334}, {'value': ['version'], 'probability': 0.03360787034034729}, {'value': ['finish'], 'probability': 0.02367381937801838}]","[0.42729196, 0.29473126, 1.0, 0.38924655, 0.52801555]",0.1975898859517663,"[{'value': ['get', 'dictionary'], 'probability': 0.2545665204524994}, {'value': ['get', 'titles'], 'probability': 0.1717342734336853}, {'value': ['get', 'result', 'transformer'], 'probability': 0.14535532891750336}, {'value': ['dump', 'file'], 'probability': 0.11130864918231964}, {'value': ['get', 'background', 'color'], 'probability': 0.10856854170560837}, {'value': ['basic', 'get', 'right'], 'probability': 0.06256509572267532}, {'value': ['get', 'expression'], 'probability': 0.05036287382245064}, {'value': ['get', 'paragraph'], 'probability': 0.032382287085056305}, {'value': ['get', 'primary', 'table'], 'probability': 0.03213009983301163}, {'value': ['get', 'skeleton'], 'probability': 0.031026363372802734}]","[0.7432371, 0.8146601, 0.7939189, 0.5069866, 0.74083126, 0.88080984, 0.8206041, 0.7634291, 0.82347906, 0.7641348]",0.7526959501417523
1321,1321,"public Label getTitleLabel() {return titleLabel;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public Label [MASK]() {return titleLabel;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",getTitleLabel,"[{'value': ['label'], 'probability': 0.178170844912529}, {'value': ['create'], 'probability': 0.14492952823638916}, {'value': ['get'], 'probability': 0.05781073495745659}, {'value': ['destroy'], 'probability': 0.05301971361041069}, {'value': ['produce'], 'probability': 0.04479801654815674}]","[0.35891554, 0.62328804, 1.0, 0.40928823, 0.54279494]",0.2581083419095409,"[{'value': ['get', 'title', 'label'], 'probability': 0.9975253939628601}, {'value': ['get', 'container'], 'probability': 0.0008039230015128851}, {'value': ['get', 'title'], 'probability': 0.0006556736771017313}, {'value': ['get', 'label', 'control'], 'probability': 0.0003252773603890091}, {'value': ['get', 'continue', 'label'], 'probability': 0.000217563530895859}, {'value': ['set', 'title', 'label'], 'probability': 0.00012985143985133618}, {'value': ['get', 'label'], 'probability': 0.0001051093713613227}, {'value': ['get', 'title', 'key'], 'probability': 9.097846486838534e-05}, {'value': ['get', 'break', 'label'], 'probability': 7.541228114860132e-05}, {'value': ['get', 'dockable', 'frame', 'title'], 'probability': 7.077143527567387e-05}]","[0.7683554, 0.75787157, 0.8368909, 0.8314621, 0.85467774, 0.5976205, 0.8309359, 0.8176732, 0.8702428, 0.7987375]",0.7684299097925716
1322,1322,"public static long getCPtr(btSolverBody obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btSolverBody obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.11235331743955612}, {'value': ['read'], 'probability': 0.045191049575805664}, {'value': ['execute'], 'probability': 0.033212557435035706}, {'value': ['skip'], 'probability': 0.029464149847626686}, {'value': ['evaluate'], 'probability': 0.02908366546034813}]","[1.0, 0.5726487, 0.37713256, 0.49507433, 0.40115592]",0.1770114792199548,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1323,1323,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1324,1324,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btSolverBody(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btSolverBody(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.803136944770813}, {'value': ['start'], 'probability': 0.017230937257409096}, {'value': ['clear'], 'probability': 0.012024476192891598}, {'value': ['test'], 'probability': 0.011158440262079239}, {'value': ['flush'], 'probability': 0.008475013077259064}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.120570555]",0.1194075784181424,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1325,1325,"public void setWorldTransform(btTransform value) {DynamicsJNI.btSolverBody_worldTransform_set(swigCPtr, this, btTransform.getCPtr(value), value);}
","public void [MASK](btTransform value) {DynamicsJNI.btSolverBody_worldTransform_set(swigCPtr, this, btTransform.getCPtr(value), value);}
",setWorldTransform,"[{'value': ['set'], 'probability': 0.7513071894645691}, {'value': ['put'], 'probability': 0.040480710566043854}, {'value': ['add'], 'probability': 0.01368616335093975}, {'value': ['get'], 'probability': 0.012433342635631561}, {'value': ['update'], 'probability': 0.010066485032439232}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.41854778]",0.8027250819870453,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1326,1326,"public btTransform getWorldTransform() {long cPtr = DynamicsJNI.btSolverBody_worldTransform_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
","public btTransform [MASK]() {long cPtr = DynamicsJNI.btSolverBody_worldTransform_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransform(cPtr, false);}
",getWorldTransform,"[{'value': ['create'], 'probability': 0.1697859913110733}, {'value': ['get'], 'probability': 0.146339550614357}, {'value': ['update'], 'probability': 0.08295813202857971}, {'value': ['transform'], 'probability': 0.06471478939056396}, {'value': ['build'], 'probability': 0.05407494306564331}]","[0.62328804, 1.0, 0.36048478, 0.33052462, 0.5626448]",0.3338850872753909,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1327,1327,"public void setDeltaLinearVelocity(btVector3 value) {DynamicsJNI.btSolverBody_deltaLinearVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_deltaLinearVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setDeltaLinearVelocity,"[{'value': ['set'], 'probability': 0.591669499874115}, {'value': ['put'], 'probability': 0.04085526242852211}, {'value': ['execute'], 'probability': 0.02155931107699871}, {'value': ['update'], 'probability': 0.01724180579185486}, {'value': ['add'], 'probability': 0.01717023178935051}]","[1.0, 0.7944568, 0.35167885, 0.41854778, 0.5084879]",0.6476565680876498,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1328,1328,"public btVector3 getDeltaLinearVelocity() {long cPtr = DynamicsJNI.btSolverBody_deltaLinearVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_deltaLinearVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getDeltaLinearVelocity,"[{'value': ['get'], 'probability': 0.1696806401014328}, {'value': ['clone'], 'probability': 0.06937040388584137}, {'value': ['build'], 'probability': 0.03084072843194008}, {'value': ['double'], 'probability': 0.02907833829522133}, {'value': ['update'], 'probability': 0.024826768785715103}]","[1.0, 0.166604, 0.5626448, 0.5437231, 0.36048478]",0.2233506382228267,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1329,1329,"public void setDeltaAngularVelocity(btVector3 value) {DynamicsJNI.btSolverBody_deltaAngularVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_deltaAngularVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setDeltaAngularVelocity,"[{'value': ['set'], 'probability': 0.5957518815994263}, {'value': ['put'], 'probability': 0.04031052812933922}, {'value': ['execute'], 'probability': 0.021179933100938797}, {'value': ['add'], 'probability': 0.017288915812969208}, {'value': ['get'], 'probability': 0.016861623153090477}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.65028083]",0.6549813829617759,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1330,1330,"public btVector3 getDeltaAngularVelocity() {long cPtr = DynamicsJNI.btSolverBody_deltaAngularVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_deltaAngularVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getDeltaAngularVelocity,"[{'value': ['get'], 'probability': 0.16557343304157257}, {'value': ['clone'], 'probability': 0.07324672490358353}, {'value': ['build'], 'probability': 0.03606346249580383}, {'value': ['double'], 'probability': 0.028923550620675087}, {'value': ['update'], 'probability': 0.027701476588845253}]","[1.0, 0.166604, 0.5626448, 0.5437231, 0.36048478]",0.2237799125677591,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1331,1331,"public void setAngularFactor(btVector3 value) {DynamicsJNI.btSolverBody_angularFactor_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_angularFactor_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setAngularFactor,"[{'value': ['set'], 'probability': 0.5550940632820129}, {'value': ['put'], 'probability': 0.06388066709041595}, {'value': ['add'], 'probability': 0.026412466540932655}, {'value': ['execute'], 'probability': 0.024616708979010582}, {'value': ['update'], 'probability': 0.017355335876345634}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.41854778]",0.6351961246354803,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1332,1332,"public btVector3 getAngularFactor() {long cPtr = DynamicsJNI.btSolverBody_angularFactor_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_angularFactor_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getAngularFactor,"[{'value': ['get'], 'probability': 0.12894673645496368}, {'value': ['clone'], 'probability': 0.10364264249801636}, {'value': ['create'], 'probability': 0.04310426488518715}, {'value': ['build'], 'probability': 0.04097510501742363}, {'value': ['expand'], 'probability': 0.04091902822256088}]","[1.0, 0.166604, 0.62328804, 0.5626448, 0.47652406]",0.215633717758785,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1333,1333,"public void setLinearFactor(btVector3 value) {DynamicsJNI.btSolverBody_linearFactor_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_linearFactor_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setLinearFactor,"[{'value': ['set'], 'probability': 0.5829613208770752}, {'value': ['put'], 'probability': 0.05302734673023224}, {'value': ['execute'], 'probability': 0.024471856653690338}, {'value': ['add'], 'probability': 0.017982536926865578}, {'value': ['update'], 'probability': 0.017056971788406372}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.41854778]",0.6499785501200329,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1334,1334,"public btVector3 getLinearFactor() {long cPtr = DynamicsJNI.btSolverBody_linearFactor_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_linearFactor_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getLinearFactor,"[{'value': ['clone'], 'probability': 0.13662411272525787}, {'value': ['get'], 'probability': 0.1162610873579979}, {'value': ['expand'], 'probability': 0.053129103034734726}, {'value': ['create'], 'probability': 0.04296277463436127}, {'value': ['build'], 'probability': 0.03865766525268555}]","[0.166604, 1.0, 0.47652406, 0.62328804, 0.5626448]",0.2128692232352276,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1335,1335,"public void setInvMass(btVector3 value) {DynamicsJNI.btSolverBody_invMass_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_invMass_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setInvMass,"[{'value': ['set'], 'probability': 0.6096007227897644}, {'value': ['put'], 'probability': 0.05475910007953644}, {'value': ['execute'], 'probability': 0.02164817601442337}, {'value': ['add'], 'probability': 0.014598770998418331}, {'value': ['read'], 'probability': 0.012165016494691372}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.4820371]",0.6740049540777409,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1336,1336,"public btVector3 getInvMass() {long cPtr = DynamicsJNI.btSolverBody_invMass_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_invMass_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getInvMass,"[{'value': ['get'], 'probability': 0.15238285064697266}, {'value': ['clone'], 'probability': 0.08503347635269165}, {'value': ['double'], 'probability': 0.03095417469739914}, {'value': ['long'], 'probability': 0.02907795086503029}, {'value': ['build'], 'probability': 0.028122611343860626}]","[1.0, 0.166604, 0.5437231, 0.65134645, 0.5626448]",0.2181431281278141,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1337,1337,"public void setPushVelocity(btVector3 value) {DynamicsJNI.btSolverBody_pushVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_pushVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setPushVelocity,"[{'value': ['set'], 'probability': 0.5794697403907776}, {'value': ['put'], 'probability': 0.05680875480175018}, {'value': ['add'], 'probability': 0.02117282710969448}, {'value': ['execute'], 'probability': 0.020443975925445557}, {'value': ['update'], 'probability': 0.018755223602056503}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.41854778]",0.6504076378761892,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1338,1338,"public btVector3 getPushVelocity() {long cPtr = DynamicsJNI.btSolverBody_pushVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_pushVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getPushVelocity,"[{'value': ['get'], 'probability': 0.17949408292770386}, {'value': ['clone'], 'probability': 0.05967433750629425}, {'value': ['update'], 'probability': 0.03877853974699974}, {'value': ['build'], 'probability': 0.03767157346010208}, {'value': ['double'], 'probability': 0.028964553028345108}]","[1.0, 0.166604, 0.36048478, 0.5626448, 0.5437231]",0.2403595503188214,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1339,1339,"public void setTurnVelocity(btVector3 value) {DynamicsJNI.btSolverBody_turnVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_turnVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setTurnVelocity,"[{'value': ['set'], 'probability': 0.5915629267692566}, {'value': ['put'], 'probability': 0.05215655267238617}, {'value': ['add'], 'probability': 0.02242104709148407}, {'value': ['execute'], 'probability': 0.02085166983306408}, {'value': ['apply'], 'probability': 0.014960525557398796}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.5010617]",0.6592291216369666,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1340,1340,"public btVector3 getTurnVelocity() {long cPtr = DynamicsJNI.btSolverBody_turnVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_turnVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getTurnVelocity,"[{'value': ['get'], 'probability': 0.17670372128486633}, {'value': ['clone'], 'probability': 0.07387183606624603}, {'value': ['update'], 'probability': 0.03773486241698265}, {'value': ['create'], 'probability': 0.028963617980480194}, {'value': ['double'], 'probability': 0.026879385113716125}]","[1.0, 0.166604, 0.36048478, 0.62328804, 0.5437231]",0.2352815273202102,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1341,1341,"public void setLinearVelocity(btVector3 value) {DynamicsJNI.btSolverBody_linearVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_linearVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setLinearVelocity,"[{'value': ['set'], 'probability': 0.6225554943084717}, {'value': ['put'], 'probability': 0.04127678647637367}, {'value': ['add'], 'probability': 0.01781567931175232}, {'value': ['execute'], 'probability': 0.016929784789681435}, {'value': ['get'], 'probability': 0.01620367169380188}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.65028083]",0.6808979585344457,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1342,1342,"public btVector3 getLinearVelocity() {long cPtr = DynamicsJNI.btSolverBody_linearVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_linearVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getLinearVelocity,"[{'value': ['get'], 'probability': 0.1657789647579193}, {'value': ['clone'], 'probability': 0.07492773234844208}, {'value': ['build'], 'probability': 0.03731771931052208}, {'value': ['update'], 'probability': 0.029551278799772263}, {'value': ['long'], 'probability': 0.02604692243039608}]","[1.0, 0.166604, 0.5626448, 0.36048478, 0.65134645]",0.2268772009734265,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1343,1343,"public void setAngularVelocity(btVector3 value) {DynamicsJNI.btSolverBody_angularVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_angularVelocity_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setAngularVelocity,"[{'value': ['set'], 'probability': 0.5663760900497437}, {'value': ['put'], 'probability': 0.043558139353990555}, {'value': ['add'], 'probability': 0.02275913767516613}, {'value': ['execute'], 'probability': 0.018444273620843887}, {'value': ['apply'], 'probability': 0.018254045397043228}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.5010617]",0.6281867583739275,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1344,1344,"public btVector3 getAngularVelocity() {long cPtr = DynamicsJNI.btSolverBody_angularVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_angularVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getAngularVelocity,"[{'value': ['get'], 'probability': 0.13249126076698303}, {'value': ['clone'], 'probability': 0.07024729996919632}, {'value': ['update'], 'probability': 0.05429305508732796}, {'value': ['build'], 'probability': 0.037922076880931854}, {'value': ['double'], 'probability': 0.036248430609703064}]","[1.0, 0.166604, 0.36048478, 0.5626448, 0.5437231]",0.2048123295872351,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1345,1345,"public void setExternalForceImpulse(btVector3 value) {DynamicsJNI.btSolverBody_externalForceImpulse_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_externalForceImpulse_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setExternalForceImpulse,"[{'value': ['set'], 'probability': 0.694658637046814}, {'value': ['put'], 'probability': 0.04031312093138695}, {'value': ['add'], 'probability': 0.015218954533338547}, {'value': ['get'], 'probability': 0.012081393040716648}, {'value': ['update'], 'probability': 0.011629259213805199}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.41854778]",0.7471480221743103,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1346,1346,"public btVector3 getExternalForceImpulse() {long cPtr = DynamicsJNI.btSolverBody_externalForceImpulse_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_externalForceImpulse_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getExternalForceImpulse,"[{'value': ['get'], 'probability': 0.16139428317546844}, {'value': ['clone'], 'probability': 0.09048168361186981}, {'value': ['build'], 'probability': 0.03791854530572891}, {'value': ['run'], 'probability': 0.03144436329603195}, {'value': ['update'], 'probability': 0.028470752760767937}]","[1.0, 0.166604, 0.5626448, 0.65114945, 0.36048478]",0.2285418178553863,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1347,1347,"public void setExternalTorqueImpulse(btVector3 value) {DynamicsJNI.btSolverBody_externalTorqueImpulse_set(swigCPtr, this, btVector3.getCPtr(value), value);}
","public void [MASK](btVector3 value) {DynamicsJNI.btSolverBody_externalTorqueImpulse_set(swigCPtr, this, btVector3.getCPtr(value), value);}
",setExternalTorqueImpulse,"[{'value': ['set'], 'probability': 0.691299557685852}, {'value': ['put'], 'probability': 0.03766850009560585}, {'value': ['add'], 'probability': 0.015109943225979805}, {'value': ['get'], 'probability': 0.011667054146528244}, {'value': ['update'], 'probability': 0.011472620069980621}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.41854778]",0.7412974773241862,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1348,1348,"public btVector3 getExternalTorqueImpulse() {long cPtr = DynamicsJNI.btSolverBody_externalTorqueImpulse_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
","public btVector3 [MASK]() {long cPtr = DynamicsJNI.btSolverBody_externalTorqueImpulse_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3(cPtr, false);}
",getExternalTorqueImpulse,"[{'value': ['get'], 'probability': 0.15056651830673218}, {'value': ['clone'], 'probability': 0.09384619444608688}, {'value': ['build'], 'probability': 0.03398802503943443}, {'value': ['run'], 'probability': 0.030093137174844742}, {'value': ['update'], 'probability': 0.02904367819428444}]","[1.0, 0.166604, 0.5626448, 0.65114945, 0.36048478]",0.2153897879817302,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1349,1349,"public void setOriginalBody(btRigidBody value) {DynamicsJNI.btSolverBody_originalBody_set(swigCPtr, this, btRigidBody.getCPtr(value), value);}
","public void [MASK](btRigidBody value) {DynamicsJNI.btSolverBody_originalBody_set(swigCPtr, this, btRigidBody.getCPtr(value), value);}
",setOriginalBody,"[{'value': ['set'], 'probability': 0.5765097141265869}, {'value': ['put'], 'probability': 0.039976660162210464}, {'value': ['add'], 'probability': 0.02650652453303337}, {'value': ['update'], 'probability': 0.021745506674051285}, {'value': ['read'], 'probability': 0.017082981765270233}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.4820371]",0.6390838537751174,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1350,1350,"public btRigidBody getOriginalBody() {return btRigidBody.getInstance(DynamicsJNI.btSolverBody_originalBody_get(swigCPtr, this), false);}
","public btRigidBody [MASK]() {return btRigidBody.getInstance(DynamicsJNI.btSolverBody_originalBody_get(swigCPtr, this), false);}
",getOriginalBody,"[{'value': ['create'], 'probability': 0.18145640194416046}, {'value': ['restore'], 'probability': 0.05635594204068184}, {'value': ['build'], 'probability': 0.05617280676960945}, {'value': ['update'], 'probability': 0.049218978732824326}, {'value': ['original'], 'probability': 0.04738744720816612}]","[0.62328804, 0.40950498, 0.5626448, 0.36048478, 0.41955534]",0.2054073286880509,"[{'value': ['instance'], 'probability': 0.24291475117206573}, {'value': ['get', 'flags'], 'probability': 0.15380139648914337}, {'value': ['stop', 'capture'], 'probability': 0.11797503381967545}, {'value': ['what'], 'probability': 0.09154746681451797}, {'value': ['get', 'options'], 'probability': 0.08183800429105759}, {'value': ['get', 'instance'], 'probability': 0.07271350175142288}, {'value': ['get', 'publisher'], 'probability': 0.06692762672901154}, {'value': ['get', 'c', 'ptr'], 'probability': 0.059888411313295364}, {'value': ['get', 'top'], 'probability': 0.056414585560560226}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05597924441099167}]","[0.56794554, 0.75727946, 0.64470273, 0.76382285, 0.88330656, 0.9335536, 0.7924022, 0.67619735, 0.8810721, 0.7738402]",0.7271421495210391
1351,1351,"public void getVelocityInLocalPointNoDelta(Vector3 rel_pos, Vector3 velocity) {DynamicsJNI.btSolverBody_getVelocityInLocalPointNoDelta(swigCPtr, this, rel_pos, velocity);}
","public void [MASK](Vector3 rel_pos, Vector3 velocity) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, rel_pos, velocity);}
",getVelocityInLocalPointNoDelta,"[{'value': ['execute'], 'probability': 0.14080308377742767}, {'value': ['run'], 'probability': 0.13497669994831085}, {'value': ['read'], 'probability': 0.06634620577096939}, {'value': ['write'], 'probability': 0.04242526367306709}, {'value': ['setup'], 'probability': 0.03647908940911293}]","[0.37713256, 0.65114945, 0.5726487, 0.60768855, 0.37349153]",0.2183904785964379,"[{'value': ['apply', 'force'], 'probability': 0.8524178266525269}, {'value': ['set', 'transform'], 'probability': 0.055124346166849136}, {'value': ['set', 'velocity'], 'probability': 0.05219974368810654}, {'value': ['lerp'], 'probability': 0.012959090992808342}, {'value': ['distance', 'squared'], 'probability': 0.008600403554737568}, {'value': ['on', 'note', 'on'], 'probability': 0.007677861023694277}, {'value': ['get', 'velocity'], 'probability': 0.004101456142961979}, {'value': ['fire'], 'probability': 0.0029986067675054073}, {'value': ['cos'], 'probability': 0.0023749317042529583}, {'value': ['displace'], 'probability': 0.0015457423869520426}]","[0.6191491, 0.5965608, 0.5448773, 0.0, 0.411719, 0.6336987, 0.7696552, 0.47926098, -0.03455325, 0.11719705]",0.6022005268516893
1352,1352,"public void getVelocityInLocalPointObsolete(Vector3 rel_pos, Vector3 velocity) {DynamicsJNI.btSolverBody_getVelocityInLocalPointObsolete(swigCPtr, this, rel_pos, velocity);}
","public void [MASK](Vector3 rel_pos, Vector3 velocity) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, rel_pos, velocity);}
",getVelocityInLocalPointObsolete,"[{'value': ['execute'], 'probability': 0.14080308377742767}, {'value': ['run'], 'probability': 0.13497669994831085}, {'value': ['read'], 'probability': 0.06634620577096939}, {'value': ['write'], 'probability': 0.04242526367306709}, {'value': ['setup'], 'probability': 0.03647908940911293}]","[0.37713256, 0.65114945, 0.5726487, 0.60768855, 0.37349153]",0.2183904785964379,"[{'value': ['apply', 'force'], 'probability': 0.8524178266525269}, {'value': ['set', 'transform'], 'probability': 0.055124346166849136}, {'value': ['set', 'velocity'], 'probability': 0.05219974368810654}, {'value': ['lerp'], 'probability': 0.012959090992808342}, {'value': ['distance', 'squared'], 'probability': 0.008600403554737568}, {'value': ['on', 'note', 'on'], 'probability': 0.007677861023694277}, {'value': ['get', 'velocity'], 'probability': 0.004101456142961979}, {'value': ['fire'], 'probability': 0.0029986067675054073}, {'value': ['cos'], 'probability': 0.0023749317042529583}, {'value': ['displace'], 'probability': 0.0015457423869520426}]","[0.6191491, 0.5965608, 0.5448773, 0.0, 0.411719, 0.6336987, 0.7696552, 0.47926098, -0.03455325, 0.11719705]",0.6022005268516893
1353,1353,"public void getAngularVelocity(Vector3 angVel) {DynamicsJNI.btSolverBody_getAngularVelocity(swigCPtr, this, angVel);}
","public void [MASK](Vector3 angVel) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, angVel);}
",getAngularVelocity,"[{'value': ['execute'], 'probability': 0.10438964515924454}, {'value': ['test'], 'probability': 0.09511160105466843}, {'value': ['run'], 'probability': 0.06250885874032974}, {'value': ['write'], 'probability': 0.05208207666873932}, {'value': ['read'], 'probability': 0.046326644718647}]","[0.37713256, 0.4599198, 0.65114945, 0.60768855, 0.5726487]",0.181993627740937,"[{'value': ['set', 'angular', 'velocity'], 'probability': 0.9983459711074829}, {'value': ['push', 'back'], 'probability': 0.0005790982395410538}, {'value': ['set', 'transform'], 'probability': 0.00020356933237053454}, {'value': ['document', 'changed'], 'probability': 0.00019207281002309173}, {'value': ['add', 'symbol'], 'probability': 0.00016174274787772447}, {'value': ['draw'], 'probability': 0.00011627561616478488}, {'value': ['move', 'first'], 'probability': 0.0001061823932104744}, {'value': ['place'], 'probability': 0.00010548153659328818}, {'value': ['grow'], 'probability': 9.842730651143938e-05}, {'value': ['set', 'free'], 'probability': 9.121600305661559e-05}]","[0.38199344, 0.80407315, 0.5965608, 0.5068477, 0.49253327, 0.558067, 0.7305324, 0.66932654, 0.54974, 0.7410829]",0.3824604748917045
1354,1354,"public void applyImpulse(Vector3 linearComponent, Vector3 angularComponent, float impulseMagnitude) {DynamicsJNI.btSolverBody_applyImpulse(swigCPtr, this, linearComponent, angularComponent, impulseMagnitude);}
","public void [MASK](Vector3 linearComponent, Vector3 angularComponent, float impulseMagnitude) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, linearComponent, angularComponent, impulseMagnitude);}
",applyImpulse,"[{'value': ['write'], 'probability': 0.09617602080106735}, {'value': ['execute'], 'probability': 0.07881199568510056}, {'value': ['run'], 'probability': 0.042301490902900696}, {'value': ['read'], 'probability': 0.04126361012458801}, {'value': ['paint'], 'probability': 0.04124094918370247}]","[0.49031785, 0.4182651, 0.31619856, 0.41615793, 0.3880011]",0.1266705107193354,"[{'value': ['set', 'dirty'], 'probability': 0.25322023034095764}, {'value': ['set', 'expire', 'time'], 'probability': 0.12300888448953629}, {'value': ['set', 'transform'], 'probability': 0.10817578434944153}, {'value': ['set', 'position'], 'probability': 0.1074695736169815}, {'value': ['set', 'origin'], 'probability': 0.08885357528924942}, {'value': ['init'], 'probability': 0.08207587152719498}, {'value': ['apply', 'layout'], 'probability': 0.06604737788438797}, {'value': ['set', 'limits'], 'probability': 0.05970531329512596}, {'value': ['set', 'bounds'], 'probability': 0.056402333080768585}, {'value': ['set', 'acceleration'], 'probability': 0.055041052401065826}]","[0.4093784, 0.60470563, 0.513518, 0.5458792, 0.5204365, -0.15648955, 0.761022, 0.64970815, 0.49231303, 0.4126819]",0.4651978884076785
1355,1355,"public void internalApplyPushImpulse(Vector3 linearComponent, Vector3 angularComponent, float impulseMagnitude) {DynamicsJNI.btSolverBody_internalApplyPushImpulse(swigCPtr, this, linearComponent, angularComponent, impulseMagnitude);}
","public void [MASK](Vector3 linearComponent, Vector3 angularComponent, float impulseMagnitude) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, linearComponent, angularComponent, impulseMagnitude);}
",internalApplyPushImpulse,"[{'value': ['write'], 'probability': 0.09617602080106735}, {'value': ['execute'], 'probability': 0.07881199568510056}, {'value': ['run'], 'probability': 0.042301490902900696}, {'value': ['read'], 'probability': 0.04126361012458801}, {'value': ['paint'], 'probability': 0.04124094918370247}]","[0.33753827, 0.1539845, 0.37363493, 0.28924116, 0.19665976]",0.0804497983420457,"[{'value': ['set', 'dirty'], 'probability': 0.25322023034095764}, {'value': ['set', 'expire', 'time'], 'probability': 0.12300888448953629}, {'value': ['set', 'transform'], 'probability': 0.10817578434944153}, {'value': ['set', 'position'], 'probability': 0.1074695736169815}, {'value': ['set', 'origin'], 'probability': 0.08885357528924942}, {'value': ['init'], 'probability': 0.08207587152719498}, {'value': ['apply', 'layout'], 'probability': 0.06604737788438797}, {'value': ['set', 'limits'], 'probability': 0.05970531329512596}, {'value': ['set', 'bounds'], 'probability': 0.056402333080768585}, {'value': ['set', 'acceleration'], 'probability': 0.055041052401065826}]","[0.47038373, 0.42633757, 0.45364922, 0.5387955, 0.46649343, -0.06072073, 0.3587446, 0.49625385, 0.42310306, 0.51562846]",0.42056573502790623
1356,1356,"public Vector3 internalGetDeltaLinearVelocity() {return DynamicsJNI.btSolverBody_internalGetDeltaLinearVelocity(swigCPtr, this);}
","public Vector3 [MASK]() {return DynamicsJNI.btSolverBody_[MASK](swigCPtr, this);}
",internalGetDeltaLinearVelocity,"[{'value': ['get'], 'probability': 0.03957948088645935}, {'value': ['clone'], 'probability': 0.03945406153798103}, {'value': ['##MP'], 'probability': 0.03920392692089081}, {'value': ['##D'], 'probability': 0.03612193092703819}, {'value': ['##V'], 'probability': 0.0300025325268507}]","[0.35747883, 0.14740154, 0.0, 0.0, 0.0]",0.0199644158979926,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.3834903, 0.5553274, 0.4253664, 0.2878074, 0.3534409, 0.39724702, 0.41266707, 0.5409975, 0.4186373, 0.43977377]",0.41053871209571186
1357,1357,"public Vector3 internalGetDeltaAngularVelocity() {return DynamicsJNI.btSolverBody_internalGetDeltaAngularVelocity(swigCPtr, this);}
","public Vector3 [MASK]() {return DynamicsJNI.btSolverBody_[MASK](swigCPtr, this);}
",internalGetDeltaAngularVelocity,"[{'value': ['get'], 'probability': 0.03957948088645935}, {'value': ['clone'], 'probability': 0.03945406153798103}, {'value': ['##MP'], 'probability': 0.03920392692089081}, {'value': ['##D'], 'probability': 0.03612193092703819}, {'value': ['##V'], 'probability': 0.0300025325268507}]","[0.35747883, 0.14740154, 0.0, 0.0, 0.0]",0.0199644158979926,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.3834903, 0.5553274, 0.4253664, 0.2878074, 0.3534409, 0.39724702, 0.41266707, 0.5409975, 0.4186373, 0.43977377]",0.41053871209571186
1358,1358,"public Vector3 internalGetAngularFactor() {return DynamicsJNI.btSolverBody_internalGetAngularFactor(swigCPtr, this);}
","public Vector3 [MASK]() {return DynamicsJNI.btSolverBody_[MASK](swigCPtr, this);}
",internalGetAngularFactor,"[{'value': ['get'], 'probability': 0.03957948088645935}, {'value': ['clone'], 'probability': 0.03945406153798103}, {'value': ['##MP'], 'probability': 0.03920392692089081}, {'value': ['##D'], 'probability': 0.03612193092703819}, {'value': ['##V'], 'probability': 0.0300025325268507}]","[0.35747883, 0.14740154, 0.0, 0.0, 0.0]",0.0199644158979926,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.3834903, 0.5553274, 0.4253664, 0.2878074, 0.3534409, 0.39724702, 0.41266707, 0.5409975, 0.4186373, 0.43977377]",0.41053871209571186
1359,1359,"public Vector3 internalGetInvMass() {return DynamicsJNI.btSolverBody_internalGetInvMass(swigCPtr, this);}
","public Vector3 [MASK]() {return DynamicsJNI.btSolverBody_[MASK](swigCPtr, this);}
",internalGetInvMass,"[{'value': ['get'], 'probability': 0.03957948088645935}, {'value': ['clone'], 'probability': 0.03945406153798103}, {'value': ['##MP'], 'probability': 0.03920392692089081}, {'value': ['##D'], 'probability': 0.03612193092703819}, {'value': ['##V'], 'probability': 0.0300025325268507}]","[0.35747883, 0.14740154, 0.0, 0.0, 0.0]",0.0199644158979926,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.3834903, 0.5553274, 0.4253664, 0.2878074, 0.3534409, 0.39724702, 0.41266707, 0.5409975, 0.4186373, 0.43977377]",0.41053871209571186
1360,1360,"public void internalSetInvMass(Vector3 invMass) {DynamicsJNI.btSolverBody_internalSetInvMass(swigCPtr, this, invMass);}
","public void [MASK](Vector3 invMass) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, invMass);}
",internalSetInvMass,"[{'value': ['execute'], 'probability': 0.17528384923934937}, {'value': ['run'], 'probability': 0.0953601747751236}, {'value': ['read'], 'probability': 0.07552112638950348}, {'value': ['write'], 'probability': 0.07389334589242935}, {'value': ['test'], 'probability': 0.059567585587501526}]","[0.1539845, 0.37363493, 0.28924116, 0.33753827, 0.2936847]",0.126900627722047,"[{'value': ['add', 'force'], 'probability': 0.6447933912277222}, {'value': ['init', 'velocity', 'constraints'], 'probability': 0.35516759753227234}, {'value': ['hit'], 'probability': 1.21747953016893e-05}, {'value': ['not'], 'probability': 5.470648375194287e-06}, {'value': ['test', 'token', 'stream'], 'probability': 5.423956736194668e-06}, {'value': ['seen'], 'probability': 4.658250873035286e-06}, {'value': ['should', 'retry'], 'probability': 4.234992047713604e-06}, {'value': ['prefetch'], 'probability': 2.6464219899935415e-06}, {'value': ['set', 'initialize'], 'probability': 2.233455461464473e-06}, {'value': ['is', 'upper', 'case'], 'probability': 2.15652585211501e-06}]","[0.5081556, 0.36683726, 0.17809767, 0.4948229, 0.4035096, 0.39252648, 0.32190195, -0.05456727, 0.3671523, 0.52032906]",0.4579561342906348
1361,1361,"public Vector3 internalGetPushVelocity() {return DynamicsJNI.btSolverBody_internalGetPushVelocity(swigCPtr, this);}
","public Vector3 [MASK]() {return DynamicsJNI.btSolverBody_[MASK](swigCPtr, this);}
",internalGetPushVelocity,"[{'value': ['get'], 'probability': 0.03957948088645935}, {'value': ['clone'], 'probability': 0.03945406153798103}, {'value': ['##MP'], 'probability': 0.03920392692089081}, {'value': ['##D'], 'probability': 0.03612193092703819}, {'value': ['##V'], 'probability': 0.0300025325268507}]","[0.35747883, 0.14740154, 0.0, 0.0, 0.0]",0.0199644158979926,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.3834903, 0.5553274, 0.4253664, 0.2878074, 0.3534409, 0.39724702, 0.41266707, 0.5409975, 0.4186373, 0.43977377]",0.41053871209571186
1362,1362,"public Vector3 internalGetTurnVelocity() {return DynamicsJNI.btSolverBody_internalGetTurnVelocity(swigCPtr, this);}
","public Vector3 [MASK]() {return DynamicsJNI.btSolverBody_[MASK](swigCPtr, this);}
",internalGetTurnVelocity,"[{'value': ['get'], 'probability': 0.03957948088645935}, {'value': ['clone'], 'probability': 0.03945406153798103}, {'value': ['##MP'], 'probability': 0.03920392692089081}, {'value': ['##D'], 'probability': 0.03612193092703819}, {'value': ['##V'], 'probability': 0.0300025325268507}]","[0.35747883, 0.14740154, 0.0, 0.0, 0.0]",0.0199644158979926,"[{'value': ['get', 'reserved'], 'probability': 0.37703168392181396}, {'value': ['get', 'grid', 'data'], 'probability': 0.10448725521564484}, {'value': ['get', 'left'], 'probability': 0.08656549453735352}, {'value': ['get', 'keywords'], 'probability': 0.07833364605903625}, {'value': ['get', 'vector'], 'probability': 0.0766364112496376}, {'value': ['get', 'formats'], 'probability': 0.06843826919794083}, {'value': ['get', 'center'], 'probability': 0.0682300552725792}, {'value': ['get', 'data'], 'probability': 0.05308828502893448}, {'value': ['last'], 'probability': 0.04421788081526756}, {'value': ['get', 'absolute', 'location'], 'probability': 0.04297097027301788}]","[0.3834903, 0.5553274, 0.4253664, 0.2878074, 0.3534409, 0.39724702, 0.41266707, 0.5409975, 0.4186373, 0.43977377]",0.41053871209571186
1363,1363,"public void internalGetVelocityInLocalPointObsolete(Vector3 rel_pos, Vector3 velocity) {DynamicsJNI.btSolverBody_internalGetVelocityInLocalPointObsolete(swigCPtr, this, rel_pos, velocity);}
","public void [MASK](Vector3 rel_pos, Vector3 velocity) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, rel_pos, velocity);}
",internalGetVelocityInLocalPointObsolete,"[{'value': ['execute'], 'probability': 0.14080308377742767}, {'value': ['run'], 'probability': 0.13497669994831085}, {'value': ['read'], 'probability': 0.06634620577096939}, {'value': ['write'], 'probability': 0.04242526367306709}, {'value': ['setup'], 'probability': 0.03647908940911293}]","[0.1539845, 0.37363493, 0.28924116, 0.33753827, 0.24165726]",0.1144391438919162,"[{'value': ['apply', 'force'], 'probability': 0.8524178266525269}, {'value': ['set', 'transform'], 'probability': 0.055124346166849136}, {'value': ['set', 'velocity'], 'probability': 0.05219974368810654}, {'value': ['lerp'], 'probability': 0.012959090992808342}, {'value': ['distance', 'squared'], 'probability': 0.008600403554737568}, {'value': ['on', 'note', 'on'], 'probability': 0.007677861023694277}, {'value': ['get', 'velocity'], 'probability': 0.004101456142961979}, {'value': ['fire'], 'probability': 0.0029986067675054073}, {'value': ['cos'], 'probability': 0.0023749317042529583}, {'value': ['displace'], 'probability': 0.0015457423869520426}]","[0.5073416, 0.45364922, 0.46077356, 0.0, 0.26111442, 0.4920262, 0.39539215, 0.42672062, -0.08190406, -0.01444665]",0.4902342041372577
1364,1364,"public void internalGetAngularVelocity(Vector3 angVel) {DynamicsJNI.btSolverBody_internalGetAngularVelocity(swigCPtr, this, angVel);}
","public void [MASK](Vector3 angVel) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, angVel);}
",internalGetAngularVelocity,"[{'value': ['execute'], 'probability': 0.10438964515924454}, {'value': ['test'], 'probability': 0.09511160105466843}, {'value': ['run'], 'probability': 0.06250885874032974}, {'value': ['write'], 'probability': 0.05208207666873932}, {'value': ['read'], 'probability': 0.046326644718647}]","[0.1539845, 0.2936847, 0.37363493, 0.33753827, 0.28924116]",0.0983419688939865,"[{'value': ['set', 'angular', 'velocity'], 'probability': 0.9983459711074829}, {'value': ['push', 'back'], 'probability': 0.0005790982395410538}, {'value': ['set', 'transform'], 'probability': 0.00020356933237053454}, {'value': ['document', 'changed'], 'probability': 0.00019207281002309173}, {'value': ['add', 'symbol'], 'probability': 0.00016174274787772447}, {'value': ['draw'], 'probability': 0.00011627561616478488}, {'value': ['move', 'first'], 'probability': 0.0001061823932104744}, {'value': ['place'], 'probability': 0.00010548153659328818}, {'value': ['grow'], 'probability': 9.842730651143938e-05}, {'value': ['set', 'free'], 'probability': 9.121600305661559e-05}]","[0.39964557, 0.43950728, 0.45364922, 0.5268758, 0.39899898, 0.26113045, 0.44629282, 0.35248032, 0.25904337, 0.47627744]",0.3996810181233251
1365,1365,"public void internalApplyImpulse(Vector3 linearComponent, Vector3 angularComponent, float impulseMagnitude) {DynamicsJNI.btSolverBody_internalApplyImpulse(swigCPtr, this, linearComponent, angularComponent, impulseMagnitude);}
","public void [MASK](Vector3 linearComponent, Vector3 angularComponent, float impulseMagnitude) {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this, linearComponent, angularComponent, impulseMagnitude);}
",internalApplyImpulse,"[{'value': ['write'], 'probability': 0.09617602080106735}, {'value': ['execute'], 'probability': 0.07881199568510056}, {'value': ['run'], 'probability': 0.042301490902900696}, {'value': ['read'], 'probability': 0.04126361012458801}, {'value': ['paint'], 'probability': 0.04124094918370247}]","[0.33753827, 0.1539845, 0.37363493, 0.28924116, 0.19665976]",0.0804497983420457,"[{'value': ['set', 'dirty'], 'probability': 0.25322023034095764}, {'value': ['set', 'expire', 'time'], 'probability': 0.12300888448953629}, {'value': ['set', 'transform'], 'probability': 0.10817578434944153}, {'value': ['set', 'position'], 'probability': 0.1074695736169815}, {'value': ['set', 'origin'], 'probability': 0.08885357528924942}, {'value': ['init'], 'probability': 0.08207587152719498}, {'value': ['apply', 'layout'], 'probability': 0.06604737788438797}, {'value': ['set', 'limits'], 'probability': 0.05970531329512596}, {'value': ['set', 'bounds'], 'probability': 0.056402333080768585}, {'value': ['set', 'acceleration'], 'probability': 0.055041052401065826}]","[0.47038373, 0.42633757, 0.45364922, 0.5387955, 0.46649343, -0.06072073, 0.3587446, 0.49625385, 0.42310306, 0.51562846]",0.42056573502790623
1366,1366,"public void writebackVelocity() {DynamicsJNI.btSolverBody_writebackVelocity(swigCPtr, this);}
","public void [MASK]() {DynamicsJNI.btSolverBody_[MASK](swigCPtr, this);}
",writebackVelocity,"[{'value': ['run'], 'probability': 0.6495602130889893}, {'value': ['test'], 'probability': 0.08163996785879135}, {'value': ['setup'], 'probability': 0.0326106920838356}, {'value': ['execute'], 'probability': 0.027827084064483643}, {'value': ['start'], 'probability': 0.023979846388101578}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1367,1367,"public void dispose() {batch.dispose();stage.dispose();skin.dispose();font.dispose();if (texture != null)texture.dispose();}
","public void [MASK]() {batch.[MASK]();stage.[MASK]();skin.[MASK]();font.[MASK]();if (texture != null)texture.[MASK]();}
",dispose,"[{'value': ['run'], 'probability': 0.16287952661514282}, {'value': ['finish'], 'probability': 0.09615493565797806}, {'value': ['flush'], 'probability': 0.07464610785245895}, {'value': ['start'], 'probability': 0.060480475425720215}, {'value': ['clear'], 'probability': 0.06006786972284317}]","[0.13288948, 0.15473744, 0.23337094, 0.14684053, 0.20622805]",0.0752126414870822,"[{'value': ['dispose'], 'probability': 0.9875205755233765}, {'value': ['close'], 'probability': 0.0029580951668322086}, {'value': ['delete'], 'probability': 0.002600159030407667}, {'value': ['destroy'], 'probability': 0.0019155665067955852}, {'value': ['hide'], 'probability': 0.001442238106392324}, {'value': ['shutdown'], 'probability': 0.0011205562623217702}, {'value': ['stop'], 'probability': 0.0006395810632966459}, {'value': ['dispose', 'resources'], 'probability': 0.0006243000389076769}, {'value': ['cancel'], 'probability': 0.0006010227371007204}, {'value': ['release'], 'probability': 0.0005779736675322056}]","[0.99999994, 0.17637412, 0.3089048, 0.5099461, 0.4591369, 0.10550895, 0.22849083, 0.7428976, 0.31668118, 0.087096326]",0.9914532998077881
1368,1368,"public void clicked(InputEvent event, float x, float y) {super.clicked(event, x, y);if (httpRequest != null) {Gdx.net.cancelHttpRequest(httpRequest);Gdx.app.log(""NetAPITest"", ""Cancelling request "" + httpRequest.getUrl());statusLabel.setText(""Cancelling request "" + httpRequest.getUrl());}}
","public void [MASK](InputEvent event, float x, float y) {super.[MASK](event, x, y);if (httpRequest != null) {Gdx.net.cancelHttpRequest(httpRequest);Gdx.app.log(""NetAPITest"", ""Cancelling request "" + httpRequest.getUrl());statusLabel.setText(""Cancelling request "" + httpRequest.getUrl());}}
",clicked,"[{'value': ['update'], 'probability': 0.1855095475912094}, {'value': ['run'], 'probability': 0.183041512966156}, {'value': ['execute'], 'probability': 0.13945169746875763}, {'value': ['generate'], 'probability': 0.052786681801080704}, {'value': ['start'], 'probability': 0.043233588337898254}]","[0.12723114, 0.12502213, 0.19650549, 0.08047443, 0.16151476]",0.0851206943676896,"[{'value': ['clicked'], 'probability': 0.4830518662929535}, {'value': ['mouse', 'clicked'], 'probability': 0.11161763221025467}, {'value': ['handle', 'click'], 'probability': 0.10364650934934616}, {'value': ['drag'], 'probability': 0.06753765791654587}, {'value': ['on', 'event'], 'probability': 0.06516711413860321}, {'value': ['mouse', 'drag'], 'probability': 0.06448164582252502}, {'value': ['notify', 'listener'], 'probability': 0.03360637649893761}, {'value': ['on', 'touch'], 'probability': 0.026394885033369064}, {'value': ['run', 'with', 'event'], 'probability': 0.022321568801999092}, {'value': ['on', 'update'], 'probability': 0.022174764424562454}]","[1.0, 0.78196496, 0.53624636, 0.17000455, 0.11964241, 0.31888986, 0.28178158, 0.2898634, 0.09581299, 0.17100671]",0.688805308448198
1369,1369,"public void run() {statusLabel.setText(""HTTP Request status: "" + statusCode);setButtonDisabled(false);}
","public void [MASK]() {statusLabel.setText(""HTTP Request status: "" + statusCode);setButtonDisabled(false);}
",run,"[{'value': ['run'], 'probability': 0.7057073712348938}, {'value': ['execute'], 'probability': 0.09293238073587418}, {'value': ['setup'], 'probability': 0.024091575294733047}, {'value': ['update'], 'probability': 0.015050179325044155}, {'value': ['status'], 'probability': 0.011735676787793636}]","[1.0, 0.31249312, 0.3333755, 0.3326079, 0.30685282]",0.7513865756780135,"[{'value': ['get', 'version', 'info'], 'probability': 0.40492674708366394}, {'value': ['create', 'test', 'file'], 'probability': 0.20305807888507843}, {'value': ['test', 'delete', 'object'], 'probability': 0.07095196843147278}, {'value': ['test', 'redeclaration'], 'probability': 0.0671226978302002}, {'value': ['post', 'comment'], 'probability': 0.060895055532455444}, {'value': ['remove', 'friend'], 'probability': 0.04537549242377281}, {'value': ['generate', 'model'], 'probability': 0.043177440762519836}, {'value': ['update', 'session'], 'probability': 0.04277215152978897}, {'value': ['make', 'button'], 'probability': 0.03342780843377113}, {'value': ['compare', 'i', 'ds'], 'probability': 0.028292540460824966}]","[0.56004936, 0.56922865, 0.388657, 0.46093667, 0.5210377, 0.4454026, 0.4602968, 0.4530905, 0.58446467, 0.47008422]",0.5249110588355037
1370,1370,"public void run() {Pixmap pixmap = new Pixmap(rawImageBytes, 0, rawImageBytes.length);texture = new Texture(pixmap);}
","public void [MASK]() {Pixmap pixmap = new Pixmap(rawImageBytes, 0, rawImageBytes.length);texture = new Texture(pixmap);}
",run,"[{'value': ['test'], 'probability': 0.20668965578079224}, {'value': ['run'], 'probability': 0.1385030895471573}, {'value': ['apply'], 'probability': 0.089407779276371}, {'value': ['paint'], 'probability': 0.08520600199699402}, {'value': ['clear'], 'probability': 0.03369401767849922}]","[0.46093667, 1.0, 0.31619856, 0.24307042, 0.5174217]",0.3001896167912263,"[{'value': ['create'], 'probability': 0.3487792909145355}, {'value': ['load', 'texture'], 'probability': 0.2782355546951294}, {'value': ['load'], 'probability': 0.12932592630386353}, {'value': ['init'], 'probability': 0.12211097776889801}, {'value': ['add', 'texture'], 'probability': 0.0367761105298996}, {'value': ['initialise'], 'probability': 0.03089027665555477}, {'value': ['create', 'image'], 'probability': 0.01814349740743637}, {'value': ['take', 'picture'], 'probability': 0.012963110581040382}, {'value': ['get', 'pixmap'], 'probability': 0.012077140621840954}, {'value': ['fill'], 'probability': 0.010698101483285427}]","[0.5176865, 0.21259928, 0.36636344, -0.092921056, 0.2336759, 0.0, 0.5033738, 0.60787237, 0.65114945, 0.43519512]",0.31387097296859356
1371,1371,"public void run() {text = ""Retrieving large file..."";}
","public void [MASK]() {text = ""Retrieving large file..."";}
",run,"[{'value': ['run'], 'probability': 0.7914798855781555}, {'value': ['execute'], 'probability': 0.039493948221206665}, {'value': ['test'], 'probability': 0.020426446571946144}, {'value': ['clear'], 'probability': 0.013563388958573341}, {'value': ['read'], 'probability': 0.012418840080499649}]","[1.0, 0.31249312, 0.46093667, 0.5174217, 0.4124058]",0.8253763642965484,"[{'value': ['init', 'fields'], 'probability': 0.9316725134849548}, {'value': ['reset'], 'probability': 0.028348349034786224}, {'value': ['set', 'up'], 'probability': 0.015024254098534584}, {'value': ['visit', 'code'], 'probability': 0.008888157084584236}, {'value': ['clear', 'body'], 'probability': 0.0038875609170645475}, {'value': ['truncate', 'text'], 'probability': 0.003343931632116437}, {'value': ['set', 'text'], 'probability': 0.002993852598592639}, {'value': ['init'], 'probability': 0.002204162534326315}, {'value': ['align', 'top'], 'probability': 0.0021547814831137657}, {'value': ['modified'], 'probability': 0.0014823160599917173}]","[0.28367043, 0.1346719, 0.72037995, 0.5154419, 0.48115948, 0.13718408, 0.5301029, -0.092921056, 0.48049277, 0.2510794]",0.2886292122960802
1372,1372,"public void run() {text = ""Retrieved large file: "" + rawFileBytes.length;}
","public void [MASK]() {text = ""Retrieved large file: "" + rawFileBytes.length;}
",run,"[{'value': ['run'], 'probability': 0.757961630821228}, {'value': ['test'], 'probability': 0.04813830181956291}, {'value': ['read'], 'probability': 0.03161551430821419}, {'value': ['execute'], 'probability': 0.014880883507430553}, {'value': ['clear'], 'probability': 0.01047358475625515}]","[1.0, 0.46093667, 0.4124058, 0.31249312, 0.5174217]",0.8032581941816371,"[{'value': ['initialize'], 'probability': 0.2493308037519455}, {'value': ['test', 'length'], 'probability': 0.24556832015514374}, {'value': ['set', 'empty'], 'probability': 0.10181324183940887}, {'value': ['update', 'value'], 'probability': 0.07241727411746979}, {'value': ['send', 'data'], 'probability': 0.07084795087575912}, {'value': ['init'], 'probability': 0.06855472922325134}, {'value': ['set', 'origin'], 'probability': 0.054197851568460464}, {'value': ['set', 'text'], 'probability': 0.046545933932065964}, {'value': ['set', 'identifier'], 'probability': 0.04539049044251442}, {'value': ['update', 'list'], 'probability': 0.04533347487449646}]","[-0.23605645, 0.5227064, 0.64343435, 0.40983397, 0.4934807, -0.092921056, 0.51095325, 0.5301029, 0.39419523, 0.47879282]",0.28524986282188025
1373,1373,"public void run() {text = newText;}
","public void [MASK]() {text = newText;}
",run,"[{'value': ['run'], 'probability': 0.7152873277664185}, {'value': ['start'], 'probability': 0.05386154726147652}, {'value': ['paint'], 'probability': 0.020601382479071617}, {'value': ['print'], 'probability': 0.018122494220733643}, {'value': ['clear'], 'probability': 0.01491395290941}]","[1.0, 0.7167411, 0.24307042, 0.3773171, 0.5174217]",0.7734544285395389,"[{'value': ['with', 'text'], 'probability': 0.44739294052124023}, {'value': ['new', 'text'], 'probability': 0.4065246284008026}, {'value': ['clean', 'text'], 'probability': 0.03180171176791191}, {'value': ['update', 'text'], 'probability': 0.03165176138281822}, {'value': ['set', 'text'], 'probability': 0.02365652471780777}, {'value': ['clear', 'body'], 'probability': 0.02228989638388157}, {'value': ['reset'], 'probability': 0.018526580184698105}, {'value': ['set', 'empty'], 'probability': 0.009322788566350937}, {'value': ['set', 'gui', 'mode'], 'probability': 0.004730194807052612}, {'value': ['clear', 'input'], 'probability': 0.004103030543774366}]","[0.5355987, 0.4914978, 0.50369245, 0.3307903, 0.5301029, 0.48115948, 0.1346719, 0.64343435, 0.44691682, 0.4375353]",0.5015856393816248
1374,1374,"void setButtonDisabled(boolean disabled) {Touchable t = disabled ? Touchable.disabled : Touchable.enabled;btnDownloadImage.setDisabled(disabled);btnDownloadImage.setTouchable(t);btnDownloadText.setDisabled(disabled);btnDownloadText.setTouchable(t);btnDownloadError.setDisabled(disabled);btnDownloadError.setTouchable(t);btnPost.setDisabled(disabled);btnPost.setTouchable(t);}
","void setButtonDisabled(boolean [MASK] {Touchable t = disabled ? Touchable.disabled : Touchable.enabled;btnDownloadImage.setDisabled([MASK];btnDownloadImage.setTouchable(t);btnDownloadText.setDisabled([MASK];btnDownloadText.setTouchable(t);btnDownloadError.setDisabled([MASK];btnDownloadError.setTouchable(t);btnPost.setDisabled([MASK];btnPost.setTouchable(t);}
",disabled),"[{'value': [')'], 'probability': 0.9999946355819702}, {'value': [']'], 'probability': 2.4720072815398453e-06}, {'value': ['>'], 'probability': 6.960584073567588e-07}, {'value': ['try'], 'probability': 2.662907263584202e-07}, {'value': ['else'], 'probability': 1.0046155551890479e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['add'], 'probability': 0.8279202580451965}, {'value': ['act'], 'probability': 0.13739030063152313}, {'value': ['set', 'disabled'], 'probability': 0.007317311130464077}, {'value': ['create', 'dockable'], 'probability': 0.0063802762888371944}, {'value': ['halt'], 'probability': 0.00530868349596858}, {'value': ['add', 'status'], 'probability': 0.004968547262251377}, {'value': ['create', 'popup', 'window'], 'probability': 0.002842650283128023}, {'value': ['concatenate'], 'probability': 0.0028392013628035784}, {'value': ['perform', 'refactoring'], 'probability': 0.0027516644913703203}, {'value': ['create', 'recommendation'], 'probability': 0.00228116218931973}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1375,1375,"public void failed(Throwable t) {setButtonDisabled(false);statusLabel.setText(""Failed to perform the HTTP Request: "" + t.getMessage());t.printStackTrace();}
","public void [MASK](Throwable t) {setButtonDisabled(false);statusLabel.setText(""Failed to perform the HTTP Request: "" + t.getMessage());t.printStackTrace();}
",failed,"[{'value': ['execute'], 'probability': 0.5652967691421509}, {'value': ['run'], 'probability': 0.1459144800901413}, {'value': ['perform'], 'probability': 0.02091798558831215}, {'value': ['fail'], 'probability': 0.020019635558128357}, {'value': ['accept'], 'probability': 0.016427502036094666}]","[0.33529136, 0.6246401, 0.3941781, 0.7229344, 0.5716734]",0.3127926178690641,"[{'value': ['on', 'failure'], 'probability': 0.45072704553604126}, {'value': ['exception', 'occurred'], 'probability': 0.19265565276145935}, {'value': ['on', 'error'], 'probability': 0.11406863480806351}, {'value': ['handle', 'error'], 'probability': 0.10651324689388275}, {'value': ['clear', 'status'], 'probability': 0.04114966094493866}, {'value': ['status'], 'probability': 0.02166464924812317}, {'value': ['throw', 'as', 'iae'], 'probability': 0.019549211487174034}, {'value': ['set', 'status'], 'probability': 0.019036585465073586}, {'value': ['error'], 'probability': 0.017823556438088417}, {'value': ['exception'], 'probability': 0.016811683773994446}]","[0.7655229, 0.50254625, 0.583299, 0.5170162, 0.6259639, 0.4093299, 0.58723366, 0.6403383, 0.38575217, 0.39420128]",0.6352641091984536
1376,1376,"public void render() {Gdx.gl.glClearColor(0.2f, 0.2f, 0.2f, 1);Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);if (texture != null) {batch.begin();batch.draw(texture, Gdx.graphics.getWidth() * 0.5f - texture.getWidth() * 0.5f, 100f);batch.end();} else if (text != null) {batch.begin();font.draw(batch, text, 10, Gdx.graphics.getHeight() - 10);batch.end();}stage.act(Gdx.graphics.getDeltaTime());stage.draw();}
","public void [MASK]() {Gdx.gl.glClearColor(0.2f, 0.2f, 0.2f, 1);Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);if (texture != null) {batch.begin();batch.draw(texture, Gdx.graphics.getWidth() * 0.5f - texture.getWidth() * 0.5f, 100f);batch.end();} else if (text != null) {batch.begin();font.draw(batch, text, 10, Gdx.graphics.getHeight() - 10);batch.end();}stage.act(Gdx.graphics.getDeltaTime());stage.draw();}
",render,"[{'value': ['start'], 'probability': 0.6178917288780212}, {'value': ['begin'], 'probability': 0.10658281296491623}, {'value': ['finish'], 'probability': 0.07452744990587234}, {'value': ['flush'], 'probability': 0.05357123166322708}, {'value': ['clear'], 'probability': 0.021862126886844635}]","[0.16855277, 0.29614606, 0.112674825, 0.1283141, 0.38354138]",0.1593677854382572,"[{'value': ['render'], 'probability': 0.9839406609535217}, {'value': ['create'], 'probability': 0.004602405708283186}, {'value': ['do', 'render'], 'probability': 0.0026046456769108772}, {'value': ['generate'], 'probability': 0.001796675962395966}, {'value': ['print'], 'probability': 0.0015208246186375618}, {'value': ['save'], 'probability': 0.0012278169160708785}, {'value': ['display'], 'probability': 0.0011653612600639462}, {'value': ['pre', 'render'], 'probability': 0.0010817170841619372}, {'value': ['init', 'config'], 'probability': 0.0010722508886829019}, {'value': ['get', 'key', 'value'], 'probability': 0.0009876475669443607}]","[1.0, 0.4158669, 0.7438762, 0.38247794, 0.24074925, 0.30900162, 0.30272847, 0.7536548, 0.09113168, 0.31496924]",0.9908017307322399
1377,1377,"public void resize(int width, int height) {stage.getViewport().update(width, height, true);}
","public void [MASK](int width, int height) {stage.getViewport().update(width, height, true);}
",resize,"[{'value': ['update'], 'probability': 0.9571676850318909}, {'value': ['add'], 'probability': 0.006733558606356382}, {'value': ['adjust'], 'probability': 0.005848119501024485}, {'value': ['updated'], 'probability': 0.0029003515373915434}, {'value': ['expand'], 'probability': 0.0025611186865717173}]","[0.08713582, 0.18571174, 0.3951292, 0.06278022, 0.13479394]",0.0874921642913843,"[{'value': ['update'], 'probability': 0.9752089381217957}, {'value': ['on', 'update'], 'probability': 0.01357671245932579}, {'value': ['repaint'], 'probability': 0.00355515512637794}, {'value': ['update', 'width'], 'probability': 0.0016617877408862114}, {'value': ['set', 'height'], 'probability': 0.0014627121854573488}, {'value': ['size', 'changed'], 'probability': 0.0013264768058434129}, {'value': ['paint', 'border'], 'probability': 0.0009769966127350926}, {'value': ['refresh'], 'probability': 0.0009493636316619813}, {'value': ['redraw'], 'probability': 0.0006537836161442101}, {'value': ['height'], 'probability': 0.0006280879024416208}]","[0.08713582, -0.11864722, 0.49847522, 0.15163319, -0.10544546, -0.043202918, -0.030497814, 0.49163517, 0.42811495, -0.051804416]",0.08586168728925138
1378,1378,"public void run() {setButtonDisabled(false);Gdx.app.log(""NetAPITest"", ""HTTP request cancelled"");statusLabel.setText(""HTTP request cancelled"");}public void SetType(int numHashBytes) {HASH_ARRAY = (numHashBytes > 2);if (HASH_ARRAY) {kNumHashDirectBytes = 0;kMinMatchCheck = 4;kFixHashSize = kHash2Size + kHash3Size;} else {kNumHashDirectBytes = 2;kMinMatchCheck = 2 + 1;kFixHashSize = 0;}}
","public void [MASK]() {setButtonDisabled(false);Gdx.app.log(""NetAPITest"", ""HTTP request cancelled"");statusLabel.setText(""HTTP request cancelled"");}public void SetType(int numHashBytes) {HASH_ARRAY = (numHashBytes > 2);if (HASH_ARRAY) {kNumHashDirectBytes = 0;kMinMatchCheck = 4;kFixHashSize = kHash2Size + kHash3Size;} else {kNumHashDirectBytes = 2;kMinMatchCheck = 2 + 1;kFixHashSize = 0;}}
",run,"[{'value': ['run'], 'probability': 0.568233847618103}, {'value': ['execute'], 'probability': 0.13582423329353333}, {'value': ['setup'], 'probability': 0.01746208593249321}, {'value': ['clear'], 'probability': 0.017200348898768425}, {'value': ['close'], 'probability': 0.015188449062407017}]","[1.0, 0.31249312, 0.3333755, 0.5174217, 0.5948943]",0.6344347731020937,"[{'value': ['init'], 'probability': 0.22036169469356537}, {'value': ['refresh'], 'probability': 0.18205823004245758}, {'value': ['status'], 'probability': 0.14335161447525024}, {'value': ['pause'], 'probability': 0.10616577416658401}, {'value': ['unsupported'], 'probability': 0.07592971622943878}, {'value': ['started'], 'probability': 0.06422615796327591}, {'value': ['cancel'], 'probability': 0.06023890897631645}, {'value': ['resume'], 'probability': 0.050851091742515564}, {'value': ['update', 'buttons'], 'probability': 0.04955029860138893}, {'value': ['reset'], 'probability': 0.047266509383916855}]","[-0.092921056, -0.008397008, 0.30685282, 0.23817183, 0.13046552, 0.62914723, 0.3337597, 0.4456735, 0.31335878, 0.1346719]",0.16224327333779853
1379,1379,"public void Init() {super.Init();for (int i = 0; i < _hashSizeSum; i++) _hash[i] = kEmptyHashValue;_cyclicBufferPos = 0;ReduceOffsets(-1);}
","public void [MASK]() {super.[MASK]();for (int i = 0; i < _hashSizeSum; i++) _hash[i] = kEmptyHashValue;_cyclicBufferPos = 0;ReduceOffsets(-1);}
",Init,"[{'value': ['run'], 'probability': 0.6939991116523743}, {'value': ['test'], 'probability': 0.046034764498472214}, {'value': ['start'], 'probability': 0.0412987656891346}, {'value': ['flush'], 'probability': 0.018882401287555695}, {'value': ['setup'], 'probability': 0.016146907582879066}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['init'], 'probability': 1.0}, {'value': ['refresh'], 'probability': 3.524164426949028e-08}, {'value': ['clear'], 'probability': 1.0214106893613462e-08}, {'value': ['reset'], 'probability': 8.922830474489274e-09}, {'value': ['start'], 'probability': 3.2504769986729798e-09}, {'value': ['initialize'], 'probability': 2.7826145831966187e-09}, {'value': ['after', 'properties', 'set'], 'probability': 1.112901992783577e-09}, {'value': ['normalize'], 'probability': 9.624679941921954e-10}, {'value': ['destroy'], 'probability': 5.527747148903472e-10}, {'value': ['create'], 'probability': 4.0477593499232967e-10}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1380,1380,"public void MovePos() {if (++_cyclicBufferPos >= _cyclicBufferSize)_cyclicBufferPos = 0;super.MovePos();if (_pos == kMaxValForNormalize)Normalize();}
","public void [MASK]() {if (++_cyclicBufferPos >= _cyclicBufferSize)_cyclicBufferPos = 0;super.[MASK]();if (_pos == kMaxValForNormalize)Normalize();}
",MovePos,"[{'value': ['run'], 'probability': 0.24263036251068115}, {'value': ['clear'], 'probability': 0.08955784142017365}, {'value': ['test'], 'probability': 0.0769452452659607}, {'value': ['close'], 'probability': 0.05236566811800003}, {'value': ['update'], 'probability': 0.0217235516756773}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['move', 'pos'], 'probability': 0.9999996423721313}, {'value': ['upload', 'file'], 'probability': 2.724427474731783e-07}, {'value': ['run'], 'probability': 2.914192620551148e-08}, {'value': ['add', 'space'], 'probability': 1.526548487618129e-08}, {'value': ['rr', 'to', 'string'], 'probability': 1.4257140357187836e-08}, {'value': ['trim', 'end'], 'probability': 1.3015214683775866e-08}, {'value': ['occurrences'], 'probability': 9.173535708839609e-09}, {'value': ['on', 'post'], 'probability': 7.01406044356645e-09}, {'value': ['strip', 'html'], 'probability': 6.328269464006553e-09}, {'value': ['perform', 'ok'], 'probability': 5.652426970925717e-09}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1381,1381,"void NormalizeLinks(int[] items, int numItems, int subValue) {for (int i = 0; i < numItems; i++) {int value = items[i];if (value <= subValue)value = kEmptyHashValue;elsevalue -= subValue;items[i] = value;}}
","void NormalizeLinks(int[] [MASK] int numItems, int subValue) {for (int i = 0; i < numItems; i++) {int value = items[i];if (value <= subValue)value = kEmptyHashValue;elsevalue -= subValue;items[i] = value;}}
","items,","[{'value': [','], 'probability': 0.9847534894943237}, {'value': ['{'], 'probability': 0.007857040502130985}, {'value': ['final'], 'probability': 0.005692009814083576}, {'value': [';'], 'probability': 0.0005590192158706486}, {'value': ['initial'], 'probability': 0.0003480028244666755}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'sub', 'value'], 'probability': 0.5508534908294678}, {'value': ['set', 'sub', 'value'], 'probability': 0.39007383584976196}, {'value': ['normalise'], 'probability': 0.008555511943995953}, {'value': ['substitute'], 'probability': 0.008002817630767822}, {'value': ['return', 'node'], 'probability': 0.007950064726173878}, {'value': ['node', 'at'], 'probability': 0.007487178314477205}, {'value': ['add', 'at'], 'probability': 0.006935836281627417}, {'value': ['subst'], 'probability': 0.006924356333911419}, {'value': ['align'], 'probability': 0.006752538960427046}, {'value': ['parse', 'index'], 'probability': 0.006464342586696148}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1382,1382,"void Normalize() {int subValue = _pos - _cyclicBufferSize;NormalizeLinks(_son, _cyclicBufferSize * 2, subValue);NormalizeLinks(_hash, _hashSizeSum, subValue);ReduceOffsets(subValue);}
","void Normalize() [MASK] subValue = _pos - _cyclicBufferSize;NormalizeLinks(_son, _cyclicBufferSize * 2, subValue);NormalizeLinks(_hash, _hashSizeSum, subValue);ReduceOffsets(subValue);}
",{int,"[{'value': ['{'], 'probability': 0.9849862456321716}, {'value': ['String'], 'probability': 0.008371444419026375}, {'value': ['long'], 'probability': 0.0018327205907553434}, {'value': ['_'], 'probability': 0.0016829782398417592}, {'value': [';'], 'probability': 0.0005276629817672074}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['normalize'], 'probability': 0.9999996423721313}, {'value': ['apply'], 'probability': 1.3392215691965248e-07}, {'value': ['normalize', 'no', 'end', 'separator'], 'probability': 1.2639146973469906e-07}, {'value': ['scale'], 'probability': 5.8449533213433824e-08}, {'value': ['test', 'normalize'], 'probability': 3.648884572271527e-08}, {'value': ['modify'], 'probability': 2.9010655211436642e-08}, {'value': ['set', 'scale'], 'probability': 2.6698254274037936e-08}, {'value': ['callback'], 'probability': 2.616384264797489e-08}, {'value': ['resolve'], 'probability': 2.3251125469414546e-08}, {'value': ['limit'], 'probability': 2.2705712865445093e-08}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1383,1383,"public void SetCutValue(int cutValue) {_cutValue = cutValue;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(DynamicsJNI.btTypedConstraint_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
","public void [MASK](int cutValue) {_cutValue = cutValue;}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(DynamicsJNI.btTypedConstraint_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);}
",SetCutValue,"[{'value': ['destroy'], 'probability': 0.14213630557060242}, {'value': ['set'], 'probability': 0.09932379424571991}, {'value': ['save'], 'probability': 0.08795280009508133}, {'value': ['cut'], 'probability': 0.050077252089977264}, {'value': ['remove'], 'probability': 0.03858618438243866}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['begin', 'transaction'], 'probability': 0.4743680953979492}, {'value': ['in'], 'probability': 0.12632425129413605}, {'value': ['set', 'account'], 'probability': 0.11326591670513153}, {'value': ['on', 'init'], 'probability': 0.09897807240486145}, {'value': ['constructor'], 'probability': 0.06659474223852158}, {'value': ['set', 'repeat'], 'probability': 0.061341293156147}, {'value': ['prepare'], 'probability': 0.01974549889564514}, {'value': ['set', 'collection'], 'probability': 0.017356280237436295}, {'value': ['set', 'follow', 'redirects'], 'probability': 0.012249927036464214}, {'value': ['set', 'default'], 'probability': 0.009775914251804352}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1384,1384,"public static long getCPtr(btTypedConstraint obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btTypedConstraint obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.08643561601638794}, {'value': ['read'], 'probability': 0.03716075047850609}, {'value': ['match'], 'probability': 0.03148331493139267}, {'value': ['skip'], 'probability': 0.031137540936470032}, {'value': ['evaluate'], 'probability': 0.029769226908683777}]","[1.0, 0.5726487, 0.4692583, 0.49507433, 0.40115592]",0.1498469775727613,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1385,1385,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1386,1386,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btTypedConstraint(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btTypedConstraint(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.781960129737854}, {'value': ['start'], 'probability': 0.017993856221437454}, {'value': ['test'], 'probability': 0.015231363475322723}, {'value': ['clear'], 'probability': 0.012614414095878601}, {'value': ['flush'], 'probability': 0.010556717403233051}]","[0.13931048, 0.15163165, 0.14537679, 0.18840031, 0.120570555]",0.1175273540536945,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1387,1387,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](swigCPtr = cPtr, cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.9115408658981323}, {'value': ['destroyed'], 'probability': 0.0691232979297638}, {'value': ['rebuild'], 'probability': 0.004925813991576433}, {'value': ['save'], 'probability': 0.0026005508843809366}, {'value': ['run'], 'probability': 0.001220924430526793}]","[0.0852853, -0.009507184, 0.19255844, 0.15556529, 0.1346719]",0.0786013536722733,"[{'value': ['reset'], 'probability': 0.9976670742034912}, {'value': ['reinit'], 'probability': 0.0007650359184481204}, {'value': ['destroy'], 'probability': 0.0004842917260248214}, {'value': ['stop'], 'probability': 0.0004195002547930926}, {'value': ['clear'], 'probability': 0.00021948434005025774}, {'value': ['start'], 'probability': 0.00013255604426376522}, {'value': ['shutdown'], 'probability': 0.0001189266549772583}, {'value': ['restart'], 'probability': 8.343072840943933e-05}, {'value': ['mark'], 'probability': 5.742608482250944e-05}, {'value': ['abort'], 'probability': 5.2347619202919304e-05}]","[1.0, 0.0, 0.0852853, 0.1610944, 0.10589813, 0.23268494, 0.25621086, 0.38693747, 0.12411288, 0.21679178]",0.9979112717127002
1388,1388,"public static long getCPtr(btConstraintInfo1 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btConstraintInfo1 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.11139454692602158}, {'value': ['read'], 'probability': 0.049894753843545914}, {'value': ['update'], 'probability': 0.03149302303791046}, {'value': ['execute'], 'probability': 0.02905520796775818}, {'value': ['match'], 'probability': 0.02881755121052265}]","[1.0, 0.5726487, 0.36048478, 0.37713256, 0.4692583]",0.1758000089344118,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1389,1389,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1390,1390,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btTypedConstraint_btConstraintInfo1(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btTypedConstraint_btConstraintInfo1(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8013262748718262}, {'value': ['start'], 'probability': 0.017131123691797256}, {'value': ['clear'], 'probability': 0.013300826773047447}, {'value': ['flush'], 'probability': 0.012359012849628925}, {'value': ['close'], 'probability': 0.009760843589901924}]","[0.13931048, 0.15163165, 0.18840031, 0.120570555, 0.10496158]",0.1192512944811043,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1391,1391,"public void setNumConstraintRows(int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo1_numConstraintRows_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo1_numConstraintRows_set(swigCPtr, this, value);}
",setNumConstraintRows,"[{'value': ['set'], 'probability': 0.7170445322990417}, {'value': ['put'], 'probability': 0.08579874038696289}, {'value': ['get'], 'probability': 0.011665561236441135}, {'value': ['execute'], 'probability': 0.007841797545552254}, {'value': ['value'], 'probability': 0.007199813611805439}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.47274652]",0.7989552953599924,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1392,1392,"public int getNumConstraintRows() {return DynamicsJNI.btTypedConstraint_btConstraintInfo1_numConstraintRows_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_btConstraintInfo1_numConstraintRows_get(swigCPtr, this);}
",getNumConstraintRows,"[{'value': ['get'], 'probability': 0.27992868423461914}, {'value': ['start'], 'probability': 0.036345936357975006}, {'value': ['value'], 'probability': 0.02840207889676094}, {'value': ['next'], 'probability': 0.02406683750450611}, {'value': ['size'], 'probability': 0.023682374507188797}]","[1.0, 0.7199945, 0.46303764, 0.6966621, 0.43109724]",0.3462246500561509,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1393,1393,"public void setNub(int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo1_nub_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo1_nub_set(swigCPtr, this, value);}
",setNub,"[{'value': ['set'], 'probability': 0.7254790663719177}, {'value': ['put'], 'probability': 0.07897898554801941}, {'value': ['get'], 'probability': 0.00951357837766409}, {'value': ['execute'], 'probability': 0.009256656281650066}, {'value': ['value'], 'probability': 0.007635180372744799}]","[1.0, 0.7944568, 0.65028083, 0.35167885, 0.47274652]",0.8012758297693595,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1394,1394,"public int getNub() {return DynamicsJNI.btTypedConstraint_btConstraintInfo1_nub_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_btConstraintInfo1_nub_get(swigCPtr, this);}
",getNub,"[{'value': ['get'], 'probability': 0.3514750301837921}, {'value': ['start'], 'probability': 0.036361224949359894}, {'value': ['compare'], 'probability': 0.0250073429197073}, {'value': ['next'], 'probability': 0.024550100788474083}, {'value': ['size'], 'probability': 0.02432865835726261}]","[1.0, 0.7199945, 0.46117607, 0.6966621, 0.43109724]",0.4167788426073657,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1395,1395,"public static btRigidBody getFixedBody() {return btRigidBody.getInstance(DynamicsJNI.btTypedConstraint_getFixedBody(), false);}
","public static btRigidBody [MASK]() {return btRigidBody.getInstance(DynamicsJNI.btTypedConstraint_[MASK](), false);}
",getFixedBody,"[{'value': ['build'], 'probability': 0.20605362951755524}, {'value': ['create'], 'probability': 0.1304176300764084}, {'value': ['get'], 'probability': 0.05627157539129257}, {'value': ['update'], 'probability': 0.050122056156396866}, {'value': ['expand'], 'probability': 0.03207848221063614}]","[0.5626448, 0.62328804, 1.0, 0.36048478, 0.47652406]",0.2868487295568045,"[{'value': ['get', 'instance'], 'probability': 0.26708635687828064}, {'value': ['instance'], 'probability': 0.2598060667514801}, {'value': ['app'], 'probability': 0.17330847680568695}, {'value': ['create', 'session'], 'probability': 0.06288255006074905}, {'value': ['get', 'comment', 'service'], 'probability': 0.04880433902144432}, {'value': ['get', 'team', 'forge', 'share', 'descriptor'], 'probability': 0.04698944836854935}, {'value': ['get', 'plugin', 'manager'], 'probability': 0.03902389109134674}, {'value': ['get', 'tracker'], 'probability': 0.037872377783060074}, {'value': ['get', 'publisher'], 'probability': 0.03462297469377518}, {'value': ['get', 'service'], 'probability': 0.029603473842144012}]","[0.9335536, 0.56794554, 0.17074071, 0.6179076, 0.79958755, 0.80259484, 0.72114116, 0.7566886, 0.7924022, 0.849422]",0.6514588693708537
1396,1396,"protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","protected void [MASK](long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.[MASK](swigCPtr = cPtr, cMemoryOwn);}
",reset,"[{'value': ['destroy'], 'probability': 0.9115408658981323}, {'value': ['destroyed'], 'probability': 0.0691232979297638}, {'value': ['rebuild'], 'probability': 0.004925813991576433}, {'value': ['save'], 'probability': 0.0026005508843809366}, {'value': ['run'], 'probability': 0.001220924430526793}]","[0.0852853, -0.009507184, 0.19255844, 0.15556529, 0.1346719]",0.0786013536722733,"[{'value': ['reset'], 'probability': 0.9976670742034912}, {'value': ['reinit'], 'probability': 0.0007650359184481204}, {'value': ['destroy'], 'probability': 0.0004842917260248214}, {'value': ['stop'], 'probability': 0.0004195002547930926}, {'value': ['clear'], 'probability': 0.00021948434005025774}, {'value': ['start'], 'probability': 0.00013255604426376522}, {'value': ['shutdown'], 'probability': 0.0001189266549772583}, {'value': ['restart'], 'probability': 8.343072840943933e-05}, {'value': ['mark'], 'probability': 5.742608482250944e-05}, {'value': ['abort'], 'probability': 5.2347619202919304e-05}]","[1.0, 0.0, 0.0852853, 0.1610944, 0.10589813, 0.23268494, 0.25621086, 0.38693747, 0.12411288, 0.21679178]",0.9979112717127002
1397,1397,"public static long getCPtr(btConstraintInfo2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btConstraintInfo2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.10696060955524445}, {'value': ['read'], 'probability': 0.04816170781850815}, {'value': ['update'], 'probability': 0.03317570313811302}, {'value': ['execute'], 'probability': 0.02834855020046234}, {'value': ['run'], 'probability': 0.025288810953497887}]","[1.0, 0.5726487, 0.36048478, 0.37713256, 0.65114945]",0.1736576419647327,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1398,1398,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1399,1399,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btTypedConstraint_btConstraintInfo2(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btTypedConstraint_btConstraintInfo2(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8020864725112915}, {'value': ['start'], 'probability': 0.016382580623030663}, {'value': ['clear'], 'probability': 0.012281703762710094}, {'value': ['flush'], 'probability': 0.011961965821683407}, {'value': ['close'], 'probability': 0.009574327617883682}]","[0.13931048, 0.15163165, 0.18840031, 0.120570555, 0.10496158]",0.118984242868977,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1400,1400,"public void setFps(float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_fps_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_fps_set(swigCPtr, this, value);}
",setFps,"[{'value': ['set'], 'probability': 0.7578552961349487}, {'value': ['put'], 'probability': 0.08571968227624893}, {'value': ['get'], 'probability': 0.011414890177547932}, {'value': ['add'], 'probability': 0.010437378659844398}, {'value': ['value'], 'probability': 0.005496430676430464}]","[1.0, 0.7944568, 0.65028083, 0.5084879, 0.47274652]",0.841284462222498,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
1401,1401,"public float getFps() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_fps_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_fps_get(swigCPtr, this);}
",getFps,"[{'value': ['get'], 'probability': 0.13316139578819275}, {'value': ['next'], 'probability': 0.05200446769595146}, {'value': ['bar'], 'probability': 0.030805926769971848}, {'value': ['start'], 'probability': 0.030555175617337227}, {'value': ['run'], 'probability': 0.027379898354411125}]","[1.0, 0.6966621, 0.45318797, 0.7199945, 0.65114945]",0.2231797781514323,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
1402,1402,"public void setErp(float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_erp_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_erp_set(swigCPtr, this, value);}
",setErp,"[{'value': ['set'], 'probability': 0.7498037815093994}, {'value': ['put'], 'probability': 0.0897677093744278}, {'value': ['add'], 'probability': 0.010096652433276176}, {'value': ['get'], 'probability': 0.01008651778101921}, {'value': ['value'], 'probability': 0.006546762306243181}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.47274652]",0.8359084005291225,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
1403,1403,"public float getErp() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_erp_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_erp_get(swigCPtr, this);}
",getErp,"[{'value': ['get'], 'probability': 0.13361196219921112}, {'value': ['next'], 'probability': 0.05147845670580864}, {'value': ['run'], 'probability': 0.035990264266729355}, {'value': ['id'], 'probability': 0.0314774252474308}, {'value': ['start'], 'probability': 0.031100941821932793}]","[1.0, 0.6966621, 0.65114945, 0.2945777, 0.7199945]",0.2245751479923434,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
1404,1404,"public void setJ1linearAxis(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1linearAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1linearAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setJ1linearAxis,"[{'value': ['set'], 'probability': 0.6991387605667114}, {'value': ['put'], 'probability': 0.05585883930325508}, {'value': ['add'], 'probability': 0.01999984309077263}, {'value': ['get'], 'probability': 0.01325392909348011}, {'value': ['update'], 'probability': 0.011204086244106293}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.41854778]",0.766994093461328,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1405,1405,"public SWIGTYPE_p_float getJ1linearAxis() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1linearAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1linearAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getJ1linearAxis,"[{'value': ['##s'], 'probability': 0.7460047602653503}, {'value': ['##2'], 'probability': 0.059926845133304596}, {'value': ['##space'], 'probability': 0.039747945964336395}, {'value': ['##1'], 'probability': 0.03412849083542824}, {'value': ['##3'], 'probability': 0.012913133017718792}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1406,1406,"public void setJ1angularAxis(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1angularAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1angularAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setJ1angularAxis,"[{'value': ['set'], 'probability': 0.6914210915565491}, {'value': ['put'], 'probability': 0.059577710926532745}, {'value': ['add'], 'probability': 0.020708901807665825}, {'value': ['update'], 'probability': 0.013337178155779839}, {'value': ['get'], 'probability': 0.0132004264742136}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.7634494641448617,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1407,1407,"public SWIGTYPE_p_float getJ1angularAxis() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1angularAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J1angularAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getJ1angularAxis,"[{'value': ['##s'], 'probability': 0.7330570816993713}, {'value': ['##2'], 'probability': 0.060371581465005875}, {'value': ['##1'], 'probability': 0.03525196388363838}, {'value': ['##space'], 'probability': 0.031073369085788727}, {'value': ['='], 'probability': 0.01480679027736187}]","[0.0, 0.0, 0.0, 0.0, 0.22116649]",0.003274765856146,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1408,1408,"public void setJ2linearAxis(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2linearAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2linearAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setJ2linearAxis,"[{'value': ['set'], 'probability': 0.6966700553894043}, {'value': ['put'], 'probability': 0.056463465094566345}, {'value': ['add'], 'probability': 0.019803419709205627}, {'value': ['get'], 'probability': 0.013455060310661793}, {'value': ['update'], 'probability': 0.011483091861009598}]","[1.0, 0.7944568, 0.5084879, 0.65028083, 0.41854778]",0.7651534273912177,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1409,1409,"public SWIGTYPE_p_float getJ2linearAxis() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2linearAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2linearAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getJ2linearAxis,"[{'value': ['##s'], 'probability': 0.7592464685440063}, {'value': ['##2'], 'probability': 0.04841666296124458}, {'value': ['##space'], 'probability': 0.042094141244888306}, {'value': ['##1'], 'probability': 0.028388680890202522}, {'value': ['='], 'probability': 0.011968009173870087}]","[0.0, 0.0, 0.0, 0.0, 0.22116649]",0.0026469225993261,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1410,1410,"public void setJ2angularAxis(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2angularAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2angularAxis_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setJ2angularAxis,"[{'value': ['set'], 'probability': 0.6902034282684326}, {'value': ['put'], 'probability': 0.06020253524184227}, {'value': ['add'], 'probability': 0.02033166214823723}, {'value': ['update'], 'probability': 0.013509982265532017}, {'value': ['get'], 'probability': 0.013235365971922874}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.7626314222376412,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1411,1411,"public SWIGTYPE_p_float getJ2angularAxis() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2angularAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_J2angularAxis_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getJ2angularAxis,"[{'value': ['##s'], 'probability': 0.7359721660614014}, {'value': ['##2'], 'probability': 0.05719844624400139}, {'value': ['##1'], 'probability': 0.032023731619119644}, {'value': ['##space'], 'probability': 0.03184283524751663}, {'value': ['='], 'probability': 0.015188997611403465}]","[0.0, 0.0, 0.0, 0.0, 0.22116649]",0.0033592973112448,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1412,1412,"public void setRowskip(int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_rowskip_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_rowskip_set(swigCPtr, this, value);}
",setRowskip,"[{'value': ['set'], 'probability': 0.6507606506347656}, {'value': ['put'], 'probability': 0.10946578532457352}, {'value': ['execute'], 'probability': 0.011462374590337276}, {'value': ['get'], 'probability': 0.011281524784862995}, {'value': ['read'], 'probability': 0.009355504997074604}]","[1.0, 0.7944568, 0.35167885, 0.65028083, 0.4820371]",0.7536034204626443,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1413,1413,"public int getRowskip() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_rowskip_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_rowskip_get(swigCPtr, this);}
",getRowskip,"[{'value': ['get'], 'probability': 0.2809675335884094}, {'value': ['size'], 'probability': 0.035706643015146255}, {'value': ['next'], 'probability': 0.035628508776426315}, {'value': ['sort'], 'probability': 0.03010524995625019}, {'value': ['compare'], 'probability': 0.023616116493940353}]","[1.0, 0.43109724, 0.6966621, 0.7483636, 0.46117607]",0.3546024629525279,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1414,1414,"public void setConstraintError(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_constraintError_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_constraintError_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setConstraintError,"[{'value': ['set'], 'probability': 0.5772672295570374}, {'value': ['put'], 'probability': 0.09646054357290268}, {'value': ['add'], 'probability': 0.03261309489607811}, {'value': ['update'], 'probability': 0.018448658287525177}, {'value': ['get'], 'probability': 0.01161707378923893}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.68576033126953,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1415,1415,"public SWIGTYPE_p_float getConstraintError() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_constraintError_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_constraintError_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getConstraintError,"[{'value': ['##s'], 'probability': 0.7558252811431885}, {'value': ['##2'], 'probability': 0.05785970762372017}, {'value': ['##space'], 'probability': 0.03421848639845848}, {'value': ['##1'], 'probability': 0.030272681266069412}, {'value': ['='], 'probability': 0.011728039011359215}]","[0.0, 0.0, 0.0, 0.0, 0.22116649]",0.0025938492404169,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1416,1416,"public void setCfm(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_cfm_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_cfm_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setCfm,"[{'value': ['set'], 'probability': 0.5814628601074219}, {'value': ['put'], 'probability': 0.09804899245500565}, {'value': ['add'], 'probability': 0.026366988196969032}, {'value': ['update'], 'probability': 0.01607448235154152}, {'value': ['get'], 'probability': 0.01142573356628418}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.65028083]",0.6869237153034549,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1417,1417,"public SWIGTYPE_p_float getCfm() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_cfm_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_cfm_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getCfm,"[{'value': ['##s'], 'probability': 0.731617271900177}, {'value': ['##2'], 'probability': 0.08496841043233871}, {'value': ['##1'], 'probability': 0.03542685881257057}, {'value': ['##space'], 'probability': 0.02401893027126789}, {'value': ['='], 'probability': 0.013923353515565395}]","[0.0, 0.0, 0.0, 0.0, 0.22116649]",0.0030793792470699,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1418,1418,"public void setLowerLimit(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_lowerLimit_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_lowerLimit_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setLowerLimit,"[{'value': ['set'], 'probability': 0.6171348690986633}, {'value': ['put'], 'probability': 0.08820120245218277}, {'value': ['add'], 'probability': 0.02113635651767254}, {'value': ['update'], 'probability': 0.01661807857453823}, {'value': ['setup'], 'probability': 0.009752146899700165}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.35182503]",0.7083410027550288,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1419,1419,"public SWIGTYPE_p_float getLowerLimit() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_lowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_lowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getLowerLimit,"[{'value': ['##s'], 'probability': 0.7680943012237549}, {'value': ['##2'], 'probability': 0.039123840630054474}, {'value': ['##space'], 'probability': 0.032983552664518356}, {'value': ['##1'], 'probability': 0.021249933168292046}, {'value': ['='], 'probability': 0.015268590301275253}]","[0.0, 0.0, 0.0, 0.0, 0.22116649]",0.0033769005472135,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1420,1420,"public void setUpperLimit(SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_upperLimit_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_upperLimit_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));}
",setUpperLimit,"[{'value': ['set'], 'probability': 0.5995520353317261}, {'value': ['put'], 'probability': 0.090147003531456}, {'value': ['add'], 'probability': 0.02689097635447979}, {'value': ['update'], 'probability': 0.01842426136136055}, {'value': ['setup'], 'probability': 0.009479060769081116}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.35182503]",0.6958900735490572,"[{'value': ['swap'], 'probability': 0.3023471534252167}, {'value': ['set', 'nodes'], 'probability': 0.2240363508462906}, {'value': ['set', 'to'], 'probability': 0.09694019705057144}, {'value': ['set', 'bits'], 'probability': 0.07462293654680252}, {'value': ['set', 'previous'], 'probability': 0.06501048058271408}, {'value': ['set', 'top'], 'probability': 0.0575728639960289}, {'value': ['set', 'startup'], 'probability': 0.051569756120443344}, {'value': ['lt'], 'probability': 0.04960436746478081}, {'value': ['set', 'cc'], 'probability': 0.039783455431461334}, {'value': ['set', 'edges'], 'probability': 0.03851236775517464}]","[0.3554226, 0.7400634, 0.9136955, 0.81719714, 0.90360475, 0.8966336, 0.78475726, -0.021349974, 0.6936888, 0.82899404]",0.6321176797536698
1421,1421,"public SWIGTYPE_p_float getUpperLimit() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_upperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
","public SWIGTYPE_p_float [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_upperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);}
",getUpperLimit,"[{'value': ['##s'], 'probability': 0.7741725444793701}, {'value': ['##2'], 'probability': 0.03405413776636124}, {'value': ['##space'], 'probability': 0.03297525644302368}, {'value': ['##1'], 'probability': 0.020004184916615486}, {'value': ['='], 'probability': 0.014898533932864666}]","[0.0, 0.0, 0.0, 0.0, 0.22116649]",0.0032950564785517,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1422,1422,"public void setFindex(SWIGTYPE_p_int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_findex_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));}
","public void [MASK](SWIGTYPE_p_int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_findex_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));}
",setFindex,"[{'value': ['set'], 'probability': 0.5645462870597839}, {'value': ['put'], 'probability': 0.09990239143371582}, {'value': ['read'], 'probability': 0.014893556945025921}, {'value': ['add'], 'probability': 0.013400373980402946}, {'value': ['update'], 'probability': 0.01318077277392149}]","[1.0, 0.7944568, 0.4820371, 0.5084879, 0.41854778]",0.6634243771590478,"[{'value': ['set', 'bits'], 'probability': 0.1704491674900055}, {'value': ['add', 'unique'], 'probability': 0.14028456807136536}, {'value': ['set', 'top'], 'probability': 0.1246570274233818}, {'value': ['set', 'to'], 'probability': 0.1168108657002449}, {'value': ['swap'], 'probability': 0.10774758458137512}, {'value': ['set', 'size'], 'probability': 0.09333503991365433}, {'value': ['set', 'previous'], 'probability': 0.09124983102083206}, {'value': ['set', 'from'], 'probability': 0.056260887533426285}, {'value': ['lt'], 'probability': 0.05433733016252518}, {'value': ['add', 'first'], 'probability': 0.044867582619190216}]","[0.81719714, 0.60149735, 0.8966336, 0.9136955, 0.3554226, 0.8344828, 0.90360475, 0.88556206, -0.021349974, 0.75305235]",0.7232588479879198
1423,1423,"public SWIGTYPE_p_int getFindex() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_findex_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);}
","public SWIGTYPE_p_int [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_btConstraintInfo2_findex_get(swigCPtr, this);return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);}
",getFindex,"[{'value': ['get'], 'probability': 0.19388951361179352}, {'value': ['size'], 'probability': 0.04319988936185837}, {'value': ['value'], 'probability': 0.03741663321852684}, {'value': ['next'], 'probability': 0.034440938383340836}, {'value': ['##2'], 'probability': 0.02537253126502037}]","[1.0, 0.43109724, 0.46303764, 0.6966621, 0.0]",0.2538318736122068,"[{'value': ['get', 'data'], 'probability': 0.2330555021762848}, {'value': ['get', 'next'], 'probability': 0.21887776255607605}, {'value': ['get', 'position'], 'probability': 0.1586504876613617}, {'value': ['get', 'value'], 'probability': 0.08768993616104126}, {'value': ['get', 'previous'], 'probability': 0.06882311403751373}, {'value': ['clone'], 'probability': 0.05599913001060486}, {'value': ['get', 'last'], 'probability': 0.05474120378494263}, {'value': ['get', 'bits'], 'probability': 0.045782461762428284}, {'value': ['get', 'parent'], 'probability': 0.03937694430351257}, {'value': ['get', 'bit'], 'probability': 0.0370035283267498}]","[0.82370985, 0.926832, 0.88500535, 0.8500731, 0.86536276, 0.166604, 0.8998977, 0.84125656, 0.85029024, 0.9190303]",0.833934527201277
1424,1424,"public void setNumIterations(int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_numIterations_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_numIterations_set(swigCPtr, this, value);}
",setNumIterations,"[{'value': ['set'], 'probability': 0.7607347965240479}, {'value': ['put'], 'probability': 0.07318039238452911}, {'value': ['get'], 'probability': 0.010020910762250423}, {'value': ['apply'], 'probability': 0.006372321862727404}, {'value': ['add'], 'probability': 0.0061263432726264}]","[1.0, 0.7944568, 0.65028083, 0.5010617, 0.5084879]",0.8316979592033049,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1425,1425,"public int getNumIterations() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_numIterations_get(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_numIterations_get(swigCPtr, this);}
",getNumIterations,"[{'value': ['get'], 'probability': 0.24469469487667084}, {'value': ['start'], 'probability': 0.03462766110897064}, {'value': ['next'], 'probability': 0.02758210152387619}, {'value': ['value'], 'probability': 0.026835231110453606}, {'value': ['compare'], 'probability': 0.023901643231511116}]","[1.0, 0.7199945, 0.6966621, 0.46303764, 0.46117607]",0.3122904133710791,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1426,1426,"public void setDamping(float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_damping_set(swigCPtr, this, value);}
","public void [MASK](float value) {DynamicsJNI.btTypedConstraint_btConstraintInfo2_damping_set(swigCPtr, this, value);}
",setDamping,"[{'value': ['set'], 'probability': 0.7284229397773743}, {'value': ['put'], 'probability': 0.07545211911201477}, {'value': ['read'], 'probability': 0.015063047409057617}, {'value': ['write'], 'probability': 0.012026660144329071}, {'value': ['add'], 'probability': 0.005313016939908266}]","[1.0, 0.7944568, 0.4820371, 0.46259418, 0.5084879]",0.8038924027409372,"[{'value': ['set', 'top'], 'probability': 0.2738816738128662}, {'value': ['set', 'code'], 'probability': 0.17088986933231354}, {'value': ['set'], 'probability': 0.1435210406780243}, {'value': ['set', 'value'], 'probability': 0.12907591462135315}, {'value': ['set', 'flags'], 'probability': 0.08506065607070923}, {'value': ['set', 'size'], 'probability': 0.07287262380123138}, {'value': ['set', 'range'], 'probability': 0.03541482612490654}, {'value': ['set', 'length'], 'probability': 0.030357785522937775}, {'value': ['set', 'id'], 'probability': 0.029652344062924385}, {'value': ['set', 'dirty'], 'probability': 0.02927330695092678}]","[0.8966336, 0.852165, 1.0, 0.8399167, 0.7786614, 0.8344828, 0.8546901, 0.82813084, 0.7939222, 0.7950754]",0.8724013944693889
1427,1427,"public float getDamping() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_damping_get(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraint_btConstraintInfo2_damping_get(swigCPtr, this);}
",getDamping,"[{'value': ['start'], 'probability': 0.09431625157594681}, {'value': ['get'], 'probability': 0.06039723753929138}, {'value': ['bar'], 'probability': 0.05974479019641876}, {'value': ['boost'], 'probability': 0.04085812345147133}, {'value': ['next'], 'probability': 0.03493131324648857}]","[0.7199945, 1.0, 0.45318797, 0.48529312, 0.6966621]",0.1995435281127663,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
1428,1428,"public int getOverrideNumSolverIterations() {return DynamicsJNI.btTypedConstraint_getOverrideNumSolverIterations(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getOverrideNumSolverIterations,"[{'value': ['get'], 'probability': 0.07337956130504608}, {'value': ['run'], 'probability': 0.03408423811197281}, {'value': ['start'], 'probability': 0.03307567536830902}, {'value': ['length'], 'probability': 0.03028775379061699}, {'value': ['state'], 'probability': 0.029355337843298912}]","[1.0, 0.65114945, 0.7199945, 0.3304365, 0.49234587]",0.1438489567584977,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1429,1429,"public void setOverrideNumSolverIterations(int overideNumIterations) {DynamicsJNI.btTypedConstraint_setOverrideNumSolverIterations(swigCPtr, this, overideNumIterations);}
","public void [MASK](int overideNumIterations) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, overideNumIterations);}
",setOverrideNumSolverIterations,"[{'value': ['test'], 'probability': 0.060155633836984634}, {'value': ['write'], 'probability': 0.05057290568947792}, {'value': ['execute'], 'probability': 0.048343464732170105}, {'value': ['run'], 'probability': 0.045086853206157684}, {'value': ['update'], 'probability': 0.0384502187371254}]","[0.5425338, 0.46259418, 0.35167885, 0.67632943, 0.41854778]",0.119619390988226,"[{'value': ['init'], 'probability': 0.4392317235469818}, {'value': ['resize'], 'probability': 0.09881371259689331}, {'value': ['grow'], 'probability': 0.09650564193725586}, {'value': ['reinit'], 'probability': 0.08640197664499283}, {'value': ['release'], 'probability': 0.06684998422861099}, {'value': ['mark'], 'probability': 0.06304313987493515}, {'value': ['attach'], 'probability': 0.0485062338411808}, {'value': ['extend'], 'probability': 0.037879906594753265}, {'value': ['set', 'dirty'], 'probability': 0.03213473781943321}, {'value': ['bind'], 'probability': 0.030632901936769485}]","[-0.2256778, -0.12730242, 0.39089534, 0.0, 0.523722, 0.4959306, 0.2794136, 0.5463553, 0.7950754, 0.24931578]",0.05973135605542369
1430,1430,"public void buildJacobian() {DynamicsJNI.btTypedConstraint_buildJacobian(swigCPtr, this);}
","public void [MASK]() {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",buildJacobian,"[{'value': ['run'], 'probability': 0.512238621711731}, {'value': ['test'], 'probability': 0.1456381231546402}, {'value': ['execute'], 'probability': 0.03557271882891655}, {'value': ['setup'], 'probability': 0.030865730717778206}, {'value': ['start'], 'probability': 0.02108926884829998}]","[0.55683017, 0.40830132, 0.30157945, 0.2372515, 0.56139123]",0.3745844286923193,"[{'value': ['clear'], 'probability': 0.3266788125038147}, {'value': ['reset'], 'probability': 0.17473387718200684}, {'value': ['commit'], 'probability': 0.11976904422044754}, {'value': ['truncate'], 'probability': 0.11407055705785751}, {'value': ['run'], 'probability': 0.10289586335420609}, {'value': ['release'], 'probability': 0.04961049184203148}, {'value': ['deactivate'], 'probability': 0.032534483820199966}, {'value': ['stop', 'capture'], 'probability': 0.03239324316382408}, {'value': ['do', 'reset'], 'probability': 0.02632332034409046}, {'value': ['convert', 'to', 'int'], 'probability': 0.020990341901779175}]","[0.51005095, 0.12511285, 0.3855125, -0.06878158, 0.55683017, 0.32134962, 0.116101444, 0.54982126, 0.45193633, 0.6268305]",0.3466902819499441
1431,1431,"public void setupSolverConstraint(SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t ca, int solverBodyA, int solverBodyB, float timeStep) {DynamicsJNI.btTypedConstraint_setupSolverConstraint(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t.getCPtr(ca), solverBodyA, solverBodyB, timeStep);}
","public void [MASK](SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t ca, int solverBodyA, int solverBodyB, float timeStep) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t.getCPtr(ca), solverBodyA, solverBodyB, timeStep);}
",setupSolverConstraint,"[{'value': ['set'], 'probability': 0.059677883982658386}, {'value': ['setup'], 'probability': 0.05249811336398125}, {'value': ['write'], 'probability': 0.04801947996020317}, {'value': ['update'], 'probability': 0.04231444373726845}, {'value': ['add'], 'probability': 0.03877977281808853}]","[0.35182503, 0.99999994, 0.18735754, 0.350659, 0.25112122]",0.1070674603945092,"[{'value': ['update'], 'probability': 0.948091983795166}, {'value': ['set', 'time', 'step'], 'probability': 0.02578144706785679}, {'value': ['equals'], 'probability': 0.004219608847051859}, {'value': ['put', 'property'], 'probability': 0.004084632266312838}, {'value': ['update', 'physics'], 'probability': 0.003968578297644854}, {'value': ['set', 'position'], 'probability': 0.003394932020455599}, {'value': ['move'], 'probability': 0.0032753245905041695}, {'value': ['set', 'map'], 'probability': 0.002465968020260334}, {'value': ['set', 'job', 'param'], 'probability': 0.0023854209575802088}, {'value': ['set', 'property'], 'probability': 0.0023321257904171944}]","[0.350659, 0.40566418, 0.057455763, 0.18325663, 0.2950274, 0.4039946, 0.2804564, 0.3348323, 0.4263347, 0.22157405]",0.34972694463213944
1432,1432,"public void getInfo1(btTypedConstraint.btConstraintInfo1 info) {DynamicsJNI.btTypedConstraint_getInfo1(swigCPtr, this, btTypedConstraint.btConstraintInfo1.getCPtr(info), info);}
","public void [MASK](btTypedConstraint.btConstraintInfo1 info) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, btTypedConstraint.btConstraintInfo1.getCPtr(info), info);}
",getInfo1,"[{'value': ['add'], 'probability': 0.07388004660606384}, {'value': ['update'], 'probability': 0.07013371586799622}, {'value': ['execute'], 'probability': 0.043779369443655014}, {'value': ['search'], 'probability': 0.036340296268463135}, {'value': ['save'], 'probability': 0.03382636234164238}]","[0.54842544, 0.36048478, 0.37713256, 0.53234327, 0.62758213]",0.1228847924265182,"[{'value': ['swap'], 'probability': 0.6247676014900208}, {'value': ['set', 'info'], 'probability': 0.27740979194641113}, {'value': ['assign'], 'probability': 0.02118600532412529}, {'value': ['set', 'values'], 'probability': 0.018115060403943062}, {'value': ['set', 'columns'], 'probability': 0.01731126382946968}, {'value': ['add'], 'probability': 0.01725148782134056}, {'value': ['register'], 'probability': 0.007216938771307468}, {'value': ['update'], 'probability': 0.00622312817722559}, {'value': ['capture'], 'probability': 0.0054072430357337}, {'value': ['set', 'defaults'], 'probability': 0.0051115029491484165}]","[0.37135914, 0.6115708, 0.3074088, 0.60233533, 0.5124488, 0.54842544, 0.36226395, 0.36048478, 0.41190448, 0.5076028]",0.4471049446906719
1433,1433,"public void getInfo2(btTypedConstraint.btConstraintInfo2 info) {DynamicsJNI.btTypedConstraint_getInfo2(swigCPtr, this, btTypedConstraint.btConstraintInfo2.getCPtr(info), info);}
","public void [MASK](btTypedConstraint.btConstraintInfo2 info) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, btTypedConstraint.btConstraintInfo2.getCPtr(info), info);}
",getInfo2,"[{'value': ['add'], 'probability': 0.07799262553453445}, {'value': ['update'], 'probability': 0.07443761825561523}, {'value': ['execute'], 'probability': 0.041994813829660416}, {'value': ['search'], 'probability': 0.03902736306190491}, {'value': ['save'], 'probability': 0.033050525933504105}]","[0.54842544, 0.36048478, 0.37713256, 0.53234327, 0.62758213]",0.1269622534348328,"[{'value': ['swap'], 'probability': 0.6247676014900208}, {'value': ['set', 'info'], 'probability': 0.27740979194641113}, {'value': ['assign'], 'probability': 0.02118600532412529}, {'value': ['set', 'values'], 'probability': 0.018115060403943062}, {'value': ['set', 'columns'], 'probability': 0.01731126382946968}, {'value': ['add'], 'probability': 0.01725148782134056}, {'value': ['register'], 'probability': 0.007216938771307468}, {'value': ['update'], 'probability': 0.00622312817722559}, {'value': ['capture'], 'probability': 0.0054072430357337}, {'value': ['set', 'defaults'], 'probability': 0.0051115029491484165}]","[0.37135914, 0.6115708, 0.3074088, 0.60233533, 0.5124488, 0.54842544, 0.36226395, 0.36048478, 0.41190448, 0.5076028]",0.4471049446906719
1434,1434,"public void internalSetAppliedImpulse(float appliedImpulse) {DynamicsJNI.btTypedConstraint_internalSetAppliedImpulse(swigCPtr, this, appliedImpulse);}
","public void [MASK](float appliedImpulse) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, appliedImpulse);}
",internalSetAppliedImpulse,"[{'value': ['apply'], 'probability': 0.045946840196847916}, {'value': ['paint'], 'probability': 0.041712887585163116}, {'value': ['update'], 'probability': 0.0364747978746891}, {'value': ['save'], 'probability': 0.033920325338840485}, {'value': ['float'], 'probability': 0.033464960753917694}]","[0.3615535, 0.19665976, 0.348998, 0.24094577, 0.07673311]",0.048285948266497,"[{'value': ['init'], 'probability': 0.9937145113945007}, {'value': ['set'], 'probability': 0.0013821781612932682}, {'value': ['set', 'length'], 'probability': 0.00111467856913805}, {'value': ['action'], 'probability': 0.0008229391532950103}, {'value': ['unread'], 'probability': 0.0007869707769714296}, {'value': ['drag', 'exit'], 'probability': 0.0005484565626829863}, {'value': ['top'], 'probability': 0.0004907873226329684}, {'value': ['set', 'location'], 'probability': 0.000404560036258772}, {'value': ['unlock'], 'probability': 0.00039318850031122565}, {'value': ['start'], 'probability': 0.00034172082087025046}]","[-0.06072073, 0.46266165, 0.45194268, 0.48787472, -0.02908734, 0.34987733, 0.3955482, 0.436208, 0.17894262, 0.36318332]",-0.058060258205708176
1435,1435,"public float internalGetAppliedImpulse() {return DynamicsJNI.btTypedConstraint_internalGetAppliedImpulse(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",internalGetAppliedImpulse,"[{'value': ['run'], 'probability': 0.0574372224509716}, {'value': ['get'], 'probability': 0.05620630457997322}, {'value': ['start'], 'probability': 0.04165234789252281}, {'value': ['id'], 'probability': 0.03929677978157997}, {'value': ['bar'], 'probability': 0.03487766161561012}]","[0.37363493, 0.35747883, 0.36318332, 0.21795623, 0.24686216]",0.0738555074568656,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.3777415, 0.42550293, 0.43379164, 0.29492068, 0.41326272, 0.41110402, 0.42624313, 0.38640392, 0.2065799, 0.4188552]",0.38310635048754166
1436,1436,"public float getBreakingImpulseThreshold() {return DynamicsJNI.btTypedConstraint_getBreakingImpulseThreshold(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getBreakingImpulseThreshold,"[{'value': ['run'], 'probability': 0.0574372224509716}, {'value': ['get'], 'probability': 0.05620630457997322}, {'value': ['start'], 'probability': 0.04165234789252281}, {'value': ['id'], 'probability': 0.03929677978157997}, {'value': ['bar'], 'probability': 0.03487766161561012}]","[0.65114945, 1.0, 0.7199945, 0.2945777, 0.45318797]",0.1509780725531051,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
1437,1437,"public void setBreakingImpulseThreshold(float threshold) {DynamicsJNI.btTypedConstraint_setBreakingImpulseThreshold(swigCPtr, this, threshold);}
","public void [MASK](float threshold) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, threshold);}
",setBreakingImpulseThreshold,"[{'value': ['fill'], 'probability': 0.05134629085659981}, {'value': ['accept'], 'probability': 0.050822578370571136}, {'value': ['set'], 'probability': 0.03660815581679344}, {'value': ['evaluate'], 'probability': 0.0352538637816906}, {'value': ['apply'], 'probability': 0.030513020232319832}]","[0.48556754, 0.44626972, 1.0, 0.31490386, 0.5010617]",0.1106113085482999,"[{'value': ['set', 'threshold'], 'probability': 0.8761181831359863}, {'value': ['threshold'], 'probability': 0.05625814571976662}, {'value': ['get', 'threshold'], 'probability': 0.0349612720310688}, {'value': ['consider'], 'probability': 0.025806868448853493}, {'value': ['set', 'dirty'], 'probability': 0.0029348074458539486}, {'value': ['get', 'covariances'], 'probability': 0.0010025292867794633}, {'value': ['set', 'color'], 'probability': 0.0008966265595518053}, {'value': ['set', 'result', 'set', 'size', 'threshold'], 'probability': 0.0008457025978714228}, {'value': ['truncate'], 'probability': 0.000653930997941643}, {'value': ['check', 'threshold'], 'probability': 0.0005220199818722904}]","[0.8374038, 0.38135964, 0.6404955, 0.539382, 0.7950754, 0.4988857, 0.80587685, 0.87233865, -0.20974311, 0.5509378]",0.7958758731318261
1438,1438,"public boolean isEnabled() {return DynamicsJNI.btTypedConstraint_isEnabled(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",isEnabled,"[{'value': ['run'], 'probability': 0.11702360957860947}, {'value': ['execute'], 'probability': 0.06715206056833267}, {'value': ['is'], 'probability': 0.04659870266914368}, {'value': ['matches'], 'probability': 0.043851349502801895}, {'value': ['exists'], 'probability': 0.028039541095495224}]","[0.5624562, 0.18233117, 0.99999994, 0.3614936, 0.65599275]",0.1589089848428388,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.8641179, 0.63416743, 0.3612789, 0.6951459, 0.88997865, 0.8539344, 0.6734348, 0.70599496, 0.6717117, 0.8542719]",0.7114059817178761
1439,1439,"public void setEnabled(boolean enabled) {DynamicsJNI.btTypedConstraint_setEnabled(swigCPtr, this, enabled);}
","public void [MASK](boolean enabled) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, enabled);}
",setEnabled,"[{'value': ['run'], 'probability': 0.14352774620056152}, {'value': ['execute'], 'probability': 0.1031503900885582}, {'value': ['navigate'], 'probability': 0.046323392540216446}, {'value': ['setup'], 'probability': 0.031232764944434166}, {'value': ['apply'], 'probability': 0.030146684497594833}]","[0.67632943, 0.35167885, 0.27271438, 0.35182503, 0.5010617]",0.1720747215756965,"[{'value': ['set', 'enabled'], 'probability': 0.8750665187835693}, {'value': ['disable'], 'probability': 0.03921334445476532}, {'value': ['enable'], 'probability': 0.03921233490109444}, {'value': ['set', 'dirty'], 'probability': 0.011571969836950302}, {'value': ['set', 'disabled'], 'probability': 0.009912709705531597}, {'value': ['set', 'idle'], 'probability': 0.008604537695646286}, {'value': ['enable', 'widget'], 'probability': 0.004484426695853472}, {'value': ['set', 'enabled', 'shallow'], 'probability': 0.004407796543091536}, {'value': ['set', 'sliding', 'enabled'], 'probability': 0.004171049688011408}, {'value': ['set', 'policy', 'data', 'enable'], 'probability': 0.003355402033776045}]","[0.89065737, 0.23412411, 0.47277173, 0.7950754, 0.77494985, 0.82358116, 0.32333913, 0.7958033, 0.83311355, 0.7903212]",0.842157226592624
1440,1440,"public void solveConstraintObsolete(btSolverBody arg0, btSolverBody arg1, float arg2) {DynamicsJNI.btTypedConstraint_solveConstraintObsolete(swigCPtr, this, btSolverBody.getCPtr(arg0), arg0, btSolverBody.getCPtr(arg1), arg1, arg2);}
","public void [MASK](btSolverBody arg0, btSolverBody arg1, float arg2) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, btSolverBody.getCPtr(arg0), arg0, btSolverBody.getCPtr(arg1), arg1, arg2);}
",solveConstraintObsolete,"[{'value': ['test'], 'probability': 0.061230435967445374}, {'value': ['update'], 'probability': 0.060232073068618774}, {'value': ['write'], 'probability': 0.05447360500693321}, {'value': ['add'], 'probability': 0.035669274628162384}, {'value': ['set'], 'probability': 0.030959518626332283}]","[0.26835027, 0.24721879, 0.42914107, 0.3656605, 0.47191066]",0.0823515368111176,"[{'value': ['set'], 'probability': 0.2571617662906647}, {'value': ['set', 'bounds'], 'probability': 0.22126993536949158}, {'value': ['add', 'to'], 'probability': 0.11515000462532043}, {'value': ['set', 'owner'], 'probability': 0.08813950419425964}, {'value': ['set', 'radius'], 'probability': 0.0697932094335556}, {'value': ['inject'], 'probability': 0.05941585823893547}, {'value': ['move'], 'probability': 0.052397120743989944}, {'value': ['update'], 'probability': 0.04825691133737564}, {'value': ['resize'], 'probability': 0.04795746132731438}, {'value': ['swap'], 'probability': 0.04045828431844711}]","[0.47191066, 0.4224783, 0.5063587, 0.36315683, 0.3462539, 0.2967014, 0.46400785, 0.24721879, 0.051478297, 0.35328034]",0.399954309312599
1441,1441,"public btRigidBody getRigidBodyA() {return btRigidBody.getInstance(DynamicsJNI.btTypedConstraint_getRigidBodyA__SWIG_0(swigCPtr, this), false);}
","public btRigidBody [MASK]() {return btRigidBody.getInstance(DynamicsJNI.btTypedConstraint_[MASK]__SWIG_0(swigCPtr, this), false);}
",getRigidBodyA,"[{'value': ['build'], 'probability': 0.22554858028888702}, {'value': ['create'], 'probability': 0.15257422626018524}, {'value': ['clone'], 'probability': 0.052851077169179916}, {'value': ['get'], 'probability': 0.05218445882201195}, {'value': ['upgrade'], 'probability': 0.0293448306620121}]","[0.5626448, 0.62328804, 0.166604, 1.0, 0.4226108]",0.2953925225990981,"[{'value': ['instance'], 'probability': 0.24291475117206573}, {'value': ['get', 'flags'], 'probability': 0.15380139648914337}, {'value': ['stop', 'capture'], 'probability': 0.11797503381967545}, {'value': ['what'], 'probability': 0.09154746681451797}, {'value': ['get', 'options'], 'probability': 0.08183800429105759}, {'value': ['get', 'instance'], 'probability': 0.07271350175142288}, {'value': ['get', 'publisher'], 'probability': 0.06692762672901154}, {'value': ['get', 'c', 'ptr'], 'probability': 0.059888411313295364}, {'value': ['get', 'top'], 'probability': 0.056414585560560226}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05597924441099167}]","[0.56794554, 0.75727946, 0.64470273, 0.76382285, 0.88330656, 0.9335536, 0.7924022, 0.67619735, 0.8810721, 0.7738402]",0.7271421495210391
1442,1442,"public btRigidBody getRigidBodyB() {return btRigidBody.getInstance(DynamicsJNI.btTypedConstraint_getRigidBodyB__SWIG_0(swigCPtr, this), false);}
","public btRigidBody [MASK]() {return btRigidBody.getInstance(DynamicsJNI.btTypedConstraint_[MASK]__SWIG_0(swigCPtr, this), false);}
",getRigidBodyB,"[{'value': ['build'], 'probability': 0.22554858028888702}, {'value': ['create'], 'probability': 0.15257422626018524}, {'value': ['clone'], 'probability': 0.052851077169179916}, {'value': ['get'], 'probability': 0.05218445882201195}, {'value': ['upgrade'], 'probability': 0.0293448306620121}]","[0.5626448, 0.62328804, 0.166604, 1.0, 0.4226108]",0.2953925225990981,"[{'value': ['instance'], 'probability': 0.24291475117206573}, {'value': ['get', 'flags'], 'probability': 0.15380139648914337}, {'value': ['stop', 'capture'], 'probability': 0.11797503381967545}, {'value': ['what'], 'probability': 0.09154746681451797}, {'value': ['get', 'options'], 'probability': 0.08183800429105759}, {'value': ['get', 'instance'], 'probability': 0.07271350175142288}, {'value': ['get', 'publisher'], 'probability': 0.06692762672901154}, {'value': ['get', 'c', 'ptr'], 'probability': 0.059888411313295364}, {'value': ['get', 'top'], 'probability': 0.056414585560560226}, {'value': ['get', 'k', 'box', 'capabilities'], 'probability': 0.05597924441099167}]","[0.56794554, 0.75727946, 0.64470273, 0.76382285, 0.88330656, 0.9335536, 0.7924022, 0.67619735, 0.8810721, 0.7738402]",0.7271421495210391
1443,1443,"public int getUserConstraintType() {return DynamicsJNI.btTypedConstraint_getUserConstraintType(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getUserConstraintType,"[{'value': ['get'], 'probability': 0.07337956130504608}, {'value': ['run'], 'probability': 0.03408423811197281}, {'value': ['start'], 'probability': 0.03307567536830902}, {'value': ['length'], 'probability': 0.03028775379061699}, {'value': ['state'], 'probability': 0.029355337843298912}]","[1.0, 0.65114945, 0.7199945, 0.3304365, 0.49234587]",0.1438489567584977,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1444,1444,"public void setUserConstraintType(int userConstraintType) {DynamicsJNI.btTypedConstraint_setUserConstraintType(swigCPtr, this, userConstraintType);}
","public void [MASK](int userConstraintType) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, userConstraintType);}
",setUserConstraintType,"[{'value': ['set'], 'probability': 0.06561606377363205}, {'value': ['start'], 'probability': 0.045688726007938385}, {'value': ['type'], 'probability': 0.04516001045703888}, {'value': ['test'], 'probability': 0.04005024582147598}, {'value': ['apply'], 'probability': 0.03875255957245827}]","[1.0, 0.71166486, 0.4186933, 0.5425338, 0.5010617]",0.1581853535319286,"[{'value': ['init'], 'probability': 0.4392317235469818}, {'value': ['resize'], 'probability': 0.09881371259689331}, {'value': ['grow'], 'probability': 0.09650564193725586}, {'value': ['reinit'], 'probability': 0.08640197664499283}, {'value': ['release'], 'probability': 0.06684998422861099}, {'value': ['mark'], 'probability': 0.06304313987493515}, {'value': ['attach'], 'probability': 0.0485062338411808}, {'value': ['extend'], 'probability': 0.037879906594753265}, {'value': ['set', 'dirty'], 'probability': 0.03213473781943321}, {'value': ['bind'], 'probability': 0.030632901936769485}]","[-0.2256778, -0.12730242, 0.39089534, 0.0, 0.523722, 0.4959306, 0.2794136, 0.5463553, 0.7950754, 0.24931578]",0.05973135605542369
1445,1445,"public void setUserConstraintId(int uid) {DynamicsJNI.btTypedConstraint_setUserConstraintId(swigCPtr, this, uid);}
","public void [MASK](int uid) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, uid);}
",setUserConstraintId,"[{'value': ['test'], 'probability': 0.07160038501024246}, {'value': ['write'], 'probability': 0.06903784722089767}, {'value': ['run'], 'probability': 0.06297481805086136}, {'value': ['execute'], 'probability': 0.04375654086470604}, {'value': ['start'], 'probability': 0.03561047464609146}]","[0.5425338, 0.46259418, 0.67632943, 0.35167885, 0.71166486]",0.1541048326736833,"[{'value': ['reinit'], 'probability': 0.4289894104003906}, {'value': ['set', 'uid'], 'probability': 0.18850107491016388}, {'value': ['set', 'id'], 'probability': 0.18380793929100037}, {'value': ['open'], 'probability': 0.0658423900604248}, {'value': ['set', 'flags'], 'probability': 0.04726538062095642}, {'value': ['init'], 'probability': 0.04338647052645683}, {'value': ['set', 'class'], 'probability': 0.012957335449755192}, {'value': ['set', 'params'], 'probability': 0.012159064412117004}, {'value': ['delete', 'id'], 'probability': 0.008896168321371078}, {'value': ['fetch'], 'probability': 0.008194838650524616}]","[0.0, 0.80196553, 0.7939222, 0.6936701, 0.7786614, -0.2256778, 0.823405, 1.0, 0.26293567, 0.19354461]",0.3965392155471657
1446,1446,"public int getUserConstraintId() {return DynamicsJNI.btTypedConstraint_getUserConstraintId(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getUserConstraintId,"[{'value': ['get'], 'probability': 0.07337956130504608}, {'value': ['run'], 'probability': 0.03408423811197281}, {'value': ['start'], 'probability': 0.03307567536830902}, {'value': ['length'], 'probability': 0.03028775379061699}, {'value': ['state'], 'probability': 0.029355337843298912}]","[1.0, 0.65114945, 0.7199945, 0.3304365, 0.49234587]",0.1438489567584977,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1447,1447,"public void setUserConstraintPtr(long ptr) {DynamicsJNI.btTypedConstraint_setUserConstraintPtr(swigCPtr, this, ptr);}
","public void [MASK](long ptr) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, ptr);}
",setUserConstraintPtr,"[{'value': ['run'], 'probability': 0.08790573477745056}, {'value': ['test'], 'probability': 0.08363820612430573}, {'value': ['execute'], 'probability': 0.048647284507751465}, {'value': ['read'], 'probability': 0.038177281618118286}, {'value': ['setup'], 'probability': 0.0350273959338665}]","[0.67632943, 0.5425338, 0.35167885, 0.4820371, 0.35182503]",0.1526643924567933,"[{'value': ['free'], 'probability': 0.22670915722846985}, {'value': ['resize'], 'probability': 0.17236173152923584}, {'value': ['reserve'], 'probability': 0.16296546161174774}, {'value': ['init'], 'probability': 0.08810631930828094}, {'value': ['recycle'], 'probability': 0.08442121744155884}, {'value': ['set', 'id'], 'probability': 0.08408567309379578}, {'value': ['set'], 'probability': 0.06339786946773529}, {'value': ['set', 'bounds'], 'probability': 0.04434119164943695}, {'value': ['set', 'offset'], 'probability': 0.04306672513484955}, {'value': ['alloc'], 'probability': 0.030544592067599297}]","[0.61050844, -0.12730242, 0.397411, -0.2256778, 0.053610556, 0.7939222, 1.0, 0.83062565, 0.8107425, 0.0]",0.36777459111351196
1448,1448,"public long getUserConstraintPtr() {return DynamicsJNI.btTypedConstraint_getUserConstraintPtr(swigCPtr, this);}
","public long [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getUserConstraintPtr,"[{'value': ['run'], 'probability': 0.1895427703857422}, {'value': ['get'], 'probability': 0.07535228133201599}, {'value': ['id'], 'probability': 0.026388147845864296}, {'value': ['bar'], 'probability': 0.025090599432587624}, {'value': ['execute'], 'probability': 0.024496126919984818}]","[0.65114945, 1.0, 0.2945777, 0.45318797, 0.37713256]",0.2271553569844656,"[{'value': ['get', 'id'], 'probability': 0.4031057357788086}, {'value': ['capacity'], 'probability': 0.10823999345302582}, {'value': ['size'], 'probability': 0.10410252213478088}, {'value': ['get', 'flags'], 'probability': 0.08745252341032028}, {'value': ['get', 'len'], 'probability': 0.07785654067993164}, {'value': ['get', 'length'], 'probability': 0.06493058800697327}, {'value': ['get', 'ea'], 'probability': 0.04998982325196266}, {'value': ['get', 'gid'], 'probability': 0.04888492822647095}, {'value': ['get', 'size'], 'probability': 0.031750988215208054}, {'value': ['get', 'max'], 'probability': 0.023686302825808525}]","[0.82231325, 0.39120343, 0.43109724, 0.75727946, 0.7771981, 0.8075286, 0.7769229, 0.80916685, 0.83762157, 0.8405733]",0.7227703045423808
1449,1449,"public void setJointFeedback(btJointFeedback jointFeedback) {DynamicsJNI.btTypedConstraint_setJointFeedback(swigCPtr, this, btJointFeedback.getCPtr(jointFeedback), jointFeedback);}
","public void [MASK](btJointFeedback jointFeedback) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, btJointFeedback.getCPtr(jointFeedback), jointFeedback);}
",setJointFeedback,"[{'value': ['test'], 'probability': 0.15841509401798248}, {'value': ['execute'], 'probability': 0.07344377040863037}, {'value': ['run'], 'probability': 0.04106391221284866}, {'value': ['apply'], 'probability': 0.03469635173678398}, {'value': ['setup'], 'probability': 0.030327122658491135}]","[0.5425338, 0.35167885, 0.67632943, 0.5010617, 0.35182503]",0.1676017514052902,"[{'value': ['swap'], 'probability': 0.6864129900932312}, {'value': ['make', 'union'], 'probability': 0.10944683849811554}, {'value': ['set', 'nodes'], 'probability': 0.04918724298477173}, {'value': ['intersect'], 'probability': 0.029744848608970642}, {'value': ['add'], 'probability': 0.02443300560116768}, {'value': ['set', 'operand'], 'probability': 0.022532105445861816}, {'value': ['sub'], 'probability': 0.021639857441186905}, {'value': ['start', 'capture'], 'probability': 0.020184902474284172}, {'value': ['assign'], 'probability': 0.019655738025903702}, {'value': ['set', 'previous'], 'probability': 0.016762524843215942}]","[0.3554226, 0.69098675, 0.7400634, 0.11416183, 0.5084879, 0.66361094, 0.33460784, 0.7119248, 0.17613421, 0.90360475]",0.4269865924312512
1450,1450,"public btJointFeedback getJointFeedback() {long cPtr = DynamicsJNI.btTypedConstraint_getJointFeedback__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btJointFeedback(cPtr, false);}
","public btJointFeedback [MASK]() {long cPtr = DynamicsJNI.btTypedConstraint_[MASK]__SWIG_0(swigCPtr, this);return (cPtr == 0) ? null : new btJointFeedback(cPtr, false);}
",getJointFeedback,"[{'value': ['build'], 'probability': 0.13493047654628754}, {'value': ['get'], 'probability': 0.06195089593529701}, {'value': ['create'], 'probability': 0.03900180011987686}, {'value': ['clone'], 'probability': 0.03697218373417854}, {'value': ['resolve'], 'probability': 0.03570197895169258}]","[0.5626448, 1.0, 0.62328804, 0.166604, 0.427468]",0.183599346762757,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1451,1451,"public int getUid() {return DynamicsJNI.btTypedConstraint_getUid(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getUid,"[{'value': ['get'], 'probability': 0.07337956130504608}, {'value': ['run'], 'probability': 0.03408423811197281}, {'value': ['start'], 'probability': 0.03307567536830902}, {'value': ['length'], 'probability': 0.03028775379061699}, {'value': ['state'], 'probability': 0.029355337843298912}]","[1.0, 0.65114945, 0.7199945, 0.3304365, 0.49234587]",0.1438489567584977,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1452,1452,"public boolean needsFeedback() {return DynamicsJNI.btTypedConstraint_needsFeedback(swigCPtr, this);}
","public boolean [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",needsFeedback,"[{'value': ['run'], 'probability': 0.11702360957860947}, {'value': ['execute'], 'probability': 0.06715206056833267}, {'value': ['is'], 'probability': 0.04659870266914368}, {'value': ['matches'], 'probability': 0.043851349502801895}, {'value': ['exists'], 'probability': 0.028039541095495224}]","[0.5110951, 0.34279618, 0.65654546, 0.33612767, 0.4853253]",0.1417717812755166,"[{'value': ['is', 'custom'], 'probability': 0.2796882390975952}, {'value': ['last'], 'probability': 0.1613699048757553}, {'value': ['empty'], 'probability': 0.1481449007987976}, {'value': ['next'], 'probability': 0.08946648240089417}, {'value': ['is', 'bit'], 'probability': 0.07267817854881287}, {'value': ['is', 'empty'], 'probability': 0.06355725973844528}, {'value': ['next', 'data'], 'probability': 0.052653901278972626}, {'value': ['next', 'to'], 'probability': 0.05181558430194855}, {'value': ['first'], 'probability': 0.044913653284311295}, {'value': ['is', 'union'], 'probability': 0.035711873322725296}]","[0.60861784, 0.49518168, 0.33668366, 0.636674, 0.636331, 0.6161682, 0.6466653, 0.6943742, 0.50228316, 0.65790296]",0.5584621381711861
1453,1453,"public void enableFeedback(boolean needsFeedback) {DynamicsJNI.btTypedConstraint_enableFeedback(swigCPtr, this, needsFeedback);}
","public void [MASK](boolean needsFeedback) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, needsFeedback);}
",enableFeedback,"[{'value': ['execute'], 'probability': 0.10379014909267426}, {'value': ['run'], 'probability': 0.05295231193304062}, {'value': ['test'], 'probability': 0.04036294296383858}, {'value': ['update'], 'probability': 0.037507761269807816}, {'value': ['apply'], 'probability': 0.03080873191356659}]","[0.4432855, 0.40647653, 0.34499967, 0.4013906, 0.61367136]",0.1154194412813964,"[{'value': ['set', 'dirty'], 'probability': 0.6187309622764587}, {'value': ['init'], 'probability': 0.14125777781009674}, {'value': ['reinit'], 'probability': 0.06631449609994888}, {'value': ['bind'], 'probability': 0.04962663725018501}, {'value': ['attach'], 'probability': 0.030891206115484238}, {'value': ['grow'], 'probability': 0.026309974491596222}, {'value': ['recycle'], 'probability': 0.018168888986110687}, {'value': ['extend'], 'probability': 0.017703834921121597}, {'value': ['deactivate'], 'probability': 0.016321968287229538}, {'value': ['set', 'directory'], 'probability': 0.01467419508844614}]","[0.30008668, -0.060864724, 0.0, 0.37518895, 0.49029514, 0.48742646, 0.2680797, 0.66326535, 0.21526402, 0.46316177]",0.2505877657540413
1454,1454,"public float getAppliedImpulse() {return DynamicsJNI.btTypedConstraint_getAppliedImpulse(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getAppliedImpulse,"[{'value': ['run'], 'probability': 0.0574372224509716}, {'value': ['get'], 'probability': 0.05620630457997322}, {'value': ['start'], 'probability': 0.04165234789252281}, {'value': ['id'], 'probability': 0.03929677978157997}, {'value': ['bar'], 'probability': 0.03487766161561012}]","[0.65114945, 1.0, 0.7199945, 0.2945777, 0.45318797]",0.1509780725531051,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
1455,1455,"public int getConstraintType() {return DynamicsJNI.btTypedConstraint_getConstraintType(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getConstraintType,"[{'value': ['get'], 'probability': 0.07337956130504608}, {'value': ['run'], 'probability': 0.03408423811197281}, {'value': ['start'], 'probability': 0.03307567536830902}, {'value': ['length'], 'probability': 0.03028775379061699}, {'value': ['state'], 'probability': 0.029355337843298912}]","[1.0, 0.65114945, 0.7199945, 0.3304365, 0.49234587]",0.1438489567584977,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.82231325, 0.43109724, 0.75727946, 0.64470273, 0.8075286, 0.33598104, 0.39120343, 0.6926611, 0.7925645, 0.80916685]",0.6789593480888673
1456,1456,"public void setDbgDrawSize(float dbgDrawSize) {DynamicsJNI.btTypedConstraint_setDbgDrawSize(swigCPtr, this, dbgDrawSize);}
","public void [MASK](float dbgDrawSize) {DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, dbgDrawSize);}
",setDbgDrawSize,"[{'value': ['paint'], 'probability': 0.06420102715492249}, {'value': ['save'], 'probability': 0.04090481996536255}, {'value': ['update'], 'probability': 0.03616122528910637}, {'value': ['write'], 'probability': 0.029624754562973976}, {'value': ['run'], 'probability': 0.027490103617310524}]","[0.3280287, 0.5413879, 0.41854778, 0.46259418, 0.67632943]",0.0906369610975091,"[{'value': ['attach'], 'probability': 0.1965436339378357}, {'value': ['set', 'size'], 'probability': 0.14525675773620605}, {'value': ['set', 'dirty'], 'probability': 0.14215384423732758}, {'value': ['resize'], 'probability': 0.12993590533733368}, {'value': ['init'], 'probability': 0.12220734357833862}, {'value': ['set', 'radius'], 'probability': 0.06661853939294815}, {'value': ['set', 'position'], 'probability': 0.059778012335300446}, {'value': ['release'], 'probability': 0.055360328406095505}, {'value': ['set', 'quality'], 'probability': 0.04144826531410217}, {'value': ['set', 'bounds'], 'probability': 0.04069731757044792}]","[0.2794136, 0.8344828, 0.7950754, -0.12730242, -0.2256778, 0.7756784, 0.8780586, 0.523722, 0.8453191, 0.83062565]",0.44703144313603815
1457,1457,"public float getDbgDrawSize() {return DynamicsJNI.btTypedConstraint_getDbgDrawSize(swigCPtr, this);}
","public float [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",getDbgDrawSize,"[{'value': ['run'], 'probability': 0.0574372224509716}, {'value': ['get'], 'probability': 0.05620630457997322}, {'value': ['start'], 'probability': 0.04165234789252281}, {'value': ['id'], 'probability': 0.03929677978157997}, {'value': ['bar'], 'probability': 0.03487766161561012}]","[0.65114945, 1.0, 0.7199945, 0.2945777, 0.45318797]",0.1509780725531051,"[{'value': ['get', 'x'], 'probability': 0.3653159439563751}, {'value': ['get', 'a', 'float'], 'probability': 0.09880782663822174}, {'value': ['get', 'scale'], 'probability': 0.09650827199220657}, {'value': ['get', 'y'], 'probability': 0.0772906020283699}, {'value': ['get', 'value'], 'probability': 0.07633952051401138}, {'value': ['get', 'length'], 'probability': 0.06351369619369507}, {'value': ['get', 'top'], 'probability': 0.06173808500170708}, {'value': ['get', 'bottom'], 'probability': 0.058997247368097305}, {'value': ['get', 'longitude'], 'probability': 0.05121210962533951}, {'value': ['get', 'right'], 'probability': 0.05027668550610542}]","[0.7925645, 0.84568125, 0.82746357, 0.69577336, 0.8500731, 0.8075286, 0.8810721, 0.8802582, 0.65675265, 0.9303044]",0.8096483204037973
1458,1458,"public void setParam(int num, float value, int axis) {DynamicsJNI.btTypedConstraint_setParam__SWIG_0(swigCPtr, this, num, value, axis);}
","public void [MASK](int num, float value, int axis) {DynamicsJNI.btTypedConstraint_[MASK]__SWIG_0(swigCPtr, this, num, value, axis);}
",setParam,"[{'value': ['write'], 'probability': 0.09105896204710007}, {'value': ['set'], 'probability': 0.05171503499150276}, {'value': ['put'], 'probability': 0.04402614012360573}, {'value': ['read'], 'probability': 0.04200318455696106}, {'value': ['value'], 'probability': 0.0351283922791481}]","[0.46259418, 1.0, 0.7944568, 0.4820371, 0.47274652]",0.1656691649103436,"[{'value': ['set', 'axis'], 'probability': 0.3111627995967865}, {'value': ['set', 'depth'], 'probability': 0.1976110190153122}, {'value': ['set', 'max'], 'probability': 0.104703888297081}, {'value': ['set', 'code'], 'probability': 0.10066989064216614}, {'value': ['set', 'size'], 'probability': 0.08471064269542694}, {'value': ['set'], 'probability': 0.05685647204518318}, {'value': ['set', 'min'], 'probability': 0.04512251168489456}, {'value': ['set', 'result'], 'probability': 0.039109911769628525}, {'value': ['set', 'value'], 'probability': 0.03223690763115883}, {'value': ['extract', 'values'], 'probability': 0.027815988287329674}]","[0.7557529, 0.7943753, 0.82594055, 0.852165, 0.8344828, 1.0, 0.7226355, 0.903226, 0.8399167, 0.42888883]",0.7988905931870766
1459,1459,"public void setParam(int num, float value) {DynamicsJNI.btTypedConstraint_setParam__SWIG_1(swigCPtr, this, num, value);}
","public void [MASK](int num, float value) {DynamicsJNI.btTypedConstraint_[MASK]__SWIG_1(swigCPtr, this, num, value);}
",setParam,"[{'value': ['write'], 'probability': 0.08614525198936462}, {'value': ['set'], 'probability': 0.07106376439332962}, {'value': ['put'], 'probability': 0.062011655420064926}, {'value': ['value'], 'probability': 0.04224982112646103}, {'value': ['read'], 'probability': 0.03018646501004696}]","[0.46259418, 1.0, 0.7944568, 0.47274652, 0.4820371]",0.1947040887239401,"[{'value': ['set'], 'probability': 0.7412213683128357}, {'value': ['set', 'value'], 'probability': 0.06779135018587112}, {'value': ['set', 'size'], 'probability': 0.054063234478235245}, {'value': ['pack'], 'probability': 0.03519397974014282}, {'value': ['inject'], 'probability': 0.026289483532309532}, {'value': ['set', 'length'], 'probability': 0.020761359483003616}, {'value': ['set', 'flags'], 'probability': 0.017363199964165688}, {'value': ['set', 'range'], 'probability': 0.013258877210319042}, {'value': ['set', 'all'], 'probability': 0.01316965464502573}, {'value': ['set', 'code'], 'probability': 0.01088749896734953}]","[1.0, 0.8399167, 0.8344828, 0.459913, 0.21771094, 0.82813084, 0.7786614, 0.8546901, 0.918451, 0.852165]",0.9286040064955575
1460,1460,"public float getParam(int num, int axis) {return DynamicsJNI.btTypedConstraint_getParam__SWIG_0(swigCPtr, this, num, axis);}
","public float [MASK](int num, int axis) {return DynamicsJNI.btTypedConstraint_[MASK]__SWIG_0(swigCPtr, this, num, axis);}
",getParam,"[{'value': ['value'], 'probability': 0.048540204763412476}, {'value': ['transform'], 'probability': 0.038084641098976135}, {'value': ['write'], 'probability': 0.036269813776016235}, {'value': ['get'], 'probability': 0.03397803753614426}, {'value': ['offset'], 'probability': 0.03179321438074112}]","[0.46303764, 0.33052462, 0.60768855, 1.0, 0.30574188]",0.1008031584684692,"[{'value': ['get', 'axis'], 'probability': 0.3242493271827698}, {'value': ['get', 'preferred', 'span'], 'probability': 0.3110075294971466}, {'value': ['check'], 'probability': 0.11412917077541351}, {'value': ['contains'], 'probability': 0.06126876175403595}, {'value': ['calculate', 'minimum', 'size'], 'probability': 0.04356987401843071}, {'value': ['calculate', 'maximum', 'size'], 'probability': 0.03302926942706108}, {'value': ['get', 'alignment'], 'probability': 0.03279677778482437}, {'value': ['set', 'type', 'id'], 'probability': 0.030141858384013176}, {'value': ['set', 'max'], 'probability': 0.025119291618466377}, {'value': ['set', 'border', 'size'], 'probability': 0.02468814328312874}]","[0.7259008, 0.81841946, 0.6861151, 0.24745864, 0.508464, 0.48481768, 0.8012006, 0.6093187, 0.6018925, 0.61694205]",0.6965346413883347
1461,1461,"public float getParam(int num) {return DynamicsJNI.btTypedConstraint_getParam__SWIG_1(swigCPtr, this, num);}
","public float [MASK](int num) {return DynamicsJNI.btTypedConstraint_[MASK]__SWIG_1(swigCPtr, this, num);}
",getParam,"[{'value': ['value'], 'probability': 0.0754847601056099}, {'value': ['get'], 'probability': 0.0596870556473732}, {'value': ['start'], 'probability': 0.03856520727276802}, {'value': ['next'], 'probability': 0.03188912570476532}, {'value': ['count'], 'probability': 0.027435302734375}]","[0.46303764, 1.0, 0.7199945, 0.6966621, 0.4437648]",0.1567968453381096,"[{'value': ['get', 'num'], 'probability': 0.458318293094635}, {'value': ['size'], 'probability': 0.27251148223876953}, {'value': ['add'], 'probability': 0.06092870980501175}, {'value': ['add', 'unique'], 'probability': 0.03376512974500656}, {'value': ['extract'], 'probability': 0.031745947897434235}, {'value': ['last'], 'probability': 0.03027462027966976}, {'value': ['get', 'length'], 'probability': 0.02935056947171688}, {'value': ['length'], 'probability': 0.028544649481773376}, {'value': ['top'], 'probability': 0.027717072516679764}, {'value': ['elements'], 'probability': 0.026843538507819176}]","[0.74284285, 0.43109724, 0.54842544, 0.56928796, 0.2894807, 0.62151444, 0.8075286, 0.3304365, 0.5622251, 0.3344368]",0.5962746234447687
1462,1462,"public int calculateSerializeBufferSize() {return DynamicsJNI.btTypedConstraint_calculateSerializeBufferSize(swigCPtr, this);}
","public int [MASK]() {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this);}
",calculateSerializeBufferSize,"[{'value': ['get'], 'probability': 0.07337956130504608}, {'value': ['run'], 'probability': 0.03408423811197281}, {'value': ['start'], 'probability': 0.03307567536830902}, {'value': ['length'], 'probability': 0.03028775379061699}, {'value': ['state'], 'probability': 0.029355337843298912}]","[0.32713252, 0.18425731, 0.23255967, 0.31783268, 0.20949323]",0.0537533617960983,"[{'value': ['get', 'id'], 'probability': 0.3313220143318176}, {'value': ['size'], 'probability': 0.1665688157081604}, {'value': ['get', 'flags'], 'probability': 0.15398664772510529}, {'value': ['stop', 'capture'], 'probability': 0.08354075998067856}, {'value': ['get', 'length'], 'probability': 0.055937256664037704}, {'value': ['hash', 'code'], 'probability': 0.05303184688091278}, {'value': ['capacity'], 'probability': 0.04606638848781586}, {'value': ['get', 'server', 'port'], 'probability': 0.04076070711016655}, {'value': ['get', 'x'], 'probability': 0.04039689898490906}, {'value': ['get', 'gid'], 'probability': 0.02838866226375103}]","[0.3642589, 0.42300627, 0.19566703, 0.27978098, 0.39523968, 0.3746031, 0.26180714, 0.2608867, 0.3633278, 0.31262988]",0.3328712855986206
1463,1463,"public String serialize(long dataBuffer, SWIGTYPE_p_btSerializer serializer) {return DynamicsJNI.btTypedConstraint_serialize(swigCPtr, this, dataBuffer, SWIGTYPE_p_btSerializer.getCPtr(serializer));}private MeshBuilder getBuilder(final VertexAttributes attributes) {for (final MeshBuilder mb : builders) if (mb.getAttributes().equals(attributes) && mb.lastIndex() < Short.MAX_VALUE / 2)return mb;final MeshBuilder result = new MeshBuilder();result.begin(attributes);builders.add(result);return result;}
","public String [MASK](long dataBuffer, SWIGTYPE_p_btSerializer [MASK]r) {return DynamicsJNI.btTypedConstraint_[MASK](swigCPtr, this, dataBuffer, SWIGTYPE_p_btSerializer.getCPtr([MASK]r));}private MeshBuilder getBuilder(final VertexAttributes attributes) {for (final MeshBuilder mb : builders) if (mb.getAttributes().equals(attributes) && mb.lastIndex() < Short.MAX_VALUE / 2)return mb;final MeshBuilder result = new MeshBuilder();result.begin(attributes);builders.add(result);return result;}
",serialize,"[{'value': ['build'], 'probability': 0.09686940163373947}, {'value': ['get'], 'probability': 0.05240899324417114}, {'value': ['format'], 'probability': 0.04090364649891853}, {'value': ['execute'], 'probability': 0.03193536773324013}, {'value': ['add'], 'probability': 0.030886324122548103}]","[-0.009265027, -0.18137582, 0.026197135, 0.20434979, -0.011267965]",-0.003153703641848,"[{'value': ['pack'], 'probability': 0.4097846448421478}, {'value': ['beta'], 'probability': 0.14518867433071136}, {'value': ['lt'], 'probability': 0.10005734860897064}, {'value': ['set', 'to'], 'probability': 0.07292521744966507}, {'value': ['shift', 'right'], 'probability': 0.0675370991230011}, {'value': ['deserialize'], 'probability': 0.05612505227327347}, {'value': ['ne'], 'probability': 0.05151262879371643}, {'value': ['read', 'instance'], 'probability': 0.046606842428445816}, {'value': ['hex'], 'probability': 0.025891726836562157}, {'value': ['construct', 'array'], 'probability': 0.024370742961764336}]","[-0.16505867, -0.06831472, -0.24767685, -0.087462455, -0.16219464, 0.0, -0.16697419, -0.05279458, 0.14551722, 0.07945922]",-0.12502899085133798
1464,1464,"public void begin() {if (model != null)throw new GdxRuntimeException(""Call end() first"");node = null;model = new Model();builders.clear();}
","public void [MASK]() {if (model != null)throw new GdxRuntimeException(""Call end() first"");node = null;model = new Model();builders.clear();}
",begin,"[{'value': ['execute'], 'probability': 0.21963822841644287}, {'value': ['run'], 'probability': 0.12989898025989532}, {'value': ['test'], 'probability': 0.1017533391714096}, {'value': ['build'], 'probability': 0.08772020787000656}, {'value': ['start'], 'probability': 0.08147132396697998}]","[0.36831948, 0.51075274, 0.44790062, 0.57295126, 0.825834]",0.3103598730241224,"[{'value': ['update'], 'probability': 0.34950345754623413}, {'value': ['remove'], 'probability': 0.2827964127063751}, {'value': ['release'], 'probability': 0.15316131711006165}, {'value': ['close'], 'probability': 0.08896021544933319}, {'value': ['start'], 'probability': 0.04510107263922691}, {'value': ['show'], 'probability': 0.03236272558569908}, {'value': ['add'], 'probability': 0.0256622564047575}, {'value': ['read'], 'probability': 0.008392303250730038}, {'value': ['prepare'], 'probability': 0.008259703405201435}, {'value': ['delete'], 'probability': 0.005800474900752306}]","[0.42249745, 0.45989016, 0.51823753, 0.50823593, 0.825834, 0.5477517, 0.5113534, 0.4268489, 0.73379606, 0.15520267]",0.4809449792297841
1465,1465,"public Model end() {if (model == null)throw new GdxRuntimeException(""Call begin() first"");final Model result = model;endnode();model = null;for (final MeshBuilder mb : builders) mb.end();builders.clear();rebuildReferences(result);return result;}
","public Model [MASK]() {if (model == null)throw new GdxRuntimeException(""Call begin() first"");final Model result = model;[MASK]node();model = null;for (final MeshBuilder mb : builders) mb.[MASK]();builders.clear();rebuildReferences(result);return result;}
",end,"[{'value': ['node'], 'probability': 0.2701464891433716}, {'value': ['build'], 'probability': 0.09998967498540878}, {'value': ['builder'], 'probability': 0.0726594477891922}, {'value': ['start'], 'probability': 0.05791032686829567}, {'value': ['execute'], 'probability': 0.04914293810725212}]","[0.14284542, 0.53965765, 0.17381473, 0.82135457, 0.2944913]",0.1672157435293759,"[{'value': ['build'], 'probability': 0.4492143392562866}, {'value': ['process', 'model'], 'probability': 0.18204350769519806}, {'value': ['model'], 'probability': 0.16701650619506836}, {'value': ['print', 'model'], 'probability': 0.053378626704216}, {'value': ['generate', 'model'], 'probability': 0.03694870322942734}, {'value': ['init', 'model'], 'probability': 0.024406420066952705}, {'value': ['enable'], 'probability': 0.022218018770217896}, {'value': ['get', 'vertex', 'index'], 'probability': 0.02186359092593193}, {'value': ['clear', 'nodes'], 'probability': 0.021471649408340454}, {'value': ['exec', 'describe'], 'probability': 0.02143874764442444}]","[0.53965765, 0.6021992, 0.3765626, 0.42896247, 0.43813723, 0.20854247, 0.4133809, 0.51183194, 0.45578137, 0.29363757]",0.4955729726503061
1466,1466,"private void endnode() {if (node != null) {node = null;}}
","private void [MASK]() {if (node != null) {node = null;}}
",endnode,"[{'value': ['node'], 'probability': 0.2760654389858246}, {'value': ['run'], 'probability': 0.21399496495723724}, {'value': ['start'], 'probability': 0.12702807784080505}, {'value': ['test'], 'probability': 0.02469736523926258}, {'value': ['close'], 'probability': 0.01757340133190155}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['exit'], 'probability': 0.18956038355827332}, {'value': ['dispose', 'com', 'interfaces'], 'probability': 0.14109008014202118}, {'value': ['dispose'], 'probability': 0.124420166015625}, {'value': ['detach'], 'probability': 0.11807532608509064}, {'value': ['close'], 'probability': 0.09986196458339691}, {'value': ['stop', 'node'], 'probability': 0.0978320762515068}, {'value': ['disconnect'], 'probability': 0.07324335724115372}, {'value': ['clear', 'animation'], 'probability': 0.05855194851756096}, {'value': ['close', 'output', 'stream'], 'probability': 0.052938759326934814}, {'value': ['free'], 'probability': 0.044425949454307556}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1467,1467,"protected Node node(final Node node) {if (model == null)throw new GdxRuntimeException(""Call begin() first"");endnode();model.nodes.add(node);this.node = node;return node;}
","protected Node [MASK](final Node [MASK]) {if (model == null)throw new GdxRuntimeException(""Call begin() first"");end[MASK]();model.[MASK]s.add([MASK]);this.[MASK] = [MASK];return [MASK];}
",node,"[{'value': ['create'], 'probability': 0.19233031570911407}, {'value': ['add'], 'probability': 0.10854503512382507}, {'value': ['build'], 'probability': 0.07517454028129578}, {'value': ['start'], 'probability': 0.059271037578582764}, {'value': ['update'], 'probability': 0.05113836005330086}]","[0.118494414, 0.15477481, 0.096190564, 0.120563015, 0.101768546]",0.0591713587318245,"[{'value': ['add', 'node'], 'probability': 0.7014073729515076}, {'value': ['visit'], 'probability': 0.1855625957250595}, {'value': ['add'], 'probability': 0.07966180145740509}, {'value': ['set', 'node'], 'probability': 0.014608521945774555}, {'value': ['set', 'nodes'], 'probability': 0.004381369799375534}, {'value': ['bind'], 'probability': 0.004013360943645239}, {'value': ['enable'], 'probability': 0.002839425578713417}, {'value': ['enter'], 'probability': 0.0027042124420404434}, {'value': ['new', 'node'], 'probability': 0.0025256613735109568}, {'value': ['insert'], 'probability': 0.0022956987377256155}]","[0.7557039, 0.07542558, 0.15477481, 0.7744107, 0.644465, 0.2531882, 0.17690313, 0.19710505, 0.7171799, 0.22246288]",0.5748922431738944
1468,1468,"public Node node() {final Node node = new Node();node(node);node.id = ""node"" + model.nodes.size;return node;}
","public Node [MASK]() {final Node [MASK] = new Node();[MASK]([MASK]);[MASK].id = ""[MASK]"" + model.[MASK]s.size;return [MASK];}
",node,"[{'value': ['create'], 'probability': 0.24632547795772552}, {'value': ['build'], 'probability': 0.11482805013656616}, {'value': ['test'], 'probability': 0.05022171884775162}, {'value': ['get'], 'probability': 0.03988863155245781}, {'value': ['resolve'], 'probability': 0.030292902141809464}]","[0.118494414, 0.096190564, 0.1872895, 0.102263406, 0.053264555]",0.0553322542401425,"[{'value': ['new', 'node'], 'probability': 0.7594654560089111}, {'value': ['set', 'node'], 'probability': 0.07701150327920914}, {'value': ['get', 'node'], 'probability': 0.0650402083992958}, {'value': ['create', 'node'], 'probability': 0.048435479402542114}, {'value': ['end', 'node'], 'probability': 0.02254440449178219}, {'value': ['to', 'node'], 'probability': 0.008847041055560112}, {'value': ['get', 'selected', 'node'], 'probability': 0.0051149302162230015}, {'value': ['clone', 'node'], 'probability': 0.004839611239731312}, {'value': ['build', 'node'], 'probability': 0.00459440890699625}, {'value': ['node'], 'probability': 0.00410705478861928}]","[0.7171799, 0.7744107, 0.74112487, 0.7655411, 0.77253455, 0.72666705, 0.5998206, 0.7918397, 0.7520404, 1.0]",0.7279018154603688
1469,1469,"public Node node(final String id, final Model model) {final Node node = new Node();node.id = id;node.addChildren(model.nodes);node(node);for (final Disposable disposable : model.getManagedDisposables()) manage(disposable);return node;}
","public Node [MASK](final String id, final Model model) {final Node [MASK] = new Node();[MASK].id = id;[MASK].addChildren(model.[MASK]s);[MASK]([MASK]);for (final Disposable disposable : model.getManagedDisposables()) manage(disposable);return [MASK];}
",node,"[{'value': ['visit'], 'probability': 0.07901996374130249}, {'value': ['create'], 'probability': 0.07687152922153473}, {'value': ['manage'], 'probability': 0.05688967928290367}, {'value': ['add'], 'probability': 0.04247593507170677}, {'value': ['locate'], 'probability': 0.029537713155150414}]","[0.07542558, 0.118494414, 0.14225066, 0.15477481, 0.22376935]",0.0363454075733978,"[{'value': ['add'], 'probability': 0.32823821902275085}, {'value': ['add', 'children'], 'probability': 0.2920193672180176}, {'value': ['visit'], 'probability': 0.09369556605815887}, {'value': ['link'], 'probability': 0.07771042734384537}, {'value': ['set', 'node'], 'probability': 0.057421740144491196}, {'value': ['show'], 'probability': 0.046779852360486984}, {'value': ['set', 'nodes'], 'probability': 0.03357065096497536}, {'value': ['initialize'], 'probability': 0.02808350697159767}, {'value': ['insert'], 'probability': 0.02399115264415741}, {'value': ['enable'], 'probability': 0.018489539623260498}]","[0.15477481, 0.11329721, 0.07542558, 0.37136763, 0.7744107, 0.0625742, 0.644465, 0.2500302, 0.22246288, 0.17690313]",0.20447422179848207
1470,1470,"public void manage(final Disposable disposable) {if (model == null)throw new GdxRuntimeException(""Call begin() first"");model.manageDisposable(disposable);}
","public void [MASK](final Disposable disposable) {if (model == null)throw new GdxRuntimeException(""Call begin() first"");model.[MASK]Disposable(disposable);}
",manage,"[{'value': ['set'], 'probability': 0.06435662508010864}, {'value': ['register'], 'probability': 0.05775893107056618}, {'value': ['visit'], 'probability': 0.050604596734046936}, {'value': ['accept'], 'probability': 0.049775831401348114}, {'value': ['update'], 'probability': 0.04724899306893349}]","[0.49264923, 0.38881993, 0.27433497, 0.41496664, 0.28193146]",0.1020219629568577,"[{'value': ['add'], 'probability': 0.4002741873264313}, {'value': ['update'], 'probability': 0.20937763154506683}, {'value': ['start'], 'probability': 0.14068926870822906}, {'value': ['install'], 'probability': 0.09116829186677933}, {'value': ['register', 'disposable'], 'probability': 0.05364268273115158}, {'value': ['add', 'node'], 'probability': 0.039107996970415115}, {'value': ['bind'], 'probability': 0.024402495473623276}, {'value': ['show'], 'probability': 0.020551234483718872}, {'value': ['add', 'disposable'], 'probability': 0.011062025092542171}, {'value': ['model', 'changed'], 'probability': 0.00972409825772047}]","[0.45952713, 0.28193146, 0.494773, 0.47118038, 0.3269946, 0.3975256, 0.3063521, 0.3530529, 0.36998442, 0.33350655]",0.41068750542974397
1471,1471,"public void part(final MeshPart meshpart, final Material material) {if (node == null)node();node.parts.add(new NodePart(meshpart, material));}
","public void [MASK](final MeshPart mesh[MASK], final Material material) {if (node == null)node();node.[MASK]s.add(new NodePart(mesh[MASK], material));}
",part,"[{'value': ['add'], 'probability': 0.2557036578655243}, {'value': ['apply'], 'probability': 0.17366774380207062}, {'value': ['create'], 'probability': 0.040646497160196304}, {'value': ['put'], 'probability': 0.028960280120372772}, {'value': ['install'], 'probability': 0.02643664740025997}]","[0.4381761, 0.4350825, 0.6366745, 0.67192227, 0.26806635]",0.240027447464335,"[{'value': ['configure', 'cluster'], 'probability': 0.9549286365509033}, {'value': ['get', 'local', 'host', 'name'], 'probability': 0.033624932169914246}, {'value': ['add', 'module'], 'probability': 0.0054226345382630825}, {'value': ['notify', 'error'], 'probability': 0.0011296950979158282}, {'value': ['report', 'failure'], 'probability': 0.0009910844964906573}, {'value': ['visit', 'try', 'catch', 'block'], 'probability': 0.000865922833327204}, {'value': ['set', 'test', 'server'], 'probability': 0.0008089751936495304}, {'value': ['connection', 'failed'], 'probability': 0.0007845463696867228}, {'value': ['add', 'character'], 'probability': 0.0007511739386245608}, {'value': ['set', 'min', 'width'], 'probability': 0.0006923822220414877}]","[0.2109908, 0.76590896, 0.4566637, 0.31508315, 0.5895232, 0.6695529, 0.583117, 0.6754423, 0.6159703, 0.4357311]",0.2329971467831183
1472,1472,"public MeshPart part(final String id, final Mesh mesh, int primitiveType, int offset, int size, final Material material) {final MeshPart meshPart = new MeshPart();meshPart.id = id;meshPart.primitiveType = primitiveType;meshPart.mesh = mesh;meshPart.offset = offset;meshPart.size = size;part(meshPart, material);return meshPart;}
","public MeshPart [MASK](final String id, final Mesh mesh, int primitiveType, int offset, int size, final Material material) {final MeshPart meshPart = new MeshPart();meshPart.id = id;meshPart.primitiveType = primitiveType;meshPart.mesh = mesh;meshPart.offset = offset;meshPart.size = size;[MASK](meshPart, material);return meshPart;}
",part,"[{'value': ['create'], 'probability': 0.37081173062324524}, {'value': ['paint'], 'probability': 0.0884433314204216}, {'value': ['build'], 'probability': 0.06371112167835236}, {'value': ['transform'], 'probability': 0.04763612896203995}, {'value': ['wrap'], 'probability': 0.04652230069041252}]","[0.6366745, 0.2990907, 0.59879464, 0.39780253, 0.30426353]",0.3337936512737949,"[{'value': ['init'], 'probability': 0.5152886509895325}, {'value': ['set', 'block'], 'probability': 0.38991403579711914}, {'value': ['add'], 'probability': 0.03151974081993103}, {'value': ['set', 'attribute'], 'probability': 0.030791644006967545}, {'value': ['set', 'material'], 'probability': 0.008148305118083954}, {'value': ['create', 'equals'], 'probability': 0.006380690727382898}, {'value': ['enqueue'], 'probability': 0.0056074573658406734}, {'value': ['set', 'protected'], 'probability': 0.004317671526223421}, {'value': ['make', 'attribute'], 'probability': 0.0042582666501402855}, {'value': ['constructor'], 'probability': 0.003773460863158107}]","[-0.2549168, 0.69806194, 0.4381761, 0.62315613, 0.6803554, 0.5577857, 0.0, 0.65555686, 0.620778, -0.055513557]",0.18819485373626763
1473,1473,"public MeshPart part(final String id, final Mesh mesh, int primitiveType, final Material material) {return part(id, mesh, primitiveType, 0, mesh.getNumIndices(), material);}
","public MeshPart [MASK](final String id, final Mesh mesh, int primitiveType, final Material material) {return [MASK](id, mesh, primitiveType, 0, mesh.getNumIndices(), material);}
",part,"[{'value': ['create'], 'probability': 0.23243483901023865}, {'value': ['##ition'], 'probability': 0.13180510699748993}, {'value': ['##ment'], 'probability': 0.06829994916915894}, {'value': ['##ner'], 'probability': 0.03236674517393112}, {'value': ['build'], 'probability': 0.026825910434126854}]","[0.6366745, 0.0, 0.0, 0.0, 0.59879464]",0.1640485516948243,"[{'value': ['is', 'type'], 'probability': 0.5493233799934387}, {'value': ['create', 'date', 'time'], 'probability': 0.08427787572145462}, {'value': ['get', 'material', 'name'], 'probability': 0.06691069155931473}, {'value': ['is'], 'probability': 0.060596127063035965}, {'value': ['is', 'rail'], 'probability': 0.058366939425468445}, {'value': ['create', 'equals'], 'probability': 0.04453253000974655}, {'value': ['get', 'material'], 'probability': 0.040324363857507706}, {'value': ['register', 'item'], 'probability': 0.03260195627808571}, {'value': ['get', 'box', 'type'], 'probability': 0.03179774805903435}, {'value': ['get', 'class'], 'probability': 0.0312683992087841}]","[0.7463618, 0.779637, 0.740628, 0.7856639, 0.75557196, 0.5577857, 0.6456455, 0.44437808, 0.63732797, 0.65248394]",0.7229948506287653
1474,1474,"public MeshPartBuilder part(final String id, int primitiveType, final VertexAttributes attributes, final Material material) {final MeshBuilder builder = getBuilder(attributes);part(builder.part(id, primitiveType), material);return builder;}
","public MeshPartBuilder [MASK](final String id, int primitiveType, final VertexAttributes attributes, final Material material) {final MeshBuilder builder = getBuilder(attributes);[MASK](builder.[MASK](id, primitiveType), material);return builder;}
",part,"[{'value': ['builder'], 'probability': 0.5454591512680054}, {'value': ['build'], 'probability': 0.19326671957969666}, {'value': ['create'], 'probability': 0.09430798143148422}, {'value': ['construct'], 'probability': 0.011575529351830482}, {'value': ['transform'], 'probability': 0.006172261666506529}]","[0.23173648, 0.59879464, 0.6366745, 0.42530823, 0.39780253]",0.3095518582655415,"[{'value': ['new', 'simple', 'type'], 'probability': 0.2577691972255707}, {'value': ['get', 'builder', 'for'], 'probability': 0.13849331438541412}, {'value': ['write', 'cell'], 'probability': 0.11592701822519302}, {'value': ['add', 'attribute'], 'probability': 0.11382831633090973}, {'value': ['test', 'default', 'namespace'], 'probability': 0.08829032629728317}, {'value': ['create', 'type'], 'probability': 0.06295303255319595}, {'value': ['put', 'attribute'], 'probability': 0.058524325489997864}, {'value': ['create', 'container'], 'probability': 0.05566728860139847}, {'value': ['create', 'equals'], 'probability': 0.054508596658706665}, {'value': ['add', 'connections'], 'probability': 0.05403857305645943}]","[0.72372186, 0.7085338, 0.52081615, 0.446072, 0.39156398, 0.6889314, 0.6026751, 0.53579015, 0.5577857, 0.5359668]",0.5982384530777418
1475,1475,"public MeshPartBuilder part(final String id, int primitiveType, final long attributes, final Material material) {return part(id, primitiveType, MeshBuilder.createAttributes(attributes), material);}
","public MeshPartBuilder [MASK](final String id, int primitiveType, final long attributes, final Material material) {return [MASK](id, primitiveType, MeshBuilder.createAttributes(attributes), material);}
",part,"[{'value': ['create'], 'probability': 0.4070998430252075}, {'value': ['build'], 'probability': 0.06627722084522247}, {'value': ['generate'], 'probability': 0.04060554504394531}, {'value': ['paint'], 'probability': 0.03348713368177414}, {'value': ['add'], 'probability': 0.017262639477849007}]","[0.6366745, 0.59879464, 0.35926953, 0.2990907, 0.4381761]",0.3310446447811587,"[{'value': ['set', 'attribute'], 'probability': 0.725143313407898}, {'value': ['add', 'attribute'], 'probability': 0.1376040130853653}, {'value': ['create', 'attributes'], 'probability': 0.06006912514567375}, {'value': ['put', 'attribute'], 'probability': 0.02228936366736889}, {'value': ['define', 'property'], 'probability': 0.015442246571183205}, {'value': ['create', 'node'], 'probability': 0.013402159325778484}, {'value': ['add', 'event'], 'probability': 0.007224140223115683}, {'value': ['register', 'item'], 'probability': 0.007194040808826685}, {'value': ['get', 'item', 'name'], 'probability': 0.007008202839642763}, {'value': ['get', 'attribute', 'type'], 'probability': 0.004623431712388992}]","[0.62315613, 0.446072, 0.57687324, 0.6026751, 0.5867043, 0.5233797, 0.6318127, 0.44437808, 0.687735, 0.6316438]",0.5929200900572165
1476,1476,"public Model createBox(float width, float height, float depth, final Material material, final long attributes) {return createBox(width, height, depth, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](float width, float height, float depth, final Material material, final long attributes) {return [MASK](width, height, depth, GL20.GL_TRIANGLES, material, attributes);}
",createBox,"[{'value': ['model'], 'probability': 0.3380700945854187}, {'value': ['Model'], 'probability': 0.13117672502994537}, {'value': ['create'], 'probability': 0.07046244293451309}, {'value': ['##ize'], 'probability': 0.024039460346102715}, {'value': ['get'], 'probability': 0.02196626178920269}]","[0.47480458, 0.0, 1.0, 0.0, 0.62328804]",0.2446709804317672,"[{'value': ['create', 'box'], 'probability': 0.6325905919075012}, {'value': ['attach', 'node', 'widget'], 'probability': 0.12750092148780823}, {'value': ['get', 'metamodel'], 'probability': 0.07759658992290497}, {'value': ['set', 'field', 'value'], 'probability': 0.03524046018719673}, {'value': ['parse', 'box'], 'probability': 0.028393547981977463}, {'value': ['create', 'row'], 'probability': 0.02637813240289688}, {'value': ['init'], 'probability': 0.0237655658274889}, {'value': ['create', 'attribute'], 'probability': 0.022243987768888474}, {'value': ['pt', 'seg', 'dist', 'sq'], 'probability': 0.013937413692474365}, {'value': ['add', 'node'], 'probability': 0.012352822348475456}]","[0.82512397, 0.30285057, 0.49919814, 0.6373321, 0.34665745, 0.8214657, -0.21313018, 0.8446564, -0.10653195, 0.48162022]",0.6714748595887043
1477,1477,"public Model createBox(float width, float height, float depth, int primitiveType, final Material material, final long attributes) {begin();part(""box"", primitiveType, attributes, material).box(width, height, depth);return end();}
","public Model [MASK](float width, float height, float depth, int primitiveType, final Material material, final long attributes) {begin();part(""box"", primitiveType, attributes, material).box(width, height, depth);return end();}
",createBox,"[{'value': ['part'], 'probability': 0.10113152861595154}, {'value': ['build'], 'probability': 0.03792992979288101}, {'value': ['start'], 'probability': 0.033973123878240585}, {'value': ['fill'], 'probability': 0.027343543246388435}, {'value': ['next'], 'probability': 0.02573484554886818}]","[0.6366745, 0.7655445, 0.5141554, 0.5780961, 0.541348]",0.140631082771124,"[{'value': ['add'], 'probability': 0.29069337248802185}, {'value': ['set', 'attribute'], 'probability': 0.14856937527656555}, {'value': ['box'], 'probability': 0.13343454897403717}, {'value': ['create', 'node'], 'probability': 0.12429855018854141}, {'value': ['create', 'layer'], 'probability': 0.09957188367843628}, {'value': ['element'], 'probability': 0.09305448830127716}, {'value': ['visit'], 'probability': 0.039898909628391266}, {'value': ['bind'], 'probability': 0.028738684952259064}, {'value': ['image'], 'probability': 0.02263934165239334}, {'value': ['put'], 'probability': 0.019100887700915337}]","[0.60979056, 0.6444885, 0.35708165, 0.7295665, 0.8008354, 0.49007797, 0.30576828, 0.3431789, 0.5490878, 0.67969376]",0.5841651311093717
1478,1478,"public Model createRect(float x00, float y00, float z00, float x10, float y10, float z10, float x11, float y11, float z11, float x01, float y01, float z01, float normalX, float normalY, float normalZ, final Material material, final long attributes) {return createRect(x00, y00, z00, x10, y10, z10, x11, y11, z11, x01, y01, z01, normalX, normalY, normalZ, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](float x00, float y00, float z00, float x10, float y10, float z10, float x11, float y11, float z11, float x01, float y01, float z01, float normalX, float normalY, float normalZ, final Material material, final long attributes) {return [MASK](x00, y00, z00, x10, y10, z10, x11, y11, z11, x01, y01, z01, normalX, normalY, normalZ, GL20.GL_TRIANGLES, material, attributes);}
",createRect,"[{'value': ['create'], 'probability': 0.1473449319601059}, {'value': ['model'], 'probability': 0.1469998061656952}, {'value': ['Model'], 'probability': 0.07991927862167358}, {'value': ['get'], 'probability': 0.04376731067895889}, {'value': ['##ize'], 'probability': 0.032553963363170624}]","[1.0, 0.47480458, 0.0, 0.62328804, 0.0]",0.244420754305314,"[{'value': ['get', 'normal'], 'probability': 0.5022386312484741}, {'value': ['create', 'ssl', 'context'], 'probability': 0.1947365552186966}, {'value': ['contains'], 'probability': 0.06508702039718628}, {'value': ['add'], 'probability': 0.06103616580367088}, {'value': ['normal'], 'probability': 0.059646036475896835}, {'value': ['get', 'material'], 'probability': 0.0422203354537487}, {'value': ['has'], 'probability': 0.02571170963346958}, {'value': ['add', 'material'], 'probability': 0.023410575464367867}, {'value': ['neq'], 'probability': 0.01315659936517477}, {'value': ['lte'], 'probability': 0.012756351381540298}]","[0.61298454, 0.77394927, 0.43218696, 0.60979056, 0.43814346, 0.6825439, 0.5593205, 0.6708965, 0.0, 0.041406587]",0.6094958799265969
1479,1479,"public Model createRect(float x00, float y00, float z00, float x10, float y10, float z10, float x11, float y11, float z11, float x01, float y01, float z01, float normalX, float normalY, float normalZ, int primitiveType, final Material material, final long attributes) {begin();part(""rect"", primitiveType, attributes, material).rect(x00, y00, z00, x10, y10, z10, x11, y11, z11, x01, y01, z01, normalX, normalY, normalZ);return end();}
","public Model [MASK](float x00, float y00, float z00, float x10, float y10, float z10, float x11, float y11, float z11, float x01, float y01, float z01, float normalX, float normalY, float normalZ, int primitiveType, final Material material, final long attributes) {begin();part(""rect"", primitiveType, attributes, material).rect(x00, y00, z00, x10, y10, z10, x11, y11, z11, x01, y01, z01, normalX, normalY, normalZ);return end();}
",createRect,"[{'value': ['part'], 'probability': 0.5901836156845093}, {'value': ['start'], 'probability': 0.02350546419620514}, {'value': ['version'], 'probability': 0.022273506969213486}, {'value': ['parts'], 'probability': 0.01958780363202095}, {'value': ['list'], 'probability': 0.013220399618148804}]","[0.6366745, 0.5141554, 0.45232987, 0.5209641, 0.41769812]",0.4136419840883742,"[{'value': ['vertex'], 'probability': 0.7230455279350281}, {'value': ['normal'], 'probability': 0.2583823502063751}, {'value': ['get', 'normal'], 'probability': 0.009579865261912346}, {'value': ['register', 'events'], 'probability': 0.00246913218870759}, {'value': ['button'], 'probability': 0.0016006875084713101}, {'value': ['add', 'range'], 'probability': 0.0012007750337943435}, {'value': ['lte'], 'probability': 0.0010889662662521005}, {'value': ['click'], 'probability': 0.0009709586156532168}, {'value': ['add', 'renderer'], 'probability': 0.000877787999343127}, {'value': ['set', 'block'], 'probability': 0.0007839386817067862}]","[0.052922223, 0.43814346, 0.61298454, 0.5459471, 0.23686294, 0.64474285, 0.041406587, 0.3433732, 0.50807303, 0.68578684]",0.16120945989960864
1480,1480,"public Model createCylinder(float width, float height, float depth, int divisions, final Material material, final long attributes) {return createCylinder(width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](float width, float height, float depth, int divisions, final Material material, final long attributes) {return [MASK](width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes);}
",createCylinder,"[{'value': ['model'], 'probability': 0.3015861213207245}, {'value': ['Model'], 'probability': 0.1628061980009079}, {'value': ['create'], 'probability': 0.06449075043201447}, {'value': ['##ize'], 'probability': 0.03955337777733803}, {'value': ['process'], 'probability': 0.02042345143854618}]","[0.47480458, 0.0, 1.0, 0.0, 0.5869638]",0.219673048272788,"[{'value': ['get', 'material'], 'probability': 0.42576783895492554}, {'value': ['set', 'attribute'], 'probability': 0.18313007056713104}, {'value': ['add'], 'probability': 0.08863381296396255}, {'value': ['put', 'attribute'], 'probability': 0.08614557981491089}, {'value': ['set', 'data'], 'probability': 0.08607815951108932}, {'value': ['search'], 'probability': 0.038231898099184036}, {'value': ['walk'], 'probability': 0.03137429058551788}, {'value': ['read', 'material'], 'probability': 0.029566913843154907}, {'value': ['set', 'material'], 'probability': 0.016648339107632637}, {'value': ['attributes'], 'probability': 0.014423114247620106}]","[0.6825439, 0.6444885, 0.60979056, 0.6234616, 0.66131574, 0.5154483, 0.40098894, 0.54907805, 0.69674635, 0.32922363]",0.6381817843400127
1481,1481,"public Model createCylinder(float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes) {return createCylinder(width, height, depth, divisions, primitiveType, material, attributes, 0, 360);}
","public Model [MASK](float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes) {return [MASK](width, height, depth, divisions, primitiveType, material, attributes, 0, 360);}
",createCylinder,"[{'value': ['model'], 'probability': 0.3046756684780121}, {'value': ['Model'], 'probability': 0.16774693131446838}, {'value': ['create'], 'probability': 0.05498199164867401}, {'value': ['##ize'], 'probability': 0.040236733853816986}, {'value': ['get'], 'probability': 0.023634258657693863}]","[0.47480458, 0.0, 1.0, 0.0, 0.62328804]",0.2143743451677955,"[{'value': ['get', 'material'], 'probability': 0.3447081446647644}, {'value': ['put', 'attribute'], 'probability': 0.18164202570915222}, {'value': ['read', 'material'], 'probability': 0.14394329488277435}, {'value': ['set', 'attribute'], 'probability': 0.11101425439119339}, {'value': ['heading'], 'probability': 0.04125409573316574}, {'value': ['begin', 'block'], 'probability': 0.03919650986790657}, {'value': ['attributes'], 'probability': 0.0386781319975853}, {'value': ['new', 'row'], 'probability': 0.037250109016895294}, {'value': ['set', 'data', 'world'], 'probability': 0.03529110923409462}, {'value': ['array'], 'probability': 0.027022220194339752}]","[0.6825439, 0.6234616, 0.54907805, 0.6444885, 0.28932342, 0.6454404, 0.32922363, 0.56492215, 0.6759793, 0.5084018]",0.6077149418219101
1482,1482,"public Model createCylinder(float width, float height, float depth, int divisions, final Material material, final long attributes, float angleFrom, float angleTo) {return createCylinder(width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes, angleFrom, angleTo);}
","public Model [MASK](float width, float height, float depth, int divisions, final Material material, final long attributes, float angleFrom, float angleTo) {return [MASK](width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes, angleFrom, angleTo);}
",createCylinder,"[{'value': ['model'], 'probability': 0.24632880091667175}, {'value': ['Model'], 'probability': 0.14424866437911987}, {'value': ['create'], 'probability': 0.07196187973022461}, {'value': ['##ize'], 'probability': 0.05310925096273422}, {'value': ['get'], 'probability': 0.023313336074352264}]","[0.47480458, 0.0, 1.0, 0.0, 0.62328804]",0.2034508460837356,"[{'value': ['go', 'to'], 'probability': 0.9930464625358582}, {'value': ['get', 'item'], 'probability': 0.001998612191528082}, {'value': ['init', 'text'], 'probability': 0.0014518098905682564}, {'value': ['get', 'matrix'], 'probability': 0.0007220732513815165}, {'value': ['get', 'activity'], 'probability': 0.0006984812207520008}, {'value': ['get', 'list'], 'probability': 0.0005114346859045327}, {'value': ['get', 'instruction'], 'probability': 0.00048415519995614886}, {'value': ['get', 'var'], 'probability': 0.00039934596861712635}, {'value': ['create', 'form'], 'probability': 0.00034452081308700144}, {'value': ['new', 'label'], 'probability': 0.00034315703669562936}]","[0.6737971, 0.55180347, 0.21973786, 0.56144875, 0.646469, 0.60808283, 0.585875, 0.43330836, 0.91285616, 0.60424113]",0.6726801755113332
1483,1483,"public Model createCylinder(float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes, float angleFrom, float angleTo) {begin();part(""cylinder"", primitiveType, attributes, material).cylinder(width, height, depth, divisions, angleFrom, angleTo);return end();}
","public Model [MASK](float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes, float angleFrom, float angleTo) {begin();part(""cylinder"", primitiveType, attributes, material).cylinder(width, height, depth, divisions, angleFrom, angleTo);return end();}
",createCylinder,"[{'value': ['cylinder'], 'probability': 0.577776312828064}, {'value': ['part'], 'probability': 0.02257240004837513}, {'value': ['version'], 'probability': 0.011615099385380745}, {'value': ['block'], 'probability': 0.011474169790744781}, {'value': ['body'], 'probability': 0.010732335038483143}]","[0.16432884, 0.6366745, 0.45232987, 0.5531495, 0.44517705]",0.1256951624517384,"[{'value': ['go', 'to'], 'probability': 0.8525308966636658}, {'value': ['lookup'], 'probability': 0.0440327450633049}, {'value': ['add', 'consumer'], 'probability': 0.019648034125566483}, {'value': ['init', 'text'], 'probability': 0.017616987228393555}, {'value': ['create', 'form'], 'probability': 0.01610519550740719}, {'value': ['get', 'rotation'], 'probability': 0.015197962522506714}, {'value': ['get', 'vertical'], 'probability': 0.009657999500632286}, {'value': ['set', 'server', 'url'], 'probability': 0.009096121415495872}, {'value': ['get', 'url'], 'probability': 0.008452343754470348}, {'value': ['name', 'matches'], 'probability': 0.007661754731088877}]","[0.6737971, -0.049512964, 0.64433694, 0.21973786, 0.91285616, 0.52776176, 0.6088217, 0.4809556, 0.5271891, 0.41397652]",0.6293889580112842
1484,1484,"public Model createCone(float width, float height, float depth, int divisions, final Material material, final long attributes) {return createCone(width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](float width, float height, float depth, int divisions, final Material material, final long attributes) {return [MASK](width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes);}
",createCone,"[{'value': ['model'], 'probability': 0.3015861213207245}, {'value': ['Model'], 'probability': 0.1628061980009079}, {'value': ['create'], 'probability': 0.06449075043201447}, {'value': ['##ize'], 'probability': 0.03955337777733803}, {'value': ['process'], 'probability': 0.02042345143854618}]","[0.47480458, 0.0, 1.0, 0.0, 0.5869638]",0.219673048272788,"[{'value': ['get', 'material'], 'probability': 0.42576783895492554}, {'value': ['set', 'attribute'], 'probability': 0.18313007056713104}, {'value': ['add'], 'probability': 0.08863381296396255}, {'value': ['put', 'attribute'], 'probability': 0.08614557981491089}, {'value': ['set', 'data'], 'probability': 0.08607815951108932}, {'value': ['search'], 'probability': 0.038231898099184036}, {'value': ['walk'], 'probability': 0.03137429058551788}, {'value': ['read', 'material'], 'probability': 0.029566913843154907}, {'value': ['set', 'material'], 'probability': 0.016648339107632637}, {'value': ['attributes'], 'probability': 0.014423114247620106}]","[0.6825439, 0.6444885, 0.60979056, 0.6234616, 0.66131574, 0.5154483, 0.40098894, 0.54907805, 0.69674635, 0.32922363]",0.6381817843400127
1485,1485,"public Model createCone(float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes) {return createCone(width, height, depth, divisions, primitiveType, material, attributes, 0, 360);}
","public Model [MASK](float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes) {return [MASK](width, height, depth, divisions, primitiveType, material, attributes, 0, 360);}
",createCone,"[{'value': ['model'], 'probability': 0.3046756684780121}, {'value': ['Model'], 'probability': 0.16774693131446838}, {'value': ['create'], 'probability': 0.05498199164867401}, {'value': ['##ize'], 'probability': 0.040236733853816986}, {'value': ['get'], 'probability': 0.023634258657693863}]","[0.47480458, 0.0, 1.0, 0.0, 0.62328804]",0.2143743451677955,"[{'value': ['get', 'material'], 'probability': 0.3447081446647644}, {'value': ['put', 'attribute'], 'probability': 0.18164202570915222}, {'value': ['read', 'material'], 'probability': 0.14394329488277435}, {'value': ['set', 'attribute'], 'probability': 0.11101425439119339}, {'value': ['heading'], 'probability': 0.04125409573316574}, {'value': ['begin', 'block'], 'probability': 0.03919650986790657}, {'value': ['attributes'], 'probability': 0.0386781319975853}, {'value': ['new', 'row'], 'probability': 0.037250109016895294}, {'value': ['set', 'data', 'world'], 'probability': 0.03529110923409462}, {'value': ['array'], 'probability': 0.027022220194339752}]","[0.6825439, 0.6234616, 0.54907805, 0.6444885, 0.28932342, 0.6454404, 0.32922363, 0.56492215, 0.6759793, 0.5084018]",0.6077149418219101
1486,1486,"public Model createCone(float width, float height, float depth, int divisions, final Material material, final long attributes, float angleFrom, float angleTo) {return createCone(width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes, angleFrom, angleTo);}
","public Model [MASK](float width, float height, float depth, int divisions, final Material material, final long attributes, float angleFrom, float angleTo) {return [MASK](width, height, depth, divisions, GL20.GL_TRIANGLES, material, attributes, angleFrom, angleTo);}
",createCone,"[{'value': ['model'], 'probability': 0.24632880091667175}, {'value': ['Model'], 'probability': 0.14424866437911987}, {'value': ['create'], 'probability': 0.07196187973022461}, {'value': ['##ize'], 'probability': 0.05310925096273422}, {'value': ['get'], 'probability': 0.023313336074352264}]","[0.47480458, 0.0, 1.0, 0.0, 0.62328804]",0.2034508460837356,"[{'value': ['go', 'to'], 'probability': 0.9930464625358582}, {'value': ['get', 'item'], 'probability': 0.001998612191528082}, {'value': ['init', 'text'], 'probability': 0.0014518098905682564}, {'value': ['get', 'matrix'], 'probability': 0.0007220732513815165}, {'value': ['get', 'activity'], 'probability': 0.0006984812207520008}, {'value': ['get', 'list'], 'probability': 0.0005114346859045327}, {'value': ['get', 'instruction'], 'probability': 0.00048415519995614886}, {'value': ['get', 'var'], 'probability': 0.00039934596861712635}, {'value': ['create', 'form'], 'probability': 0.00034452081308700144}, {'value': ['new', 'label'], 'probability': 0.00034315703669562936}]","[0.6737971, 0.55180347, 0.21973786, 0.56144875, 0.646469, 0.60808283, 0.585875, 0.43330836, 0.91285616, 0.60424113]",0.6726801755113332
1487,1487,"public Model createCone(float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes, float angleFrom, float angleTo) {begin();part(""cone"", primitiveType, attributes, material).cone(width, height, depth, divisions, angleFrom, angleTo);return end();}
","public Model [MASK](float width, float height, float depth, int divisions, int primitiveType, final Material material, final long attributes, float angleFrom, float angleTo) {begin();part(""cone"", primitiveType, attributes, material).cone(width, height, depth, divisions, angleFrom, angleTo);return end();}
",createCone,"[{'value': ['part'], 'probability': 0.08141539990901947}, {'value': ['cone'], 'probability': 0.04378295689821243}, {'value': ['fill'], 'probability': 0.04069748893380165}, {'value': ['strip'], 'probability': 0.04057326912879944}, {'value': ['component'], 'probability': 0.02844824828207493}]","[0.6366745, 0.12799597, 0.5780961, 0.39031067, 0.4563621]",0.1097850945116369,"[{'value': ['go', 'to'], 'probability': 0.8940997123718262}, {'value': ['build'], 'probability': 0.020136859267950058}, {'value': ['create', 'configuration'], 'probability': 0.016368186101317406}, {'value': ['delete', 'dir'], 'probability': 0.013584683649241924}, {'value': ['get', 'path'], 'probability': 0.012677154503762722}, {'value': ['define', 'name'], 'probability': 0.011020049452781677}, {'value': ['is', 'overridden'], 'probability': 0.008405747823417187}, {'value': ['lookup'], 'probability': 0.008211757056415081}, {'value': ['get', 'pattern'], 'probability': 0.007960238493978977}, {'value': ['get', 'match'], 'probability': 0.007535632234066725}]","[0.6737971, 0.7655445, 0.80023164, 0.13818619, 0.6191331, 0.59548604, 0.44092298, -0.049512964, 0.6755344, 0.52732295]",0.6598949685292738
1488,1488,"public Model createSphere(float width, float height, float depth, int divisionsU, int divisionsV, final Material material, final long attributes) {return createSphere(width, height, depth, divisionsU, divisionsV, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](float width, float height, float depth, int divisionsU, int divisionsV, final Material material, final long attributes) {return [MASK](width, height, depth, divisionsU, divisionsV, GL20.GL_TRIANGLES, material, attributes);}
",createSphere,"[{'value': ['model'], 'probability': 0.24117031693458557}, {'value': ['Model'], 'probability': 0.12710589170455933}, {'value': ['create'], 'probability': 0.0727234035730362}, {'value': ['##ize'], 'probability': 0.0621989369392395}, {'value': ['get'], 'probability': 0.02114533819258213}]","[0.47480458, 0.0, 1.0, 0.0, 0.62328804]",0.2004118109644401,"[{'value': ['get', 'material'], 'probability': 0.281020849943161}, {'value': ['create', 'default'], 'probability': 0.16004863381385803}, {'value': ['add', 'material'], 'probability': 0.11386528611183167}, {'value': ['search'], 'probability': 0.09438089281320572}, {'value': ['create', 'value'], 'probability': 0.07824749499559402}, {'value': ['get', 'light', 'material'], 'probability': 0.07462897151708603}, {'value': ['all'], 'probability': 0.06268276274204254}, {'value': ['transform'], 'probability': 0.05143173038959503}, {'value': ['detect'], 'probability': 0.04288434982299805}, {'value': ['read', 'material'], 'probability': 0.04080907255411148}]","[0.6825439, 0.81942433, 0.6708965, 0.5154483, 0.84260553, 0.669321, 0.5903196, 0.6399563, 0.44426742, 0.54907805]",0.6752560226916149
1489,1489,"public Model createSphere(float width, float height, float depth, int divisionsU, int divisionsV, int primitiveType, final Material material, final long attributes) {return createSphere(width, height, depth, divisionsU, divisionsV, primitiveType, material, attributes, 0, 360, 0, 180);}
","public Model [MASK](float width, float height, float depth, int divisionsU, int divisionsV, int primitiveType, final Material material, final long attributes) {return [MASK](width, height, depth, divisionsU, divisionsV, primitiveType, material, attributes, 0, 360, 0, 180);}
",createSphere,"[{'value': ['model'], 'probability': 0.1973108947277069}, {'value': ['Model'], 'probability': 0.08867093175649643}, {'value': ['##ize'], 'probability': 0.07026024162769318}, {'value': ['create'], 'probability': 0.05940108746290207}, {'value': ['get'], 'probability': 0.03457061946392059}]","[0.47480458, 0.0, 0.0, 1.0, 0.62328804]",0.1746326574932517,"[{'value': ['get', 'material'], 'probability': 0.3479370176792145}, {'value': ['get'], 'probability': 0.2725992798805237}, {'value': ['transform'], 'probability': 0.19095143675804138}, {'value': ['read', 'material'], 'probability': 0.04922199621796608}, {'value': ['parse'], 'probability': 0.0403127558529377}, {'value': ['create', 'default'], 'probability': 0.02644730918109417}, {'value': ['add', 'material'], 'probability': 0.02343457005918026}, {'value': ['set', 'material'], 'probability': 0.01849844679236412}, {'value': ['search'], 'probability': 0.01656261831521988}, {'value': ['add'], 'probability': 0.01403447799384594}]","[0.6825439, 0.62328804, 0.6399563, 0.54907805, 0.11092512, 0.81942433, 0.6708965, 0.69674635, 0.5154483, 0.60979056]",0.6284668803619118
1490,1490,"public Model createSphere(float width, float height, float depth, int divisionsU, int divisionsV, final Material material, final long attributes, float angleUFrom, float angleUTo, float angleVFrom, float angleVTo) {return createSphere(width, height, depth, divisionsU, divisionsV, GL20.GL_TRIANGLES, material, attributes, angleUFrom, angleUTo, angleVFrom, angleVTo);}
","public Model [MASK](float width, float height, float depth, int divisionsU, int divisionsV, final Material material, final long attributes, float angleUFrom, float angleUTo, float angleVFrom, float angleVTo) {return [MASK](width, height, depth, divisionsU, divisionsV, GL20.GL_TRIANGLES, material, attributes, angleUFrom, angleUTo, angleVFrom, angleVTo);}
",createSphere,"[{'value': ['model'], 'probability': 0.12879040837287903}, {'value': ['create'], 'probability': 0.09861677885055542}, {'value': ['##ize'], 'probability': 0.09162355959415436}, {'value': ['Model'], 'probability': 0.08032679557800293}, {'value': ['build'], 'probability': 0.03575725480914116}]","[0.47480458, 1.0, 0.0, 0.0, 0.7655445]",0.1871408234623401,"[{'value': ['print', 'diff'], 'probability': 0.21421502530574799}, {'value': ['create', 'entity', 'path', 'to'], 'probability': 0.17668485641479492}, {'value': ['create', 'default'], 'probability': 0.11753394454717636}, {'value': ['r', 'cubic', 'to'], 'probability': 0.10414747893810272}, {'value': ['pre', 'scale'], 'probability': 0.08409333974123001}, {'value': ['canvas', 'to', 'image'], 'probability': 0.07742957770824432}, {'value': ['create', 'anonymous'], 'probability': 0.06221017986536026}, {'value': ['parse'], 'probability': 0.060688696801662445}, {'value': ['add', 'datasource'], 'probability': 0.05336715653538704}, {'value': ['constrain'], 'probability': 0.04962969943881035}]","[0.33310372, 0.8541029, 0.81942433, 0.5602777, 0.5380316, 0.69924057, 0.8023235, 0.11092512, 0.60979056, 0.18467832]",0.5746642379685134
1491,1491,"public Model createSphere(float width, float height, float depth, int divisionsU, int divisionsV, int primitiveType, final Material material, final long attributes, float angleUFrom, float angleUTo, float angleVFrom, float angleVTo) {begin();part(""cylinder"", primitiveType, attributes, material).sphere(width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom, angleVTo);return end();}
","public Model [MASK](float width, float height, float depth, int divisionsU, int divisionsV, int primitiveType, final Material material, final long attributes, float angleUFrom, float angleUTo, float angleVFrom, float angleVTo) {begin();part(""cylinder"", primitiveType, attributes, material).sphere(width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom, angleVTo);return end();}
",createSphere,"[{'value': ['part'], 'probability': 0.1739232838153839}, {'value': ['parts'], 'probability': 0.031895317137241364}, {'value': ['version'], 'probability': 0.02512665092945099}, {'value': ['strip'], 'probability': 0.02054733969271183}, {'value': ['fill'], 'probability': 0.019371381029486656}]","[0.6366745, 0.5209641, 0.45232987, 0.39031067, 0.5780961]",0.157932739102917,"[{'value': ['create', 'node'], 'probability': 0.48674464225769043}, {'value': ['sphere'], 'probability': 0.29839321970939636}, {'value': ['cubic', 'to'], 'probability': 0.06184599548578262}, {'value': ['visit'], 'probability': 0.034896932542324066}, {'value': ['create', 'entry'], 'probability': 0.026594914495944977}, {'value': ['render'], 'probability': 0.023033328354358673}, {'value': ['get', 'sphere'], 'probability': 0.01912456937134266}, {'value': ['quicksort'], 'probability': 0.016992297023534775}, {'value': ['generate'], 'probability': 0.016655977815389633}, {'value': ['create', 'attribute'], 'probability': 0.01571807824075222}]","[0.7295665, 0.2782228, 0.5700405, 0.30576828, 0.8503544, 0.4158669, 0.62673694, -0.0691347, 0.74677837, 0.8446564]",0.5527773968584393
1492,1492,"public Model createCapsule(float radius, float height, int divisions, final Material material, final long attributes) {return createCapsule(radius, height, divisions, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](float radius, float height, int divisions, final Material material, final long attributes) {return [MASK](radius, height, divisions, GL20.GL_TRIANGLES, material, attributes);}
",createCapsule,"[{'value': ['model'], 'probability': 0.35249337553977966}, {'value': ['Model'], 'probability': 0.17405860126018524}, {'value': ['create'], 'probability': 0.06826458871364594}, {'value': ['process'], 'probability': 0.020211946219205856}, {'value': ['transform'], 'probability': 0.017946096137166023}]","[0.47480458, 0.0, 1.0, 0.5869638, 0.6399563]",0.2589784553245727,"[{'value': ['get', 'geometry', 'type'], 'probability': 0.31452590227127075}, {'value': ['set', 'data'], 'probability': 0.2067078948020935}, {'value': ['get', 'material'], 'probability': 0.12187372148036957}, {'value': ['walk'], 'probability': 0.07575636357069016}, {'value': ['contains'], 'probability': 0.058020975440740585}, {'value': ['all'], 'probability': 0.04949165880680084}, {'value': ['put', 'attribute'], 'probability': 0.04833569377660751}, {'value': ['chunk'], 'probability': 0.044374871999025345}, {'value': ['create', 'attribute'], 'probability': 0.04061874374747276}, {'value': ['get', 'batch'], 'probability': 0.040294189006090164}]","[0.56653917, 0.66131574, 0.6825439, 0.40098894, 0.43218696, 0.5903196, 0.6234616, 0.22571875, 0.8446564, 0.55084026]",0.5794000953794523
1493,1493,"public Model createCapsule(float radius, float height, int divisions, int primitiveType, final Material material, final long attributes) {begin();part(""capsule"", primitiveType, attributes, material).capsule(radius, height, divisions);return end();}
","public Model [MASK](float radius, float height, int divisions, int primitiveType, final Material material, final long attributes) {begin();part(""capsule"", primitiveType, attributes, material).capsule(radius, height, divisions);return end();}
",createCapsule,"[{'value': ['part'], 'probability': 0.12556757032871246}, {'value': ['version'], 'probability': 0.03502432629466057}, {'value': ['fill'], 'probability': 0.021779384464025497}, {'value': ['clone'], 'probability': 0.020967302843928337}, {'value': ['build'], 'probability': 0.017475735396146774}]","[0.6366745, 0.45232987, 0.5780961, 0.30877078, 0.7655445]",0.1282313421574057,"[{'value': ['publish'], 'probability': 0.22843727469444275}, {'value': ['execute', 'action'], 'probability': 0.13937322795391083}, {'value': ['put', 'attribute'], 'probability': 0.12806034088134766}, {'value': ['enqueue'], 'probability': 0.11112670600414276}, {'value': ['execute'], 'probability': 0.08071620017290115}, {'value': ['create', 'statement'], 'probability': 0.07975012063980103}, {'value': ['walk'], 'probability': 0.07048307359218597}, {'value': ['start', 'element'], 'probability': 0.06805865466594696}, {'value': ['update', 'step'], 'probability': 0.04724961891770363}, {'value': ['test', 'commit'], 'probability': 0.04674477130174637}]","[0.46299455, 0.5687211, 0.6234616, 0.0, 0.33698797, 0.80623, 0.40098894, 0.61990845, 0.5838854, 0.51856905]",0.47864956431986555
1494,1494,"public static void rebuildReferences(final Model model) {model.materials.clear();model.meshes.clear();model.meshParts.clear();for (final Node node : model.nodes) rebuildReferences(model, node);}
","public static void [MASK](final Model model) {model.materials.clear();model.meshes.clear();model.meshParts.clear();for (final Node node : model.nodes) [MASK](model, node);}
",rebuildReferences,"[{'value': ['clear'], 'probability': 0.5828513503074646}, {'value': ['run'], 'probability': 0.02199934795498848}, {'value': ['execute'], 'probability': 0.020993726328015327}, {'value': ['clean'], 'probability': 0.01902855560183525}, {'value': ['update'], 'probability': 0.012844067998230457}]","[0.26213238, 0.3459376, 0.24696204, 0.44520417, 0.30341947]",0.1779479974942785,"[{'value': ['clear', 'nodes'], 'probability': 0.26250413060188293}, {'value': ['visit'], 'probability': 0.2239365428686142}, {'value': ['update', 'model'], 'probability': 0.18075865507125854}, {'value': ['refresh'], 'probability': 0.07701189815998077}, {'value': ['reconnect'], 'probability': 0.06368869543075562}, {'value': ['new', 'model'], 'probability': 0.04329734668135643}, {'value': ['clear', 'model'], 'probability': 0.04017607867717743}, {'value': ['reset', 'list'], 'probability': 0.038407307118177414}, {'value': ['update'], 'probability': 0.03559926152229309}, {'value': ['set', 'model'], 'probability': 0.034620072692632675}]","[0.19907327, 0.28777683, 0.26254624, 0.16478805, 0.42044693, 0.2910495, 0.23541056, 0.2633735, 0.30341947, 0.26553327]",0.2557964676832979
1495,1495,"private static void rebuildReferences(final Model model, final Node node) {for (final NodePart mpm : node.parts) {if (!model.materials.contains(mpm.material, true))model.materials.add(mpm.material);if (!model.meshParts.contains(mpm.meshPart, true)) {model.meshParts.add(mpm.meshPart);if (!model.meshes.contains(mpm.meshPart.mesh, true))model.meshes.add(mpm.meshPart.mesh);model.manageDisposable(mpm.meshPart.mesh);}}for (final Node child : node.getChildren()) rebuildReferences(model, child);}
","private static void [MASK](final Model model, final Node node) {for (final NodePart mpm : node.parts) {if (!model.materials.contains(mpm.material, true))model.materials.add(mpm.material);if (!model.meshParts.contains(mpm.meshPart, true)) {model.meshParts.add(mpm.meshPart);if (!model.meshes.contains(mpm.meshPart.mesh, true))model.meshes.add(mpm.meshPart.mesh);model.manageDisposable(mpm.meshPart.mesh);}}for (final Node child : node.getChildren()) [MASK](model, child);}
",rebuildReferences,"[{'value': ['add'], 'probability': 0.32918745279312134}, {'value': ['apply'], 'probability': 0.1397787630558014}, {'value': ['setup'], 'probability': 0.038987599313259125}, {'value': ['update'], 'probability': 0.03803686425089836}, {'value': ['execute'], 'probability': 0.020062224939465523}]","[0.32786044, 0.20946427, 0.10175304, 0.30341947, 0.24696204]",0.1576690408511499,"[{'value': ['configure', 'cluster'], 'probability': 0.39135587215423584}, {'value': ['is', 'in', 'view'], 'probability': 0.26228150725364685}, {'value': ['create', 'bind'], 'probability': 0.08972961455583572}, {'value': ['do', 'refresh', 'visuals'], 'probability': 0.06205959618091583}, {'value': ['check', 'method'], 'probability': 0.05717458948493004}, {'value': ['mark', 'used'], 'probability': 0.031037239357829094}, {'value': ['element', 'decl'], 'probability': 0.02964518778026104}, {'value': ['test', 'ticket'], 'probability': 0.026097644120454788}, {'value': ['recover', 'services'], 'probability': 0.025460194796323776}, {'value': ['add', 'collection'], 'probability': 0.025158630684018135}]","[0.25100878, 0.28287292, 0.41460943, 0.28839064, 0.17788193, 0.25449768, 0.17328943, 0.15471521, 0.5682409, 0.34902444]",0.2780188797488713
1496,1496,"public Model createXYZCoordinates(float axisLength, Material material, long attributes) {return createXYZCoordinates(axisLength, 0.1f, 0.1f, 5, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](float axisLength, Material material, long attributes) {return [MASK](axisLength, 0.1f, 0.1f, 5, GL20.GL_TRIANGLES, material, attributes);}
",createXYZCoordinates,"[{'value': ['model'], 'probability': 0.274000883102417}, {'value': ['Model'], 'probability': 0.06801675260066986}, {'value': ['create'], 'probability': 0.057453423738479614}, {'value': ['get'], 'probability': 0.0484287403523922}, {'value': ['process'], 'probability': 0.04044362157583237}]","[0.47480458, 0.0, 1.0, 0.62328804, 0.5869638]",0.2414742931531139,"[{'value': ['detect'], 'probability': 0.21731887757778168}, {'value': ['get', 'material'], 'probability': 0.13184940814971924}, {'value': ['create', 'attribute'], 'probability': 0.12031272053718567}, {'value': ['get', 'light', 'material'], 'probability': 0.11073436588048935}, {'value': ['create', 'module'], 'probability': 0.08337745815515518}, {'value': ['read', 'material'], 'probability': 0.08050497621297836}, {'value': ['includes'], 'probability': 0.06811127066612244}, {'value': ['contains'], 'probability': 0.06524554640054703}, {'value': ['create', 'button'], 'probability': 0.06219269707798958}, {'value': ['assert', 'not', 'exists'], 'probability': 0.060352738946676254}]","[0.44426742, 0.6825439, 0.8446564, 0.669321, 0.7735728, 0.54907805, 0.538681, 0.43218696, 0.7649849, 0.66721356]",0.6237156630442906
1497,1497,"public Model createArrow(float x1, float y1, float z1, float x2, float y2, float z2, float capLength, float stemThickness, int divisions, int primitiveType, Material material, long attributes) {begin();part(""arrow"", primitiveType, attributes, material).arrow(x1, y1, z1, x2, y2, z2, capLength, stemThickness, divisions);return end();}
","public Model [MASK](float x1, float y1, float z1, float x2, float y2, float z2, float capLength, float stemThickness, int divisions, int primitiveType, Material material, long attributes) {begin();part(""arrow"", primitiveType, attributes, material).arrow(x1, y1, z1, x2, y2, z2, capLength, stemThickness, divisions);return end();}
",createArrow,"[{'value': ['part'], 'probability': 0.4217853248119354}, {'value': ['start'], 'probability': 0.04317936301231384}, {'value': ['end'], 'probability': 0.03815929591655731}, {'value': ['arrow'], 'probability': 0.015113486908376217}, {'value': ['parts'], 'probability': 0.01327667199075222}]","[0.6366745, 0.5141554, 0.550975, 0.2116016, 0.5209641]",0.3218803990819632,"[{'value': ['draw', 'icon'], 'probability': 0.23341786861419678}, {'value': ['ends', 'with', 'ignore', 'case'], 'probability': 0.18739919364452362}, {'value': ['set', 'new', 'name'], 'probability': 0.0967121571302414}, {'value': ['find', 'text'], 'probability': 0.089680977165699}, {'value': ['shape'], 'probability': 0.07419600337743759}, {'value': ['bind'], 'probability': 0.07073278725147247}, {'value': ['assert', 'match'], 'probability': 0.06589808315038681}, {'value': ['set', 'colors'], 'probability': 0.06475546211004257}, {'value': ['set', 'feature'], 'probability': 0.059477098286151886}, {'value': ['replace', 'string'], 'probability': 0.05773036181926727}]","[0.524541, 0.6320475, 0.68735856, 0.64851373, 0.5281682, 0.3431789, 0.46415803, 0.6439213, 0.6845873, 0.5494415]",0.5737009463319861
1498,1498,"public Model createArrow(Vector3 from, Vector3 to, Material material, long attributes) {return createArrow(from.x, from.y, from.z, to.x, to.y, to.z, 0.1f, 0.1f, 5, GL20.GL_TRIANGLES, material, attributes);}
","public Model [MASK](Vector3 from, Vector3 to, Material material, long attributes) {return [MASK](from.x, from.y, from.z, to.x, to.y, to.z, 0.1f, 0.1f, 5, GL20.GL_TRIANGLES, material, attributes);}
",createArrow,"[{'value': ['create'], 'probability': 0.18445348739624023}, {'value': ['model'], 'probability': 0.11381257325410843}, {'value': ['execute'], 'probability': 0.06850125640630722}, {'value': ['process'], 'probability': 0.06000516191124916}, {'value': ['build'], 'probability': 0.03166331723332405}]","[1.0, 0.47480458, 0.33698797, 0.5869638, 0.7655445]",0.321036851718316,"[{'value': ['create', 'arrow'], 'probability': 0.4616619050502777}, {'value': ['create', 'leaf'], 'probability': 0.17485983669757843}, {'value': ['set', 'material'], 'probability': 0.12982489168643951}, {'value': ['load', 'layout'], 'probability': 0.054408349096775055}, {'value': ['build', 'content', 'panel'], 'probability': 0.04633678123354912}, {'value': ['get', 'admin', 'address'], 'probability': 0.04339483380317688}, {'value': ['with', 'prefix'], 'probability': 0.03053702972829342}, {'value': ['add', 'object'], 'probability': 0.028200794011354446}, {'value': ['to', 'url'], 'probability': 0.015538915991783142}, {'value': ['begin', 'block'], 'probability': 0.015236681327223778}]","[0.8183086, 0.7550767, 0.69674635, 0.3811275, 0.7566381, 0.5789975, 0.42691013, 0.6577157, 0.601943, 0.6454404]",0.7319642912450597
1499,1499,"public String name() {return file.getName();}
","public String [MASK]() {return file.getName();}
",name,"[{'value': ['file'], 'probability': 0.6341786980628967}, {'value': ['name'], 'probability': 0.22961334884166718}, {'value': ['format'], 'probability': 0.025425661355257034}, {'value': ['get'], 'probability': 0.015578514896333218}, {'value': ['title'], 'probability': 0.012944327667355537}]","[0.43682152, 1.0, 0.39127535, 0.47842693, 0.6054954]",0.5318755982193034,"[{'value': ['get', 'name'], 'probability': 0.5076982975006104}, {'value': ['get', 'file', 'name'], 'probability': 0.3797432780265808}, {'value': ['get', 'filename'], 'probability': 0.05020991340279579}, {'value': ['to', 'string'], 'probability': 0.036107152700424194}, {'value': ['name'], 'probability': 0.005343402735888958}, {'value': ['get', 'tool', 'tip', 'text'], 'probability': 0.00497500691562891}, {'value': ['get', 'display', 'name'], 'probability': 0.004515165463089943}, {'value': ['get', 'key'], 'probability': 0.004366747569292784}, {'value': ['get', 'identifier'], 'probability': 0.0038070562295615673}, {'value': ['get', 'title'], 'probability': 0.0032339629251509905}]","[0.8538687, 0.8000159, 0.4335946, 0.5379298, 1.0, 0.5941732, 0.7976187, 0.5179672, 0.47962, 0.643206]",0.7965708819666286
1500,1500,"public String extension() {String name = file.getName();int dotIndex = name.lastIndexOf('.');if (dotIndex == -1)return """";return name.substring(dotIndex + 1);}
","public String [MASK]() {String name = file.getName();int dotIndex = name.lastIndexOf('.');if (dotIndex == -1)return """";return name.substring(dotIndex + 1);}
",extension,"[{'value': ['name'], 'probability': 0.5229288935661316}, {'value': ['file'], 'probability': 0.3040076196193695}, {'value': ['list'], 'probability': 0.018994860351085663}, {'value': ['format'], 'probability': 0.015176335349678993}, {'value': ['get'], 'probability': 0.014842063188552856}]","[0.39660197, 0.41137943, 0.35830536, 0.3952226, 0.40012255]",0.3511997475959775,"[{'value': ['get', 'file', 'extension'], 'probability': 0.9596997499465942}, {'value': ['get', 'extension'], 'probability': 0.015573200769722462}, {'value': ['get', 'short', 'class', 'name'], 'probability': 0.006712017580866814}, {'value': ['get', 'base', 'name'], 'probability': 0.005967026110738516}, {'value': ['get', 'ext'], 'probability': 0.004405611660331488}, {'value': ['file', 'extension'], 'probability': 0.00267438474111259}, {'value': ['extension'], 'probability': 0.0014607995981350541}, {'value': ['get', 'filename'], 'probability': 0.0014389888383448124}, {'value': ['get', 'simple', 'name'], 'probability': 0.0011023706756532192}, {'value': ['get', 'file', 'ext'], 'probability': 0.0009657717309892178}]","[0.7536286, 0.811848, 0.5169371, 0.50770426, 0.4008223, 0.8219462, 0.99999994, 0.6136433, 0.48746705, 0.49216664]",0.7497200095033787
1501,1501,"public String nameWithoutExtension() {String name = file.getName();int dotIndex = name.lastIndexOf('.');if (dotIndex == -1)return name;return name.substring(0, dotIndex);}
","public String [MASK]() {String name = file.getName();int dotIndex = name.lastIndexOf('.');if (dotIndex == -1)return name;return name.substring(0, dotIndex);}
",nameWithoutExtension,"[{'value': ['name'], 'probability': 0.5613270401954651}, {'value': ['file'], 'probability': 0.24575237929821014}, {'value': ['list'], 'probability': 0.019260400906205177}, {'value': ['get'], 'probability': 0.018336351960897446}, {'value': ['format'], 'probability': 0.017995882779359818}]","[1.0, 0.43682152, 0.6043024, 0.47842693, 0.39127535]",0.6961300246614408,"[{'value': ['get', 'name', 'without', 'extension'], 'probability': 0.5470868349075317}, {'value': ['get', 'top', 'level', 'type', 'name'], 'probability': 0.17564262449741364}, {'value': ['get', 'file', 'extension'], 'probability': 0.12362930178642273}, {'value': ['get', 'base', 'name'], 'probability': 0.09099558740854263}, {'value': ['get', 'file', 'base', 'name'], 'probability': 0.021279439330101013}, {'value': ['get', 'short', 'class', 'name'], 'probability': 0.010370711795985699}, {'value': ['get', 'base', 'file', 'name'], 'probability': 0.008578342385590076}, {'value': ['get', 'filename'], 'probability': 0.008447489701211452}, {'value': ['strip', 'extension'], 'probability': 0.007954450324177742}, {'value': ['get', 'package', 'name'], 'probability': 0.0060152411460876465}]","[0.76652956, 0.7255245, 0.5622743, 0.7715695, 0.7530204, 0.76961017, 0.7530204, 0.4335946, 0.44225764, 0.74617445]",0.7286483027597621
1502,1502,"public FileType type() {return type;}
","public FileType [MASK]() {return [MASK];}
",type,"[{'value': ['get'], 'probability': 0.14254893362522125}, {'value': ['type'], 'probability': 0.11530650407075882}, {'value': ['name'], 'probability': 0.046842604875564575}, {'value': ['resolve'], 'probability': 0.039725467562675476}, {'value': ['create'], 'probability': 0.030556125566363335}]","[0.4339052, 1.0, 0.55197513, 0.17348358, 0.44387552]",0.2234700151075195,"[{'value': ['get', 'type'], 'probability': 0.5804665684700012}, {'value': ['get', 'file', 'type'], 'probability': 0.38264623284339905}, {'value': ['type'], 'probability': 0.02036474458873272}, {'value': ['get', 'content', 'type'], 'probability': 0.013356136158108711}, {'value': ['get', 'descriptor', 'for', 'type'], 'probability': 0.0007752784295007586}, {'value': ['get', 'value', 'type'], 'probability': 0.0006775622023269534}, {'value': ['get', 'filetype'], 'probability': 0.0005189375369809568}, {'value': ['get', 'node', 'type'], 'probability': 0.00040844641625881195}, {'value': ['result', 'type'], 'probability': 0.00040172075387090445}, {'value': ['get', 'supported', 'types'], 'probability': 0.0003843477461487055}]","[0.8390036, 0.78532577, 1.0, 0.77967215, 0.778862, 0.788276, 0.4339052, 0.8055384, 0.8919238, 0.6858216]",0.8206076682408582
1503,1503,"public File file() {return file;}
","public File [MASK]() {return [MASK];}
",file,"[{'value': ['file'], 'probability': 0.20822329819202423}, {'value': ['get'], 'probability': 0.12481720745563507}, {'value': ['create'], 'probability': 0.0645470917224884}, {'value': ['open'], 'probability': 0.05325940251350403}, {'value': ['list'], 'probability': 0.03377273306250572}]","[1.0, 0.42834386, 0.41592604, 0.36890668, 0.5099259]",0.3254041396718545,"[{'value': ['get', 'file'], 'probability': 0.9012850522994995}, {'value': ['get', 'read', 'file'], 'probability': 0.08217974752187729}, {'value': ['file'], 'probability': 0.012179659679532051}, {'value': ['get', 'source', 'file'], 'probability': 0.0009147428791038692}, {'value': ['get', 'input', 'file'], 'probability': 0.0007717179250903428}, {'value': ['get', 'selected', 'file'], 'probability': 0.0006822276627644897}, {'value': ['get', 'local', 'file'], 'probability': 0.0006327296141535044}, {'value': ['as', 'file'], 'probability': 0.0005669561214745045}, {'value': ['get', 'output', 'file'], 'probability': 0.0004272990336176008}, {'value': ['get', 'jar'], 'probability': 0.0003598119074013084}]","[0.83937496, 0.78426975, 1.0, 0.7886994, 0.7993147, 0.77356756, 0.7539285, 0.81911075, 0.72568864, 0.43738577]",0.8364218016817346
1504,1504,"public Reader reader() {return new InputStreamReader(read());}
","public Reader [MASK]() {return new InputStreamReader(read());}
",reader,"[{'value': ['read'], 'probability': 0.9579318165779114}, {'value': ['write'], 'probability': 0.010635127313435078}, {'value': ['reader'], 'probability': 0.007581782061606646}, {'value': ['get'], 'probability': 0.0034582996740937233}, {'value': ['stream'], 'probability': 0.0008903095149435103}]","[0.6417301, 0.56378824, 1.0, 0.41175136, 0.34291154]",0.6300407076361427,"[{'value': ['read'], 'probability': 0.5152106881141663}, {'value': ['get', 'reader'], 'probability': 0.31313905119895935}, {'value': ['reader'], 'probability': 0.07918316125869751}, {'value': ['get', 'character', 'stream'], 'probability': 0.03378394618630409}, {'value': ['as', 'reader'], 'probability': 0.022671129554510117}, {'value': ['get', 'reader', 'for', 'text'], 'probability': 0.022241663187742233}, {'value': ['get', 'data', 'stream'], 'probability': 0.005516008473932743}, {'value': ['get', 'iterator'], 'probability': 0.005410051438957453}, {'value': ['get', 'delegate'], 'probability': 0.0014969524927437305}, {'value': ['open', 'reader'], 'probability': 0.0013473581057041883}]","[0.6417301, 0.81676847, 1.0, 0.56353766, 0.8075334, 0.723134, 0.5076881, 0.4025294, 0.3298782, 0.776591]",0.7255196693801567
1505,1505,"public Reader reader(String charset) {try {return new InputStreamReader(read(), charset);} catch (UnsupportedEncodingException ex) {throw new RuntimeException(""Error reading file: "" + this, ex);}}
","public Reader [MASK](String charset) {try {return new InputStreamReader(read(), charset);} catch (UnsupportedEncodingException ex) {throw new RuntimeException(""Error reading file: "" + this, ex);}}
",reader,"[{'value': ['read'], 'probability': 0.9237431883811951}, {'value': ['write'], 'probability': 0.04795624315738678}, {'value': ['load'], 'probability': 0.0029958446975797415}, {'value': ['get'], 'probability': 0.0014916337095201015}, {'value': ['accept'], 'probability': 0.0012431939831003547}]","[0.6417301, 0.56378824, 0.25427768, 0.41175136, 0.28222954]",0.621557826508468,"[{'value': ['read'], 'probability': 0.9523651003837585}, {'value': ['read', 'string'], 'probability': 0.017086051404476166}, {'value': ['reader'], 'probability': 0.010348941199481487}, {'value': ['get', 'contents'], 'probability': 0.007307476829737425}, {'value': ['read', 'file'], 'probability': 0.0028863854240626097}, {'value': ['get', 'reader'], 'probability': 0.0024202270433306694}, {'value': ['decode'], 'probability': 0.002407531253993511}, {'value': ['do', 'read'], 'probability': 0.0021141688339412212}, {'value': ['read', 'first', 'line'], 'probability': 0.0015345668653026223}, {'value': ['read', 'from'], 'probability': 0.0015295494813472033}]","[0.6417301, 0.47249037, 1.0, 0.47952777, 0.6396428, 0.81676847, 0.17141311, 0.5422174, 0.5336189, 0.535684]",0.640107696532427
1506,1506,"public BufferedReader reader(int bufferSize) {return new BufferedReader(new InputStreamReader(read()), bufferSize);}
","public BufferedReader [MASK](int bufferSize) {return new BufferedReader(new InputStreamReader(read()), bufferSize);}
",reader,"[{'value': ['read'], 'probability': 0.8198707699775696}, {'value': ['write'], 'probability': 0.07211007177829742}, {'value': ['get'], 'probability': 0.0076315985061228275}, {'value': ['load'], 'probability': 0.006329865660518408}, {'value': ['run'], 'probability': 0.004632388707250357}]","[0.6417301, 0.56378824, 0.41175136, 0.25427768, 0.18598863]",0.572404021922429,"[{'value': ['reader'], 'probability': 0.542687177658081}, {'value': ['create', 'buffered', 'reader'], 'probability': 0.2262955904006958}, {'value': ['buffer', 'size'], 'probability': 0.050202399492263794}, {'value': ['get', 'reader'], 'probability': 0.046542853116989136}, {'value': ['buffer'], 'probability': 0.0438905730843544}, {'value': ['open'], 'probability': 0.028411434963345528}, {'value': ['to', 'reader'], 'probability': 0.017288701608777046}, {'value': ['read', 'buffer'], 'probability': 0.016388826072216034}, {'value': ['copy'], 'probability': 0.015310808084905148}, {'value': ['get', 'buffered', 'reader'], 'probability': 0.012981677427887917}]","[1.0, 0.74860054, 0.24089338, 0.81676847, 0.061091073, 0.32203922, 0.76987064, 0.47322068, 0.55863863, 0.77679986]",0.8137342272701519
1507,1507,"public BufferedReader reader(int bufferSize, String charset) {try {return new BufferedReader(new InputStreamReader(read(), charset), bufferSize);} catch (UnsupportedEncodingException ex) {throw new RuntimeException(""Error reading file: "" + this, ex);}}
","public BufferedReader [MASK](int bufferSize, String charset) {try {return new BufferedReader(new InputStreamReader(read(), charset), bufferSize);} catch (UnsupportedEncodingException ex) {throw new RuntimeException(""Error reading file: "" + this, ex);}}
",reader,"[{'value': ['read'], 'probability': 0.8439292907714844}, {'value': ['write'], 'probability': 0.0766264796257019}, {'value': ['load'], 'probability': 0.004173328168690205}, {'value': ['create'], 'probability': 0.0038963707629591227}, {'value': ['scan'], 'probability': 0.0038770739920437336}]","[0.6417301, 0.56378824, 0.25427768, 0.34747928, 0.37607345]",0.5886491178601079,"[{'value': ['get', 'reader'], 'probability': 0.3161783516407013}, {'value': ['create', 'buffered', 'reader'], 'probability': 0.15302368998527527}, {'value': ['open', 'file'], 'probability': 0.13358335196971893}, {'value': ['read'], 'probability': 0.08265793323516846}, {'value': ['reader'], 'probability': 0.07604914158582687}, {'value': ['get', 'character', 'stream'], 'probability': 0.06584951281547546}, {'value': ['init', 'reader'], 'probability': 0.05248849093914032}, {'value': ['to', 'reader'], 'probability': 0.049265556037425995}, {'value': ['read', 'string'], 'probability': 0.03558828681707382}, {'value': ['get', 'buffered', 'reader'], 'probability': 0.03531571105122566}]","[0.81676847, 0.74860054, 0.47319978, 0.6417301, 1.0, 0.56353766, 0.77404374, 0.76987064, 0.47249037, 0.77679986]",0.7250164991432339
1508,1508,"public String readString() {return readString(null);}
","public String [MASK]() {return [MASK](null);}
",readString,"[{'value': ['name'], 'probability': 0.2202119082212448}, {'value': ['get'], 'probability': 0.05754539370536804}, {'value': ['next'], 'probability': 0.04795554652810097}, {'value': ['test'], 'probability': 0.0276850163936615}, {'value': ['value'], 'probability': 0.02732742577791214}]","[0.5472748, 0.5726487, 0.48554757, 0.38063776, 0.3197642]",0.1960307236326685,"[{'value': ['read', 'string'], 'probability': 0.9708093404769897}, {'value': ['read', 'string', 'array'], 'probability': 0.026060529053211212}, {'value': ['get', 'contents'], 'probability': 0.0017375516472384334}, {'value': ['test', 'read', 'string'], 'probability': 0.0005660533788613975}, {'value': ['get', 'alg', 'name'], 'probability': 0.00017427385319024324}, {'value': ['read', 'strings'], 'probability': 0.00015731302846688777}, {'value': ['file', 'contents'], 'probability': 0.0001523279643151909}, {'value': ['read', 'string', 'string', 'map'], 'probability': 0.00014512325287796557}, {'value': ['get', 'developer'], 'probability': 0.0001131327444454655}, {'value': ['read', 'exception'], 'probability': 8.444959530606866e-05}]","[0.7958906, 0.6796208, 0.65498424, 0.72156775, 0.5196289, 0.7937522, 0.5526333, 0.6391942, 0.44893283, 0.8789091]",0.7924332021506227
1509,1509,"public int readBytes(byte[] bytes, int offset, int size) {InputStream input = read();int position = 0;try {while (true) {int count = input.read(bytes, offset + position, size - position);if (count <= 0)break;position += count;}} catch (IOException ex) {throw new RuntimeException(""Error reading file: "" + this, ex);} finally {try {if (input != null)input.close();} catch (IOException ignored) {}}return position - offset;}
","public int [MASK](byte[] bytes, int offset, int size) {InputStream input = read();int position = 0;try {while (true) {int count = input.read(bytes, offset + position, size - position);if (count <= 0)break;position += count;}} catch (IOException ex) {throw new RuntimeException(""Error reading file: "" + this, ex);} finally {try {if (input != null)input.close();} catch (IOException ignored) {}}return position - offset;}
",readBytes,"[{'value': ['read'], 'probability': 0.9517147541046143}, {'value': ['write'], 'probability': 0.042234160006046295}, {'value': ['compare'], 'probability': 0.0010453772265464067}, {'value': ['scan'], 'probability': 0.0003027108032256365}, {'value': ['convert'], 'probability': 0.00029903551330789924}]","[0.99999994, 0.74154025, 0.49443805, 0.34538627, 0.31319585]",0.9837481101979751,"[{'value': ['read'], 'probability': 0.6660710573196411}, {'value': ['read', 'all'], 'probability': 0.16698339581489563}, {'value': ['read', 'fully'], 'probability': 0.06254614144563675}, {'value': ['read', 'bytes'], 'probability': 0.03934294730424881}, {'value': ['move'], 'probability': 0.014553935267031193}, {'value': ['skip', 'bytes'], 'probability': 0.011432080529630184}, {'value': ['fill'], 'probability': 0.010945498943328857}, {'value': ['write'], 'probability': 0.010589515790343285}, {'value': ['transfer'], 'probability': 0.010058206506073475}, {'value': ['read', 'string'], 'probability': 0.007477212697267532}]","[0.99999994, 0.8690984, 0.8293457, 0.7612516, 0.46430317, 0.39513543, 0.4043326, 0.74154025, 0.2514947, 0.7958906]",0.9250517360249458
1510,1510,"public OutputStream write(boolean append) {if (type == FileType.Classpath)throw new RuntimeException(""Cannot write to a classpath file: "" + file);parent().mkdirs();try {return new FileOutputStream(file(), append);} catch (FileNotFoundException ex) {if (file().isDirectory())throw new RuntimeException(""Cannot open a stream to a directory: "" + file + "" ("" + type + "")"", ex);throw new RuntimeException(""Error writing file: "" + file + "" ("" + type + "")"", ex);}}
","public OutputStream [MASK](boolean append) {if (type == FileType.Classpath)throw new RuntimeException(""Cannot [MASK] to a classpath file: "" + file);parent().mkdirs();try {return new FileOutputStream(file(), append);} catch (FileNotFoundException ex) {if (file().isDirectory())throw new RuntimeException(""Cannot open a stream to a directory: "" + file + "" ("" + type + "")"", ex);throw new RuntimeException(""Error writing file: "" + file + "" ("" + type + "")"", ex);}}
",write,"[{'value': ['read'], 'probability': 0.5479131937026978}, {'value': ['generate'], 'probability': 0.03962443768978119}, {'value': ['file'], 'probability': 0.03781019151210785}, {'value': ['create'], 'probability': 0.03141940385103226}, {'value': ['load'], 'probability': 0.029511606320738792}]","[0.74154025, 0.44039413, 0.51265156, 0.52939516, 0.36211276]",0.470453321686509,"[{'value': ['write'], 'probability': 0.8741187453269958}, {'value': ['write', 'data'], 'probability': 0.04256587475538254}, {'value': ['create', 'result'], 'probability': 0.026696527376770973}, {'value': ['save'], 'probability': 0.02165018767118454}, {'value': ['get', 'file', 'output', 'stream'], 'probability': 0.01120369415730238}, {'value': ['output'], 'probability': 0.006426387466490269}, {'value': ['store'], 'probability': 0.00498247379437089}, {'value': ['open', 'output', 'stream'], 'probability': 0.004719615448266268}, {'value': ['save', 'to', 'disk'], 'probability': 0.003860179800540209}, {'value': ['append', 'file'], 'probability': 0.003776351222768426}]","[1.0, 0.8013066, 0.5133813, 0.48002282, 0.5897073, 0.25704232, 0.3394317, 0.40048543, 0.60925436, 0.45763144]",0.9482452527423615
1511,1511,"public void write(InputStream input, boolean append) {OutputStream output = null;try {output = write(append);byte[] buffer = new byte[4096];while (true) {int length = input.read(buffer);if (length == -1)break;output.write(buffer, 0, length);}} catch (Exception ex) {throw new RuntimeException(""Error stream writing to file: "" + file + "" ("" + type + "")"", ex);} finally {try {if (input != null)input.close();} catch (Exception ignored) {}try {if (output != null)output.close();} catch (Exception ignored) {}}}
","public void [MASK](InputStream input, boolean append) {OutputStream output = null;try {output = [MASK](append);byte[] buffer = new byte[4096];while (true) {int length = input.read(buffer);if (length == -1)break;output.[MASK](buffer, 0, length);}} catch (Exception ex) {throw new RuntimeException(""Error stream writing to file: "" + file + "" ("" + type + "")"", ex);} finally {try {if (input != null)input.close();} catch (Exception ignored) {}try {if (output != null)output.close();} catch (Exception ignored) {}}}
",write,"[{'value': ['read'], 'probability': 0.6471325755119324}, {'value': ['write'], 'probability': 0.23714518547058105}, {'value': ['output'], 'probability': 0.01904013752937317}, {'value': ['run'], 'probability': 0.015221741981804371}, {'value': ['process'], 'probability': 0.010473049245774746}]","[0.74154025, 1.0, 0.25704232, 0.43416244, 0.35321146]",0.7322220700910615,"[{'value': ['run'], 'probability': 0.8270152807235718}, {'value': ['copy'], 'probability': 0.1188335120677948}, {'value': ['extract', 'bytes'], 'probability': 0.012534124776721}, {'value': ['dump', 'stream'], 'probability': 0.011955447494983673}, {'value': ['reduce'], 'probability': 0.011392518877983093}, {'value': ['rotate'], 'probability': 0.00745596457272768}, {'value': ['collect'], 'probability': 0.0045867012813687325}, {'value': ['consume'], 'probability': 0.002621621359139681}, {'value': ['copy', 'bytes'], 'probability': 0.001904901466332376}, {'value': ['build'], 'probability': 0.0016998478677123785}]","[0.43416244, 0.59803283, 0.28322002, 0.3079363, 0.3781457, 0.1930889, 0.5250464, 0.2743825, 0.4767695, 0.39291278]",0.4478080899661981
1512,1512,"public Writer writer(boolean append) {return writer(append, null);}
","public Writer [MASK](boolean append) {return [MASK](append, null);}
",writer,"[{'value': ['write'], 'probability': 0.3717937469482422}, {'value': ['create'], 'probability': 0.11325127631425858}, {'value': ['read'], 'probability': 0.031051186844706535}, {'value': ['generate'], 'probability': 0.027055755257606506}, {'value': ['accept'], 'probability': 0.02286655642092228}]","[0.49243614, 0.24330367, 0.46858814, 0.060714856, 0.1505857]",0.2302754098332678,"[{'value': ['append'], 'probability': 0.6800863742828369}, {'value': ['get', 'writer'], 'probability': 0.22501035034656525}, {'value': ['writer'], 'probability': 0.08013799786567688}, {'value': ['get', 'pdf', 'writer'], 'probability': 0.00462263124063611}, {'value': ['indent'], 'probability': 0.003476255340501666}, {'value': ['get', 'drl'], 'probability': 0.002048978814855218}, {'value': ['create', 'writer'], 'probability': 0.001262072124518454}, {'value': ['to', 'epl'], 'probability': 0.001256022835150361}, {'value': ['set', 'writer'], 'probability': 0.0011242982000112534}, {'value': ['write'], 'probability': 0.0009750174940563738}]","[-0.19858639, 0.8263828, 1.0, 0.7367325, -0.26740363, 0.12144933, 0.8323937, 0.16940232, 0.8403497, 0.49243614]",0.1364399613088561
1513,1513,"public void writeString(String string, boolean append) {writeString(string, append, null);}
","public void [MASK](String string, boolean append) {[MASK](string, append, null);}
",writeString,"[{'value': ['add'], 'probability': 0.10061172395944595}, {'value': ['string'], 'probability': 0.09985770285129547}, {'value': ['perform'], 'probability': 0.07801803946495056}, {'value': ['write'], 'probability': 0.056148696690797806}, {'value': ['start'], 'probability': 0.03664514794945717}]","[0.45824197, 0.34116226, 0.51392853, 1.0, 0.46386462]",0.1934149755665308,"[{'value': ['write', 'string'], 'probability': 0.9657373428344727}, {'value': ['write', 'string', 'to', 'file'], 'probability': 0.019827645272016525}, {'value': ['write', 'strings'], 'probability': 0.009519507177174091}, {'value': ['write', 'boolean'], 'probability': 0.002256824402138591}, {'value': ['write', 'string', 'list'], 'probability': 0.0007425160147249699}, {'value': ['write', 'string', 'array'], 'probability': 0.0005882361438125372}, {'value': ['write', 'bool'], 'probability': 0.0004857080930378288}, {'value': ['append', 'value'], 'probability': 0.0003007001942023635}, {'value': ['write', 'method'], 'probability': 0.00029993377393111587}, {'value': ['write', 'text'], 'probability': 0.00024150604440364987}]","[0.81972307, 0.82017446, 0.813136, 0.65870774, 0.77321035, 0.71196795, 0.58783346, 0.47086468, 0.79894567, 0.87014854]",0.8189963572660521
1514,1514,"public void writeString(String string, boolean append, String charset) {Writer writer = null;try {writer = writer(append, charset);writer.write(string);} catch (Exception ex) {throw new RuntimeException(""Error writing file: "" + file + "" ("" + type + "")"", ex);} finally {try {if (writer != null)writer.close();} catch (Exception ignored) {}}}
","public void [MASK](String string, boolean append, String charset) {Writer writer = null;try {writer = writer(append, charset);writer.write(string);} catch (Exception ex) {throw new RuntimeException(""Error writing file: "" + file + "" ("" + type + "")"", ex);} finally {try {if (writer != null)writer.close();} catch (Exception ignored) {}}}
",writeString,"[{'value': ['write'], 'probability': 0.9875641465187073}, {'value': ['read'], 'probability': 0.004789171274751425}, {'value': ['start'], 'probability': 0.0009676094050519168}, {'value': ['writer'], 'probability': 0.0008182396995835006}, {'value': ['output'], 'probability': 0.00024408480385318398}]","[1.0, 0.74154025, 0.46386462, 0.49243614, 0.25704232]",0.9920300204953674,"[{'value': ['write'], 'probability': 0.6408830881118774}, {'value': ['append', 'file'], 'probability': 0.33610549569129944}, {'value': ['save', 'text', 'file'], 'probability': 0.009545132517814636}, {'value': ['write', 'data'], 'probability': 0.006692847702652216}, {'value': ['store'], 'probability': 0.002724521793425083}, {'value': ['register', 'user'], 'probability': 0.00116455415263772}, {'value': ['write', 'output'], 'probability': 0.0011069606989622116}, {'value': ['process', 'event'], 'probability': 0.0006896860431879759}, {'value': ['handle', 'text'], 'probability': 0.0006331595359370112}, {'value': ['notify'], 'probability': 0.0004545696428976953}]","[1.0, 0.45763144, 0.6745975, 0.8013066, 0.3394317, 0.5175174, 0.7516718, 0.36274192, 0.65577674, 0.26144332]",0.8096414464424871
1515,1515,"public void writeBytes(byte[] bytes, boolean append) {OutputStream output = write(append);try {output.write(bytes);} catch (IOException ex) {throw new RuntimeException(""Error writing file: "" + file + "" ("" + type + "")"", ex);} finally {try {output.close();} catch (IOException ignored) {}}}
","public void [MASK](byte[] bytes, boolean append) {OutputStream output = write(append);try {output.write(bytes);} catch (IOException ex) {throw new RuntimeException(""Error writing file: "" + file + "" ("" + type + "")"", ex);} finally {try {output.close();} catch (IOException ignored) {}}}
",writeBytes,"[{'value': ['write'], 'probability': 0.9777472615242004}, {'value': ['read'], 'probability': 0.01955736055970192}, {'value': ['process'], 'probability': 0.0004899947671219707}, {'value': ['output'], 'probability': 0.00023270098608918488}, {'value': ['copy'], 'probability': 0.00019278365653008223}]","[1.0, 0.74154025, 0.35321146, 0.25704232, 0.59803283]",0.992598008350248,"[{'value': ['write'], 'probability': 0.9748988747596741}, {'value': ['append', 'file'], 'probability': 0.016514066606760025}, {'value': ['write', 'data'], 'probability': 0.005261808168143034}, {'value': ['store'], 'probability': 0.0012578674359247088}, {'value': ['write', 'output'], 'probability': 0.0008382976520806551}, {'value': ['save', 'text', 'file'], 'probability': 0.00043127674143761396}, {'value': ['process', 'event'], 'probability': 0.00031477020820602775}, {'value': ['handle', 'text'], 'probability': 0.00028911064146086574}, {'value': ['notify'], 'probability': 0.00010710334026953205}, {'value': ['save', 'to', 'file'], 'probability': 8.68754941620864e-05}]","[1.0, 0.45763144, 0.8013066, 0.3394317, 0.7516718, 0.6745975, 0.36274192, 0.65577674, 0.26144332, 0.6696992]",0.9884105297384995
1516,1516,"public FileDescriptor[] list() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot list a classpath directory: "" + file);String[] relativePaths = file().list();if (relativePaths == null)return new FileDescriptor[0];FileDescriptor[] handles = new FileDescriptor[relativePaths.length];for (int i = 0, n = relativePaths.length; i < n; i++) handles[i] = child(relativePaths[i]);return handles;}
","public FileDescriptor[] [MASK]() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot [MASK] a classpath directory: "" + file);String[] relativePaths = file().[MASK]();if (relativePaths == null)return new FileDescriptor[0];FileDescriptor[] handles = new FileDescriptor[relativePaths.length];for (int i = 0, n = relativePaths.length; i < n; i++) handles[i] = child(relativePaths[i]);return handles;}
",list,"[{'value': ['files'], 'probability': 0.22405001521110535}, {'value': ['file'], 'probability': 0.11739151179790497}, {'value': ['types'], 'probability': 0.06839815527200699}, {'value': ['properties'], 'probability': 0.03180788457393646}, {'value': ['labels'], 'probability': 0.031075885519385338}]","[0.49137753, 0.5099259, 0.49069968, 0.32702234, 0.49832204]",0.2294047565966236,"[{'value': ['get', 'class', 'names'], 'probability': 0.29717642068862915}, {'value': ['list'], 'probability': 0.2690439820289612}, {'value': ['get', 'classpath', 'entries'], 'probability': 0.09370925277471542}, {'value': ['sha'], 'probability': 0.08720497041940689}, {'value': ['get', 'instances'], 'probability': 0.06923995167016983}, {'value': ['list', 'content'], 'probability': 0.05078264698386192}, {'value': ['get', 'class', 'path', 'entries'], 'probability': 0.04157490283250809}, {'value': ['get', 'sources'], 'probability': 0.03145390376448631}, {'value': ['get', 'class', 'path'], 'probability': 0.031065966933965683}, {'value': ['get', 'applications'], 'probability': 0.028747932985424995}]","[0.69176567, 1.0, 0.5782856, 0.00572397, 0.5464664, 0.8306606, 0.6174933, 0.57745326, 0.5039489, 0.5431094]",0.6844350647488331
1517,1517,"public boolean isDirectory() {if (type == FileType.Classpath)return false;return file().isDirectory();}
","public boolean [MASK]() {if (type == FileType.Classpath)return false;return file().[MASK]();}
",isDirectory,"[{'value': ['file'], 'probability': 0.1876968890428543}, {'value': ['exists'], 'probability': 0.085433728992939}, {'value': ['is'], 'probability': 0.05276430770754814}, {'value': ['type'], 'probability': 0.0346231535077095}, {'value': ['value'], 'probability': 0.03158978000283241}]","[0.36613718, 0.65599275, 0.99999994, 0.58839804, 0.53464335]",0.2147924816255164,"[{'value': ['is', 'directory'], 'probability': 0.9727585911750793}, {'value': ['is', 'dir'], 'probability': 0.018754471093416214}, {'value': ['accept'], 'probability': 0.002778558060526848}, {'value': ['can', 'process'], 'probability': 0.0020202412270009518}, {'value': ['is', 'root'], 'probability': 0.0011467697331681848}, {'value': ['has', 'children'], 'probability': 0.000680372235365212}, {'value': ['is', 'valid'], 'probability': 0.0006224493263289332}, {'value': ['add', 'class', 'path'], 'probability': 0.0004673709045164287}, {'value': ['directory', 'exists'], 'probability': 0.0004004953952971846}, {'value': ['is', 'collection'], 'probability': 0.0003706224379129708}]","[0.81587607, 0.7456981, 0.4456851, 0.7586843, 0.87290835, 0.75191313, 0.833872, 0.666654, 0.5412914, 0.86349875]",0.813286757281092
1518,1518,"public FileDescriptor child(String name) {if (file.getPath().length() == 0)return new FileDescriptor(new File(name), type);return new FileDescriptor(new File(file, name), type);}
","public FileDescriptor [MASK](String name) {if (file.getPath().length() == 0)return new FileDescriptor(new File(name), type);return new FileDescriptor(new File(file, name), type);}
",child,"[{'value': ['create'], 'probability': 0.16510160267353058}, {'value': ['get'], 'probability': 0.13448676466941833}, {'value': ['resolve'], 'probability': 0.0759529247879982}, {'value': ['evaluate'], 'probability': 0.05571199208498001}, {'value': ['file'], 'probability': 0.03823172673583031}]","[0.4066022, 0.5693379, 0.29375294, 0.25041312, 0.2968891]",0.1913120796800319,"[{'value': ['get'], 'probability': 0.4609522521495819}, {'value': ['get', 'file', 'descriptor'], 'probability': 0.33569931983947754}, {'value': ['root'], 'probability': 0.041060760617256165}, {'value': ['create'], 'probability': 0.04075062647461891}, {'value': ['get', 'file'], 'probability': 0.03380866348743439}, {'value': ['get', 'instance'], 'probability': 0.02131110429763794}, {'value': ['create', 'socket'], 'probability': 0.019992265850305557}, {'value': ['dir'], 'probability': 0.017356567084789276}, {'value': ['get', 'factory'], 'probability': 0.015048700384795666}, {'value': ['features'], 'probability': 0.014019763097167015}]","[0.5693379, 0.39167967, 0.23890102, 0.4066022, 0.5151785, 0.63263494, 0.18013172, -0.10440852, 0.5394421, 0.35122398]",0.46603363103779055
1519,1519,"public FileDescriptor parent() {File parent = file.getParentFile();if (parent == null) {if (type == FileType.Absolute)parent = new File(""/"");elseparent = new File("""");}return new FileDescriptor(parent, type);}
","public FileDescriptor [MASK]() {File [MASK] = file.getParentFile();if ([MASK] == null) {if (type == FileType.Absolute)[MASK] = new File(""/"");else[MASK] = new File("""");}return new FileDescriptor([MASK], type);}
",parent,"[{'value': ['create'], 'probability': 0.1743810623884201}, {'value': ['resolve'], 'probability': 0.11903385072946548}, {'value': ['evaluate'], 'probability': 0.09385332465171814}, {'value': ['get'], 'probability': 0.061102692037820816}, {'value': ['clone'], 'probability': 0.04808659479022026}]","[0.35903737, 0.19900252, 0.19277394, 0.38855353, 0.17683615]",0.1366349439752236,"[{'value': ['get', 'root'], 'probability': 0.41390010714530945}, {'value': ['get', 'file', 'descriptor'], 'probability': 0.28197339177131653}, {'value': ['parent'], 'probability': 0.1082744225859642}, {'value': ['get'], 'probability': 0.06069180369377136}, {'value': ['get', 'parent'], 'probability': 0.04702609404921532}, {'value': ['create'], 'probability': 0.02014314942061901}, {'value': ['get', 'fd'], 'probability': 0.018870925530791283}, {'value': ['get', 'file'], 'probability': 0.01762145571410656}, {'value': ['root'], 'probability': 0.01580033451318741}, {'value': ['get', 'parent', 'file'], 'probability': 0.01569821685552597}]","[0.35249758, 0.33440122, 1.0000001, 0.38855353, 0.8153428, 0.35903737, 0.287105, 0.4420322, 0.18958776, 0.74066764]",0.4454519100828869
1520,1520,"public boolean mkdirs() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot mkdirs with a classpath file: "" + file);return file().mkdirs();}
","public boolean [MASK]() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot [MASK] with a classpath file: "" + file);return file().[MASK]();}
",mkdirs,"[{'value': ['exists'], 'probability': 0.13806098699569702}, {'value': ['run'], 'probability': 0.06183614954352379}, {'value': ['file'], 'probability': 0.05234010890126228}, {'value': ['is'], 'probability': 0.04471467807888985}, {'value': ['read'], 'probability': 0.04424438625574112}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mkdirs'], 'probability': 0.7893779277801514}, {'value': ['make', 'dirs'], 'probability': 0.08417670428752899}, {'value': ['create', 'directory'], 'probability': 0.05194613337516785}, {'value': ['create', 'temp', 'folder'], 'probability': 0.013659989461302757}, {'value': ['make', 'directory'], 'probability': 0.013545222580432892}, {'value': ['add', 'class', 'path'], 'probability': 0.012078073807060719}, {'value': ['allocate', 'id'], 'probability': 0.011669887229800224}, {'value': ['create', 'path'], 'probability': 0.0113509651273489}, {'value': ['gen', 'id'], 'probability': 0.006453962065279484}, {'value': ['create', 'temp', 'directory'], 'probability': 0.0057410504668951035}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1521,1521,"public boolean exists() {if (type == FileType.Classpath)return FileDescriptor.class.getResource(""/"" + file.getPath().replace('\\', '/')) != null;return file().exists();}
","public boolean [MASK]() {if (type == FileType.Classpath)return FileDescriptor.class.getResource(""/"" + file.getPath().replace('\\', '/')) != null;return file().[MASK]();}
",exists,"[{'value': ['exists'], 'probability': 0.07782965153455734}, {'value': ['run'], 'probability': 0.05542626231908798}, {'value': ['is'], 'probability': 0.04006281495094299}, {'value': ['type'], 'probability': 0.036894675344228745}, {'value': ['matches'], 'probability': 0.03446582704782486}]","[1.0, 0.28839296, 0.65599275, 0.53670955, 0.26025063]",0.1488665890754692,"[{'value': ['exists'], 'probability': 0.7335658073425293}, {'value': ['is', 'installed'], 'probability': 0.17860719561576843}, {'value': ['file', 'exists'], 'probability': 0.050754331052303314}, {'value': ['load'], 'probability': 0.014367438852787018}, {'value': ['is', 'directory'], 'probability': 0.005522868130356073}, {'value': ['save'], 'probability': 0.005432004574686289}, {'value': ['get', 'resource', 'url'], 'probability': 0.0035336818546056747}, {'value': ['has', 'resource'], 'probability': 0.003031102940440178}, {'value': ['resource', 'exists'], 'probability': 0.0028940257616341114}, {'value': ['is', 'accessible'], 'probability': 0.0022916696034371853}]","[1.0, 0.56085086, 0.7983368, 0.2210155, 0.62530106, 0.24773921, 0.45176488, 0.538188, 0.81066865, 0.6717786]",0.8893447464876493
1522,1522,"public boolean delete() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot delete a classpath file: "" + file);return file().delete();}
","public boolean [MASK]() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot [MASK] a classpath file: "" + file);return file().[MASK]();}
",delete,"[{'value': ['exists'], 'probability': 0.1422930359840393}, {'value': ['run'], 'probability': 0.058022234588861465}, {'value': ['type'], 'probability': 0.0552673414349556}, {'value': ['file'], 'probability': 0.051041990518569946}, {'value': ['is'], 'probability': 0.04512923210859299}]","[0.11091113, 0.13931048, 0.20517465, 0.50485307, 0.06764898]",0.0640260965278964,"[{'value': ['delete'], 'probability': 0.5452573299407959}, {'value': ['remove'], 'probability': 0.3352607786655426}, {'value': ['delete', 'file'], 'probability': 0.0348760187625885}, {'value': ['is', 'delete'], 'probability': 0.022962190210819244}, {'value': ['delete', 'directory'], 'probability': 0.021214712411165237}, {'value': ['do', 'delete'], 'probability': 0.008908056654036045}, {'value': ['delete', 'test'], 'probability': 0.00843733362853527}, {'value': ['get', 'delete'], 'probability': 0.008401659317314625}, {'value': ['delete', 'files'], 'probability': 0.007710721809417009}, {'value': ['delete', 'project'], 'probability': 0.006971160881221294}]","[1.0, 0.5385779, 0.8637192, 0.70066404, 0.827507, 0.7730317, 0.7130186, 0.7855709, 0.8763568, 0.68082464]",0.8205943337250874
1523,1523,"public boolean deleteDirectory() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot delete a classpath file: "" + file);return deleteDirectory(file());}
","public boolean [MASK]() {if (type == FileType.Classpath)throw new RuntimeException(""Cannot delete a classpath file: "" + file);return [MASK](file());}
",deleteDirectory,"[{'value': ['file'], 'probability': 0.16094304621219635}, {'value': ['exists'], 'probability': 0.1456761360168457}, {'value': ['run'], 'probability': 0.05657763034105301}, {'value': ['is'], 'probability': 0.04403741657733917}, {'value': ['read'], 'probability': 0.03484809026122093}]","[0.50485307, 0.11091113, 0.13931048, 0.06764898, 0.3864924]",0.1217391609955552,"[{'value': ['delete', 'directory'], 'probability': 0.9992156028747559}, {'value': ['force', 'delete'], 'probability': 0.0002363164530834183}, {'value': ['delete', 'file', 'or', 'folder'], 'probability': 0.00020505230349954218}, {'value': ['clean', 'directory'], 'probability': 0.00010326756455469877}, {'value': ['clean'], 'probability': 5.7450368331046775e-05}, {'value': ['remove', 'coverage', 'store'], 'probability': 4.5122778828954324e-05}, {'value': ['remove', 'coverage'], 'probability': 4.1633364162407815e-05}, {'value': ['delete', 'db'], 'probability': 3.3110525691881776e-05}, {'value': ['clear', 'cache'], 'probability': 3.197271507815458e-05}, {'value': ['delete'], 'probability': 3.0407463782466948e-05}]","[0.827507, 0.71007407, 0.7473795, 0.3625966, 0.19046272, 0.4061504, 0.42450675, 0.7548904, 0.25403666, 1.0]",0.8273268713853067
1524,1524,"public void copyTo(FileDescriptor dest) {if (!isDirectory()) {if (dest.isDirectory())dest = dest.child(name());copyFile(this, dest);return;}if (dest.exists()) {if (!dest.isDirectory())throw new RuntimeException(""Destination exists but is not a directory: "" + dest);} else {dest.mkdirs();if (!dest.isDirectory())throw new RuntimeException(""Destination directory cannot be created: "" + dest);}dest = dest.child(name());copyDirectory(this, dest);}
","public void [MASK](FileDescriptor dest) {if (!isDirectory()) {if (dest.isDirectory())dest = dest.child(name());copyFile(this, dest);return;}if (dest.exists()) {if (!dest.isDirectory())throw new RuntimeException(""Destination exists but is not a directory: "" + dest);} else {dest.mkdirs();if (!dest.isDirectory())throw new RuntimeException(""Destination directory cannot be created: "" + dest);}dest = dest.child(name());copyDirectory(this, dest);}
",copyTo,"[{'value': ['copy'], 'probability': 0.29427340626716614}, {'value': ['read'], 'probability': 0.26322582364082336}, {'value': ['write'], 'probability': 0.0412333644926548}, {'value': ['file'], 'probability': 0.02977653592824936}, {'value': ['create'], 'probability': 0.020612094551324844}]","[1.0, 0.7205266, 0.59803283, 0.6146836, 0.3987844]",0.5351164443219596,"[{'value': ['copy', 'directory'], 'probability': 0.6310246586799622}, {'value': ['copy'], 'probability': 0.30378758907318115}, {'value': ['set', 'destination'], 'probability': 0.022699270397424698}, {'value': ['copy', 'files'], 'probability': 0.013154780492186546}, {'value': ['copy', 'to'], 'probability': 0.009504047222435474}, {'value': ['copy', 'file'], 'probability': 0.006242888513952494}, {'value': ['copy', 'recursively'], 'probability': 0.003656289540231228}, {'value': ['rename', 'to'], 'probability': 0.003473133547231555}, {'value': ['move'], 'probability': 0.0032381995115429163}, {'value': ['copy', 'file', 'to', 'dir'], 'probability': 0.0032191399950534105}]","[0.84431636, 1.0, 0.35429475, 0.88358617, 0.7977572, 0.8865658, 0.667101, 0.42010927, 0.3794922, 0.7401552]",0.8768640446247888
1525,1525,"public void moveTo(FileDescriptor dest) {if (type == FileType.Classpath)throw new RuntimeException(""Cannot move a classpath file: "" + file);copyTo(dest);delete();}
","public void [MASK](FileDescriptor dest) {if (type == FileType.Classpath)throw new RuntimeException(""Cannot move a classpath file: "" + file);copyTo(dest);delete();}
",moveTo,"[{'value': ['copy'], 'probability': 0.14820025861263275}, {'value': ['read'], 'probability': 0.11206689476966858}, {'value': ['write'], 'probability': 0.06733912229537964}, {'value': ['convert'], 'probability': 0.053155701607465744}, {'value': ['accept'], 'probability': 0.034717101603746414}]","[0.3794922, 0.46430317, 0.49779233, 0.49005774, 0.6336659]",0.1898431609576011,"[{'value': ['copy'], 'probability': 0.3129434585571289}, {'value': ['move'], 'probability': 0.19605886936187744}, {'value': ['move', 'to'], 'probability': 0.12008453160524368}, {'value': ['transfer', 'to'], 'probability': 0.0680718794465065}, {'value': ['delete'], 'probability': 0.06752674281597137}, {'value': ['free'], 'probability': 0.06684844940900803}, {'value': ['test', 'copy', 'to'], 'probability': 0.06479804962873459}, {'value': ['apply'], 'probability': 0.060106344521045685}, {'value': ['copy', 'to'], 'probability': 0.02226421982049942}, {'value': ['replace'], 'probability': 0.021297449246048927}]","[0.3794922, 0.99999994, 0.93805903, 0.82428855, 0.24743508, 0.6146899, 0.70765674, 0.5332758, 0.73345125, 0.54270124]",0.6471711683857941
1526,1526,"public long length() {if (type == FileType.Classpath || !file.exists()) {InputStream input = read();try {return input.available();} catch (Exception ignored) {} finally {try {input.close();} catch (IOException ignored) {}}return 0;}return file().length();}
","public long [MASK]() {if (type == FileType.Classpath || !file.exists()) {InputStream input = read();try {return input.available();} catch (Exception ignored) {} finally {try {input.close();} catch (IOException ignored) {}}return 0;}return file().[MASK]();}
",length,"[{'value': ['read'], 'probability': 0.6412515044212341}, {'value': ['get'], 'probability': 0.06920339912176132}, {'value': ['file'], 'probability': 0.028955431655049324}, {'value': ['run'], 'probability': 0.021817076951265335}, {'value': ['exists'], 'probability': 0.014715437777340412}]","[0.310966, 0.3304365, 0.2551272, 0.39406276, 0.3964841]",0.2440938063695207,"[{'value': ['length'], 'probability': 0.5784174799919128}, {'value': ['get', 'length'], 'probability': 0.21876169741153717}, {'value': ['get', 'size'], 'probability': 0.07809939235448837}, {'value': ['size'], 'probability': 0.06512516736984253}, {'value': ['get', 'count'], 'probability': 0.013135130517184734}, {'value': ['get', 'content', 'length'], 'probability': 0.012686826288700104}, {'value': ['get', 'level'], 'probability': 0.011308751069009304}, {'value': ['get', 'prefix', 'length'], 'probability': 0.008657252416014671}, {'value': ['get', 'message', 'count'], 'probability': 0.007176949176937342}, {'value': ['get', 'last', 'id'], 'probability': 0.006631392519921064}]","[1.0, 0.82353365, 0.56652945, 0.62106156, 0.37898242, 0.7397084, 0.44244114, 0.78770286, 0.37142923, 0.34084743]",0.8743787995119011
1527,1527,"public long lastModified() {return file().lastModified();}
","public long [MASK]() {return file().[MASK]();}
",lastModified,"[{'value': ['file'], 'probability': 0.8451724052429199}, {'value': ['list'], 'probability': 0.0445026196539402}, {'value': ['get'], 'probability': 0.02415314130485058}, {'value': ['document'], 'probability': 0.005797339603304863}, {'value': ['run'], 'probability': 0.005447088740766048}]","[0.30492696, 0.57452303, 0.62151444, 0.44467384, 0.700201]",0.304687141743074,"[{'value': ['last', 'modified'], 'probability': 0.6959933042526245}, {'value': ['get', 'last', 'modified'], 'probability': 0.2924589216709137}, {'value': ['last', 'modified', 'time'], 'probability': 0.0038329623639583588}, {'value': ['set', 'last', 'modified'], 'probability': 0.0019494062289595604}, {'value': ['get', 'last', 'read'], 'probability': 0.0014452259056270123}, {'value': ['get', 'time', 'stamp'], 'probability': 0.0012872088700532913}, {'value': ['file', 'modified'], 'probability': 0.0010349693475291133}, {'value': ['get', 'last', 'modified', 'time'], 'probability': 0.0009145583608187735}, {'value': ['get', 'modification', 'date'], 'probability': 0.0005875190836377442}, {'value': ['lastmodified'], 'probability': 0.0004959424259141088}]","[0.8345882, 0.83679587, 0.8853094, 0.8518652, 0.8283365, 0.7327098, 0.36727202, 0.86176074, 0.65908396, 0.0]",0.8343459598439252
1528,1528,"public String toString() {return file.getPath();}
","public String [MASK]() {return file.getPath();}
",toString,"[{'value': ['file'], 'probability': 0.8083974719047546}, {'value': ['get'], 'probability': 0.05385511368513107}, {'value': ['name'], 'probability': 0.015705980360507965}, {'value': ['format'], 'probability': 0.014447750523686409}, {'value': ['path'], 'probability': 0.013636602088809013}]","[0.42329797, 0.7566794, 0.5570883, 0.31030634, 0.45447192]",0.402374365381834,"[{'value': ['get', 'path'], 'probability': 0.7761354446411133}, {'value': ['path'], 'probability': 0.09793504327535629}, {'value': ['get', 'name'], 'probability': 0.033969197422266006}, {'value': ['get', 'file', 'path'], 'probability': 0.02569887414574623}, {'value': ['get', 'file', 'name'], 'probability': 0.017952395603060722}, {'value': ['get', 'filename'], 'probability': 0.01559347566217184}, {'value': ['get', 'source', 'path'], 'probability': 0.013944746926426888}, {'value': ['to', 'string'], 'probability': 0.00790475495159626}, {'value': ['get', 'absolute', 'path'], 'probability': 0.006437402218580246}, {'value': ['get', 'catalina', 'home'], 'probability': 0.004428591579198837}]","[0.7135369, 0.45447192, 0.7662066, 0.7122128, 0.73089, 0.5451606, 0.7318511, 0.84910345, 0.687526, 0.7026275]",0.6887176363518819
1529,1529,"public static FileDescriptor tempFile(String prefix) {try {return new FileDescriptor(File.createTempFile(prefix, null));} catch (IOException ex) {throw new RuntimeException(""Unable to create temp file."", ex);}}
","public static FileDescriptor [MASK](String prefix) {try {return new FileDescriptor(File.createTempFile(prefix, null));} catch (IOException ex) {throw new RuntimeException(""Unable to create temp file."", ex);}}
",tempFile,"[{'value': ['create'], 'probability': 0.5928841829299927}, {'value': ['get'], 'probability': 0.03834431245923042}, {'value': ['generate'], 'probability': 0.030892403796315193}, {'value': ['resolve'], 'probability': 0.024296939373016357}, {'value': ['render'], 'probability': 0.020368125289678574}]","[-0.03167668, 0.12491452, 0.007850112, -0.04309761, 0.05442013]",-0.0136870363019936,"[{'value': ['create', 'temp', 'file'], 'probability': 0.5120730400085449}, {'value': ['get', 'file', 'descriptor'], 'probability': 0.22140951454639435}, {'value': ['create'], 'probability': 0.07551219314336777}, {'value': ['get', 'temp', 'file'], 'probability': 0.07512582093477249}, {'value': ['get', 'file'], 'probability': 0.031749267131090164}, {'value': ['create', 'output', 'file'], 'probability': 0.022665802389383316}, {'value': ['new', 'file'], 'probability': 0.02144520916044712}, {'value': ['create', 'temporary', 'directory'], 'probability': 0.016436496749520302}, {'value': ['create', 'datagram', 'socket'], 'probability': 0.012651708908379078}, {'value': ['get', 'uri', 'scheme'], 'probability': 0.010930945165455341}]","[0.52173203, 0.23796776, -0.03167668, 0.5685054, 0.17746739, 0.09094635, 0.08982775, 0.2072936, 0.032156035, 0.05506933]",0.37420886785383056
1530,1530,"public static FileDescriptor tempDirectory(String prefix) {try {File file = File.createTempFile(prefix, null);if (!file.delete())throw new IOException(""Unable to delete temp file: "" + file);if (!file.mkdir())throw new IOException(""Unable to create temp directory: "" + file);return new FileDescriptor(file);} catch (IOException ex) {throw new RuntimeException(""Unable to create temp file."", ex);}}
","public static FileDescriptor [MASK](String prefix) {try {File file = File.createTempFile(prefix, null);if (!file.delete())throw new IOException(""Unable to delete temp file: "" + file);if (!file.mkdir())throw new IOException(""Unable to create temp directory: "" + file);return new FileDescriptor(file);} catch (IOException ex) {throw new RuntimeException(""Unable to create temp file."", ex);}}
",tempDirectory,"[{'value': ['create'], 'probability': 0.40868523716926575}, {'value': ['file'], 'probability': 0.052937425673007965}, {'value': ['get'], 'probability': 0.05091976746916771}, {'value': ['resolve'], 'probability': 0.032662298530340195}, {'value': ['format'], 'probability': 0.030413005501031876}]","[-0.03167668, 0.17590708, 0.12491452, -0.04309761, -0.11979556]",-0.0023241155056029,"[{'value': ['get', 'file'], 'probability': 0.2527677118778229}, {'value': ['get', 'file', 'descriptor'], 'probability': 0.2170349806547165}, {'value': ['get', 'temp', 'file'], 'probability': 0.17786584794521332}, {'value': ['get', 'cache', 'file'], 'probability': 0.13742244243621826}, {'value': ['get', 'output', 'stream'], 'probability': 0.0836077556014061}, {'value': ['to', 'file'], 'probability': 0.06864594668149948}, {'value': ['get', 'writer'], 'probability': 0.01643015258014202}, {'value': ['create'], 'probability': 0.015747109428048134}, {'value': ['root'], 'probability': 0.015646006911993027}, {'value': ['create', 'temporary', 'directory'], 'probability': 0.014832058921456337}]","[0.17746739, 0.23796776, 0.5685054, 0.09497218, 0.10106434, 0.10020094, 0.086326666, -0.03167668, -0.0057896245, 0.2072936]",0.22990605981834747
1531,1531,"private static boolean deleteDirectory(File file) {if (file.exists()) {File[] files = file.listFiles();if (files != null) {for (int i = 0, n = files.length; i < n; i++) {if (files[i].isDirectory())deleteDirectory(files[i]);elsefiles[i].delete();}}}return file.delete();}
","private static boolean [MASK](File file) {if (file.exists()) {File[] files = file.listFiles();if (files != null) {for (int i = 0, n = files.length; i < n; i++) {if (files[i].isDirectory())[MASK](files[i]);elsefiles[i].delete();}}}return file.delete();}
",deleteDirectory,"[{'value': ['matches'], 'probability': 0.12819616496562958}, {'value': ['contains'], 'probability': 0.08592863380908966}, {'value': ['equals'], 'probability': 0.06374023109674454}, {'value': ['is'], 'probability': 0.04688717797398567}, {'value': ['exists'], 'probability': 0.0449160672724247}]","[0.011599273, 0.26508647, 0.008169925, 0.06764898, 0.11091113]",0.0329398150927885,"[{'value': ['clean', 'files'], 'probability': 0.319381982088089}, {'value': ['delete', 'directory'], 'probability': 0.19891034066677094}, {'value': ['delete'], 'probability': 0.14980670809745789}, {'value': ['delete', 'file'], 'probability': 0.13058973848819733}, {'value': ['clean', 'directory'], 'probability': 0.10025408864021301}, {'value': ['delete', 'files'], 'probability': 0.05412358045578003}, {'value': ['delete', 'all'], 'probability': 0.021279048174619675}, {'value': ['cleanup', 'file'], 'probability': 0.00985849741846323}, {'value': ['rm', 'dir'], 'probability': 0.008138471283018589}, {'value': ['delete', 'folder'], 'probability': 0.007657608482986689}]","[0.4836879, 0.827507, 1.0, 0.8637192, 0.3625966, 0.8763568, 0.7763341, 0.3857741, 0.115695, 0.8344266]",0.6931179278188042
1532,1532,"private static void copyFile(FileDescriptor source, FileDescriptor dest) {try {dest.write(source.read(), false);} catch (Exception ex) {throw new RuntimeException(""Error copying source file: "" + source.file + "" ("" + source.type + "")\n"" + ""To destination: "" + dest.file + "" ("" + dest.type + "")"", ex);}}
","private static void [MASK](FileDescriptor source, FileDescriptor dest) {try {dest.write(source.read(), false);} catch (Exception ex) {throw new RuntimeException(""Error copying source file: "" + source.file + "" ("" + source.type + "")\n"" + ""To destination: "" + dest.file + "" ("" + dest.type + "")"", ex);}}
",copyFile,"[{'value': ['write'], 'probability': 0.8281450271606445}, {'value': ['read'], 'probability': 0.12311237305402756}, {'value': ['copy'], 'probability': 0.02081996016204357}, {'value': ['process'], 'probability': 0.002475032117217779}, {'value': ['execute'], 'probability': 0.0015020592836663127}]","[0.59803283, 0.7205266, 1.0, 0.37075275, 0.27587637]",0.6061156204429465,"[{'value': ['put', 'all'], 'probability': 0.481764018535614}, {'value': ['copy', 'to'], 'probability': 0.43859758973121643}, {'value': ['put'], 'probability': 0.03694290295243263}, {'value': ['put', 'annotation'], 'probability': 0.015371875837445259}, {'value': ['map'], 'probability': 0.00593126006424427}, {'value': ['store'], 'probability': 0.005399963818490505}, {'value': ['set'], 'probability': 0.005125646945089102}, {'value': ['end'], 'probability': 0.004420421551913023}, {'value': ['get'], 'probability': 0.003540599253028631}, {'value': ['perform', 'action'], 'probability': 0.0029057979118078947}]","[0.4552825, 0.7977572, 0.48551613, 0.55970204, 0.4765969, 0.49962592, 0.4086756, 0.36005783, 0.4466728, 0.34917614]",0.6075803983802658
1533,1533,"private static void copyDirectory(FileDescriptor sourceDir, FileDescriptor destDir) {destDir.mkdirs();FileDescriptor[] files = sourceDir.list();for (int i = 0, n = files.length; i < n; i++) {FileDescriptor srcFile = files[i];FileDescriptor destFile = destDir.child(srcFile.name());if (srcFile.isDirectory())copyDirectory(srcFile, destFile);elsecopyFile(srcFile, destFile);}}public void render() {if (renderMethod == 0)renderNormal();;if (renderMethod == 1)renderSprites();}
","private static void [MASK](FileDescriptor sourceDir, FileDescriptor destDir) {destDir.mkdirs();FileDescriptor[] files = sourceDir.list();for (int i = 0, n = files.length; i < n; i++) {FileDescriptor srcFile = files[i];FileDescriptor destFile = destDir.child(srcFile.name());if (srcFile.isDirectory())[MASK](srcFile, destFile);elsecopyFile(srcFile, destFile);}}public void render() {if (renderMethod == 0)renderNormal();;if (renderMethod == 1)renderSprites();}
",copyDirectory,"[{'value': ['list'], 'probability': 0.14858604967594147}, {'value': ['search'], 'probability': 0.07771528512239456}, {'value': ['read'], 'probability': 0.07248242199420929}, {'value': ['update'], 'probability': 0.05076846852898598}, {'value': ['write'], 'probability': 0.049729857593774796}]","[0.50240225, 0.43329856, 0.7205266, 0.44024163, 0.59803283]",0.2126398785646137,"[{'value': ['copy', 'directory'], 'probability': 0.49814704060554504}, {'value': ['unzip'], 'probability': 0.18706613779067993}, {'value': ['set', 'destdir'], 'probability': 0.09070737659931183}, {'value': ['copy', 'dir'], 'probability': 0.06669997423887253}, {'value': ['zip', 'directory'], 'probability': 0.055374957621097565}, {'value': ['dump'], 'probability': 0.028190022334456444}, {'value': ['test', 'directory'], 'probability': 0.02115216664969921}, {'value': ['jar'], 'probability': 0.020840443670749664}, {'value': ['get', 'class', 'names'], 'probability': 0.017082562670111656}, {'value': ['un', 'zip'], 'probability': 0.014739325270056725}]","[0.84431636, 0.12857556, 0.4086756, 0.65896505, 0.48083872, 0.18902704, 0.5324058, 0.2850456, 0.4913287, 0.40692326]",0.5892167137055137
1534,1534,"public boolean touchUp(int x, int y, int pointer, int button) {renderMethod = (renderMethod + 1) % 2;return false;}
","public boolean [MASK](int x, int y, int pointer, int button) {renderMethod = (renderMethod + 1) % 2;return false;}
",touchUp,"[{'value': ['render'], 'probability': 0.19253423810005188}, {'value': ['equals'], 'probability': 0.1201208159327507}, {'value': ['apply'], 'probability': 0.03465505689382553}, {'value': ['replace'], 'probability': 0.03445923328399658}, {'value': ['compare'], 'probability': 0.021873893216252327}]","[0.31161478, 0.14792998, 0.37392274, 0.37642008, 0.3397576]",0.1111272669392317,"[{'value': ['touch', 'up'], 'probability': 0.999356210231781}, {'value': ['init'], 'probability': 0.0002008655428653583}, {'value': ['render'], 'probability': 0.00012172913557151332}, {'value': ['touch', 'down'], 'probability': 9.796913218451664e-05}, {'value': ['refresh'], 'probability': 9.493655670667067e-05}, {'value': ['on', 'back', 'pressed'], 'probability': 4.3436364649096504e-05}, {'value': ['on', 'resume'], 'probability': 2.2909556719241664e-05}, {'value': ['update'], 'probability': 2.2836025891592726e-05}, {'value': ['recycle'], 'probability': 2.084870902763214e-05}, {'value': ['reset'], 'probability': 1.818253986130003e-05}]","[0.8641351, -0.19700605, 0.31161478, 0.8479191, 0.2881595, 0.60590875, 0.43615696, 0.28119618, 0.15678057, 0.2449921]",0.8637380215943617
1535,1535,"public boolean isConnected() {return connected;}
","public boolean [MASK]() {return connected;}
",isConnected,"[{'value': ['connected'], 'probability': 0.633581280708313}, {'value': ['connect'], 'probability': 0.26089009642601013}, {'value': ['connection'], 'probability': 0.03206523507833481}, {'value': ['related'], 'probability': 0.004984013270586729}, {'value': ['disconnected'], 'probability': 0.0034620941150933504}]","[0.5438388, 0.33303002, 0.5186851, 0.52015406, 0.11904345]",0.4510866696474508,"[{'value': ['is', 'connected'], 'probability': 0.9982061386108398}, {'value': ['connected'], 'probability': 0.0011070951586589217}, {'value': ['is', 'running'], 'probability': 0.00038399093318730593}, {'value': ['get', 'connected'], 'probability': 0.0002319672639714554}, {'value': ['is', 'open'], 'probability': 2.3048705770634115e-05}, {'value': ['is', 'active'], 'probability': 1.719220199447591e-05}, {'value': ['is', 'connected', 'or', 'connecting'], 'probability': 1.3266112546261866e-05}, {'value': ['is', 'disposed'], 'probability': 6.093778210924938e-06}, {'value': ['found'], 'probability': 5.667666755471146e-06}, {'value': ['set', 'connected'], 'probability': 5.514496933756163e-06}]","[0.90505886, 0.5438388, 0.90842825, 0.6768246, 0.874953, 0.8986385, 0.82009536, 0.8459279, 0.6409692, 0.6825713]",0.90460226784119
1536,1536,"public float getAccelerometerX() {return accel[0];}
","public float [MASK]() {return accel[0];}
",getAccelerometerX,"[{'value': ['a'], 'probability': 0.08353374153375626}, {'value': ['start'], 'probability': 0.08200254291296005}, {'value': ['bar'], 'probability': 0.0517413504421711}, {'value': ['get'], 'probability': 0.04378790035843849}, {'value': ['end'], 'probability': 0.03386373445391655}]","[0.63481355, 0.7199945, 0.45318797, 1.0, 0.66437757]",0.2018044931153154,"[{'value': ['get', 'longitude'], 'probability': 0.7619305849075317}, {'value': ['get', 'x'], 'probability': 0.08752451092004776}, {'value': ['get', 'z'], 'probability': 0.04366397485136986}, {'value': ['get', 'latitude'], 'probability': 0.019031712785363197}, {'value': ['get', 'hue'], 'probability': 0.01836167648434639}, {'value': ['get', 'min', 'x'], 'probability': 0.018320675939321518}, {'value': ['get', 'frame'], 'probability': 0.0162221509963274}, {'value': ['get', 'y'], 'probability': 0.013166222721338272}, {'value': ['get', 'h'], 'probability': 0.012445762753486633}, {'value': ['get', 'default', 'value'], 'probability': 0.009332697838544846}]","[0.65675265, 0.7925645, 0.8003988, 0.7543885, 0.764923, 0.6646174, 0.8404866, 0.69577336, 0.8091152, 0.75552434]",0.6852125017457309
1537,1537,"public float getAccelerometerY() {return accel[1];}
","public float [MASK]() {return accel[1];}
",getAccelerometerY,"[{'value': ['start'], 'probability': 0.07794464379549026}, {'value': ['a'], 'probability': 0.05011832341551781}, {'value': ['get'], 'probability': 0.04743121191859245}, {'value': ['bar'], 'probability': 0.04114113748073578}, {'value': ['end'], 'probability': 0.03295474126935005}]","[0.7199945, 0.63481355, 1.0, 0.45318797, 0.66437757]",0.1759057758827871,"[{'value': ['get', 'longitude'], 'probability': 0.3450393080711365}, {'value': ['get', 'y'], 'probability': 0.15739907324314117}, {'value': ['get', 'z'], 'probability': 0.15210039913654327}, {'value': ['get', 'x'], 'probability': 0.1274200677871704}, {'value': ['get', 'max', 'x'], 'probability': 0.07376477122306824}, {'value': ['get', 'alpha'], 'probability': 0.0640411451458931}, {'value': ['get', 'latitude'], 'probability': 0.03074917569756508}, {'value': ['get', 'max', 'y'], 'probability': 0.02522088773548603}, {'value': ['get', 'frame'], 'probability': 0.01252567395567894}, {'value': ['get', 'acceleration'], 'probability': 0.011739544570446014}]","[0.65675265, 0.69577336, 0.8003988, 0.7925645, 0.74264467, 0.7418046, 0.7543885, 0.6849645, 0.8404866, 0.7870091]",0.7213752182968686
1538,1538,"public float getAccelerometerZ() {return accel[2];}
","public float [MASK]() {return accel[2];}
",getAccelerometerZ,"[{'value': ['start'], 'probability': 0.06117410212755203}, {'value': ['a'], 'probability': 0.05409691855311394}, {'value': ['bar'], 'probability': 0.04861941561102867}, {'value': ['get'], 'probability': 0.043691106140613556}, {'value': ['end'], 'probability': 0.027623731642961502}]","[0.7199945, 0.63481355, 0.45318797, 1.0, 0.66437757]",0.1624639011591736,"[{'value': ['get', 'z'], 'probability': 0.6718781590461731}, {'value': ['get', 'latitude'], 'probability': 0.10119417309761047}, {'value': ['get', 'longitude'], 'probability': 0.09622479975223541}, {'value': ['get', 'x'], 'probability': 0.04594147577881813}, {'value': ['get', 'y'], 'probability': 0.0363132506608963}, {'value': ['get', 'max', 'x'], 'probability': 0.012691011652350426}, {'value': ['get', 'center', 'y'], 'probability': 0.01077290065586567}, {'value': ['get', 'f'], 'probability': 0.009456539526581764}, {'value': ['get', 'blue', 'mask'], 'probability': 0.007997102104127407}, {'value': ['get', 'strength'], 'probability': 0.007530528586357832}]","[0.8003988, 0.7543885, 0.65675265, 0.7925645, 0.69577336, 0.74264467, 0.7283063, 0.7780981, 0.7527935, 0.85666776]",0.7760837866905577
1539,1539,"public int getX() {return touchX[0];}
","public int [MASK]() {return touchX[0];}
",getX,"[{'value': ['touch'], 'probability': 0.7546989321708679}, {'value': ['paint'], 'probability': 0.014567400328814983}, {'value': ['get'], 'probability': 0.009297121316194534}, {'value': ['wrap'], 'probability': 0.008299519307911396}, {'value': ['touched'], 'probability': 0.005252683535218239}]","[0.6786632, 0.41529104, 1.0, 0.40682167, 0.39920053]",0.5330065184512205,"[{'value': ['get', 'x'], 'probability': 0.9995459914207458}, {'value': ['get', 'min', 'x'], 'probability': 0.0002432003675494343}, {'value': ['get', 'y'], 'probability': 6.077035504858941e-05}, {'value': ['get', 'start', 'x'], 'probability': 4.5653221604879946e-05}, {'value': ['x'], 'probability': 3.3249365515075624e-05}, {'value': ['get', 'method'], 'probability': 2.8176498744869605e-05}, {'value': ['get', 'time'], 'probability': 1.3006961125938687e-05}, {'value': ['get', 'format'], 'probability': 1.1963219549215864e-05}, {'value': ['get', 'left'], 'probability': 1.1519210602273233e-05}, {'value': ['get', 'phase'], 'probability': 6.4435257627337705e-06}]","[0.7925645, 0.6646174, 0.69577336, 0.84930575, 0.30854452, 0.81838024, 0.93789077, 0.7980526, 0.90257215, 0.8377184]",0.7925182192164346
1540,1540,"public int getX(int pointer) {return touchX[pointer];}
","public int [MASK](int pointer) {return touchX[pointer];}
",getX,"[{'value': ['touch'], 'probability': 0.8703293204307556}, {'value': ['paint'], 'probability': 0.012757472693920135}, {'value': ['get'], 'probability': 0.006797525100409985}, {'value': ['draw'], 'probability': 0.0064396909438073635}, {'value': ['pop'], 'probability': 0.0036196706350892782}]","[0.6786632, 0.41529104, 1.0, 0.558067, 0.38630247]",0.6077481326794004,"[{'value': ['get', 'x'], 'probability': 0.9999399185180664}, {'value': ['perform', 'drag'], 'probability': 4.1764309571590275e-05}, {'value': ['get', 'time'], 'probability': 6.7414653130981605e-06}, {'value': ['get', 'y'], 'probability': 3.625085355452029e-06}, {'value': ['get', 'navigator'], 'probability': 2.1793398445879575e-06}, {'value': ['get', 'phase'], 'probability': 1.3940939425083343e-06}, {'value': ['get', 'visible'], 'probability': 1.3035344181844266e-06}, {'value': ['get', 'start', 'x'], 'probability': 1.1848436543004937e-06}, {'value': ['get', 'invocation'], 'probability': 1.0920455224550096e-06}, {'value': ['on', 'mouse', 'move'], 'probability': 9.797325901672593e-07}]","[0.7925645, 0.5615974, 0.93789077, 0.69577336, 0.78100854, 0.8377184, 0.84646124, 0.84930575, 0.7856701, 0.70177966]",0.7925557064448762
1541,1541,"public int getY() {return touchY[0];}
","public int [MASK]() {return touchY[0];}
",getY,"[{'value': ['touch'], 'probability': 0.3128422498703003}, {'value': ['boost'], 'probability': 0.04344591870903969}, {'value': ['get'], 'probability': 0.04191815108060837}, {'value': ['extend'], 'probability': 0.028527360409498215}, {'value': ['float'], 'probability': 0.014943910762667656}]","[0.6786632, 0.48529312, 1.0, 0.5252367, 0.2808844]",0.2944978056629105,"[{'value': ['get', 'y'], 'probability': 0.9996601343154907}, {'value': ['get', 'bottom'], 'probability': 0.00010268152982462198}, {'value': ['y'], 'probability': 8.028573211049661e-05}, {'value': ['get', 'x'], 'probability': 7.925930549390614e-05}, {'value': ['get', 'max', 'y'], 'probability': 3.4051703551085666e-05}, {'value': ['get', 'height'], 'probability': 1.4980156265664846e-05}, {'value': ['get', 'min', 'y'], 'probability': 8.969251211965457e-06}, {'value': ['get', 'last'], 'probability': 7.3640562732180115e-06}, {'value': ['get', 'top'], 'probability': 6.709694389428478e-06}, {'value': ['get', 'start', 'y'], 'probability': 5.508799858944258e-06}]","[0.69577336, 0.8802582, 0.101747304, 0.7925645, 0.6849645, 0.8224554, 0.5792247, 0.8998977, 0.8810721, 0.81350756]",0.6957561237404919
1542,1542,"public int getY(int pointer) {return touchY[pointer];}
","public int [MASK](int pointer) {return touchY[pointer];}
",getY,"[{'value': ['touch'], 'probability': 0.2961605191230774}, {'value': ['get'], 'probability': 0.058709364384412766}, {'value': ['compare'], 'probability': 0.0553867407143116}, {'value': ['extend'], 'probability': 0.04166219383478165}, {'value': ['boost'], 'probability': 0.02345508523285389}]","[0.6786632, 1.0, 0.46117607, 0.5252367, 0.48529312]",0.3185107533373049,"[{'value': ['get', 'y'], 'probability': 0.9999330043792725}, {'value': ['get', 'bottom'], 'probability': 3.960659887525253e-05}, {'value': ['y'], 'probability': 1.1750147677958012e-05}, {'value': ['show'], 'probability': 5.83787414143444e-06}, {'value': ['get', 'height'], 'probability': 2.7271480576018803e-06}, {'value': ['get', 'x'], 'probability': 1.9407732452236814e-06}, {'value': ['get', 'top'], 'probability': 1.6322918554578791e-06}, {'value': ['gety'], 'probability': 1.3449806601784076e-06}, {'value': ['get', 'val'], 'probability': 1.0543653843342327e-06}, {'value': ['get', 'footer'], 'probability': 1.0517942428123206e-06}]","[0.69577336, 0.8802582, 0.101747304, 0.6094576, 0.8224554, 0.7925645, 0.8810721, 0.0, 0.7538201, 0.7512794]",0.6957731680535097
1543,1543,"public boolean isTouched() {return isTouched[0];}
","public boolean [MASK]() {return [MASK][0];}
",isTouched,"[{'value': ['equals'], 'probability': 0.09178392589092255}, {'value': ['next'], 'probability': 0.07444331794977188}, {'value': ['matches'], 'probability': 0.04435126855969429}, {'value': ['is'], 'probability': 0.04298324137926102}, {'value': ['value'], 'probability': 0.03679016977548599}]","[0.3373858, 0.6951459, 0.3614936, 0.99999994, 0.53464335]",0.1614011188996373,"[{'value': ['is', 'touched'], 'probability': 0.9053496718406677}, {'value': ['get'], 'probability': 0.05198745056986809}, {'value': ['is', 'true'], 'probability': 0.009034891612827778}, {'value': ['get', 'selected'], 'probability': 0.005840300116688013}, {'value': ['is', 'button', 'pressed'], 'probability': 0.0057109869085252285}, {'value': ['selected'], 'probability': 0.0056685651652514935}, {'value': ['get', 'frame'], 'probability': 0.00452497648075223}, {'value': ['get', 'first'], 'probability': 0.004394340328872204}, {'value': ['is', 'seed'], 'probability': 0.0037475682329386473}, {'value': ['get', 'hour'], 'probability': 0.0037412296514958143}]","[0.85466737, 0.60187685, 0.93291193, 0.6023909, 0.7427619, 0.39473376, 0.62952346, 0.70900965, 0.77943885, 0.5933319]",0.8345942450152843
1544,1544,"public boolean justTouched() {return justTouched;}
","public boolean [MASK]() {return [MASK];}
",justTouched,"[{'value': ['equals'], 'probability': 0.09117130935192108}, {'value': ['is'], 'probability': 0.0804816484451294}, {'value': ['exists'], 'probability': 0.04379364103078842}, {'value': ['next'], 'probability': 0.03853735700249672}, {'value': ['run'], 'probability': 0.025117989629507065}]","[0.31534284, 0.7418811, 0.40019536, 0.7725736, 0.6762664]",0.15274343953551,"[{'value': ['is', 'changed'], 'probability': 0.8267888426780701}, {'value': ['render'], 'probability': 0.055389389395713806}, {'value': ['update', 'mouse'], 'probability': 0.044170718640089035}, {'value': ['is', 'dry', 'run'], 'probability': 0.021060887724161148}, {'value': ['process', 'events'], 'probability': 0.012831336818635464}, {'value': ['get', 'input', 'data'], 'probability': 0.009611088782548904}, {'value': ['get', 'templates'], 'probability': 0.008716613054275513}, {'value': ['has', 'changed'], 'probability': 0.007216602098196745}, {'value': ['notify', 'users'], 'probability': 0.0071846977807581425}, {'value': ['get', 'update', 'status'], 'probability': 0.007029866334050894}]","[0.77232695, 0.20491472, 0.4082086, 0.77635145, 0.59058654, 0.6213105, 0.6267926, 0.7376835, 0.35782966, 0.670106]",0.7159011399380295
1545,1545,"public boolean isTouched(int pointer) {return isTouched[pointer];}
","public boolean [MASK](int pointer) {return [MASK][pointer];}
",isTouched,"[{'value': ['equals'], 'probability': 0.18528221547603607}, {'value': ['point'], 'probability': 0.12009608745574951}, {'value': ['value'], 'probability': 0.058430105447769165}, {'value': ['points'], 'probability': 0.022957753390073776}, {'value': ['contains'], 'probability': 0.02165694534778595}]","[0.3373858, 0.6433357, 0.53464335, 0.35217863, 0.59498084]",0.1919836547233535,"[{'value': ['is', 'touched'], 'probability': 0.9951039552688599}, {'value': ['get'], 'probability': 0.004854316357523203}, {'value': ['is', 'button', 'pressed'], 'probability': 1.8398059182800353e-05}, {'value': ['update', 'release', 'ship'], 'probability': 8.89475177245913e-06}, {'value': ['get', 'mouse', 'button'], 'probability': 4.440939846972469e-06}, {'value': ['get', 'card'], 'probability': 2.4501539428456454e-06}, {'value': ['get', 'first'], 'probability': 2.2482504391518887e-06}, {'value': ['get', 'cell'], 'probability': 2.1960818230581935e-06}, {'value': ['peek'], 'probability': 1.6901524304557825e-06}, {'value': ['is', 'down'], 'probability': 1.5137806030907086e-06}]","[0.85466737, 0.60187685, 0.7427619, 0.4917998, 0.52722573, 0.6052526, 0.70900965, 0.5958176, 0.06339543, 0.8798672]",0.8534307866880372
1546,1546,"public boolean isButtonPressed(int button) {if (button != Buttons.LEFT)return false;for (int i = 0; i < isTouched.length; i++) if (isTouched[i])return true;return false;}
","public boolean [MASK](int button) {if (button != Buttons.LEFT)return false;for (int i = 0; i < isTouched.length; i++) if (isTouched[i])return true;return false;}
",isButtonPressed,"[{'value': ['equals'], 'probability': 0.2141142189502716}, {'value': ['matches'], 'probability': 0.11249633133411407}, {'value': ['is'], 'probability': 0.06747312098741531}, {'value': ['push'], 'probability': 0.056628670543432236}, {'value': ['match'], 'probability': 0.026157638058066368}]","[0.3373858, 0.3614936, 0.99999994, 0.44964883, 0.40539563]",0.216446124536738,"[{'value': ['is', 'button', 'pressed'], 'probability': 0.30481013655662537}, {'value': ['is', 'touched'], 'probability': 0.28347936272621155}, {'value': ['get', 'button', 'state'], 'probability': 0.08972304314374924}, {'value': ['get', 'save', 'button'], 'probability': 0.08242947608232498}, {'value': ['is', 'down'], 'probability': 0.07902407646179199}, {'value': ['busy'], 'probability': 0.050221998244524}, {'value': ['get', 'selected'], 'probability': 0.04112335667014122}, {'value': ['update', 'release', 'ship'], 'probability': 0.035316720604896545}, {'value': ['button', 'clicked'], 'probability': 0.01839859038591385}, {'value': ['check', 'button'], 'probability': 0.015473232604563236}]","[0.7427619, 0.85466737, 0.6929421, 0.5595078, 0.8798672, 0.4052705, 0.6023909, 0.4917998, 0.22171853, 0.4092167]",0.7194112191044205
1547,1547,"public boolean isKeyPressed(int key) {if (key == Input.Keys.ANY_KEY) {return keyCount > 0;}if (key < 0 || key > 255) {return false;}return keys[key];}
","public boolean [MASK](int key) {if (key == Input.Keys.ANY_KEY) {return keyCount > 0;}if (key < 0 || key > 255) {return false;}return keys[key];}
",isKeyPressed,"[{'value': ['key'], 'probability': 0.1577950417995453}, {'value': ['matches'], 'probability': 0.14381755888462067}, {'value': ['contains'], 'probability': 0.08643008768558502}, {'value': ['keys'], 'probability': 0.05058683454990387}, {'value': ['equals'], 'probability': 0.030314652249217033}]","[0.57648766, 0.3614936, 0.59498084, 0.30038118, 0.3373858]",0.2198033321398146,"[{'value': ['is', 'valid', 'key'], 'probability': 0.5168930888175964}, {'value': ['contains', 'key'], 'probability': 0.26301103830337524}, {'value': ['is', 'key', 'pressed'], 'probability': 0.06913750618696213}, {'value': ['key', 'down'], 'probability': 0.043271951377391815}, {'value': ['has', 'key'], 'probability': 0.04072124511003494}, {'value': ['verify', 'key'], 'probability': 0.023654472082853317}, {'value': ['has'], 'probability': 0.013245226815342903}, {'value': ['exists'], 'probability': 0.01073252223432064}, {'value': ['num', 'children'], 'probability': 0.010199113748967648}, {'value': ['get', 'boolean'], 'probability': 0.009133885614573956}]","[0.8384994, 0.7003163, 0.83201253, 0.6242862, 0.797071, 0.46617034, 0.8292126, 0.65599275, 0.29253572, 0.48929548]",0.7711038921984787
1548,1548,"public boolean isKeyJustPressed(int key) {if (key == Input.Keys.ANY_KEY) {return keyJustPressed;}if (key < 0 || key > 255) {return false;}return justPressedKeys[key];}
","public boolean [MASK](int key) {if (key == Input.Keys.ANY_KEY) {return keyJustPressed;}if (key < 0 || key > 255) {return false;}return justPressedKeys[key];}
",isKeyJustPressed,"[{'value': ['matches'], 'probability': 0.12478718906641006}, {'value': ['contains'], 'probability': 0.08291629701852798}, {'value': ['equals'], 'probability': 0.06652708351612091}, {'value': ['key'], 'probability': 0.04583411291241646}, {'value': ['is'], 'probability': 0.035495225340127945}]","[0.3614936, 0.59498084, 0.3373858, 0.57648766, 0.99999994]",0.1788066936281358,"[{'value': ['is', 'valid', 'key'], 'probability': 0.48718422651290894}, {'value': ['is', 'key', 'pressed'], 'probability': 0.4158385694026947}, {'value': ['key', 'down'], 'probability': 0.0328076109290123}, {'value': ['get'], 'probability': 0.018233804032206535}, {'value': ['get', 'boolean'], 'probability': 0.012716155499219894}, {'value': ['check', 'property'], 'probability': 0.009054441936314106}, {'value': ['is', 'action', 'enabled'], 'probability': 0.007360015995800495}, {'value': ['is', 'modifier'], 'probability': 0.00585356866940856}, {'value': ['get', 'variable', 'value'], 'probability': 0.005763411056250334}, {'value': ['is', 'key', 'down'], 'probability': 0.005188175942748785}]","[0.8384994, 0.83201253, 0.6242862, 0.60187685, 0.48929548, 0.52166444, 0.8568053, 0.8024036, 0.64489913, 0.8418133]",0.8159750824780149
1549,1549,"public void getTextInput(TextInputListener listener, String title, String text, String hint) {Gdx.app.getInput().getTextInput(listener, title, text, hint);}
","public void [MASK](TextInputListener listener, String title, String text, String hint) {Gdx.app.getInput().[MASK](listener, title, text, hint);}
",getTextInput,"[{'value': ['run'], 'probability': 0.15274165570735931}, {'value': ['write'], 'probability': 0.06178829446434975}, {'value': ['process'], 'probability': 0.04611155763268471}, {'value': ['execute'], 'probability': 0.04438503831624985}, {'value': ['output'], 'probability': 0.042427126318216324}]","[0.65114945, 0.60768855, 0.52250975, 0.37713256, 0.23887894]",0.1879734129387998,"[{'value': ['get', 'text'], 'probability': 0.589966893196106}, {'value': ['get', 'text', 'input'], 'probability': 0.27895262837409973}, {'value': ['read', 'text'], 'probability': 0.067587710916996}, {'value': ['display', 'error'], 'probability': 0.03270922601222992}, {'value': ['next', 'row'], 'probability': 0.012988477945327759}, {'value': ['text', 'changed'], 'probability': 0.003997355233877897}, {'value': ['text'], 'probability': 0.0037763461004942656}, {'value': ['set', 'text'], 'probability': 0.0036263293586671352}, {'value': ['test', 'get', 'text'], 'probability': 0.0034196379128843546}, {'value': ['get', 'html'], 'probability': 0.002975351409986615}]","[0.8160962, 0.7404586, 0.4848335, 0.4367493, 0.6408781, 0.5140098, 0.33145607, 0.56965435, 0.779905, 0.73298925]",0.7536211816084685
1550,1550,"public float getAzimuth() {return compass[0];}
","public float [MASK]() {return compass[0];}
",getAzimuth,"[{'value': ['compass'], 'probability': 0.7048690319061279}, {'value': ['length'], 'probability': 0.031142394989728928}, {'value': ['##s'], 'probability': 0.012782195582985878}, {'value': ['delta'], 'probability': 0.012138818390667439}, {'value': ['point'], 'probability': 0.0075212628580629826}]","[0.1469588, 0.3304365, 0.0, 0.27034074, 0.5780369]",0.1215064743875817,"[{'value': ['get', 'azimuth'], 'probability': 0.6041619181632996}, {'value': ['get', 'x'], 'probability': 0.12914225459098816}, {'value': ['get', 'longitude'], 'probability': 0.09643027931451797}, {'value': ['get', 'angle'], 'probability': 0.03878344967961311}, {'value': ['get', 'alpha'], 'probability': 0.033367328345775604}, {'value': ['get', 'y'], 'probability': 0.02323845587670803}, {'value': ['get', 'min', 'x'], 'probability': 0.020714787766337395}, {'value': ['get', 'compass'], 'probability': 0.019294757395982742}, {'value': ['get', 'action'], 'probability': 0.01788158155977726}, {'value': ['get', 'f'], 'probability': 0.016985200345516205}]","[0.7185578, 0.7925645, 0.65675265, 0.8133433, 0.7418046, 0.69577336, 0.6646174, 0.8153152, 0.8970998, 0.7780981]",0.7310310945389832
1551,1551,"public float getPitch() {return compass[1];}
","public float [MASK]() {return compass[1];}
",getPitch,"[{'value': ['compass'], 'probability': 0.8166601657867432}, {'value': ['length'], 'probability': 0.017210768535733223}, {'value': ['##s'], 'probability': 0.00878973864018917}, {'value': ['delta'], 'probability': 0.006821973714977503}, {'value': ['scale'], 'probability': 0.005352300126105547}]","[0.1469588, 0.3304365, 0.0, 0.27034074, 0.34368768]",0.1293862396168946,"[{'value': ['get', 'alpha'], 'probability': 0.3489904999732971}, {'value': ['get', 'y'], 'probability': 0.20742158591747284}, {'value': ['get', 'azimuth'], 'probability': 0.15894815325737}, {'value': ['get', 'x'], 'probability': 0.09405949711799622}, {'value': ['get', 'sat'], 'probability': 0.042099159210920334}, {'value': ['get', 'angle'], 'probability': 0.03571069613099098}, {'value': ['get', 'max', 'y'], 'probability': 0.03376393765211105}, {'value': ['get', 'compass'], 'probability': 0.029078200459480286}, {'value': ['get', 'longitude'], 'probability': 0.026632122695446014}, {'value': ['get', 'max', 'x'], 'probability': 0.023296218365430832}]","[0.7418046, 0.69577336, 0.7185578, 0.7925645, 0.85569805, 0.8133433, 0.6849645, 0.8153152, 0.65675265, 0.74264467]",0.73865857655975
1552,1552,"public float getRoll() {return compass[2];}
","public float [MASK]() {return compass[2];}
",getRoll,"[{'value': ['compass'], 'probability': 0.8104381561279297}, {'value': ['length'], 'probability': 0.016256093978881836}, {'value': ['##s'], 'probability': 0.008995010517537594}, {'value': ['delta'], 'probability': 0.007665759418159723}, {'value': ['scale'], 'probability': 0.005588317755609751}]","[0.1469588, 0.3304365, 0.0, 0.27034074, 0.34368768]",0.1284656272422936,"[{'value': ['get', 'z'], 'probability': 0.39632633328437805}, {'value': ['get', 'latitude'], 'probability': 0.14470984041690826}, {'value': ['get', 'y'], 'probability': 0.09312345832586288}, {'value': ['get', 'angle'], 'probability': 0.09152980893850327}, {'value': ['get', 'x'], 'probability': 0.07884427160024643}, {'value': ['get', 'blue', 'mask'], 'probability': 0.0713864117860794}, {'value': ['get', 'center', 'y'], 'probability': 0.040486741811037064}, {'value': ['get', 'f'], 'probability': 0.02986826002597809}, {'value': ['get', 'target'], 'probability': 0.028927672654390335}, {'value': ['get', 'longitude'], 'probability': 0.024797245860099792}]","[0.8003988, 0.7543885, 0.69577336, 0.8133433, 0.7925645, 0.7527935, 0.7283063, 0.7780981, 0.8772629, 0.65675265]",0.7762429532791164
1553,1553,"public boolean isCatchBackKey() {return false;}
","public boolean [MASK]() {return false;}
",isCatchBackKey,"[{'value': ['equals'], 'probability': 0.08609996736049652}, {'value': ['is'], 'probability': 0.08533840626478195}, {'value': ['exists'], 'probability': 0.040638137608766556}, {'value': ['run'], 'probability': 0.03207220509648323}, {'value': ['matches'], 'probability': 0.026149984449148178}]","[0.3373858, 0.99999994, 0.65599275, 0.5624562, 0.3614936]",0.1685378933344579,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.8161649, 0.6806554, 0.56186396, 0.84856033, 0.6018855, 0.40556675, 0.83603704, 0.82156163, 0.8260242, 0.8537696]",0.7411481787423946
1554,1554,"public boolean isCatchMenuKey() {return false;}
","public boolean [MASK]() {return false;}
",isCatchMenuKey,"[{'value': ['equals'], 'probability': 0.08609996736049652}, {'value': ['is'], 'probability': 0.08533840626478195}, {'value': ['exists'], 'probability': 0.040638137608766556}, {'value': ['run'], 'probability': 0.03207220509648323}, {'value': ['matches'], 'probability': 0.026149984449148178}]","[0.3373858, 0.99999994, 0.65599275, 0.5624562, 0.3614936]",0.1685378933344579,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.8161649, 0.6806554, 0.56186396, 0.84856033, 0.6018855, 0.40556675, 0.83603704, 0.82156163, 0.8260242, 0.8537696]",0.7411481787423946
1555,1555,"public void setInputProcessor(InputProcessor processor) {this.processor = processor;}
","public void [MASK](InputProcessor processor) {this.processor = processor;}
",setInputProcessor,"[{'value': ['run'], 'probability': 0.423716276884079}, {'value': ['execute'], 'probability': 0.15666519105434418}, {'value': ['process'], 'probability': 0.1021372377872467}, {'value': ['write'], 'probability': 0.07376354187726974}, {'value': ['start'], 'probability': 0.042003992944955826}]","[0.67632943, 0.35167885, 0.55405426, 0.46259418, 0.71166486]",0.4622725462001091,"[{'value': ['set', 'input', 'processor'], 'probability': 0.7081208229064941}, {'value': ['set', 'processor'], 'probability': 0.21179316937923431}, {'value': ['set', 'listener'], 'probability': 0.05644702911376953}, {'value': ['set', 'context'], 'probability': 0.010102476924657822}, {'value': ['add', 'processor'], 'probability': 0.002959217643365264}, {'value': ['process', 'children'], 'probability': 0.0029255286790430546}, {'value': ['process', 'methods'], 'probability': 0.0022795950062572956}, {'value': ['process', 'values'], 'probability': 0.002249387325718999}, {'value': ['set', 'input'], 'probability': 0.0018158091697841883}, {'value': ['apply'], 'probability': 0.0013069481356069446}]","[0.6677758, 0.7357628, 0.77242494, 0.8485978, 0.42546937, 0.62856406, 0.5503096, 0.5875707, 0.82371736, 0.5010617]",0.6886941880479772
1556,1556,"public InputProcessor getInputProcessor() {return this.processor;}
","public InputProcessor [MASK]() {return this.processor;}
",getInputProcessor,"[{'value': ['processor'], 'probability': 0.21527639031410217}, {'value': ['execute'], 'probability': 0.21279655396938324}, {'value': ['clone'], 'probability': 0.1010366752743721}, {'value': ['run'], 'probability': 0.09656178206205368}, {'value': ['get'], 'probability': 0.03550826013088226}]","[0.17553365, 0.37713256, 0.166604, 0.65114945, 1.0]",0.2332582867810316,"[{'value': ['get', 'input', 'processor'], 'probability': 0.8841550946235657}, {'value': ['get', 'processor'], 'probability': 0.10202367603778839}, {'value': ['get', 'processor', 'name'], 'probability': 0.006005214061588049}, {'value': ['get', 'input'], 'probability': 0.005773274693638086}, {'value': ['get', 'listener'], 'probability': 0.0005288220709189773}, {'value': ['get', 'output', 'directory'], 'probability': 0.000374043796909973}, {'value': ['get', 'attachment'], 'probability': 0.0003324309072922915}, {'value': ['process', 'values'], 'probability': 0.00031356303952634335}, {'value': ['get', 'processors'], 'probability': 0.00026443362003192306}, {'value': ['get', 'keyboard'], 'probability': 0.00022943253861740232}]","[0.6765503, 0.7410948, 0.75151324, 0.8443169, 0.83910364, 0.6888224, 0.8311448, 0.53825206, 0.76917297, 0.7757187]",0.684699912317005
1557,1557,"public String[] getIPs() {return ips;}
","public String[] [MASK]() {return ips;}
",getIPs,"[{'value': ['keys'], 'probability': 0.08856606483459473}, {'value': ['size'], 'probability': 0.051909033209085464}, {'value': ['names'], 'probability': 0.0510316863656044}, {'value': ['next'], 'probability': 0.04986128583550453}, {'value': ['string'], 'probability': 0.039732757955789566}]","[0.39512447, 0.43109724, 0.4415013, 0.6966621, 0.31986862]",0.127348747372075,"[{'value': ['get', 'ips'], 'probability': 0.9949355721473694}, {'value': ['get', 'i', 'ps'], 'probability': 0.004836759064346552}, {'value': ['get', 'pieces'], 'probability': 0.00011463634291430935}, {'value': ['get', 'list'], 'probability': 3.9028353057801723e-05}, {'value': ['to', 'lines'], 'probability': 2.9200182325439528e-05}, {'value': ['get', 'array'], 'probability': 1.6541600416530855e-05}, {'value': ['get', 'names'], 'probability': 7.949594873934984e-06}, {'value': ['get', 'default', 'ip'], 'probability': 7.463495421689004e-06}, {'value': ['get', 'paths'], 'probability': 7.43220107324305e-06}, {'value': ['set', 'ips'], 'probability': 5.430818873719545e-06}]","[0.75270236, 0.85746133, 0.8381996, 0.86849356, 0.7341248, 0.8403326, 0.85447747, 0.69578195, 0.8441187, 0.44270754]",0.7532236717371251
1558,1558,"public boolean isPeripheralAvailable(Peripheral peripheral) {if (peripheral == Peripheral.Accelerometer)return true;if (peripheral == Peripheral.Compass)return true;if (peripheral == Peripheral.MultitouchScreen)return multiTouch;return false;}
","public boolean [MASK](Peripheral peripheral) {if (peripheral == Peripheral.Accelerometer)return true;if (peripheral == Peripheral.Compass)return true;if (peripheral == Peripheral.MultitouchScreen)return multiTouch;return false;}
",isPeripheralAvailable,"[{'value': ['equals'], 'probability': 0.2544116973876953}, {'value': ['execute'], 'probability': 0.03820925951004028}, {'value': ['contains'], 'probability': 0.03611912578344345}, {'value': ['process'], 'probability': 0.02675359509885311}, {'value': ['read'], 'probability': 0.02586253173649311}]","[0.3373858, 0.18233117, 0.59498084, 0.62380123, 0.45122457]",0.1426505569640084,"[{'value': ['to', 'int'], 'probability': 0.46353772282600403}, {'value': ['to', 'int', 'value'], 'probability': 0.307015597820282}, {'value': ['reassociate', 'if', 'uninitialized', 'proxy'], 'probability': 0.06194742023944855}, {'value': ['get', 'key'], 'probability': 0.053262852132320404}, {'value': ['on', 'preference', 'change'], 'probability': 0.03151407092809677}, {'value': ['to', 'arg'], 'probability': 0.02500811778008938}, {'value': ['unproxy'], 'probability': 0.015815891325473785}, {'value': ['test', 'get', 'set'], 'probability': 0.014729244634509087}, {'value': ['apply', 'change'], 'probability': 0.013692319393157959}, {'value': ['value', 'hash', 'code'], 'probability': 0.013476734980940819}]","[0.47161716, 0.59292823, 0.5187471, 0.6801628, 0.7216476, 0.47860053, 0.0, 0.67646456, 0.59112877, 0.52972126]",0.5289206156563132
1559,1559,"public int getRotation() {return 0;}
","public int [MASK]() {return 0;}
",getRotation,"[{'value': ['get'], 'probability': 0.12598873674869537}, {'value': ['size'], 'probability': 0.1163727194070816}, {'value': ['start'], 'probability': 0.10748777538537979}, {'value': ['length'], 'probability': 0.06915368884801865}, {'value': ['next'], 'probability': 0.03888930380344391}]","[1.0, 0.43109724, 0.7199945, 0.3304365, 0.6966621]",0.3034909082375374,"[{'value': ['describe', 'contents'], 'probability': 0.45059412717819214}, {'value': ['hash', 'code'], 'probability': 0.37287476658821106}, {'value': ['size'], 'probability': 0.0481923446059227}, {'value': ['get', 'server', 'port'], 'probability': 0.03297366946935654}, {'value': ['get', 'transaction', 'id'], 'probability': 0.025118989869952202}, {'value': ['get', 'index'], 'probability': 0.019638974219560623}, {'value': ['get', 'flags'], 'probability': 0.01695195585489273}, {'value': ['get', 'id'], 'probability': 0.01250510849058628}, {'value': ['get', 'auto', 'expand', 'level'], 'probability': 0.010910781100392342}, {'value': ['get', 'length'], 'probability': 0.010239441879093647}]","[0.43498147, 0.33598104, 0.43109724, 0.6926611, 0.7615852, 0.7092336, 0.75727946, 0.82231325, 0.78291446, 0.8075286]",0.4378843187448075
1560,1560,"public Orientation getNativeOrientation() {return Orientation.Landscape;}
","public Orientation [MASK]() {return Orientation.Landscape;}
",getNativeOrientation,"[{'value': ['create'], 'probability': 0.11072568595409393}, {'value': ['view'], 'probability': 0.0235366802662611}, {'value': ['get'], 'probability': 0.017482580617070198}, {'value': ['scope'], 'probability': 0.017225034534931183}, {'value': ['resolve'], 'probability': 0.014279517345130444}]","[0.62328804, 0.51203084, 1.0, 0.26266706, 0.427468]",0.109176567973313,"[{'value': ['get', 'orientation'], 'probability': 0.7647311091423035}, {'value': ['orientation'], 'probability': 0.23403772711753845}, {'value': ['get', 'pull', 'to', 'refresh', 'scroll', 'direction'], 'probability': 0.00043087295489385724}, {'value': ['set', 'orientation'], 'probability': 0.00040500707109458745}, {'value': ['is', 'landscape'], 'probability': 0.00013292385847307742}, {'value': ['get', 'execution', 'mode'], 'probability': 0.0001100475710700266}, {'value': ['check', 'orientation'], 'probability': 7.229964103316888e-05}, {'value': ['get', 'rows', 'count'], 'probability': 3.626804027589969e-05}, {'value': ['get', 'runnable'], 'probability': 2.2544563762494363e-05}, {'value': ['get', 'alignment'], 'probability': 2.1199632101343013e-05}]","[0.8159136, 0.2360146, 0.81580245, 0.5710084, 0.5010919, 0.75747085, 0.579853, 0.7881328, 0.8613354, 0.8012006]",0.6800304781754273
1561,1561,"public boolean isCursorCatched() {return false;}
","public boolean [MASK]() {return false;}
",isCursorCatched,"[{'value': ['equals'], 'probability': 0.08609996736049652}, {'value': ['is'], 'probability': 0.08533840626478195}, {'value': ['exists'], 'probability': 0.040638137608766556}, {'value': ['run'], 'probability': 0.03207220509648323}, {'value': ['matches'], 'probability': 0.026149984449148178}]","[0.3373858, 0.99999994, 0.65599275, 0.5624562, 0.3614936]",0.1685378933344579,"[{'value': ['is', 'abstract'], 'probability': 0.352995365858078}, {'value': ['get', 'support', 'create'], 'probability': 0.1597580909729004}, {'value': ['get', 'support', 'delete'], 'probability': 0.09775981307029724}, {'value': ['is', 'global'], 'probability': 0.09715263545513153}, {'value': ['supports', 'initially', 'deferrable', 'columns'], 'probability': 0.07778112590312958}, {'value': ['synchronizes', 'variables', 'with', 'bindings'], 'probability': 0.043977197259664536}, {'value': ['is', 'collection', 'field'], 'probability': 0.043722230941057205}, {'value': ['is', 'string', 'field'], 'probability': 0.04308602586388588}, {'value': ['is', 'dirty'], 'probability': 0.04261969029903412}, {'value': ['is', 'object', 'field'], 'probability': 0.041147880256175995}]","[0.8161649, 0.6806554, 0.56186396, 0.84856033, 0.6018855, 0.40556675, 0.83603704, 0.82156163, 0.8260242, 0.8537696]",0.7411481787423946
1562,1562,"public int getDeltaX(int pointer) {return 0;}
","public int [MASK](int pointer) {return 0;}
",getDeltaX,"[{'value': ['get'], 'probability': 0.1912752240896225}, {'value': ['compare'], 'probability': 0.12102434039115906}, {'value': ['point'], 'probability': 0.060282204300165176}, {'value': ['advance'], 'probability': 0.056517343968153}, {'value': ['start'], 'probability': 0.043430574238300323}]","[1.0, 0.46117607, 0.5780369, 0.53706634, 0.7199945]",0.343557429279254,"[{'value': ['pointer'], 'probability': 0.6098707914352417}, {'value': ['get', 'pointer'], 'probability': 0.07039967179298401}, {'value': ['size', 'of'], 'probability': 0.0582607164978981}, {'value': ['get', 'maximum'], 'probability': 0.05449073389172554}, {'value': ['release'], 'probability': 0.04455181211233139}, {'value': ['get', 'subclass', 'property', 'table', 'number'], 'probability': 0.04317343607544899}, {'value': ['get', 'update', 'output', 'size'], 'probability': 0.0387641005218029}, {'value': ['fire', 'all', 'rules'], 'probability': 0.02765846997499466}, {'value': ['get', 'minimum'], 'probability': 0.02670798823237419}, {'value': ['get', 'available'], 'probability': 0.026122309267520905}]","[0.106114, 0.7850653, 0.5565958, 0.8238162, 0.46739787, 0.73426646, 0.7116738, 0.7195967, 0.852849, 0.886228]",0.3432449576116505
1563,1563,"public int getDeltaY() {return 0;}
","public int [MASK]() {return 0;}
",getDeltaY,"[{'value': ['get'], 'probability': 0.12598873674869537}, {'value': ['size'], 'probability': 0.1163727194070816}, {'value': ['start'], 'probability': 0.10748777538537979}, {'value': ['length'], 'probability': 0.06915368884801865}, {'value': ['next'], 'probability': 0.03888930380344391}]","[1.0, 0.43109724, 0.7199945, 0.3304365, 0.6966621]",0.3034909082375374,"[{'value': ['describe', 'contents'], 'probability': 0.45059412717819214}, {'value': ['hash', 'code'], 'probability': 0.37287476658821106}, {'value': ['size'], 'probability': 0.0481923446059227}, {'value': ['get', 'server', 'port'], 'probability': 0.03297366946935654}, {'value': ['get', 'transaction', 'id'], 'probability': 0.025118989869952202}, {'value': ['get', 'index'], 'probability': 0.019638974219560623}, {'value': ['get', 'flags'], 'probability': 0.01695195585489273}, {'value': ['get', 'id'], 'probability': 0.01250510849058628}, {'value': ['get', 'auto', 'expand', 'level'], 'probability': 0.010910781100392342}, {'value': ['get', 'length'], 'probability': 0.010239441879093647}]","[0.43498147, 0.33598104, 0.43109724, 0.6926611, 0.7615852, 0.7092336, 0.75727946, 0.82231325, 0.78291446, 0.8075286]",0.4378843187448075
1564,1564,"public int getDeltaY(int pointer) {return 0;}
","public int [MASK](int pointer) {return 0;}
",getDeltaY,"[{'value': ['get'], 'probability': 0.1912752240896225}, {'value': ['compare'], 'probability': 0.12102434039115906}, {'value': ['point'], 'probability': 0.060282204300165176}, {'value': ['advance'], 'probability': 0.056517343968153}, {'value': ['start'], 'probability': 0.043430574238300323}]","[1.0, 0.46117607, 0.5780369, 0.53706634, 0.7199945]",0.343557429279254,"[{'value': ['pointer'], 'probability': 0.6098707914352417}, {'value': ['get', 'pointer'], 'probability': 0.07039967179298401}, {'value': ['size', 'of'], 'probability': 0.0582607164978981}, {'value': ['get', 'maximum'], 'probability': 0.05449073389172554}, {'value': ['release'], 'probability': 0.04455181211233139}, {'value': ['get', 'subclass', 'property', 'table', 'number'], 'probability': 0.04317343607544899}, {'value': ['get', 'update', 'output', 'size'], 'probability': 0.0387641005218029}, {'value': ['fire', 'all', 'rules'], 'probability': 0.02765846997499466}, {'value': ['get', 'minimum'], 'probability': 0.02670798823237419}, {'value': ['get', 'available'], 'probability': 0.026122309267520905}]","[0.106114, 0.7850653, 0.5565958, 0.8238162, 0.46739787, 0.73426646, 0.7116738, 0.7195967, 0.852849, 0.886228]",0.3432449576116505
1565,1565,"public void getRotationMatrix(float[] matrix) {}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
","public void [MASK](float[] matrix) {}protected void reset(long cPtr, boolean cMemoryOwn) {if (!destroyed)destroy();super.reset(swigCPtr = cPtr, cMemoryOwn);}
",getRotationMatrix,"[{'value': ['destroy'], 'probability': 0.07010933756828308}, {'value': ['update'], 'probability': 0.06417618691921234}, {'value': ['save'], 'probability': 0.06201547011733055}, {'value': ['fill'], 'probability': 0.06087366119027138}, {'value': ['add'], 'probability': 0.05919871851801872}]","[0.40928823, 0.36048478, 0.62758213, 0.611881, 0.54842544]",0.1604627868378159,"[{'value': ['reset'], 'probability': 0.9976670742034912}, {'value': ['reinit'], 'probability': 0.0007650359184481204}, {'value': ['destroy'], 'probability': 0.0004842917260248214}, {'value': ['stop'], 'probability': 0.0004195002547930926}, {'value': ['clear'], 'probability': 0.00021948434005025774}, {'value': ['start'], 'probability': 0.00013255604426376522}, {'value': ['shutdown'], 'probability': 0.0001189266549772583}, {'value': ['restart'], 'probability': 8.343072840943933e-05}, {'value': ['mark'], 'probability': 5.742608482250944e-05}, {'value': ['abort'], 'probability': 5.2347619202919304e-05}]","[0.22144482, 0.0, 0.40928823, 0.6723754, 0.66159254, 0.7199945, 0.20602416, 0.34183505, 0.39535952, 0.17732103]",0.2217341386412161
1566,1566,"public static long getCPtr(btGeneric6DofSpring2ConstraintDoubleData2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
","public static long [MASK](btGeneric6DofSpring2ConstraintDoubleData2 obj) {return (obj == null) ? 0 : obj.swigCPtr;}
",getCPtr,"[{'value': ['get'], 'probability': 0.1690085232257843}, {'value': ['match'], 'probability': 0.029776038601994514}, {'value': ['main'], 'probability': 0.025020932778716087}, {'value': ['run'], 'probability': 0.024346524849534035}, {'value': ['execute'], 'probability': 0.022451238706707954}]","[1.0, 0.4692583, 0.40192893, 0.65114945, 0.37713256]",0.2173581330509629,"[{'value': ['get', 'c', 'ptr'], 'probability': 1.0}, {'value': ['size'], 'probability': 1.054314235915399e-08}, {'value': ['get', 'flags'], 'probability': 8.130188966504193e-09}, {'value': ['get', 'type'], 'probability': 4.1625649593868275e-09}, {'value': ['get', 'id'], 'probability': 2.1514112713560962e-09}, {'value': ['get', 'base'], 'probability': 1.9387691452266154e-09}, {'value': ['get', 'first'], 'probability': 1.7844875577210928e-09}, {'value': ['height'], 'probability': 6.839201427411012e-10}, {'value': ['get', 'count'], 'probability': 3.1865962646371315e-10}, {'value': ['get', 'top'], 'probability': 3.1842023462402835e-10}]","[0.67619735, 0.43109724, 0.75727946, 0.8542828, 0.82231325, 0.8330182, 0.8991456, 0.30686238, 0.85928994, 0.8810721]",0.676197370010872
1567,1567,"protected void finalize() {if (!destroyed)destroy();super.finalize();}
","protected void [MASK]() {if (!destroyed)destroy();super.[MASK]();}
",finalize,"[{'value': ['destroy'], 'probability': 0.9733927249908447}, {'value': ['destroyed'], 'probability': 0.009544972330331802}, {'value': ['rebuild'], 'probability': 0.006175817456096411}, {'value': ['run'], 'probability': 0.0022894893772900105}, {'value': ['build'], 'probability': 0.0005107757169753313}]","[0.1432974, -0.044560697, 0.28834844, 0.09746272, 0.31560788]",0.1412244520043508,"[{'value': ['finalize'], 'probability': 0.9999464750289917}, {'value': ['dispose'], 'probability': 4.112516398890875e-05}, {'value': ['free', 'mem'], 'probability': 7.3835099101415835e-06}, {'value': ['on', 'destroy'], 'probability': 2.8894064598716795e-06}, {'value': ['is', 'handled'], 'probability': 8.069619070738554e-07}, {'value': ['remove', 'notify'], 'probability': 6.561280088135391e-07}, {'value': ['do', 'finalize'], 'probability': 1.9771378845234722e-07}, {'value': ['test', 'finalize'], 'probability': 1.6581098805090733e-07}, {'value': ['release'], 'probability': 1.544726728752721e-07}, {'value': ['tear', 'down'], 'probability': 8.362584225096725e-08}]","[1.0, 0.33868343, 0.14763913, 0.25811264, 0.09339231, 0.37095228, 0.704253, 0.67354965, 0.29516438, 0.11604035]",0.9999628643053813
1568,1568,"protected synchronized void delete() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.delete_btGeneric6DofSpring2ConstraintDoubleData2(swigCPtr);}swigCPtr = 0;}super.delete();}
","protected synchronized void [MASK]() {if (swigCPtr != 0) {if (swigCMemOwn) {swigCMemOwn = false;DynamicsJNI.[MASK]_btGeneric6DofSpring2ConstraintDoubleData2(swigCPtr);}swigCPtr = 0;}super.[MASK]();}
",delete,"[{'value': ['run'], 'probability': 0.8250523209571838}, {'value': ['start'], 'probability': 0.0139552541077137}, {'value': ['clear'], 'probability': 0.011357340030372143}, {'value': ['test'], 'probability': 0.011090069077908993}, {'value': ['flush'], 'probability': 0.010200129821896553}]","[0.13931048, 0.15163165, 0.18840031, 0.14537679, 0.120570555]",0.1220362927628778,"[{'value': ['delete'], 'probability': 1.0}, {'value': ['do', 'delete'], 'probability': 2.7106727973347233e-10}, {'value': ['delete', 'file'], 'probability': 9.954600338479835e-11}, {'value': ['remove'], 'probability': 7.5760224482746e-11}, {'value': ['move'], 'probability': 5.980566042396163e-11}, {'value': ['test', 'delete'], 'probability': 5.413420059441343e-11}, {'value': ['delete', 'by', 'id'], 'probability': 2.8741738156146113e-11}, {'value': ['abort'], 'probability': 1.7666821131023802e-11}, {'value': ['delete', 'row'], 'probability': 9.944252886417981e-12}, {'value': ['clear'], 'probability': 5.664530042942539e-12}]","[1.0, 0.7730317, 0.8637192, 0.5385779, 0.24743508, 0.7130186, 0.68815297, 0.26680696, 0.76140904, 0.18840031]",1.0000000004228538
1569,1569,"public void setTypeConstraintData(btTypedConstraintDoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_typeConstraintData_set(swigCPtr, this, btTypedConstraintDoubleData.getCPtr(value), value);}
","public void [MASK](btTypedConstraintDoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_typeConstraintData_set(swigCPtr, this, btTypedConstraintDoubleData.getCPtr(value), value);}
",setTypeConstraintData,"[{'value': ['set'], 'probability': 0.632502019405365}, {'value': ['put'], 'probability': 0.03879517316818237}, {'value': ['add'], 'probability': 0.020082514733076096}, {'value': ['apply'], 'probability': 0.019710129126906395}, {'value': ['get'], 'probability': 0.016032369807362556}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.65028083]",0.6938363562745464,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1570,1570,"public btTypedConstraintDoubleData getTypeConstraintData() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_typeConstraintData_get(swigCPtr, this);return (cPtr == 0) ? null : new btTypedConstraintDoubleData(cPtr, false);}
","public btTypedConstraintDoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_typeConstraintData_get(swigCPtr, this);return (cPtr == 0) ? null : new btTypedConstraintDoubleData(cPtr, false);}
",getTypeConstraintData,"[{'value': ['get'], 'probability': 0.22280696034431458}, {'value': ['##2'], 'probability': 0.16711056232452393}, {'value': ['build'], 'probability': 0.0806737169623375}, {'value': ['##s'], 'probability': 0.07636343687772751}, {'value': ['create'], 'probability': 0.05047830194234848}]","[1.0, 0.0, 0.5626448, 0.0, 0.62328804]",0.2996601276983388,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1571,1571,"public void setRbAFrame(btTransformDoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbAFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
","public void [MASK](btTransformDoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbAFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
",setRbAFrame,"[{'value': ['set'], 'probability': 0.608299195766449}, {'value': ['put'], 'probability': 0.04900294542312622}, {'value': ['apply'], 'probability': 0.02275877445936203}, {'value': ['add'], 'probability': 0.02140980213880539}, {'value': ['execute'], 'probability': 0.017984487116336823}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.6758448563354489,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1572,1572,"public btTransformDoubleData getRbAFrame() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbAFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
","public btTransformDoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbAFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
",getRbAFrame,"[{'value': ['get'], 'probability': 0.22256016731262207}, {'value': ['create'], 'probability': 0.13481034338474274}, {'value': ['build'], 'probability': 0.12433793395757675}, {'value': ['##s'], 'probability': 0.04775667190551758}, {'value': ['clone'], 'probability': 0.03191962093114853}]","[1.0, 0.62328804, 0.5626448, 0.0, 0.166604]",0.3818618672902353,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1573,1573,"public void setRbBFrame(btTransformDoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbBFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
","public void [MASK](btTransformDoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbBFrame_set(swigCPtr, this, btTransformDoubleData.getCPtr(value), value);}
",setRbBFrame,"[{'value': ['set'], 'probability': 0.6236701011657715}, {'value': ['put'], 'probability': 0.04673321172595024}, {'value': ['apply'], 'probability': 0.021615924313664436}, {'value': ['add'], 'probability': 0.02038848213851452}, {'value': ['execute'], 'probability': 0.01627526432275772}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.6877194916532633,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1574,1574,"public btTransformDoubleData getRbBFrame() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbBFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
","public btTransformDoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rbBFrame_get(swigCPtr, this);return (cPtr == 0) ? null : new btTransformDoubleData(cPtr, false);}
",getRbBFrame,"[{'value': ['get'], 'probability': 0.217489093542099}, {'value': ['create'], 'probability': 0.1304442435503006}, {'value': ['build'], 'probability': 0.12336981296539307}, {'value': ['##s'], 'probability': 0.047168321907520294}, {'value': ['##2'], 'probability': 0.03623335808515549}]","[1.0, 0.62328804, 0.5626448, 0.0, 0.0]",0.3682068110682035,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1575,1575,"public void setLinearUpperLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearUpperLimit,"[{'value': ['set'], 'probability': 0.6407865881919861}, {'value': ['put'], 'probability': 0.04392063990235329}, {'value': ['apply'], 'probability': 0.01639629900455475}, {'value': ['add'], 'probability': 0.016341397538781166}, {'value': ['execute'], 'probability': 0.014790575951337814}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.6974061307438176,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1576,1576,"public btVector3DoubleData getLinearUpperLimit() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearUpperLimit,"[{'value': ['get'], 'probability': 0.21142691373825073}, {'value': ['build'], 'probability': 0.12632597982883453}, {'value': ['create'], 'probability': 0.11971154808998108}, {'value': ['clone'], 'probability': 0.06180726736783981}, {'value': ['##2'], 'probability': 0.04638589918613434}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.3674156802587548,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1577,1577,"public void setLinearLowerLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearLowerLimit,"[{'value': ['set'], 'probability': 0.5993362665176392}, {'value': ['put'], 'probability': 0.04152880609035492}, {'value': ['execute'], 'probability': 0.02030845172703266}, {'value': ['write'], 'probability': 0.017221396788954735}, {'value': ['apply'], 'probability': 0.01654389686882496}]","[1.0, 0.7944568, 0.35167885, 0.46259418, 0.5010617]",0.6557271916661294,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1578,1578,"public btVector3DoubleData getLinearLowerLimit() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearLowerLimit,"[{'value': ['get'], 'probability': 0.2261337786912918}, {'value': ['build'], 'probability': 0.14247111976146698}, {'value': ['create'], 'probability': 0.12166018784046173}, {'value': ['clone'], 'probability': 0.05668623000383377}, {'value': ['##s'], 'probability': 0.03345620259642601}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.391567902458474,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1579,1579,"public void setLinearBounce(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearBounce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearBounce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearBounce,"[{'value': ['set'], 'probability': 0.3828065097332001}, {'value': ['put'], 'probability': 0.06194030120968819}, {'value': ['execute'], 'probability': 0.0391637347638607}, {'value': ['write'], 'probability': 0.0325823649764061}, {'value': ['apply'], 'probability': 0.025425799190998077}]","[1.0, 0.7944568, 0.35167885, 0.46259418, 0.5010617]",0.4736007651738525,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1580,1580,"public btVector3DoubleData getLinearBounce() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearBounce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearBounce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearBounce,"[{'value': ['get'], 'probability': 0.19513091444969177}, {'value': ['build'], 'probability': 0.0952133759856224}, {'value': ['create'], 'probability': 0.0858236700296402}, {'value': ['##2'], 'probability': 0.07941503077745438}, {'value': ['clone'], 'probability': 0.06840489059686661}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3135916182985975,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1581,1581,"public void setLinearStopERP(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearStopERP,"[{'value': ['set'], 'probability': 0.6806756258010864}, {'value': ['put'], 'probability': 0.04208117350935936}, {'value': ['add'], 'probability': 0.020199280232191086}, {'value': ['apply'], 'probability': 0.01614372804760933}, {'value': ['update'], 'probability': 0.01237016636878252}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.41854778]",0.7376448977186922,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1582,1582,"public btVector3DoubleData getLinearStopERP() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearStopERP,"[{'value': ['get'], 'probability': 0.26819512248039246}, {'value': ['build'], 'probability': 0.10892613232135773}, {'value': ['create'], 'probability': 0.10049771517515182}, {'value': ['clone'], 'probability': 0.06566683948040009}, {'value': ['##2'], 'probability': 0.042626891285181046}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.4030612236057125,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1583,1583,"public void setLinearStopCFM(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearStopCFM,"[{'value': ['set'], 'probability': 0.6412393450737}, {'value': ['put'], 'probability': 0.046141281723976135}, {'value': ['apply'], 'probability': 0.018242644146084785}, {'value': ['add'], 'probability': 0.015104339458048344}, {'value': ['update'], 'probability': 0.01333767082542181}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.41854778]",0.7003001151195779,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1584,1584,"public btVector3DoubleData getLinearStopCFM() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearStopCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearStopCFM,"[{'value': ['get'], 'probability': 0.2255437672138214}, {'value': ['create'], 'probability': 0.11938828229904175}, {'value': ['build'], 'probability': 0.11906014382839203}, {'value': ['clone'], 'probability': 0.0718691498041153}, {'value': ['##2'], 'probability': 0.035406164824962616}]","[1.0, 0.62328804, 0.5626448, 0.166604, 0.0]",0.3789193111736522,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1585,1585,"public void setLinearMotorERP(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearMotorERP,"[{'value': ['set'], 'probability': 0.6794178485870361}, {'value': ['put'], 'probability': 0.03888839855790138}, {'value': ['add'], 'probability': 0.017265938222408295}, {'value': ['update'], 'probability': 0.014045465737581253}, {'value': ['apply'], 'probability': 0.014043014496564865}]","[1.0, 0.7944568, 0.5084879, 0.41854778, 0.5010617]",0.7320076357108033,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1586,1586,"public btVector3DoubleData getLinearMotorERP() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearMotorERP,"[{'value': ['get'], 'probability': 0.24463002383708954}, {'value': ['build'], 'probability': 0.11991748958826065}, {'value': ['create'], 'probability': 0.11614081263542175}, {'value': ['clone'], 'probability': 0.06439671665430069}, {'value': ['##s'], 'probability': 0.032105278223752975}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.3952189026937699,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1587,1587,"public void setLinearMotorCFM(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearMotorCFM,"[{'value': ['set'], 'probability': 0.6361246109008789}, {'value': ['put'], 'probability': 0.04227402061223984}, {'value': ['apply'], 'probability': 0.016987133771181107}, {'value': ['execute'], 'probability': 0.015951121225953102}, {'value': ['add'], 'probability': 0.014007366262376308}]","[1.0, 0.7944568, 0.5010617, 0.35167885, 0.5084879]",0.6909533428626273,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1588,1588,"public btVector3DoubleData getLinearMotorCFM() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMotorCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearMotorCFM,"[{'value': ['get'], 'probability': 0.22926990687847137}, {'value': ['create'], 'probability': 0.12716728448867798}, {'value': ['build'], 'probability': 0.12291224300861359}, {'value': ['clone'], 'probability': 0.07155609875917435}, {'value': ['##s'], 'probability': 0.029163608327507973}]","[1.0, 0.62328804, 0.5626448, 0.166604, 0.0]",0.3896092177695044,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1589,1589,"public void setLinearTargetVelocity(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearTargetVelocity_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearTargetVelocity_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearTargetVelocity,"[{'value': ['set'], 'probability': 0.5918905735015869}, {'value': ['put'], 'probability': 0.04026540741324425}, {'value': ['apply'], 'probability': 0.027511414140462875}, {'value': ['execute'], 'probability': 0.021850353106856346}, {'value': ['add'], 'probability': 0.018294386565685272}]","[1.0, 0.7944568, 0.5010617, 0.35167885, 0.5084879]",0.6546513956100155,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1590,1590,"public btVector3DoubleData getLinearTargetVelocity() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearTargetVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearTargetVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearTargetVelocity,"[{'value': ['get'], 'probability': 0.20928871631622314}, {'value': ['build'], 'probability': 0.13596601784229279}, {'value': ['create'], 'probability': 0.11206018179655075}, {'value': ['##2'], 'probability': 0.06444932520389557}, {'value': ['clone'], 'probability': 0.057730913162231445}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3652532579305667,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1591,1591,"public void setLinearMaxMotorForce(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMaxMotorForce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMaxMotorForce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearMaxMotorForce,"[{'value': ['set'], 'probability': 0.5768395066261292}, {'value': ['put'], 'probability': 0.048113688826560974}, {'value': ['execute'], 'probability': 0.02356969565153122}, {'value': ['apply'], 'probability': 0.020637784153223038}, {'value': ['add'], 'probability': 0.018298139795660973}]","[1.0, 0.7944568, 0.35167885, 0.5010617, 0.5084879]",0.6429979014173225,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1592,1592,"public btVector3DoubleData getLinearMaxMotorForce() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMaxMotorForce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearMaxMotorForce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearMaxMotorForce,"[{'value': ['get'], 'probability': 0.22126097977161407}, {'value': ['build'], 'probability': 0.1410827934741974}, {'value': ['create'], 'probability': 0.12711463868618011}, {'value': ['clone'], 'probability': 0.07631786167621613}, {'value': ['##2'], 'probability': 0.03879909962415695}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.3925843712636594,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1593,1593,"public void setLinearServoTarget(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoTarget_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoTarget_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearServoTarget,"[{'value': ['set'], 'probability': 0.5527139902114868}, {'value': ['put'], 'probability': 0.05081649869680405}, {'value': ['execute'], 'probability': 0.028806135058403015}, {'value': ['apply'], 'probability': 0.02419532649219036}, {'value': ['add'], 'probability': 0.02023991197347641}]","[1.0, 0.7944568, 0.35167885, 0.5010617, 0.5084879]",0.6256311113609221,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1594,1594,"public btVector3DoubleData getLinearServoTarget() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoTarget_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoTarget_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearServoTarget,"[{'value': ['get'], 'probability': 0.21474267542362213}, {'value': ['build'], 'probability': 0.15159985423088074}, {'value': ['create'], 'probability': 0.12188675254583359}, {'value': ['clone'], 'probability': 0.05833034589886665}, {'value': ['##2'], 'probability': 0.038215067237615585}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.3857281653354439,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1595,1595,"public void setLinearSpringStiffness(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffness_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffness_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearSpringStiffness,"[{'value': ['set'], 'probability': 0.6816993355751038}, {'value': ['put'], 'probability': 0.046582046896219254}, {'value': ['apply'], 'probability': 0.020327728241682053}, {'value': ['add'], 'probability': 0.013738068751990795}, {'value': ['execute'], 'probability': 0.011615829542279243}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.7399628871906525,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1596,1596,"public btVector3DoubleData getLinearSpringStiffness() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffness_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffness_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearSpringStiffness,"[{'value': ['get'], 'probability': 0.2137615978717804}, {'value': ['build'], 'probability': 0.10861161351203918}, {'value': ['##2'], 'probability': 0.09820976108312607}, {'value': ['create'], 'probability': 0.07660336792469025}, {'value': ['##s'], 'probability': 0.04942075163125992}]","[1.0, 0.5626448, 0.0, 0.62328804, 0.0]",0.3226173179254346,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1597,1597,"public void setLinearSpringDamping(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDamping_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDamping_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearSpringDamping,"[{'value': ['set'], 'probability': 0.6153244972229004}, {'value': ['put'], 'probability': 0.04620086029171944}, {'value': ['apply'], 'probability': 0.02312731184065342}, {'value': ['read'], 'probability': 0.013723128475248814}, {'value': ['convert'], 'probability': 0.012903444468975067}]","[1.0, 0.7944568, 0.5010617, 0.4820371, 0.43720448]",0.6758737943448487,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1598,1598,"public btVector3DoubleData getLinearSpringDamping() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDamping_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDamping_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearSpringDamping,"[{'value': ['get'], 'probability': 0.23880961537361145}, {'value': ['build'], 'probability': 0.1270926147699356}, {'value': ['create'], 'probability': 0.12673580646514893}, {'value': ['##s'], 'probability': 0.04022056981921196}, {'value': ['clone'], 'probability': 0.03223680704832077}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3946813043516938,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1599,1599,"public void setLinearEquilibriumPoint(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEquilibriumPoint_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEquilibriumPoint_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setLinearEquilibriumPoint,"[{'value': ['set'], 'probability': 0.4961487948894501}, {'value': ['put'], 'probability': 0.06778694689273834}, {'value': ['apply'], 'probability': 0.030433664098381996}, {'value': ['add'], 'probability': 0.023777106776833534}, {'value': ['execute'], 'probability': 0.02055373601615429}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.5845704220724256,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1600,1600,"public btVector3DoubleData getLinearEquilibriumPoint() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEquilibriumPoint_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEquilibriumPoint_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getLinearEquilibriumPoint,"[{'value': ['get'], 'probability': 0.21712879836559296}, {'value': ['build'], 'probability': 0.13220100104808807}, {'value': ['create'], 'probability': 0.1042700856924057}, {'value': ['##2'], 'probability': 0.07366252690553665}, {'value': ['clone'], 'probability': 0.04480902478098869}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.363966660981366,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1601,1601,"public void setLinearEnableMotor(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableMotor_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableMotor_set(swigCPtr, this, value);}
",setLinearEnableMotor,"[{'value': ['set'], 'probability': 0.5100691318511963}, {'value': ['put'], 'probability': 0.14154264330863953}, {'value': ['read'], 'probability': 0.028661182150244713}, {'value': ['execute'], 'probability': 0.016219303011894226}, {'value': ['write'], 'probability': 0.015613487921655178}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.46259418]",0.6492610919924807,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1602,1602,"public String getLinearEnableMotor() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableMotor_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableMotor_get(swigCPtr, this);}
",getLinearEnableMotor,"[{'value': ['name'], 'probability': 0.09567563235759735}, {'value': ['build'], 'probability': 0.07253533601760864}, {'value': ['get'], 'probability': 0.06630159169435501}, {'value': ['run'], 'probability': 0.042065031826496124}, {'value': ['start'], 'probability': 0.02928527072072029}]","[0.47842693, 0.5626448, 1.0, 0.65114945, 0.7199945]",0.2013628750591112,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1603,1603,"public void setLinearServoMotor(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoMotor_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoMotor_set(swigCPtr, this, value);}
",setLinearServoMotor,"[{'value': ['set'], 'probability': 0.6046651601791382}, {'value': ['put'], 'probability': 0.12599894404411316}, {'value': ['read'], 'probability': 0.018246302381157875}, {'value': ['execute'], 'probability': 0.013775015249848366}, {'value': ['add'], 'probability': 0.011555979028344154}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.5084879]",0.7242817269551419,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1604,1604,"public String getLinearServoMotor() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoMotor_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearServoMotor_get(swigCPtr, this);}
",getLinearServoMotor,"[{'value': ['name'], 'probability': 0.11441256105899811}, {'value': ['build'], 'probability': 0.07179220765829086}, {'value': ['get'], 'probability': 0.07092461735010147}, {'value': ['run'], 'probability': 0.03926066681742668}, {'value': ['format'], 'probability': 0.02668171189725399}]","[0.47842693, 0.5626448, 1.0, 0.65114945, 0.29473126]",0.1994846751498546,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1605,1605,"public void setLinearEnableSpring(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableSpring_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableSpring_set(swigCPtr, this, value);}
",setLinearEnableSpring,"[{'value': ['set'], 'probability': 0.5943577885627747}, {'value': ['put'], 'probability': 0.12754090130329132}, {'value': ['read'], 'probability': 0.024482037872076035}, {'value': ['write'], 'probability': 0.014066831208765507}, {'value': ['execute'], 'probability': 0.013174474239349365}]","[1.0, 0.7944568, 0.4820371, 0.46259418, 0.35167885]",0.7186251909882624,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1606,1606,"public String getLinearEnableSpring() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableSpring_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearEnableSpring_get(swigCPtr, this);}
",getLinearEnableSpring,"[{'value': ['get'], 'probability': 0.10922672599554062}, {'value': ['build'], 'probability': 0.07109762728214264}, {'value': ['name'], 'probability': 0.05558023229241371}, {'value': ['next'], 'probability': 0.0450652651488781}, {'value': ['run'], 'probability': 0.04174626246094704}]","[1.0, 0.5626448, 0.47842693, 0.6966621, 0.65114945]",0.2343988343503085,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1607,1607,"public void setLinearSpringStiffnessLimited(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffnessLimited_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffnessLimited_set(swigCPtr, this, value);}
",setLinearSpringStiffnessLimited,"[{'value': ['set'], 'probability': 0.7101126909255981}, {'value': ['put'], 'probability': 0.10280874371528625}, {'value': ['read'], 'probability': 0.013631204143166542}, {'value': ['write'], 'probability': 0.007937298156321049}, {'value': ['add'], 'probability': 0.007662326097488403}]","[1.0, 0.7944568, 0.4820371, 0.46259418, 0.5084879]",0.8059284883830696,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1608,1608,"public String getLinearSpringStiffnessLimited() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffnessLimited_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringStiffnessLimited_get(swigCPtr, this);}
",getLinearSpringStiffnessLimited,"[{'value': ['get'], 'probability': 0.14626842737197876}, {'value': ['name'], 'probability': 0.09011448174715042}, {'value': ['build'], 'probability': 0.06593368947505951}, {'value': ['next'], 'probability': 0.03590072691440582}, {'value': ['start'], 'probability': 0.025623712688684464}]","[1.0, 0.47842693, 0.5626448, 0.6966621, 0.7199945]",0.2699384773461728,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1609,1609,"public void setLinearSpringDampingLimited(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDampingLimited_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDampingLimited_set(swigCPtr, this, value);}
",setLinearSpringDampingLimited,"[{'value': ['set'], 'probability': 0.6933637261390686}, {'value': ['put'], 'probability': 0.10115236043930054}, {'value': ['read'], 'probability': 0.019981209188699722}, {'value': ['write'], 'probability': 0.008651256561279297}, {'value': ['apply'], 'probability': 0.008283658884465694}]","[1.0, 0.7944568, 0.4820371, 0.46259418, 0.5010617]",0.7915092337411335,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1610,1610,"public String getLinearSpringDampingLimited() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDampingLimited_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_linearSpringDampingLimited_get(swigCPtr, this);}
",getLinearSpringDampingLimited,"[{'value': ['get'], 'probability': 0.18669024109840393}, {'value': ['build'], 'probability': 0.08410271257162094}, {'value': ['name'], 'probability': 0.05500299856066704}, {'value': ['format'], 'probability': 0.036091770976781845}, {'value': ['next'], 'probability': 0.025518197566270828}]","[1.0, 0.5626448, 0.47842693, 0.29473126, 0.6966621]",0.2887400441375252,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1611,1611,"public void setPadding1(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_padding1_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_padding1_set(swigCPtr, this, value);}
",setPadding1,"[{'value': ['set'], 'probability': 0.586128294467926}, {'value': ['put'], 'probability': 0.14411605894565582}, {'value': ['read'], 'probability': 0.01483927946537733}, {'value': ['execute'], 'probability': 0.014815905131399632}, {'value': ['add'], 'probability': 0.01089215837419033}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.5084879]",0.7185243287716798,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1612,1612,"public String getPadding1() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_padding1_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_padding1_get(swigCPtr, this);}
",getPadding1,"[{'value': ['get'], 'probability': 0.12470222264528275}, {'value': ['name'], 'probability': 0.12343477457761765}, {'value': ['build'], 'probability': 0.05222342535853386}, {'value': ['run'], 'probability': 0.02822486311197281}, {'value': ['format'], 'probability': 0.02647465653717518}]","[1.0, 0.47842693, 0.5626448, 0.65114945, 0.29473126]",0.2393214939652632,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1613,1613,"public void setAngularUpperLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularUpperLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularUpperLimit,"[{'value': ['set'], 'probability': 0.5681322813034058}, {'value': ['put'], 'probability': 0.05663856863975525}, {'value': ['add'], 'probability': 0.02265571802854538}, {'value': ['execute'], 'probability': 0.019227897748351097}, {'value': ['apply'], 'probability': 0.018188798800110817}]","[1.0, 0.7944568, 0.5084879, 0.35167885, 0.5010617]",0.640525089182824,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1614,1614,"public btVector3DoubleData getAngularUpperLimit() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularUpperLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularUpperLimit,"[{'value': ['get'], 'probability': 0.2233612835407257}, {'value': ['build'], 'probability': 0.11868308484554291}, {'value': ['create'], 'probability': 0.10365414619445801}, {'value': ['##2'], 'probability': 0.058646026998758316}, {'value': ['clone'], 'probability': 0.047443971037864685}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3626484460325565,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1615,1615,"public void setAngularLowerLimit(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularLowerLimit_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularLowerLimit,"[{'value': ['set'], 'probability': 0.49247631430625916}, {'value': ['put'], 'probability': 0.06111878901720047}, {'value': ['execute'], 'probability': 0.026791268959641457}, {'value': ['add'], 'probability': 0.025723641738295555}, {'value': ['apply'], 'probability': 0.022173136472702026}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.5010617]",0.5746447422603961,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1616,1616,"public btVector3DoubleData getAngularLowerLimit() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularLowerLimit_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularLowerLimit,"[{'value': ['get'], 'probability': 0.19991935789585114}, {'value': ['build'], 'probability': 0.15170355141162872}, {'value': ['create'], 'probability': 0.09688549488782883}, {'value': ['clone'], 'probability': 0.04822051152586937}, {'value': ['##2'], 'probability': 0.03943100944161415}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.3536958688979973,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1617,1617,"public void setAngularBounce(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularBounce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularBounce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularBounce,"[{'value': ['set'], 'probability': 0.4059402048587799}, {'value': ['put'], 'probability': 0.06819722056388855}, {'value': ['execute'], 'probability': 0.03742791339755058}, {'value': ['apply'], 'probability': 0.025931047275662422}, {'value': ['add'], 'probability': 0.02481023594737053}]","[1.0, 0.7944568, 0.35167885, 0.5010617, 0.5084879]",0.4988913129300243,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1618,1618,"public btVector3DoubleData getAngularBounce() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularBounce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularBounce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularBounce,"[{'value': ['get'], 'probability': 0.18108566105365753}, {'value': ['build'], 'probability': 0.10608900338411331}, {'value': ['##2'], 'probability': 0.08145047724246979}, {'value': ['create'], 'probability': 0.06498215347528458}, {'value': ['clone'], 'probability': 0.047066785395145416}]","[1.0, 0.5626448, 0.0, 0.62328804, 0.166604]",0.2891201983538464,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1619,1619,"public void setAngularStopERP(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularStopERP,"[{'value': ['set'], 'probability': 0.6534817218780518}, {'value': ['put'], 'probability': 0.0474897176027298}, {'value': ['add'], 'probability': 0.021754469722509384}, {'value': ['apply'], 'probability': 0.015918564051389694}, {'value': ['execute'], 'probability': 0.014034722000360489}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.7151840314831983,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1620,1620,"public btVector3DoubleData getAngularStopERP() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularStopERP,"[{'value': ['get'], 'probability': 0.28818878531455994}, {'value': ['build'], 'probability': 0.1093798503279686}, {'value': ['create'], 'probability': 0.09109772741794586}, {'value': ['clone'], 'probability': 0.05646093189716339}, {'value': ['##2'], 'probability': 0.03616895154118538}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.4159175276032429,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1621,1621,"public void setAngularStopCFM(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularStopCFM,"[{'value': ['set'], 'probability': 0.5835561156272888}, {'value': ['put'], 'probability': 0.05412957817316055}, {'value': ['apply'], 'probability': 0.019986767321825027}, {'value': ['add'], 'probability': 0.019336899742484093}, {'value': ['execute'], 'probability': 0.017963020130991936}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.6527241225652155,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1622,1622,"public btVector3DoubleData getAngularStopCFM() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularStopCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularStopCFM,"[{'value': ['get'], 'probability': 0.24346551299095154}, {'value': ['build'], 'probability': 0.12034063041210175}, {'value': ['create'], 'probability': 0.10416451841592789}, {'value': ['clone'], 'probability': 0.061134617775678635}, {'value': ['##2'], 'probability': 0.03258032724261284}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.3862843102149539,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1623,1623,"public void setAngularMotorERP(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorERP_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularMotorERP,"[{'value': ['set'], 'probability': 0.6431017518043518}, {'value': ['put'], 'probability': 0.04538942128419876}, {'value': ['add'], 'probability': 0.021229654550552368}, {'value': ['apply'], 'probability': 0.016413895413279533}, {'value': ['execute'], 'probability': 0.014150215312838554}]","[1.0, 0.7944568, 0.5084879, 0.5010617, 0.35167885]",0.7031574127234581,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1624,1624,"public btVector3DoubleData getAngularMotorERP() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorERP_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularMotorERP,"[{'value': ['get'], 'probability': 0.24620762467384338}, {'value': ['build'], 'probability': 0.12060004472732544}, {'value': ['create'], 'probability': 0.10312183201313019}, {'value': ['clone'], 'probability': 0.04895169660449028}, {'value': ['##s'], 'probability': 0.04040316119790077}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.386492762682034,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1625,1625,"public void setAngularMotorCFM(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorCFM_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularMotorCFM,"[{'value': ['set'], 'probability': 0.5781905055046082}, {'value': ['put'], 'probability': 0.05000651627779007}, {'value': ['apply'], 'probability': 0.020257148891687393}, {'value': ['execute'], 'probability': 0.018832141533493996}, {'value': ['add'], 'probability': 0.017312025651335716}]","[1.0, 0.7944568, 0.5010617, 0.35167885, 0.5084879]",0.6434944234881487,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1626,1626,"public btVector3DoubleData getAngularMotorCFM() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMotorCFM_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularMotorCFM,"[{'value': ['get'], 'probability': 0.22462153434753418}, {'value': ['build'], 'probability': 0.12757481634616852}, {'value': ['create'], 'probability': 0.10707303136587143}, {'value': ['clone'], 'probability': 0.05694838985800743}, {'value': ['##s'], 'probability': 0.038282740861177444}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.372626007540173,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1627,1627,"public void setAngularTargetVelocity(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularTargetVelocity_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularTargetVelocity_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularTargetVelocity,"[{'value': ['set'], 'probability': 0.5382118821144104}, {'value': ['put'], 'probability': 0.04578130692243576}, {'value': ['apply'], 'probability': 0.030745701864361763}, {'value': ['execute'], 'probability': 0.02528218738734722}, {'value': ['add'], 'probability': 0.02353394590318203}]","[1.0, 0.7944568, 0.5010617, 0.35167885, 0.5084879]",0.6108465815673984,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1628,1628,"public btVector3DoubleData getAngularTargetVelocity() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularTargetVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularTargetVelocity_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularTargetVelocity,"[{'value': ['get'], 'probability': 0.20008428394794464}, {'value': ['build'], 'probability': 0.1369292438030243}, {'value': ['create'], 'probability': 0.09395477175712585}, {'value': ['##2'], 'probability': 0.08134225755929947}, {'value': ['clone'], 'probability': 0.04689285531640053}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3435002304066715,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1629,1629,"public void setAngularMaxMotorForce(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMaxMotorForce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMaxMotorForce_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularMaxMotorForce,"[{'value': ['set'], 'probability': 0.5466293692588806}, {'value': ['put'], 'probability': 0.05499473214149475}, {'value': ['execute'], 'probability': 0.023460211232304573}, {'value': ['add'], 'probability': 0.022288816049695015}, {'value': ['apply'], 'probability': 0.020922813564538956}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.5010617]",0.6203879800345348,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1630,1630,"public btVector3DoubleData getAngularMaxMotorForce() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMaxMotorForce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularMaxMotorForce_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularMaxMotorForce,"[{'value': ['get'], 'probability': 0.2098846137523651}, {'value': ['build'], 'probability': 0.14565232396125793}, {'value': ['create'], 'probability': 0.10648249089717865}, {'value': ['clone'], 'probability': 0.06231222301721573}, {'value': ['##2'], 'probability': 0.05464036017656326}]","[1.0, 0.5626448, 0.62328804, 0.166604, 0.0]",0.3685858614711882,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1631,1631,"public void setAngularServoTarget(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoTarget_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoTarget_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularServoTarget,"[{'value': ['set'], 'probability': 0.5220512747764587}, {'value': ['put'], 'probability': 0.058987125754356384}, {'value': ['execute'], 'probability': 0.030380450189113617}, {'value': ['add'], 'probability': 0.024813564494252205}, {'value': ['apply'], 'probability': 0.022828565910458565}]","[1.0, 0.7944568, 0.35167885, 0.5084879, 0.5010617]",0.6036540748450249,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1632,1632,"public btVector3DoubleData getAngularServoTarget() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoTarget_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoTarget_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularServoTarget,"[{'value': ['get'], 'probability': 0.22013747692108154}, {'value': ['build'], 'probability': 0.1461571604013443}, {'value': ['create'], 'probability': 0.1004147082567215}, {'value': ['##2'], 'probability': 0.0491848886013031}, {'value': ['clone'], 'probability': 0.048076506704092026}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3729690646634484,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1633,1633,"public void setAngularSpringStiffness(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffness_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffness_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularSpringStiffness,"[{'value': ['set'], 'probability': 0.628740668296814}, {'value': ['put'], 'probability': 0.05285685881972313}, {'value': ['apply'], 'probability': 0.020152250304818153}, {'value': ['add'], 'probability': 0.01763308048248291}, {'value': ['execute'], 'probability': 0.014601659029722214}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.6949319808520322,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1634,1634,"public btVector3DoubleData getAngularSpringStiffness() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffness_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffness_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularSpringStiffness,"[{'value': ['get'], 'probability': 0.24580036103725433}, {'value': ['build'], 'probability': 0.11407201737165451}, {'value': ['##2'], 'probability': 0.08066799491643906}, {'value': ['create'], 'probability': 0.06529243290424347}, {'value': ['##s'], 'probability': 0.052937936037778854}]","[1.0, 0.5626448, 0.0, 0.62328804, 0.0]",0.3506783783501279,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1635,1635,"public void setAngularSpringDamping(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDamping_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDamping_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularSpringDamping,"[{'value': ['set'], 'probability': 0.6068930625915527}, {'value': ['put'], 'probability': 0.051745399832725525}, {'value': ['apply'], 'probability': 0.019305845722556114}, {'value': ['update'], 'probability': 0.010928148403763771}, {'value': ['paint'], 'probability': 0.010909967124462128}]","[1.0, 0.7944568, 0.5010617, 0.41854778, 0.3280287]",0.6658287004461425,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1636,1636,"public btVector3DoubleData getAngularSpringDamping() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDamping_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDamping_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularSpringDamping,"[{'value': ['get'], 'probability': 0.24998724460601807}, {'value': ['build'], 'probability': 0.1309477984905243}, {'value': ['create'], 'probability': 0.11011619120836258}, {'value': ['##s'], 'probability': 0.04364769905805588}, {'value': ['clone'], 'probability': 0.027610765770077705}]","[1.0, 0.5626448, 0.62328804, 0.0, 0.166604]",0.3968985082679591,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1637,1637,"public void setAngularEquilibriumPoint(btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEquilibriumPoint_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
","public void [MASK](btVector3DoubleData value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEquilibriumPoint_set(swigCPtr, this, btVector3DoubleData.getCPtr(value), value);}
",setAngularEquilibriumPoint,"[{'value': ['set'], 'probability': 0.4556686282157898}, {'value': ['put'], 'probability': 0.07895402610301971}, {'value': ['apply'], 'probability': 0.030463911592960358}, {'value': ['add'], 'probability': 0.02653050795197487}, {'value': ['execute'], 'probability': 0.02262892760336399}]","[1.0, 0.7944568, 0.5010617, 0.5084879, 0.35167885]",0.5551070451643676,"[{'value': ['swap'], 'probability': 0.6816266179084778}, {'value': ['set'], 'probability': 0.05301619693636894}, {'value': ['set', 'bits'], 'probability': 0.046081967651844025}, {'value': ['assign'], 'probability': 0.041276972740888596}, {'value': ['set', 'to'], 'probability': 0.03635069727897644}, {'value': ['ne'], 'probability': 0.03558707982301712}, {'value': ['add'], 'probability': 0.03186134621500969}, {'value': ['lt'], 'probability': 0.026595523580908775}, {'value': ['set', 'top'], 'probability': 0.025171708315610886}, {'value': ['set', 'nodes'], 'probability': 0.022431842982769012}]","[0.3554226, 1.0, 0.81719714, 0.17613421, 0.9136955, 0.027621567, 0.5084879, -0.021349974, 0.8966336, 0.7400634]",0.42921056101584765
1638,1638,"public btVector3DoubleData getAngularEquilibriumPoint() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEquilibriumPoint_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
","public btVector3DoubleData [MASK]() {long cPtr = DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEquilibriumPoint_get(swigCPtr, this);return (cPtr == 0) ? null : new btVector3DoubleData(cPtr, false);}
",getAngularEquilibriumPoint,"[{'value': ['get'], 'probability': 0.20294231176376343}, {'value': ['build'], 'probability': 0.1271737962961197}, {'value': ['##2'], 'probability': 0.09661521017551422}, {'value': ['create'], 'probability': 0.08231137692928314}, {'value': ['##s'], 'probability': 0.03706563636660576}]","[1.0, 0.5626448, 0.0, 0.62328804, 0.0]",0.3257996807788634,"[{'value': ['clone'], 'probability': 0.24985620379447937}, {'value': ['get', 'parent'], 'probability': 0.10705603659152985}, {'value': ['get', 'dto'], 'probability': 0.09282155334949493}, {'value': ['get', 'data'], 'probability': 0.09101137518882751}, {'value': ['get', 'previous'], 'probability': 0.08914676308631897}, {'value': ['get', 'shutdown'], 'probability': 0.08140432834625244}, {'value': ['get', 'next'], 'probability': 0.07586400955915451}, {'value': ['get', 'inf'], 'probability': 0.07277494668960571}, {'value': ['get', 'unit'], 'probability': 0.07116889208555222}, {'value': ['get', 'target'], 'probability': 0.06889588385820389}]","[0.166604, 0.85029024, 0.88755053, 0.82370985, 0.86536276, 0.80612296, 0.926832, 0.6782611, 0.815615, 0.8772629]",0.6709325440641549
1639,1639,"public void setAngularEnableMotor(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableMotor_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableMotor_set(swigCPtr, this, value);}
",setAngularEnableMotor,"[{'value': ['set'], 'probability': 0.5240291953086853}, {'value': ['put'], 'probability': 0.1458548605442047}, {'value': ['read'], 'probability': 0.023412790149450302}, {'value': ['execute'], 'probability': 0.016687540337443352}, {'value': ['add'], 'probability': 0.013490326702594757}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.5084879]",0.6639187341539315,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1640,1640,"public String getAngularEnableMotor() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableMotor_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableMotor_get(swigCPtr, this);}
",getAngularEnableMotor,"[{'value': ['name'], 'probability': 0.12003582715988159}, {'value': ['get'], 'probability': 0.10013169050216675}, {'value': ['build'], 'probability': 0.06842593103647232}, {'value': ['run'], 'probability': 0.03277887403964996}, {'value': ['format'], 'probability': 0.0325038805603981}]","[0.47842693, 1.0, 0.5626448, 0.65114945, 0.29473126]",0.2269834115781184,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1641,1641,"public void setAngularServoMotor(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoMotor_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoMotor_set(swigCPtr, this, value);}
",setAngularServoMotor,"[{'value': ['set'], 'probability': 0.5695816278457642}, {'value': ['put'], 'probability': 0.1427570879459381}, {'value': ['read'], 'probability': 0.018942322582006454}, {'value': ['execute'], 'probability': 0.015472042374312878}, {'value': ['add'], 'probability': 0.012830700725317001}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.5084879]",0.704092312299471,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1642,1642,"public String getAngularServoMotor() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoMotor_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularServoMotor_get(swigCPtr, this);}
",getAngularServoMotor,"[{'value': ['name'], 'probability': 0.14136114716529846}, {'value': ['get'], 'probability': 0.08203794807195663}, {'value': ['build'], 'probability': 0.059365469962358475}, {'value': ['format'], 'probability': 0.032530587166547775}, {'value': ['run'], 'probability': 0.03149300068616867}]","[0.47842693, 1.0, 0.5626448, 0.29473126, 0.65114945]",0.2131650310171802,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1643,1643,"public void setAngularEnableSpring(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableSpring_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableSpring_set(swigCPtr, this, value);}
",setAngularEnableSpring,"[{'value': ['set'], 'probability': 0.6342042088508606}, {'value': ['put'], 'probability': 0.13070592284202576}, {'value': ['read'], 'probability': 0.014489760622382164}, {'value': ['execute'], 'probability': 0.012912199832499027}, {'value': ['add'], 'probability': 0.010215911082923412}]","[1.0, 0.7944568, 0.4820371, 0.35167885, 0.5084879]",0.7547646321198382,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1644,1644,"public String getAngularEnableSpring() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableSpring_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularEnableSpring_get(swigCPtr, this);}
",getAngularEnableSpring,"[{'value': ['get'], 'probability': 0.2487650066614151}, {'value': ['name'], 'probability': 0.08305466920137405}, {'value': ['build'], 'probability': 0.053273532539606094}, {'value': ['run'], 'probability': 0.03409652039408684}, {'value': ['resolve'], 'probability': 0.029276911169290543}]","[1.0, 0.47842693, 0.5626448, 0.65114945, 0.427468]",0.3531915455996197,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1645,1645,"public void setAngularSpringStiffnessLimited(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffnessLimited_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffnessLimited_set(swigCPtr, this, value);}
",setAngularSpringStiffnessLimited,"[{'value': ['set'], 'probability': 0.7082075476646423}, {'value': ['put'], 'probability': 0.10199933499097824}, {'value': ['read'], 'probability': 0.0108166029676795}, {'value': ['add'], 'probability': 0.009522787295281887}, {'value': ['get'], 'probability': 0.007806622423231602}]","[1.0, 0.7944568, 0.4820371, 0.5084879, 0.65028083]",0.8043743336554475,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1646,1646,"public String getAngularSpringStiffnessLimited() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffnessLimited_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringStiffnessLimited_get(swigCPtr, this);}
",getAngularSpringStiffnessLimited,"[{'value': ['get'], 'probability': 0.20458294451236725}, {'value': ['name'], 'probability': 0.10910414159297943}, {'value': ['build'], 'probability': 0.05960116907954216}, {'value': ['resolve'], 'probability': 0.030333813279867172}, {'value': ['next'], 'probability': 0.025292718783020973}]","[1.0, 0.47842693, 0.5626448, 0.427468, 0.6966621]",0.320902804869913,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1647,1647,"public void setAngularSpringDampingLimited(String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDampingLimited_set(swigCPtr, this, value);}
","public void [MASK](String value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDampingLimited_set(swigCPtr, this, value);}
",setAngularSpringDampingLimited,"[{'value': ['set'], 'probability': 0.704272449016571}, {'value': ['put'], 'probability': 0.095439612865448}, {'value': ['read'], 'probability': 0.018238121643662453}, {'value': ['apply'], 'probability': 0.007274999748915434}, {'value': ['write'], 'probability': 0.006788169499486685}]","[1.0, 0.7944568, 0.4820371, 0.5010617, 0.46259418]",0.7956719390430442,"[{'value': ['set', 'to'], 'probability': 0.2233799248933792}, {'value': ['set', 'top'], 'probability': 0.18587693572044373}, {'value': ['set', 'code'], 'probability': 0.17878644168376923}, {'value': ['set', 'info'], 'probability': 0.11503966152667999}, {'value': ['set', 'value'], 'probability': 0.0805816724896431}, {'value': ['set', 'cmt'], 'probability': 0.06768510490655899}, {'value': ['pack'], 'probability': 0.04780379310250282}, {'value': ['extend'], 'probability': 0.03518741577863693}, {'value': ['set', 'id'], 'probability': 0.033890627324581146}, {'value': ['set'], 'probability': 0.03176845237612724}]","[0.9136955, 0.8966336, 0.852165, 0.8025115, 0.8399167, 0.7170936, 0.459913, 0.5463553, 0.7939222, 1.0]",0.8315447763700821
1648,1648,"public String getAngularSpringDampingLimited() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDampingLimited_get(swigCPtr, this);}
","public String [MASK]() {return DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_angularSpringDampingLimited_get(swigCPtr, this);}
",getAngularSpringDampingLimited,"[{'value': ['get'], 'probability': 0.2367149293422699}, {'value': ['build'], 'probability': 0.06947018951177597}, {'value': ['name'], 'probability': 0.056058481335639954}, {'value': ['format'], 'probability': 0.0397859662771225}, {'value': ['resolve'], 'probability': 0.02087288163602352}]","[1.0, 0.5626448, 0.47842693, 0.29473126, 0.427468]",0.323270513075626,"[{'value': ['what'], 'probability': 0.45182153582572937}, {'value': ['get', 'name'], 'probability': 0.12196942418813705}, {'value': ['get', 'a', 'byte'], 'probability': 0.10541147738695145}, {'value': ['get', 'id'], 'probability': 0.07940623909235}, {'value': ['get', 'high'], 'probability': 0.07183696329593658}, {'value': ['get', 'title'], 'probability': 0.045849286019802094}, {'value': ['get', 'low'], 'probability': 0.03570378199219704}, {'value': ['get', 'a', 'float'], 'probability': 0.033593837171792984}, {'value': ['get', 'keywords'], 'probability': 0.03289603814482689}, {'value': ['to', 'formula', 'string'], 'probability': 0.02151147648692131}]","[0.76382285, 0.8655689, 0.7864137, 0.82231325, 0.88266915, 0.8368909, 0.8748523, 0.84568125, 0.7609473, 0.6733884]",0.7998204517255454
1649,1649,"public void setRotateOrder(int value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rotateOrder_set(swigCPtr, this, value);}
","public void [MASK](int value) {DynamicsJNI.btGeneric6DofSpring2ConstraintDoubleData2_rotateOrder_set(swigCPtr, this, value);}
",setRotateOrder,"[{'value': ['set'], 'probability': 0.57334303855896}, {'value': ['put'], 'probability': 0.12520579993724823}, {'value': ['execute'], 'probability': 0.017021046951413155}, {'value': ['read'], 'probability': 0.012241854332387447}, {'value': ['value'], 'probability': 0.010930579155683517}]","[1.0, 0.7944568, 0.35167885, 0.4820371, 0.47274652]",0.6898679985950372,"[{'value': ['set', 'top'], 'probability': 0.37998858094215393}, {'value': ['set', 'code'], 'probability': 0.25819748640060425}, {'value': ['set', 'value'], 'probability': 0.07483197003602982}, {'value': ['set', 'flags'], 'probability': 0.06113813444972038}, {'value': ['set', 'id'], 'probability': 0.058976516127586365}, {'value': ['pack'], 'probability': 0.044762857258319855}, {'value': ['set'], 'probability': 0.03763332962989807}, {'value': ['set', 'info'], 'probability': 0.029088716953992844}, {'value': ['set', 'bottom'], 'probability': 0.029045168310403824}, {'value': ['extend'], 'probability': 0.02633724734187126}]","[0.8966336, 0.852165, 0.8399167, 0.7786614, 0.7939222, 0.459913, 1.0, 0.8025115, 0.86028856, 0.5463553]",0.8389597825804684
1650,1650,"private void fail() {throw new RuntimeException();}
","private void [MASK]() {throw new RuntimeException();}
",fail,"[{'value': ['run'], 'probability': 0.9078236222267151}, {'value': ['execute'], 'probability': 0.031570300459861755}, {'value': ['start'], 'probability': 0.007812662050127983}, {'value': ['fail'], 'probability': 0.004446115810424089}, {'value': ['close'], 'probability': 0.0037459726445376873}]","[0.4177845, 0.3948771, 0.51208204, 1.0, 0.37856212]",0.4016059610014607,"[{'value': ['remove'], 'probability': 0.502190887928009}, {'value': ['exception'], 'probability': 0.17694313824176788}, {'value': ['throw', 'internal'], 'probability': 0.06713372468948364}, {'value': ['run'], 'probability': 0.05268416553735733}, {'value': ['throw', 'exception'], 'probability': 0.04106789454817772}, {'value': ['start'], 'probability': 0.040656186640262604}, {'value': ['execute'], 'probability': 0.03843821585178375}, {'value': ['clear'], 'probability': 0.031155062839388847}, {'value': ['close'], 'probability': 0.028980836272239685}, {'value': ['throw', 'error'], 'probability': 0.02074986696243286}]","[0.42598867, 0.35065743, 0.5197968, 0.4177845, 0.47398174, 0.51208204, 0.3948771, 0.52948284, 0.37856212, 0.41592437]",0.4244411771984596
1651,1651,"private void fail(String msg) {throw new RuntimeException(msg);}
","private void [MASK](String msg) {throw new RuntimeException(msg);}
",fail,"[{'value': ['run'], 'probability': 0.30178356170654297}, {'value': ['execute'], 'probability': 0.15015386044979095}, {'value': ['save'], 'probability': 0.04148691147565842}, {'value': ['error'], 'probability': 0.03140206262469292}, {'value': ['update'], 'probability': 0.027806680649518967}]","[0.4177845, 0.3948771, 0.44937733, 0.30633342, 0.2615742]",0.2209091091753476,"[{'value': ['show', 'exception'], 'probability': 0.6000159382820129}, {'value': ['error'], 'probability': 0.15605668723583221}, {'value': ['fail'], 'probability': 0.147577166557312}, {'value': ['throw', 'exception'], 'probability': 0.04389870911836624}, {'value': ['exception'], 'probability': 0.015389584936201572}, {'value': ['run', 'failed'], 'probability': 0.010193307884037495}, {'value': ['warning'], 'probability': 0.007960367016494274}, {'value': ['unreachable'], 'probability': 0.007202759385108948}, {'value': ['handle'], 'probability': 0.006811999250203371}, {'value': ['do', 'exit'], 'probability': 0.004893564619123936}]","[0.40620646, 0.30633342, 1.0, 0.47398174, 0.35065743, 0.62392527, 0.38924244, 0.12571658, 0.4665221, 0.6702548]",0.4821383190408991
1652,1652,"public void render() {Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);batch.begin();font.draw(batch, message, 20, Gdx.graphics.getHeight() - 20);batch.end();}
","public void [MASK]() {Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);batch.begin();font.draw(batch, message, 20, Gdx.graphics.getHeight() - 20);batch.end();}
",render,"[{'value': ['start'], 'probability': 0.6572594046592712}, {'value': ['run'], 'probability': 0.06632781028747559}, {'value': ['begin'], 'probability': 0.054424550384283066}, {'value': ['finish'], 'probability': 0.05156455934047699}, {'value': ['end'], 'probability': 0.03621869534254074}]","[0.16855277, 0.13372552, 0.29614606, 0.112674825, 0.24126767]",0.1503186594714268,"[{'value': ['render'], 'probability': 0.9860003590583801}, {'value': ['draw'], 'probability': 0.010935616679489613}, {'value': ['run'], 'probability': 0.0016463095089420676}, {'value': ['display'], 'probability': 0.0004049974959343672}, {'value': ['redraw'], 'probability': 0.00031826322083361447}, {'value': ['paint'], 'probability': 0.00022193386394064873}, {'value': ['clear', 'screen'], 'probability': 0.00015010338393040001}, {'value': ['execute'], 'probability': 0.00014339271001517773}, {'value': ['reset'], 'probability': 9.311469329986721e-05}, {'value': ['clear'], 'probability': 8.589194476371631e-05}]","[1.0, 0.2878108, 0.13372552, 0.30272847, 0.13582733, 0.25964546, 0.41021425, 0.43459237, 0.13656701, 0.38354138]",0.9897609099095995
1653,1653,"public void dispose() {batch.dispose();font.dispose();}public void mousePressed(MouseEvent event) {movingIndex = overIndex;moveAll = event.isControlDown();if (moveAll) {moveAllProportionally = event.isShiftDown();moveAllPrevY = event.getY();}}
","public void [MASK]() {batch.[MASK]();font.[MASK]();}public void mousePressed(MouseEvent event) {movingIndex = overIndex;moveAll = event.isControlDown();if (moveAll) {moveAllProportionally = event.isShiftDown();moveAllPrevY = event.getY();}}
",dispose,"[{'value': ['flush'], 'probability': 0.1052679792046547}, {'value': ['run'], 'probability': 0.09477575123310089}, {'value': ['start'], 'probability': 0.08920593559741974}, {'value': ['close'], 'probability': 0.06855694949626923}, {'value': ['clear'], 'probability': 0.060871466994285583}]","[0.23337094, 0.13288948, 0.14684053, 0.17637412, 0.20622805]",0.0749053102662541,"[{'value': ['dispose'], 'probability': 0.8604438304901123}, {'value': ['close'], 'probability': 0.07906994968652725}, {'value': ['run'], 'probability': 0.011675459332764149}, {'value': ['destroy'], 'probability': 0.010485195554792881}, {'value': ['stop'], 'probability': 0.008789664134383202}, {'value': ['clear'], 'probability': 0.007436669897288084}, {'value': ['finalize'], 'probability': 0.006165315862745047}, {'value': ['delete'], 'probability': 0.0058795250952243805}, {'value': ['cancel'], 'probability': 0.0058380053378641605}, {'value': ['reset'], 'probability': 0.004216378089040518}]","[0.99999994, 0.17637412, 0.13288948, 0.5099461, 0.22849083, 0.20622805, 0.33868343, 0.3089048, 0.31668118, 0.15166157]",0.8912226623301839
1654,1654,"public void mouseReleased(MouseEvent event) {movingIndex = -1;moveAll = false;}
","public void [MASK](MouseEvent event) {movingIndex = -1;moveAll = false;}
",mouseReleased,"[{'value': ['update'], 'probability': 0.4543952941894531}, {'value': ['handle'], 'probability': 0.0402769111096859}, {'value': ['start'], 'probability': 0.03704072907567024}, {'value': ['mouse'], 'probability': 0.026631062850356102}, {'value': ['save'], 'probability': 0.02562652714550495}]","[0.11049171, 0.21946055, 0.22627294, 1.0, 0.3016901]",0.1017897521890625,"[{'value': ['mouse', 'released'], 'probability': 0.8227713704109192}, {'value': ['mouse', 'pressed'], 'probability': 0.11687644571065903}, {'value': ['mouse', 'exited'], 'probability': 0.04521002247929573}, {'value': ['mouse', 'dragged'], 'probability': 0.008618631400167942}, {'value': ['mouse', 'clicked'], 'probability': 0.002532913815230131}, {'value': ['mouse', 'moved'], 'probability': 0.0016724845627322793}, {'value': ['key', 'released'], 'probability': 0.0010136530036106706}, {'value': ['mouse', 'entered'], 'probability': 0.0008785597747191787}, {'value': ['on', 'mouse', 'up'], 'probability': 0.0003235926851630211}, {'value': ['mouse', 'up'], 'probability': 0.00010242523421766236}]","[0.75282747, 0.8204347, 0.8131441, 0.8096148, 0.8508957, 0.7916642, 0.2692252, 0.79388255, 0.64640504, 0.8083059]",0.763776044123654
1655,1655,"public void mouseMoved(MouseEvent event) {int mouseX = event.getX();int mouseY = event.getY();int oldIndex = overIndex;overIndex = -1;int pointSize = isExpanded ? POINT_SIZE_EXPANDED : POINT_SIZE;int i = 0;for (Point point : points) {int x = chartX + (int) (chartWidth * (point.x / (float) maxX));int y = chartY + chartHeight - (int) (chartHeight * (point.y / (float) maxY));if (Math.abs(x - mouseX) <= pointSize && Math.abs(y - mouseY) <= pointSize) {overIndex = i;break;}i++;}if (overIndex != oldIndex)repaint();}
","public void [MASK](MouseEvent event) {int mouseX = event.getX();int mouseY = event.getY();int oldIndex = overIndex;overIndex = -1;int pointSize = isExpanded ? POINT_SIZE_EXPANDED : POINT_SIZE;int i = 0;for (Point point : points) {int x = chartX + (int) (chartWidth * (point.x / (float) maxX));int y = chartY + chartHeight - (int) (chartHeight * (point.y / (float) maxY));if (Math.abs(x - mouseX) <= pointSize && Math.abs(y - mouseY) <= pointSize) {overIndex = i;break;}i++;}if (overIndex != oldIndex)repaint();}
",mouseMoved,"[{'value': ['update'], 'probability': 0.524982750415802}, {'value': ['start'], 'probability': 0.07280872017145157}, {'value': ['setup'], 'probability': 0.022277630865573883}, {'value': ['paint'], 'probability': 0.021699955686926842}, {'value': ['launch'], 'probability': 0.021571533754467964}]","[0.11049171, 0.22627294, 0.34920183, 0.23679481, 0.1804253]",0.0912907608224877,"[{'value': ['mouse', 'moved'], 'probability': 0.6227177977561951}, {'value': ['mouse', 'clicked'], 'probability': 0.14833956956863403}, {'value': ['mouse', 'exited'], 'probability': 0.1019197329878807}, {'value': ['mouse', 'pressed'], 'probability': 0.08498544991016388}, {'value': ['mouse', 'released'], 'probability': 0.017299694940447807}, {'value': ['mouse', 'entered'], 'probability': 0.006366569548845291}, {'value': ['on', 'double', 'click'], 'probability': 0.005997345317155123}, {'value': ['mouse', 'dragged'], 'probability': 0.005109627265483141}, {'value': ['handle', 'mouse', 'event'], 'probability': 0.004032145254313946}, {'value': ['on', 'mouse', 'up'], 'probability': 0.0032320318277925253}]","[0.7916642, 0.8508957, 0.8131441, 0.8204347, 0.75282747, 0.79388255, 0.40637612, 0.8096148, 0.66086704, 0.64640504]",0.8012112461071794
1656,1656,"public void addPoint(float x, float y) {points.add(new Point(x, y));}
","public void [MASK](float x, float y) {points.add(new Point(x, y));}
",addPoint,"[{'value': ['add'], 'probability': 0.42115461826324463}, {'value': ['point'], 'probability': 0.40025943517684937}, {'value': ['points'], 'probability': 0.04518900439143181}, {'value': ['put'], 'probability': 0.021581165492534637}, {'value': ['draw'], 'probability': 0.01289294846355915}]","[1.0, 0.39054078, 0.33298585, 0.60947514, 0.44779792]",0.6114461680192478,"[{'value': ['add', 'point'], 'probability': 0.9968915581703186}, {'value': ['create', 'points'], 'probability': 0.0007301824516616762}, {'value': ['on', 'touch', 'up'], 'probability': 0.0004547316348180175}, {'value': ['add'], 'probability': 0.0004151093016844243}, {'value': ['remove', 'point'], 'probability': 0.00034929983667097986}, {'value': ['vertex'], 'probability': 0.00027646173839457333}, {'value': ['line', 'to'], 'probability': 0.0002657008299138397}, {'value': ['put', 'float'], 'probability': 0.00025637095677666366}, {'value': ['add', 'poly', 'point'], 'probability': 0.00020228110952302814}, {'value': ['add', 'points'], 'probability': 0.00015837422688491642}]","[0.84174263, 0.5777009, 0.55930597, 1.0, 0.6471302, 0.14606886, 0.5276312, 0.5695056, 0.7021567, 0.7802213]",0.8410356141272947
1657,1657,"public float[] getValuesX() {float[] values = new float[points.size()];int i = 0;for (Point point : points) values[i++] = point.x;return values;}
","public float[] [MASK]() {float[] values = new float[points.size()];int i = 0;for (Point point : points) values[i++] = point.x;return values;}
",getValuesX,"[{'value': ['values'], 'probability': 0.3385656774044037}, {'value': ['points'], 'probability': 0.32120177149772644}, {'value': ['value'], 'probability': 0.033115535974502563}, {'value': ['flags'], 'probability': 0.02524581179022789}, {'value': ['point'], 'probability': 0.018554653972387314}]","[0.37543342, 0.39846268, 0.46303764, 0.19713469, 0.5780369]",0.2861316277785912,"[{'value': ['get', 'values'], 'probability': 0.4605461061000824}, {'value': ['get', 'points'], 'probability': 0.42899540066719055}, {'value': ['to', 'float', 'array'], 'probability': 0.03507998213171959}, {'value': ['to', 'array'], 'probability': 0.029210327193140984}, {'value': ['values'], 'probability': 0.01760028675198555}, {'value': ['get', 'parameter', 'values'], 'probability': 0.010758779011666775}, {'value': ['to', 'int', 'array'], 'probability': 0.009044934064149857}, {'value': ['points'], 'probability': 0.00448972312733531}, {'value': ['get', 'value', 'names'], 'probability': 0.002814501989632845}, {'value': ['get', 'float', 'array'], 'probability': 0.0014598449924960732}]","[0.8338722, 0.80227304, 0.6566837, 0.69582117, 0.37543342, 0.6399895, 0.56464714, 0.39846268, 0.80231726, 0.78267986]",0.7953597949482878
1658,1658,"public float[] getValuesY() {float[] values = new float[points.size()];int i = 0;for (Point point : points) values[i++] = point.y;return values;}
","public float[] [MASK]() {float[] values = new float[points.size()];int i = 0;for (Point point : points) values[i++] = point.y;return values;}
",getValuesY,"[{'value': ['points'], 'probability': 0.306034654378891}, {'value': ['values'], 'probability': 0.2985855042934418}, {'value': ['value'], 'probability': 0.03541969880461693}, {'value': ['flags'], 'probability': 0.03497757762670517}, {'value': ['size'], 'probability': 0.018584301695227623}]","[0.39846268, 0.37543342, 0.46303764, 0.19713469, 0.43109724]",0.265349953824801,"[{'value': ['get', 'values'], 'probability': 0.4685603082180023}, {'value': ['get', 'points'], 'probability': 0.4221487045288086}, {'value': ['to', 'float', 'array'], 'probability': 0.03488431125879288}, {'value': ['to', 'array'], 'probability': 0.029610447585582733}, {'value': ['values'], 'probability': 0.017051560804247856}, {'value': ['get', 'parameter', 'values'], 'probability': 0.010068397037684917}, {'value': ['to', 'int', 'array'], 'probability': 0.008856818079948425}, {'value': ['points'], 'probability': 0.004465996753424406}, {'value': ['get', 'value', 'names'], 'probability': 0.0029088796582072973}, {'value': ['get', 'float', 'array'], 'probability': 0.0014446201967075467}]","[0.8338722, 0.80227304, 0.6566837, 0.69582117, 0.37543342, 0.6399895, 0.56464714, 0.39846268, 0.80231726, 0.78267986]",0.7959998981323773
1659,1659,"public void setValues(float[] x, float[] y) {points.clear();for (int i = 0; i < x.length; i++) points.add(new Point(x[i], y[i]));}
","public void [MASK](float[] x, float[] y) {points.clear();for (int i = 0; i < x.length; i++) points.add(new Point(x[i], y[i]));}
",setValues,"[{'value': ['add'], 'probability': 0.40736624598503113}, {'value': ['point'], 'probability': 0.30979296565055847}, {'value': ['put'], 'probability': 0.03777201101183891}, {'value': ['update'], 'probability': 0.02545720897614956}, {'value': ['fill'], 'probability': 0.018720805644989014}]","[0.5084879, 0.65246, 0.7944568, 0.41854778, 0.48556754]",0.4590218148468323,"[{'value': ['set'], 'probability': 0.19750045239925385}, {'value': ['get', 'points'], 'probability': 0.19671733677387238}, {'value': ['set', 'points'], 'probability': 0.14711853861808777}, {'value': ['add', 'point'], 'probability': 0.14558465778827667}, {'value': ['set', 'values'], 'probability': 0.14323288202285767}, {'value': ['fill'], 'probability': 0.09094621241092682}, {'value': ['update'], 'probability': 0.04001447930932045}, {'value': ['insert'], 'probability': 0.018475398421287537}, {'value': ['move'], 'probability': 0.013475215062499046}, {'value': ['add', 'points'], 'probability': 0.006934891454875469}]","[1.0, 0.6937032, 0.8347054, 0.6941916, 0.83473873, 0.48556754, 0.41854778, 0.31022063, 0.69789916, 0.63160264]",0.7578146044760558
1660,1660,"Point pixelToPoint(float x, float y) {Point point = new Point();point.x = Math.min(maxX, Math.max(0, x - chartX) / (float) chartWidth * maxX);point.y = Math.min(maxY, Math.max(0, chartHeight - (y - chartY)) / (float) chartHeight * maxY);return point;}
","Point pixelToPoint(float [MASK] float y) {Point point = new Point();point.x = Math.min(maxX, Math.max(0, x - chartX) / (float) chartWidth * maxX);point.y = Math.min(maxY, Math.max(0, chartHeight - (y - chartY)) / (float) chartHeight * maxY);return point;}
","x,","[{'value': [','], 'probability': 0.9985001087188721}, {'value': ['>'], 'probability': 0.00019807666831184179}, {'value': [';'], 'probability': 0.0001280442374991253}, {'value': ['<'], 'probability': 0.00010164327250095084}, {'value': ['in'], 'probability': 0.00010161536192754284}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['clamp'], 'probability': 0.16885387897491455}, {'value': ['intersects'], 'probability': 0.1489168405532837}, {'value': ['max'], 'probability': 0.1378462016582489}, {'value': ['point'], 'probability': 0.11240725964307785}, {'value': ['get', 'bottom'], 'probability': 0.10993138700723648}, {'value': ['mouse', 'moved'], 'probability': 0.08807680010795593}, {'value': ['get', 'max', 'y'], 'probability': 0.08051439374685287}, {'value': ['get', 'max', 'x'], 'probability': 0.05588121712207794}, {'value': ['within'], 'probability': 0.05214681476354599}, {'value': ['set', 'size'], 'probability': 0.045425258576869965}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1661,1661,"Point pointToPixel(Point point) {Point pixel = new Point();pixel.x = chartX + (int) (chartWidth * (point.x / (float) maxX));pixel.y = chartY + chartHeight - (int) (chartHeight * (point.y / (float) maxY));return pixel;}
","Point pointToPixel(Point [MASK] {Point pixel = new Point();pixel.x = chartX + (int) (chartWidth * (point.x / (float) maxX));pixel.y = chartY + chartHeight - (int) (chartHeight * (point.y / (float) maxY));return pixel;}
",point),"[{'value': [')'], 'probability': 0.9999736547470093}, {'value': ['try'], 'probability': 4.793125299329404e-06}, {'value': [']'], 'probability': 4.793120751855895e-06}, {'value': ['at'], 'probability': 1.187856923934305e-06}, {'value': ['for'], 'probability': 1.0090502655657474e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'pixel'], 'probability': 0.8566920757293701}, {'value': ['get', 'blue'], 'probability': 0.03988049924373627}, {'value': ['paint', 'component'], 'probability': 0.023432353511452675}, {'value': ['to', 'point'], 'probability': 0.0167161263525486}, {'value': ['point', 'at'], 'probability': 0.015057913959026337}, {'value': ['set', 'pixel'], 'probability': 0.011731365695595741}, {'value': ['mouse', 'moved'], 'probability': 0.011465719901025295}, {'value': ['get', 'red'], 'probability': 0.009723343886435032}, {'value': ['get', 'color'], 'probability': 0.00792689248919487}, {'value': ['get', 'green'], 'probability': 0.007373696193099022}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1662,1662,"public boolean isExpanded() {return isExpanded;}
","public boolean [MASK]() {return [MASK];}
",isExpanded,"[{'value': ['equals'], 'probability': 0.09117130935192108}, {'value': ['is'], 'probability': 0.0804816484451294}, {'value': ['exists'], 'probability': 0.04379364103078842}, {'value': ['next'], 'probability': 0.03853735700249672}, {'value': ['run'], 'probability': 0.025117989629507065}]","[0.3373858, 0.99999994, 0.65599275, 0.6951459, 0.5624562]",0.1808867146316264,"[{'value': ['is', 'expanded'], 'probability': 0.9999600648880005}, {'value': ['is', 'collapsed'], 'probability': 2.8352253139019012e-05}, {'value': ['get', 'expanded'], 'probability': 5.248121851764154e-06}, {'value': ['get', 'visible'], 'probability': 2.2436595372710144e-06}, {'value': ['get', 'is', 'hidden'], 'probability': 2.0586542177625233e-06}, {'value': ['get', 'toolbar', 'actions'], 'probability': 7.560996664324193e-07}, {'value': ['is', 'visible'], 'probability': 7.375668360509735e-07}, {'value': ['get', 'group', 'view'], 'probability': 2.5198335151799256e-07}, {'value': ['is', 'group', 'expanded'], 'probability': 1.9287685404378863e-07}, {'value': ['get', 'initially', 'selected', 'elements'], 'probability': 1.2461167386845773e-07}]","[0.86376464, 0.8156619, 0.608863, 0.6757344, 0.8436227, 0.5724031, 0.8888296, 0.7386313, 0.83570534, 0.68927103]",0.8637612411148539
1663,1663,"public void setExpanded(boolean isExpanded) {this.isExpanded = isExpanded;}
","public void [MASK](boolean isExpanded) {this.isExpanded = isExpanded;}
",setExpanded,"[{'value': ['apply'], 'probability': 0.16178180277347565}, {'value': ['accept'], 'probability': 0.07336875051259995}, {'value': ['test'], 'probability': 0.05730406194925308}, {'value': ['set'], 'probability': 0.04958132281899452}, {'value': ['update'], 'probability': 0.04877815395593643}]","[0.5010617, 0.44626972, 0.5425338, 1.0, 0.41854778]",0.2148916155384954,"[{'value': ['set', 'expanded'], 'probability': 0.9999914169311523}, {'value': ['set', 'expanded', 'state'], 'probability': 2.707348130570608e-06}, {'value': ['set', 'action', 'view', 'expanded'], 'probability': 2.1595485577563522e-06}, {'value': ['check', 'expanded'], 'probability': 1.4862573607388185e-06}, {'value': ['bind', 'group', 'view'], 'probability': 1.0042124358733417e-06}, {'value': ['new', 'group', 'view'], 'probability': 9.405316063748614e-07}, {'value': ['is', 'group', 'expanded'], 'probability': 8.917857741153057e-08}, {'value': ['toggle', 'expanded'], 'probability': 6.538409280665292e-08}, {'value': ['expand', 'if', 'needed'], 'probability': 4.599810310423891e-08}, {'value': ['get', 'toolbar', 'actions'], 'probability': 3.1627212848661657e-08}]","[0.8735827, 0.84000456, 0.83723396, 0.6472026, 0.6258773, 0.71212643, 0.720548, 0.39139634, 0.7076615, 0.59620196]",0.8735816856683523
1664,1664,"private Object[] getAvailableVelocities(ControllerType type) {if (type == ControllerType.Billboard || type == ControllerType.PointSprite) {return new String[] { VEL_TYPE_ROTATIONAL_2D, VEL_TYPE_CENTRIPETAL, VEL_TYPE_TANGENTIAL, VEL_TYPE_POLAR, VEL_TYPE_BROWNIAN };} else if (type == ControllerType.ModelInstance || type == ControllerType.ParticleController) {return new String[] { VEL_TYPE_ROTATIONAL_3D, VEL_TYPE_CENTRIPETAL, VEL_TYPE_TANGENTIAL, VEL_TYPE_POLAR, VEL_TYPE_BROWNIAN, VEL_TYPE_FACE };}return null;}
","private Object[] [MASK](ControllerType type) {if (type == ControllerType.Billboard || type == ControllerType.PointSprite) {return new String[] { VEL_TYPE_ROTATIONAL_2D, VEL_TYPE_CENTRIPETAL, VEL_TYPE_TANGENTIAL, VEL_TYPE_POLAR, VEL_TYPE_BROWNIAN };} else if (type == ControllerType.ModelInstance || type == ControllerType.ParticleController) {return new String[] { VEL_TYPE_ROTATIONAL_3D, VEL_TYPE_CENTRIPETAL, VEL_TYPE_TANGENTIAL, VEL_TYPE_POLAR, VEL_TYPE_BROWNIAN, VEL_TYPE_FACE };}return null;}
",getAvailableVelocities,"[{'value': ['get'], 'probability': 0.16599829494953156}, {'value': ['generate'], 'probability': 0.12750248610973358}, {'value': ['equals'], 'probability': 0.1098284125328064}, {'value': ['matches'], 'probability': 0.09100449830293655}, {'value': ['create'], 'probability': 0.060576584190130234}]","[1.0, 0.47366065, 0.22535908, 0.38072872, 0.62328804]",0.3235467218265753,"[{'value': ['get', 'params'], 'probability': 0.32830551266670227}, {'value': ['get', 'parameters'], 'probability': 0.13019560277462006}, {'value': ['get', 'controllers'], 'probability': 0.11652729660272598}, {'value': ['validate', 'parameters'], 'probability': 0.09671053290367126}, {'value': ['test', 'parse', 'null'], 'probability': 0.06890963017940521}, {'value': ['get', 'projection'], 'probability': 0.06467784196138382}, {'value': ['get', 'controller', 'type'], 'probability': 0.06452775746583939}, {'value': ['get', 'filters'], 'probability': 0.047751154750585556}, {'value': ['get', 'beans'], 'probability': 0.04217848181724548}, {'value': ['test', 'parse'], 'probability': 0.04021625965833664}]","[1.0, 0.7936946, 0.80217505, 0.22271869, 0.29954195, 0.75801975, 0.75793314, 0.8151033, 0.7857481, 0.41521978]",0.7539940973864506
1665,1665,"public Class getColumnClass(int column) {return column == 1 ? Boolean.class : super.getColumnClass(column);}
","public Class [MASK](int column) {return column == 1 ? Boolean.class : super.[MASK](column);}
",getColumnClass,"[{'value': ['get'], 'probability': 0.21678350865840912}, {'value': ['replace'], 'probability': 0.08087755739688873}, {'value': ['resolve'], 'probability': 0.06201162561774254}, {'value': ['next'], 'probability': 0.035434525460004807}, {'value': ['find'], 'probability': 0.031043995171785355}]","[1.0, 0.4901826, 0.427468, 0.6966621, 0.8391008]",0.3336711988100089,"[{'value': ['get', 'column', 'class'], 'probability': 0.9999160766601562}, {'value': ['set', 'column'], 'probability': 4.6492339606629685e-05}, {'value': ['get', 'column'], 'probability': 1.3442200724966824e-05}, {'value': ['get', 'column', 'name'], 'probability': 9.482442692387849e-06}, {'value': ['use', 'to', 'string'], 'probability': 5.290766239340883e-06}, {'value': ['column'], 'probability': 4.007949428341817e-06}, {'value': ['get', 'value', 'at'], 'probability': 1.521710373708629e-06}, {'value': ['is', 'cell', 'editable'], 'probability': 1.284976974602614e-06}, {'value': ['case', 'column'], 'probability': 1.2235777830937877e-06}, {'value': ['compare', 'rows', 'by', 'column'], 'probability': 1.1036680689358036e-06}]","[0.7826598, 0.59553444, 0.8115386, 0.79067624, 0.71819806, 0.32692257, 0.8201201, 0.479619, 0.52868414, 0.5880526]",0.7826484810648033
1666,1666,"public void actionPerformed(ActionEvent event) {createVelocity(velocityBox.getSelectedItem());}
","public void [MASK](ActionEvent event) {createVelocity(velocityBox.getSelectedItem());}
",actionPerformed,"[{'value': ['execute'], 'probability': 0.2845193147659302}, {'value': ['update'], 'probability': 0.2723776698112488}, {'value': ['activate'], 'probability': 0.056124698370695114}, {'value': ['action'], 'probability': 0.03624045476317406}, {'value': ['run'], 'probability': 0.032199133187532425}]","[0.36536366, 0.38381794, 0.24928875, 1.0, 0.49744594]",0.2747454927740466,"[{'value': ['action', 'performed'], 'probability': 0.9999301433563232}, {'value': ['handle'], 'probability': 2.4286160623887554e-05}, {'value': ['fire', 'action', 'event'], 'probability': 1.95448737940751e-05}, {'value': ['on', 'action'], 'probability': 1.682978472672403e-05}, {'value': ['item', 'state', 'changed'], 'probability': 3.970418674725806e-06}, {'value': ['do', 'action'], 'probability': 1.4985510006226832e-06}, {'value': ['ok', 'button', 'action', 'performed'], 'probability': 1.168694439002138e-06}, {'value': ['on', 'selection'], 'probability': 1.1318605857013608e-06}, {'value': ['handle', 'event'], 'probability': 8.414514809373941e-07}, {'value': ['mouse', 'clicked'], 'probability': 5.849490776199673e-07}]","[0.8076759, 0.4343293, 0.84885716, 0.8922692, 0.5916416, 0.86456287, 0.71207094, 0.6712157, 0.6029977, 0.18413512]",0.8076674858435374
1667,1667,"public void actionPerformed(ActionEvent event) {deleteVelocity();}
","public void [MASK](ActionEvent event) {deleteVelocity();}
",actionPerformed,"[{'value': ['update'], 'probability': 0.37959879636764526}, {'value': ['execute'], 'probability': 0.1990831196308136}, {'value': ['activate'], 'probability': 0.052720095962285995}, {'value': ['handle'], 'probability': 0.03578508645296097}, {'value': ['process'], 'probability': 0.030704323202371597}]","[0.38381794, 0.36536366, 0.24928875, 0.4343293, 0.6160299]",0.2660343854023216,"[{'value': ['action', 'performed'], 'probability': 0.9983893632888794}, {'value': ['handle'], 'probability': 0.0005964250885881484}, {'value': ['save', 'button', 'action', 'performed'], 'probability': 0.00027235018205828965}, {'value': ['j', 'combo', 'box', 'action', 'performed'], 'probability': 0.0002592832315713167}, {'value': ['do', 'action'], 'probability': 0.0001930986763909459}, {'value': ['input', 'text'], 'probability': 0.00010691660281736404}, {'value': ['fire', 'action', 'event'], 'probability': 6.248653517104685e-05}, {'value': ['on', 'action'], 'probability': 5.924259312450886e-05}, {'value': ['cancel', 'button', 'action', 'performed'], 'probability': 3.354451109771617e-05}, {'value': ['window', 'closed'], 'probability': 2.739881347224582e-05}]","[0.8076759, 0.4343293, 0.73993134, 0.6544924, 0.86456287, 0.41164938, 0.84885716, 0.8922692, 0.7410464, 0.41495225]",0.8073583795972304
1668,1668,"public Class getColumnClass(int column) {return column == 1 ? Boolean.class : super.getColumnClass(column);}
","public Class [MASK](int column) {return column == 1 ? Boolean.class : super.[MASK](column);}
",getColumnClass,"[{'value': ['get'], 'probability': 0.21678350865840912}, {'value': ['replace'], 'probability': 0.08087755739688873}, {'value': ['resolve'], 'probability': 0.06201162561774254}, {'value': ['next'], 'probability': 0.035434525460004807}, {'value': ['find'], 'probability': 0.031043995171785355}]","[1.0, 0.4901826, 0.427468, 0.6966621, 0.8391008]",0.3336711988100089,"[{'value': ['get', 'column', 'class'], 'probability': 0.9999160766601562}, {'value': ['set', 'column'], 'probability': 4.6492339606629685e-05}, {'value': ['get', 'column'], 'probability': 1.3442200724966824e-05}, {'value': ['get', 'column', 'name'], 'probability': 9.482442692387849e-06}, {'value': ['use', 'to', 'string'], 'probability': 5.290766239340883e-06}, {'value': ['column'], 'probability': 4.007949428341817e-06}, {'value': ['get', 'value', 'at'], 'probability': 1.521710373708629e-06}, {'value': ['is', 'cell', 'editable'], 'probability': 1.284976974602614e-06}, {'value': ['case', 'column'], 'probability': 1.2235777830937877e-06}, {'value': ['compare', 'rows', 'by', 'column'], 'probability': 1.1036680689358036e-06}]","[0.7826598, 0.59553444, 0.8115386, 0.79067624, 0.71819806, 0.32692257, 0.8201201, 0.479619, 0.52868414, 0.5880526]",0.7826484810648033
1669,1669,"public Dimension getPreferredScrollableViewportSize() {Dimension dim = super.getPreferredScrollableViewportSize();dim.height = getPreferredSize().height;return dim;}
","public Dimension [MASK]() {Dimension dim = super.[MASK]();dim.height = getPreferredSize().height;return dim;}
",getPreferredScrollableViewportSize,"[{'value': ['dim'], 'probability': 0.4443211257457733}, {'value': ['trim'], 'probability': 0.34094226360321045}, {'value': ['get'], 'probability': 0.019557848572731018}, {'value': ['expand'], 'probability': 0.01576944626867771}, {'value': ['boost'], 'probability': 0.014083955436944962}]","[0.23059246, 0.29039297, 1.0, 0.47652406, 0.48529312]",0.2353715517470724,"[{'value': ['get', 'preferred', 'scrollable', 'viewport', 'size'], 'probability': 0.9995810389518738}, {'value': ['preferred', 'layout', 'size'], 'probability': 0.0003761085099540651}, {'value': ['set', 'visible', 'row', 'count'], 'probability': 2.014580059039872e-05}, {'value': ['get', 'required', 'size'], 'probability': 9.307983418693766e-06}, {'value': ['get', 'repository', 'descriptor'], 'probability': 5.313796464179177e-06}, {'value': ['get', 'preferred', 'size'], 'probability': 4.578245807351777e-06}, {'value': ['get', 'preferred', 'width'], 'probability': 1.4574487749996479e-06}, {'value': ['get', 'minimum', 'size'], 'probability': 7.960094308145926e-07}, {'value': ['get', 'photo', 'url'], 'probability': 5.991325338072784e-07}, {'value': ['get', 'pref', 'size'], 'probability': 5.542332814911788e-07}]","[0.74230474, 0.4387699, 0.67633706, 0.8315943, 0.56634706, 0.81117314, 0.78034776, 0.7819635, 0.70423496, 0.77323145]",0.74218946758982
1670,1670,"public void valueChanged(ListSelectionEvent event) {if (event.getValueIsAdjusting())return;velocitySelected();}
","public void [MASK](ListSelectionEvent event) {if (event.getValueIsAdjusting())return;velocitySelected();}
",valueChanged,"[{'value': ['update'], 'probability': 0.6092032194137573}, {'value': ['execute'], 'probability': 0.074615977704525}, {'value': ['perform'], 'probability': 0.05729839950799942}, {'value': ['save'], 'probability': 0.02549511380493641}, {'value': ['run'], 'probability': 0.019222766160964966}]","[0.21691036, 0.18980543, 0.30584893, 0.40865603, 0.30928564]",0.18019372050316,"[{'value': ['value', 'changed'], 'probability': 0.9997703433036804}, {'value': ['column', 'selection', 'changed'], 'probability': 0.00017058449157048017}, {'value': ['on', 'selection', 'change'], 'probability': 3.56283962901216e-05}, {'value': ['on', 'list', 'selection', 'changed'], 'probability': 1.7515641957288608e-05}, {'value': ['handle', 'table', 'selection', 'changed'], 'probability': 2.7553014660952613e-06}, {'value': ['notify', 'selection', 'changed'], 'probability': 2.6881300527747953e-06}, {'value': ['fire', 'selection', 'value', 'changed'], 'probability': 2.9180253591221117e-07}, {'value': ['selection', 'changed'], 'probability': 1.8126657153061387e-07}, {'value': ['add', 'selection', 'listener'], 'probability': 1.1426757851040747e-07}, {'value': ['fire', 'value', 'changed'], 'probability': 4.770482675553467e-08}]","[0.91645586, 0.5305766, 0.5730459, 0.58440727, 0.5821742, 0.49764937, 0.7755731, 0.56958115, 0.47694442, 0.794323]",0.916369914653535
1671,1671,"public void tableChanged(TableModelEvent event) {if (event.getColumn() != 1)return;velocityChecked(event.getFirstRow(), (Boolean) velocityTable.getValueAt(event.getFirstRow(), 1));}
","public void [MASK](TableModelEvent event) {if (event.getColumn() != 1)return;velocityChecked(event.getFirstRow(), (Boolean) velocityTable.getValueAt(event.getFirstRow(), 1));}
",tableChanged,"[{'value': ['update'], 'probability': 0.5340288281440735}, {'value': ['execute'], 'probability': 0.0766882374882698}, {'value': ['run'], 'probability': 0.06543353945016861}, {'value': ['start'], 'probability': 0.025697804987430573}, {'value': ['generate'], 'probability': 0.02099759131669998}]","[0.30333588, 0.12163327, 0.3561965, 0.48336253, 0.17963663]",0.2108184327002647,"[{'value': ['table', 'changed'], 'probability': 0.9916871190071106}, {'value': ['table', 'rows', 'inserted'], 'probability': 0.004684643819928169}, {'value': ['handle', 'event'], 'probability': 0.0009354439680464566}, {'value': ['perform'], 'probability': 0.0005880644312128425}, {'value': ['table', 'rows', 'deleted'], 'probability': 0.0005643394542858005}, {'value': ['new', 'rows', 'added'], 'probability': 0.0004032856086269021}, {'value': ['reveal'], 'probability': 0.0003444625763222575}, {'value': ['handle', 'update'], 'probability': 0.0003309055173303932}, {'value': ['pass'], 'probability': 0.00025746479514054954}, {'value': ['match', 'event'], 'probability': 0.00020413013407960534}]","[0.8561046, 0.7834127, 0.51347613, 0.22095922, 0.76760393, 0.5807117, 0.31426814, 0.41492566, 0.31360126, 0.54805267]",0.854373732219661
1672,1672,"@Overridepublic void error(String file) {callback.error(file);}
","@Overridepublic void [MASK](String file) {callback.[MASK](file);}
",error,"[{'value': ['handle'], 'probability': 0.06332911550998688}, {'value': ['save'], 'probability': 0.05030825361609459}, {'value': ['main'], 'probability': 0.045941587537527084}, {'value': ['send'], 'probability': 0.0455639474093914}, {'value': ['execute'], 'probability': 0.04325595125555992}]","[0.3077682, 0.36548385, 0.25038895, 0.27468285, 0.17302795]",0.0693809311071489,"[{'value': ['start', 'dtd'], 'probability': 0.983551561832428}, {'value': ['calculate', 'signature'], 'probability': 0.00435602106153965}, {'value': ['on', 'double', 'click'], 'probability': 0.0032917745411396027}, {'value': ['report', 'failure'], 'probability': 0.0019727032631635666}, {'value': ['delete', 'workspace'], 'probability': 0.0017600823193788528}, {'value': ['property', 'exists'], 'probability': 0.001371302641928196}, {'value': ['expected'], 'probability': 0.0011552163632586598}, {'value': ['on', 'error'], 'probability': 0.0011136115062981844}, {'value': ['set', 'function'], 'probability': 0.000734125089365989}, {'value': ['do', 'call', 'back'], 'probability': 0.0006934500997886062}]","[0.3387079, 0.3967552, 0.5319316, 0.5520825, 0.21858613, 0.3158459, 0.30166224, 0.8240967, 0.46093807, 0.4127116]",0.3404136916303194
1673,1673,"@Overridepublic void error(String file) {callback.error(file);}
","@Overridepublic void [MASK](String file) {callback.[MASK](file);}
",error,"[{'value': ['handle'], 'probability': 0.06332911550998688}, {'value': ['save'], 'probability': 0.05030825361609459}, {'value': ['main'], 'probability': 0.045941587537527084}, {'value': ['send'], 'probability': 0.0455639474093914}, {'value': ['execute'], 'probability': 0.04325595125555992}]","[0.3077682, 0.36548385, 0.25038895, 0.27468285, 0.17302795]",0.0693809311071489,"[{'value': ['start', 'dtd'], 'probability': 0.983551561832428}, {'value': ['calculate', 'signature'], 'probability': 0.00435602106153965}, {'value': ['on', 'double', 'click'], 'probability': 0.0032917745411396027}, {'value': ['report', 'failure'], 'probability': 0.0019727032631635666}, {'value': ['delete', 'workspace'], 'probability': 0.0017600823193788528}, {'value': ['property', 'exists'], 'probability': 0.001371302641928196}, {'value': ['expected'], 'probability': 0.0011552163632586598}, {'value': ['on', 'error'], 'probability': 0.0011136115062981844}, {'value': ['set', 'function'], 'probability': 0.000734125089365989}, {'value': ['do', 'call', 'back'], 'probability': 0.0006934500997886062}]","[0.3387079, 0.3967552, 0.5319316, 0.5520825, 0.21858613, 0.3158459, 0.30166224, 0.8240967, 0.46093807, 0.4127116]",0.3404136916303194
1674,1674,"public void error(String file) {callback.error(file);}
","public void [MASK](String file) {callback.[MASK](file);}
",error,"[{'value': ['send'], 'probability': 0.07512867450714111}, {'value': ['execute'], 'probability': 0.066310815513134}, {'value': ['update'], 'probability': 0.05926419794559479}, {'value': ['save'], 'probability': 0.052720725536346436}, {'value': ['add'], 'probability': 0.051295001059770584}]","[0.27468285, 0.17302795, 0.28286186, 0.36548385, 0.23797928]",0.0803494849638007,"[{'value': ['error'], 'probability': 0.9671294093132019}, {'value': ['on', 'error'], 'probability': 0.008572549559175968}, {'value': ['fatal', 'error'], 'probability': 0.005593686830252409}, {'value': ['fail'], 'probability': 0.004839930683374405}, {'value': ['log', 'severe'], 'probability': 0.0030967756174504757}, {'value': ['on', 'auth', 'fail'], 'probability': 0.0027683547232300043}, {'value': ['clear', 'error'], 'probability': 0.0024987971410155296}, {'value': ['release', 'lock'], 'probability': 0.002152923261746764}, {'value': ['check', 'handle'], 'probability': 0.0016927197575569153}, {'value': ['remove', 'error'], 'probability': 0.0016548046842217445}]","[1.0, 0.8240967, 0.8432467, 0.30633342, 0.38903317, 0.39110166, 0.8684951, 0.2764683, 0.4030201, 0.8010363]",0.9874541329722154
1675,1675,"public void update(PreloaderState state) {callback.update(state);if (state.hasEnded()) {getRootPanel().clear();if (loadingListener != null)loadingListener.beforeSetup();setupLoop();if (loadingListener != null)loadingListener.afterSetup();}}
","public void [MASK](PreloaderState state) {callback.[MASK](state);if (state.hasEnded()) {getRootPanel().clear();if (loadingListener != null)loadingListener.beforeSetup();setupLoop();if (loadingListener != null)loadingListener.afterSetup();}}
",update,"[{'value': ['execute'], 'probability': 0.46612390875816345}, {'value': ['setup'], 'probability': 0.06436925381422043}, {'value': ['run'], 'probability': 0.052450843155384064}, {'value': ['clear'], 'probability': 0.035645268857479095}, {'value': ['load'], 'probability': 0.033920273184776306}]","[0.2417731, 0.350659, 0.3326079, 0.29131207, 0.18016984]",0.1692087523952168,"[{'value': ['invoke', 'callback'], 'probability': 0.960853099822998}, {'value': ['update', 'listener'], 'probability': 0.007878347299993038}, {'value': ['add', 'listener'], 'probability': 0.007401714567095041}, {'value': ['save', 'or', 'update'], 'probability': 0.005953051149845123}, {'value': ['handle', 'status'], 'probability': 0.0046842931769788265}, {'value': ['on', 'data', 'changed'], 'probability': 0.0036094756796956062}, {'value': ['fire', 'progress'], 'probability': 0.0027118781581521034}, {'value': ['on', 'canceled'], 'probability': 0.002488374011591077}, {'value': ['get', 'target', 'list'], 'probability': 0.0023413014132529497}, {'value': ['update', 'tab'], 'probability': 0.002078446326777339}]","[0.17959633, 0.7919631, 0.48552898, 0.71060365, 0.39972475, 0.5194298, 0.4077298, 0.40718257, 0.44437623, 0.8080434]",0.19521518429327667
1676,1676,"public void ontimeout(String status, String errorType) {error(""SoundManager"", status + "" "" + errorType);}
","public void [MASK](String status, String errorType) {error(""SoundManager"", status + "" "" + errorType);}
",ontimeout,"[{'value': ['error'], 'probability': 0.9576314091682434}, {'value': ['update'], 'probability': 0.00400944147258997}, {'value': ['perform'], 'probability': 0.003719645319506526}, {'value': ['execute'], 'probability': 0.0030982207972556353}, {'value': ['run'], 'probability': 0.002151343272998929}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set', 'status'], 'probability': 0.9473724365234375}, {'value': ['on', 'error'], 'probability': 0.03694264963269234}, {'value': ['get', 'sound', 'manager'], 'probability': 0.006730079185217619}, {'value': ['enter'], 'probability': 0.003572682151570916}, {'value': ['exit'], 'probability': 0.0020954778883606195}, {'value': ['send', 'error'], 'probability': 0.0011245138011872768}, {'value': ['notify'], 'probability': 0.0008083133725449443}, {'value': ['update', 'status'], 'probability': 0.0005176136619411409}, {'value': ['validate'], 'probability': 0.00042798221693374217}, {'value': ['put'], 'probability': 0.0004081545630469918}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1677,1677,"public void execute(double timestamp) {try {mainLoop();} catch (Throwable t) {error(""GwtApplication"", ""exception: "" + t.getMessage(), t);throw new RuntimeException(t);}AnimationScheduler.get().requestAnimationFrame(this, graphics.canvas);}
","public void [MASK](double timestamp) {try {mainLoop();} catch (Throwable t) {error(""GwtApplication"", ""exception: "" + t.getMessage(), t);throw new RuntimeException(t);}AnimationScheduler.get().requestAnimationFrame(this, graphics.canvas);}
",execute,"[{'value': ['run'], 'probability': 0.23191800713539124}, {'value': ['update'], 'probability': 0.14640897512435913}, {'value': ['execute'], 'probability': 0.08862276375293732}, {'value': ['set'], 'probability': 0.04003633186221123}, {'value': ['start'], 'probability': 0.032945021986961365}]","[0.31249312, 0.2417731, 1.0, 0.35167885, 0.34272963]",0.2218644621865149,"[{'value': ['run'], 'probability': 0.6271421313285828}, {'value': ['execute'], 'probability': 0.3686131536960602}, {'value': ['proceed'], 'probability': 0.0010891621932387352}, {'value': ['call'], 'probability': 0.0009152931743301451}, {'value': ['apply'], 'probability': 0.0008489080355502665}, {'value': ['get'], 'probability': 0.0003762163396459073}, {'value': ['action', 'performed'], 'probability': 0.0002766552788671106}, {'value': ['refresh'], 'probability': 0.00027605463401414454}, {'value': ['do', 'get'], 'probability': 0.0002459954412188381}, {'value': ['submit'], 'probability': 0.0002164867182727903}]","[0.31249312, 1.0, 0.5087489, 0.36040872, 0.4182651, 0.37713256, 0.35575405, 0.17023021, 0.43286476, 0.39038858]",0.5663081075175506
1678,1678,"public Panel getRootPanel() {return root;}
","public Panel [MASK]() {return root;}
",getRootPanel,"[{'value': ['root'], 'probability': 0.6081368327140808}, {'value': ['child'], 'probability': 0.026533842086791992}, {'value': ['create'], 'probability': 0.01595003716647625}, {'value': ['##l'], 'probability': 0.01444285549223423}, {'value': ['strip'], 'probability': 0.014412474818527699}]","[0.39326018, 0.5693379, 0.62328804, 0.0, 0.33908823]",0.2690912908515551,"[{'value': ['get', 'root'], 'probability': 0.9452285766601562}, {'value': ['get', 'root', 'panel'], 'probability': 0.042032256722450256}, {'value': ['get', 'panel'], 'probability': 0.008364195935428143}, {'value': ['get', 'reference'], 'probability': 0.00153026869520545}, {'value': ['root'], 'probability': 0.0013453157152980566}, {'value': ['get', 'root', 'component'], 'probability': 0.000533527520019561}, {'value': ['get', 'main', 'panel'], 'probability': 0.00037004792829975486}, {'value': ['get'], 'probability': 0.00028904827195219696}, {'value': ['get', 'component'], 'probability': 0.00016835580754559487}, {'value': ['get', 'parent'], 'probability': 0.00013836768630426377}]","[0.8535585, 0.8123901, 0.817101, 0.85382694, 0.39326018, 0.76383156, 0.7670068, 1.0, 0.8372139, 0.85029024]",0.8508635171165714
1679,1679,"public Preloader createPreloader() {return new Preloader(getPreloaderBaseURL());}
","public Preloader [MASK]() {return new Preloader(getPreloaderBaseURL());}
",createPreloader,"[{'value': ['build'], 'probability': 0.293257474899292}, {'value': ['create'], 'probability': 0.10015708208084106}, {'value': ['clone'], 'probability': 0.05376669391989708}, {'value': ['get'], 'probability': 0.04996054992079735}, {'value': ['upgrade'], 'probability': 0.039470404386520386}]","[0.7655445, 1.0, 0.30877078, 0.62328804, 0.53473544]",0.3935063423909515,"[{'value': ['copy'], 'probability': 0.5649603009223938}, {'value': ['initialize'], 'probability': 0.3156989514827728}, {'value': ['init'], 'probability': 0.03582368046045303}, {'value': ['get', 'strategy'], 'probability': 0.023592039942741394}, {'value': ['pause'], 'probability': 0.020362336188554764}, {'value': ['create', 'component'], 'probability': 0.011262310668826103}, {'value': ['create', 'bean'], 'probability': 0.008161795325577259}, {'value': ['clone'], 'probability': 0.008042825385928154}, {'value': ['get', 'instance'], 'probability': 0.007859339006245136}, {'value': ['new', 'instance'], 'probability': 0.004236383829265833}]","[0.3987844, 0.063859016, -0.21313018, 0.71278816, 0.23321836, 0.87133604, 0.7851931, 0.30877078, 0.6862906, 0.6975624]",0.28644163352333585
1680,1680,"@Overridepublic void error(String file) {System.out.println(""error: "" + file);}
","@Overridepublic void [MASK](String file) {System.out.println(""[MASK]: "" + file);}
",error,"[{'value': ['main'], 'probability': 0.2017384171485901}, {'value': ['run'], 'probability': 0.19396886229515076}, {'value': ['execute'], 'probability': 0.06262081861495972}, {'value': ['read'], 'probability': 0.04700846970081329}, {'value': ['save'], 'probability': 0.03590140864253044}]","[0.25038895, 0.39675188, 0.17302795, 0.3391286, 0.36548385]",0.1673690352982532,"[{'value': ['start', 'dtd'], 'probability': 0.985213577747345}, {'value': ['calculate', 'signature'], 'probability': 0.004289478994905949}, {'value': ['on', 'double', 'click'], 'probability': 0.0033001117408275604}, {'value': ['report', 'failure'], 'probability': 0.0015697558410465717}, {'value': ['delete', 'workspace'], 'probability': 0.0014075468061491847}, {'value': ['expected'], 'probability': 0.0013088486157357693}, {'value': ['property', 'exists'], 'probability': 0.0010103238746523857}, {'value': ['on', 'error'], 'probability': 0.0007703758892603219}, {'value': ['do', 'call', 'back'], 'probability': 0.0005778984632343054}, {'value': ['set', 'function'], 'probability': 0.0005520744016394019}]","[0.3387079, 0.3967552, 0.5319316, 0.5520825, 0.21858613, 0.30166224, 0.3158459, 0.8240967, 0.4127116, 0.46093807]",0.3401730123189623
1681,1681,"public void error(String file) {System.out.println(""error: "" + file);}
","public void [MASK](String file) {System.out.println(""[MASK]: "" + file);}
",error,"[{'value': ['read'], 'probability': 0.14146152138710022}, {'value': ['run'], 'probability': 0.08138984441757202}, {'value': ['execute'], 'probability': 0.0742926076054573}, {'value': ['main'], 'probability': 0.0610344335436821}, {'value': ['save'], 'probability': 0.05313333123922348}]","[0.3391286, 0.39675188, 0.17302795, 0.25038895, 0.36548385]",0.1278216430704796,"[{'value': ['error'], 'probability': 0.954597532749176}, {'value': ['print', 'error'], 'probability': 0.011781221255660057}, {'value': ['print', 'result'], 'probability': 0.008081045933067799}, {'value': ['log'], 'probability': 0.005354485008865595}, {'value': ['m'], 'probability': 0.004871033597737551}, {'value': ['report'], 'probability': 0.0035875362809747458}, {'value': ['println'], 'probability': 0.003204158740118146}, {'value': ['log', 'error'], 'probability': 0.002935107098892331}, {'value': ['foo'], 'probability': 0.002877310384064913}, {'value': ['print'], 'probability': 0.002710442990064621}]","[1.0, 0.7902552, 0.45204338, 0.24315298, 0.1633924, 0.43051937, 0.0, 0.8146606, -0.09065879, 0.18838814]",0.9738439180880029
1682,1682,"public void update(PreloaderState state) {meterStyle.setWidth(100f * state.getProgress(), Unit.PCT);}
","public void [MASK](PreloaderState state) {meterStyle.setWidth(100f * state.getProgress(), Unit.PCT);}
",update,"[{'value': ['execute'], 'probability': 0.18010468780994415}, {'value': ['update'], 'probability': 0.09271842986345291}, {'value': ['test'], 'probability': 0.08561799675226212}, {'value': ['run'], 'probability': 0.06864027678966522}, {'value': ['setup'], 'probability': 0.06636406481266022}]","[0.2417731, 0.99999994, 0.37940708, 0.3326079, 0.350659]",0.2148484222116617,"[{'value': ['update'], 'probability': 0.3142561614513397}, {'value': ['started'], 'probability': 0.1961400955915451}, {'value': ['execute'], 'probability': 0.11331696808338165}, {'value': ['begin'], 'probability': 0.09667948633432388}, {'value': ['lock'], 'probability': 0.07685638964176178}, {'value': ['start'], 'probability': 0.05393708869814873}, {'value': ['end'], 'probability': 0.04951424524188042}, {'value': ['progress'], 'probability': 0.0346672385931015}, {'value': ['initialize'], 'probability': 0.033361196517944336}, {'value': ['state'], 'probability': 0.03127112612128258}]","[0.99999994, 0.2968625, 0.2417731, 0.42249745, 0.07501683, 0.46057966, 0.38682923, 0.37319824, 0.07130459, 0.25700727]",0.5138414844967812
1683,1683,"public Graphics getGraphics() {return graphics;}
","public Graphics [MASK]() {return graphics;}
",getGraphics,"[{'value': ['graphics'], 'probability': 0.526910126209259}, {'value': ['render'], 'probability': 0.10154922306537628}, {'value': ['paint'], 'probability': 0.10113905370235443}, {'value': ['get'], 'probability': 0.030764643102884293}, {'value': ['g'], 'probability': 0.020598970353603363}]","[0.23172045, 0.2904214, 0.41529104, 1.0, 0.25094116]",0.2295238329092246,"[{'value': ['get', 'graphics'], 'probability': 0.9981693029403687}, {'value': ['create'], 'probability': 0.001694876467809081}, {'value': ['get', 'xor', 'mode'], 'probability': 7.233213545987383e-05}, {'value': ['graphics'], 'probability': 1.5071709640324116e-05}, {'value': ['get', 'clip', 'rect'], 'probability': 1.3429164027911611e-05}, {'value': ['paint', 'components'], 'probability': 1.0486128303455189e-05}, {'value': ['get', 'invisible', 'gap', 'at', 'end'], 'probability': 1.0263399417453911e-05}, {'value': ['get', 'canvas'], 'probability': 6.309748641797341e-06}, {'value': ['gz', 'paint'], 'probability': 4.976724540028954e-06}, {'value': ['set', 'graphics'], 'probability': 2.9232669476186857e-06}]","[0.7484811, 0.62328804, 0.6708927, 0.23172045, 0.8423415, 0.4242141, 0.8071947, 0.8195941, 0.21155821, 0.5298808]",0.7482510917576877
1684,1684,"public Audio getAudio() {return Gdx.audio;}
","public Audio [MASK]() {return Gdx.audio;}
",getAudio,"[{'value': ['output'], 'probability': 0.26773855090141296}, {'value': ['surround'], 'probability': 0.12611855566501617}, {'value': ['get'], 'probability': 0.05064605176448822}, {'value': ['show'], 'probability': 0.03551324084401131}, {'value': ['record'], 'probability': 0.03134537488222122}]","[0.23887894, 0.23281853, 1.0, 0.6094576, 0.49111196]",0.1810037920079494,"[{'value': ['get', 'audio'], 'probability': 0.42133715748786926}, {'value': ['support'], 'probability': 0.21356196701526642}, {'value': ['get', 'instance'], 'probability': 0.16219660639762878}, {'value': ['audio'], 'probability': 0.1175374761223793}, {'value': ['instance'], 'probability': 0.039926931262016296}, {'value': ['get', 'first'], 'probability': 0.014442851766943932}, {'value': ['get', 'volume'], 'probability': 0.012326546013355255}, {'value': ['get', 'transform'], 'probability': 0.008719141595065594}, {'value': ['set', 'audio'], 'probability': 0.0067272549495100975}, {'value': ['prev'], 'probability': 0.003224074374884367}]","[0.78846776, 0.54764014, 0.9335536, 0.2825809, 0.56794554, 0.8991456, 0.81030923, 0.8550423, 0.5574998, -0.2363217]",0.6898935644784855
1685,1685,"public Input getInput() {return Gdx.input;}
","public Input [MASK]() {return Gdx.input;}
",getInput,"[{'value': ['output'], 'probability': 0.5088087320327759}, {'value': ['input'], 'probability': 0.3995407521724701}, {'value': ['read'], 'probability': 0.012567581608891487}, {'value': ['get'], 'probability': 0.00659054284915328}, {'value': ['generate'], 'probability': 0.005525942891836166}]","[0.23887894, 0.37287983, 0.5726487, 1.0, 0.47366065]",0.2869291511202686,"[{'value': ['input'], 'probability': 0.4227065443992615}, {'value': ['get', 'input'], 'probability': 0.34566497802734375}, {'value': ['version'], 'probability': 0.04971221089363098}, {'value': ['get', 'implementation', 'type'], 'probability': 0.03503393009305}, {'value': ['get', 'component', 'type'], 'probability': 0.02995670773088932}, {'value': ['create'], 'probability': 0.02876419574022293}, {'value': ['r'], 'probability': 0.028522856533527374}, {'value': ['pop'], 'probability': 0.023051507771015167}, {'value': ['event'], 'probability': 0.019753172993659973}, {'value': ['apply', 'transformation'], 'probability': 0.016833927482366562}]","[0.37287983, 0.8443169, 0.38924655, 0.7685734, 0.7463913, 0.62328804, 0.26394212, 0.38630247, 0.451947, 0.51189816]",0.5700116670542185
1686,1686,"public Files getFiles() {return Gdx.files;}
","public Files [MASK]() {return Gdx.files;}
",getFiles,"[{'value': ['files'], 'probability': 0.34666815400123596}, {'value': ['file'], 'probability': 0.28275564312934875}, {'value': ['get'], 'probability': 0.04820679873228073}, {'value': ['create'], 'probability': 0.03962623327970505}, {'value': ['build'], 'probability': 0.033819206058979034}]","[0.37184757, 0.42834386, 1.0, 0.62328804, 0.5626448]",0.3419579104708607,"[{'value': ['get', 'icon', 'file'], 'probability': 0.592230498790741}, {'value': ['calc'], 'probability': 0.25496476888656616}, {'value': ['set', 'files'], 'probability': 0.03798661381006241}, {'value': ['pop'], 'probability': 0.02793242782354355}, {'value': ['get', 'source', 'file'], 'probability': 0.020456546917557716}, {'value': ['get', 'files'], 'probability': 0.018948210403323174}, {'value': ['peek'], 'probability': 0.01741872727870941}, {'value': ['get', 'picture', 'file'], 'probability': 0.013042218051850796}, {'value': ['get', 'dataset'], 'probability': 0.011369745247066021}, {'value': ['instance'], 'probability': 0.005650283303111792}]","[0.7720082, -0.25918558, 0.6202066, 0.38630247, 0.79684824, 0.8302823, 0.32689062, 0.8284114, 0.7880081, 0.56794554]",0.4861734966599338
1687,1687,"public Net getNet() {return Gdx.net;}
","public Net [MASK]() {return Gdx.net;}
",getNet,"[{'value': ['net'], 'probability': 0.26164594292640686}, {'value': ['get'], 'probability': 0.1050044372677803}, {'value': ['build'], 'probability': 0.05104006454348564}, {'value': ['create'], 'probability': 0.0451153963804245}, {'value': ['portal'], 'probability': 0.024042116478085518}]","[0.46814895, 1.0, 0.5626448, 0.62328804, 0.17778079]",0.2886052490309495,"[{'value': ['get', 'net'], 'probability': 0.41743260622024536}, {'value': ['case', 'get', 'capabilities', 'type'], 'probability': 0.31194984912872314}, {'value': ['net'], 'probability': 0.12782655656337738}, {'value': ['get', 'output'], 'probability': 0.053382422775030136}, {'value': ['get', 'info'], 'probability': 0.05002681538462639}, {'value': ['get', 'network', 'address'], 'probability': 0.013923048041760921}, {'value': ['get', 'function'], 'probability': 0.010672381147742271}, {'value': ['get', 'buffer'], 'probability': 0.005568807013332844}, {'value': ['get', 'num'], 'probability': 0.004626421723514795}, {'value': ['get', 'session'], 'probability': 0.004591071046888828}]","[0.85378236, 0.7688009, 0.46814895, 0.764642, 0.84295934, 0.7915953, 0.8085509, 0.7848379, 0.74284285, 0.81723475]",0.7702646831495956
1688,1688,"private void checkLogLabel() {if (log == null) {log = new TextArea();log.setSize(graphics.getWidth() + ""px"", ""200px"");log.setReadOnly(true);root.add(log);}}
","private void [MASK]() {if (log == null) {log = new TextArea();log.setSize(graphics.getWidth() + ""px"", ""200px"");log.setReadOnly(true);root.add(log);}}
",checkLogLabel,"[{'value': ['run'], 'probability': 0.7970723509788513}, {'value': ['execute'], 'probability': 0.016458943486213684}, {'value': ['start'], 'probability': 0.014337439090013504}, {'value': ['log'], 'probability': 0.011467326432466507}, {'value': ['update'], 'probability': 0.010562070645391941}]","[0.45308027, 0.27193576, 0.5370092, 0.46765807, 0.44275245]",0.3833520355381823,"[{'value': ['run'], 'probability': 0.9175549745559692}, {'value': ['init'], 'probability': 0.023821135982871056}, {'value': ['start'], 'probability': 0.012384505942463875}, {'value': ['commit'], 'probability': 0.011953621171414852}, {'value': ['redraw'], 'probability': 0.008720637299120426}, {'value': ['execute'], 'probability': 0.008529533632099628}, {'value': ['refresh'], 'probability': 0.006351875606924295}, {'value': ['early', 'startup'], 'probability': 0.0037833915557712317}, {'value': ['dispose'], 'probability': 0.003475608304142952}, {'value': ['update'], 'probability': 0.003424740629270673}]","[0.45308027, -0.15240726, 0.5370092, 0.3008323, 0.17275618, 0.27193576, 0.22074197, 0.4090689, 0.293953, 0.44275245]",0.43165597087166807
1689,1689,"public void log(String tag, String message) {if (logLevel >= LOG_INFO) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message);log.setCursorPos(log.getText().length() - 1);System.out.println(tag + "": "" + message);}}
","public void [MASK](String tag, String message) {if ([MASK]Level >= LOG_INFO) {checkLogLabel();[MASK].setText([MASK].getText() + ""\n"" + tag + "": "" + message);[MASK].setCursorPos([MASK].getText().length() - 1);System.out.println(tag + "": "" + message);}}
",log,"[{'value': ['run'], 'probability': 0.16598567366600037}, {'value': ['read'], 'probability': 0.05849394202232361}, {'value': ['execute'], 'probability': 0.05696628615260124}, {'value': ['write'], 'probability': 0.03734782710671425}, {'value': ['clear'], 'probability': 0.029017750173807144}]","[0.26410556, 0.39443874, 0.15839888, 0.36680442, 0.2425967]",0.0966723705930612,"[{'value': ['clear', 'pending'], 'probability': 0.36982229351997375}, {'value': ['speak'], 'probability': 0.2801106870174408}, {'value': ['print', 'info'], 'probability': 0.12293487042188644}, {'value': ['move', 'cursor'], 'probability': 0.06551588326692581}, {'value': ['log', 'info'], 'probability': 0.04956560209393501}, {'value': ['reply'], 'probability': 0.04875101521611214}, {'value': ['handle', 'key', 'event'], 'probability': 0.02978811040520668}, {'value': ['after', 'execute'], 'probability': 0.012435520999133587}, {'value': ['log', 'i'], 'probability': 0.01174965500831604}, {'value': ['handle', 'motion'], 'probability': 0.009326431900262833}]","[0.19162004, 0.18534176, 0.40468654, 0.32864207, 0.83075935, 0.13243085, 0.2744008, 0.20689584, 0.73145753, 0.3071881]",0.2639022404308484
1690,1690,"public void log(String tag, String message, Throwable exception) {if (logLevel >= LOG_INFO) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"" + getMessages(exception) + ""\n"");log.setCursorPos(log.getText().length() - 1);System.out.println(tag + "": "" + message + ""\n"" + exception.getMessage());System.out.println(getStackTrace(exception));}}
","public void [MASK](String tag, String message, Throwable exception) {if ([MASK]Level >= LOG_INFO) {checkLogLabel();[MASK].setText([MASK].getText() + ""\n"" + tag + "": "" + message + ""\n"" + getMessages(exception) + ""\n"");[MASK].setCursorPos([MASK].getText().length() - 1);System.out.println(tag + "": "" + message + ""\n"" + exception.getMessage());System.out.println(getStackTrace(exception));}}
",log,"[{'value': ['run'], 'probability': 0.17431120574474335}, {'value': ['execute'], 'probability': 0.11630149185657501}, {'value': ['read'], 'probability': 0.04654715210199356}, {'value': ['update'], 'probability': 0.043064188212156296}, {'value': ['clear'], 'probability': 0.036720797419548035}]","[0.26410556, 0.15839888, 0.39443874, 0.2778795, 0.2425967]",0.1036935844198744,"[{'value': ['print', 'info'], 'probability': 0.2330542355775833}, {'value': ['clear', 'pending'], 'probability': 0.2217550426721573}, {'value': ['log', 'info'], 'probability': 0.13176847994327545}, {'value': ['speak'], 'probability': 0.12523509562015533}, {'value': ['handle', 'motion'], 'probability': 0.11979294568300247}, {'value': ['log', 'i'], 'probability': 0.04729481413960457}, {'value': ['reply'], 'probability': 0.04652025178074837}, {'value': ['move', 'cursor'], 'probability': 0.0340358205139637}, {'value': ['after', 'execute'], 'probability': 0.02335170842707157}, {'value': ['edge'], 'probability': 0.01719164475798607}]","[0.40468654, 0.19162004, 0.83075935, 0.18534176, 0.3071881, 0.73145753, 0.13243085, 0.32864207, 0.20689584, 0.2631921]",0.3675813228797363
1691,1691,"public void error(String tag, String message) {if (logLevel >= LOG_ERROR) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"");log.setCursorPos(log.getText().length() - 1);System.err.println(tag + "": "" + message);}}
","public void [MASK](String tag, String message) {if (logLevel >= LOG_ERROR) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"");log.setCursorPos(log.getText().length() - 1);System.err.println(tag + "": "" + message);}}
",error,"[{'value': ['run'], 'probability': 0.16910552978515625}, {'value': ['write'], 'probability': 0.13210368156433105}, {'value': ['log'], 'probability': 0.08602818101644516}, {'value': ['execute'], 'probability': 0.07253701239824295}, {'value': ['read'], 'probability': 0.06322580575942993}]","[0.39675188, 0.3014008, 0.24315298, 0.17302795, 0.3391286]",0.1618197121170347,"[{'value': ['clear', 'pending'], 'probability': 0.8161446452140808}, {'value': ['move', 'cursor'], 'probability': 0.0475684218108654}, {'value': ['speak'], 'probability': 0.039842892438173294}, {'value': ['handle', 'key', 'event'], 'probability': 0.028465958312153816}, {'value': ['handle', 'motion'], 'probability': 0.023932412266731262}, {'value': ['print', 'info'], 'probability': 0.018252210691571236}, {'value': ['reply'], 'probability': 0.014584455639123917}, {'value': ['set', 'text'], 'probability': 0.005314244888722897}, {'value': ['fire', 'message'], 'probability': 0.003122778609395027}, {'value': ['send', 'event'], 'probability': 0.002771947532892227}]","[0.3718726, 0.2538237, 0.17623809, 0.4146448, 0.40134037, 0.25691843, 0.2881331, 0.40896758, 0.33289474, 0.33750388]",0.35704601129013425
1692,1692,"public void error(String tag, String message, Throwable exception) {if (logLevel >= LOG_ERROR) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"" + getMessages(exception) + ""\n"");log.setCursorPos(log.getText().length() - 1);System.err.println(tag + "": "" + message + ""\n"" + exception.getMessage() + ""\n"");System.out.println(getStackTrace(exception));}}
","public void [MASK](String tag, String message, Throwable exception) {if (logLevel >= LOG_ERROR) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"" + getMessages(exception) + ""\n"");log.setCursorPos(log.getText().length() - 1);System.err.println(tag + "": "" + message + ""\n"" + exception.getMessage() + ""\n"");System.out.println(getStackTrace(exception));}}
",error,"[{'value': ['run'], 'probability': 0.18288969993591309}, {'value': ['execute'], 'probability': 0.14035189151763916}, {'value': ['write'], 'probability': 0.06844876706600189}, {'value': ['log'], 'probability': 0.051330629736185074}, {'value': ['read'], 'probability': 0.04786229506134987}]","[0.39675188, 0.17302795, 0.3014008, 0.24315298, 0.3391286]",0.146189815137633,"[{'value': ['clear', 'pending'], 'probability': 0.5585951209068298}, {'value': ['handle', 'motion'], 'probability': 0.34780213236808777}, {'value': ['print', 'info'], 'probability': 0.024896712973713875}, {'value': ['move', 'cursor'], 'probability': 0.017614688724279404}, {'value': ['send', 'event'], 'probability': 0.011489303782582283}, {'value': ['handle', 'key', 'event'], 'probability': 0.010434407740831375}, {'value': ['reply'], 'probability': 0.008429299108684063}, {'value': ['generate', 'error', 'message'], 'probability': 0.007164388429373503}, {'value': ['speak'], 'probability': 0.007125290110707283}, {'value': ['fire', 'message'], 'probability': 0.006448598112910986}]","[0.3718726, 0.40134037, 0.25691843, 0.2538237, 0.33750388, 0.4146448, 0.2881331, 0.74573344, 0.17623809, 0.33289474]",0.3775588998658964
1693,1693,"public void debug(String tag, String message) {if (logLevel >= LOG_DEBUG) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"");log.setCursorPos(log.getText().length() - 1);System.out.println(tag + "": "" + message + ""\n"");}}
","public void [MASK](String tag, String message) {if (logLevel >= LOG_DEBUG) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"");log.setCursorPos(log.getText().length() - 1);System.out.println(tag + "": "" + message + ""\n"");}}
",debug,"[{'value': ['run'], 'probability': 0.17813074588775635}, {'value': ['write'], 'probability': 0.10526807606220245}, {'value': ['execute'], 'probability': 0.08087833970785141}, {'value': ['log'], 'probability': 0.05753715708851814}, {'value': ['read'], 'probability': 0.051410481333732605}]","[-0.015929056, 0.10323209, 0.26934344, 0.25895452, 0.007094901]",0.0450778985061605,"[{'value': ['clear', 'pending'], 'probability': 0.8516265749931335}, {'value': ['move', 'cursor'], 'probability': 0.07376004010438919}, {'value': ['speak'], 'probability': 0.028269005939364433}, {'value': ['handle', 'key', 'event'], 'probability': 0.01488379668444395}, {'value': ['reply'], 'probability': 0.013264840468764305}, {'value': ['handle', 'motion'], 'probability': 0.00848202034831047}, {'value': ['print', 'info'], 'probability': 0.003011928638443351}, {'value': ['delete', 'tag'], 'probability': 0.0027147161308676004}, {'value': ['get', 'instance', 'id', 'name'], 'probability': 0.0020683021284639835}, {'value': ['fire', 'message'], 'probability': 0.001918771886266768}]","[-0.13920462, -0.0071651014, -0.019501913, 0.03435457, 0.061269805, 0.12395579, 0.15572546, 0.296855, 0.00038501335, -0.08789963]",-0.11614764744304143
1694,1694,"public void debug(String tag, String message, Throwable exception) {if (logLevel >= LOG_DEBUG) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"" + getMessages(exception) + ""\n"");log.setCursorPos(log.getText().length() - 1);System.out.println(tag + "": "" + message + ""\n"" + exception.getMessage());System.out.println(getStackTrace(exception));}}
","public void [MASK](String tag, String message, Throwable exception) {if (logLevel >= LOG_DEBUG) {checkLogLabel();log.setText(log.getText() + ""\n"" + tag + "": "" + message + ""\n"" + getMessages(exception) + ""\n"");log.setCursorPos(log.getText().length() - 1);System.out.println(tag + "": "" + message + ""\n"" + exception.getMessage());System.out.println(getStackTrace(exception));}}
",debug,"[{'value': ['run'], 'probability': 0.1629035323858261}, {'value': ['execute'], 'probability': 0.13461098074913025}, {'value': ['write'], 'probability': 0.0630682185292244}, {'value': ['log'], 'probability': 0.057694558054208755}, {'value': ['read'], 'probability': 0.04536797106266022}]","[-0.015929056, 0.26934344, 0.10323209, 0.25895452, 0.007094901]",0.0554344968543713,"[{'value': ['clear', 'pending'], 'probability': 0.6768006682395935}, {'value': ['handle', 'motion'], 'probability': 0.2298634946346283}, {'value': ['move', 'cursor'], 'probability': 0.0249774307012558}, {'value': ['log', 'i'], 'probability': 0.0131310373544693}, {'value': ['speak'], 'probability': 0.012981324456632137}, {'value': ['encode', 'int'], 'probability': 0.011722841300070286}, {'value': ['handle', 'key', 'event'], 'probability': 0.010322939604520798}, {'value': ['after', 'completion'], 'probability': 0.007307812571525574}, {'value': ['get', 'instance', 'id', 'name'], 'probability': 0.006828645244240761}, {'value': ['edge'], 'probability': 0.0060637760907411575}]","[-0.13920462, 0.12395579, -0.0071651014, 0.044448577, -0.019501913, 0.26642433, 0.03435457, -0.13397633, 0.00038501335, -0.07456508]",-0.06352003977543734
1695,1695,"private String getMessages(Throwable e) {StringBuffer buffer = new StringBuffer();while (e != null) {buffer.append(e.getMessage() + ""\n"");e = e.getCause();}return buffer.toString();}
","private String [MASK](Throwable e) {StringBuffer buffer = new StringBuffer();while (e != null) {buffer.append(e.getMessage() + ""\n"");e = e.getCause();}return buffer.toString();}
",getMessages,"[{'value': ['execute'], 'probability': 0.194438174366951}, {'value': ['read'], 'probability': 0.07556984573602676}, {'value': ['next'], 'probability': 0.030102208256721497}, {'value': ['start'], 'probability': 0.02950149029493332}, {'value': ['write'], 'probability': 0.027172265574336052}]","[0.37713256, 0.5726487, 0.6966621, 0.7199945, 0.60768855]",0.1753281949637648,"[{'value': ['to', 'string'], 'probability': 0.486563503742218}, {'value': ['get', 'exception', 'message'], 'probability': 0.121507428586483}, {'value': ['concat'], 'probability': 0.11380413919687271}, {'value': ['get', 'message'], 'probability': 0.07121843844652176}, {'value': ['get', 'string'], 'probability': 0.05071635916829109}, {'value': ['get', 'text'], 'probability': 0.043272942304611206}, {'value': ['get', 'stack', 'trace'], 'probability': 0.039661042392253876}, {'value': ['unwrap', 'exception'], 'probability': 0.028358986601233482}, {'value': ['to', 'debug', 'string'], 'probability': 0.023353243246674538}, {'value': ['get', 'result'], 'probability': 0.021543867886066437}]","[0.68798715, 0.86105806, 0.0, 0.8823606, 0.82927686, 0.8160962, 0.8060663, 0.37504336, 0.60665125, 0.90688056]",0.6558977884025696
1696,1696,"private String getStackTrace(Throwable e) {StringBuffer buffer = new StringBuffer();for (StackTraceElement trace : e.getStackTrace()) {buffer.append(trace.toString() + ""\n"");}return buffer.toString();}
","private String [MASK](Throwable e) {StringBuffer buffer = new StringBuffer();for (StackTraceElement trace : e.[MASK]()) {buffer.append(trace.toString() + ""\n"");}return buffer.toString();}
",getStackTrace,"[{'value': ['execute'], 'probability': 0.1993192434310913}, {'value': ['read'], 'probability': 0.05785338953137398}, {'value': ['handle'], 'probability': 0.03618539869785309}, {'value': ['replace'], 'probability': 0.03475149720907211}, {'value': ['next'], 'probability': 0.031675416976213455}]","[0.37713256, 0.5726487, 0.64623374, 0.4901826, 0.6966621]",0.1707853144098636,"[{'value': ['get', 'stack', 'trace'], 'probability': 0.9766451120376587}, {'value': ['log', 'trace'], 'probability': 0.005181662272661924}, {'value': ['get', 'exception', 'message'], 'probability': 0.004317495971918106}, {'value': ['stack', 'trace', 'to', 'string'], 'probability': 0.0038129976019263268}, {'value': ['exception', 'to', 'string'], 'probability': 0.0024243290536105633}, {'value': ['get', 'trace'], 'probability': 0.0023470886517316103}, {'value': ['get', 'exception', 'string'], 'probability': 0.0022552430164068937}, {'value': ['dump', 'stack'], 'probability': 0.0012506505008786917}, {'value': ['get', 'stack', 'trace', 'as', 'string'], 'probability': 0.0009980606846511364}, {'value': ['get', 'stack', 'trace', 'string'], 'probability': 0.0007672850624658167}]","[0.8060663, 0.380431, 0.86105806, 0.6728103, 0.68307114, 0.83195424, 0.8000271, 0.44018027, 0.7942117, 0.76132405]",0.8028352664149545
1697,1697,"public void setLogLevel(int logLevel) {this.logLevel = logLevel;}
","public void [MASK](int logLevel) {this.logLevel = logLevel;}
",setLogLevel,"[{'value': ['log'], 'probability': 0.28646233677864075}, {'value': ['update'], 'probability': 0.1291239857673645}, {'value': ['run'], 'probability': 0.1207154393196106}, {'value': ['write'], 'probability': 0.04000139236450195}, {'value': ['read'], 'probability': 0.03516364470124245}]","[0.33033988, 0.41854778, 0.67632943, 0.46259418, 0.4820371]",0.2657724884227966,"[{'value': ['set', 'log', 'level'], 'probability': 0.9996695518493652}, {'value': ['set', 'level'], 'probability': 0.00022291317873168737}, {'value': ['set', 'logging', 'level'], 'probability': 2.8928918254678138e-05}, {'value': ['set', 'log'], 'probability': 2.2999654902378097e-05}, {'value': ['set', 'class'], 'probability': 2.1332472897483967e-05}, {'value': ['set', 'logging'], 'probability': 1.2712765965261497e-05}, {'value': ['init', 'log'], 'probability': 8.738364158489276e-06}, {'value': ['set'], 'probability': 5.165886705071898e-06}, {'value': ['set', 'log', 'file'], 'probability': 4.805162916454719e-06}, {'value': ['set', 'refs'], 'probability': 2.7841886094392976e-06}]","[0.8253103, 0.876394, 0.79324585, 0.8183426, 0.823405, 0.7722204, 0.1301318, 1.0, 0.7208919, 0.7666413]",0.8253139906765957
1698,1698,"public int getLogLevel() {return logLevel;}
","public int [MASK]() {return logLevel;}
",getLogLevel,"[{'value': ['log'], 'probability': 0.9684556722640991}, {'value': ['run'], 'probability': 0.006226392928510904}, {'value': ['build'], 'probability': 0.0022238672245293856}, {'value': ['logs'], 'probability': 0.0020203925669193268}, {'value': ['save'], 'probability': 0.0017774045700207353}]","[0.32230985, 0.65114945, 0.5626448, 0.225383, 0.62758213]",0.3190191931658221,"[{'value': ['get', 'log', 'level'], 'probability': 0.998513400554657}, {'value': ['get', 'level'], 'probability': 0.0011979126138612628}, {'value': ['set', 'log', 'level'], 'probability': 0.00013847761147189885}, {'value': ['to', 'int'], 'probability': 5.504447108251043e-05}, {'value': ['dump', 'log'], 'probability': 2.9442900995491073e-05}, {'value': ['get', 'logging', 'level'], 'probability': 2.3155465896707028e-05}, {'value': ['level'], 'probability': 2.2590440494241193e-05}, {'value': ['get', 'start', 'level'], 'probability': 1.0084366294904612e-05}, {'value': ['get', 'priority'], 'probability': 6.316186500043841e-06}, {'value': ['get', 'int'], 'probability': 3.6857240957033355e-06}]","[0.8231233, 0.87522423, 0.6551392, 0.5538611, 0.44014513, 0.792731, 0.53107196, 0.87882465, 0.88222694, 0.7056005]",0.8231296443097108
1699,1699,"public ApplicationType getType() {return ApplicationType.WebGL;}
","public ApplicationType [MASK]() {return ApplicationType.WebGL;}
",getType,"[{'value': ['get'], 'probability': 0.29580509662628174}, {'value': ['create'], 'probability': 0.11477262526750565}, {'value': ['resolve'], 'probability': 0.03799949958920479}, {'value': ['update'], 'probability': 0.02604849264025688}, {'value': ['web'], 'probability': 0.024545811116695404}]","[1.0, 0.62328804, 0.427468, 0.36048478, 0.4841886]",0.4048599576045928,"[{'value': ['get', 'view'], 'probability': 0.8295846581459045}, {'value': ['get', 'type'], 'probability': 0.11427700519561768}, {'value': ['get', 'output', 'type'], 'probability': 0.019921302795410156}, {'value': ['get', 'application', 'type'], 'probability': 0.008903836831450462}, {'value': ['get', 'image'], 'probability': 0.007120970170944929}, {'value': ['on', 'module', 'load'], 'probability': 0.005825384519994259}, {'value': ['get', 'input', 'type'], 'probability': 0.005531386937946081}, {'value': ['get', 'product'], 'probability': 0.004347585141658783}, {'value': ['get', 'container'], 'probability': 0.002378275850787759}, {'value': ['get', 'target'], 'probability': 0.002109689638018608}]","[0.8873372, 0.8542828, 0.7443138, 0.776593, 0.8605192, 0.53231555, 0.7866808, 0.86614686, 0.75787157, 0.8772629]",0.8764875031801286
1700,1700,"public int getVersion() {return 0;}
","public int [MASK]() {return 0;}
",getVersion,"[{'value': ['get'], 'probability': 0.12598873674869537}, {'value': ['size'], 'probability': 0.1163727194070816}, {'value': ['start'], 'probability': 0.10748777538537979}, {'value': ['length'], 'probability': 0.06915368884801865}, {'value': ['next'], 'probability': 0.03888930380344391}]","[1.0, 0.43109724, 0.7199945, 0.3304365, 0.6966621]",0.3034909082375374,"[{'value': ['describe', 'contents'], 'probability': 0.45059412717819214}, {'value': ['hash', 'code'], 'probability': 0.37287476658821106}, {'value': ['size'], 'probability': 0.0481923446059227}, {'value': ['get', 'server', 'port'], 'probability': 0.03297366946935654}, {'value': ['get', 'transaction', 'id'], 'probability': 0.025118989869952202}, {'value': ['get', 'index'], 'probability': 0.019638974219560623}, {'value': ['get', 'flags'], 'probability': 0.01695195585489273}, {'value': ['get', 'id'], 'probability': 0.01250510849058628}, {'value': ['get', 'auto', 'expand', 'level'], 'probability': 0.010910781100392342}, {'value': ['get', 'length'], 'probability': 0.010239441879093647}]","[0.43498147, 0.33598104, 0.43109724, 0.6926611, 0.7615852, 0.7092336, 0.75727946, 0.82231325, 0.78291446, 0.8075286]",0.4378843187448075
1701,1701,"public long getJavaHeap() {return 0;}
","public long [MASK]() {return 0;}
",getJavaHeap,"[{'value': ['get'], 'probability': 0.24334383010864258}, {'value': ['start'], 'probability': 0.05304572358727455}, {'value': ['next'], 'probability': 0.04063818231225014}, {'value': ['end'], 'probability': 0.033272501081228256}, {'value': ['run'], 'probability': 0.02769497223198414}]","[1.0, 0.7199945, 0.6966621, 0.66437757, 0.65114945]",0.3499866105367747,"[{'value': ['get', 'pos'], 'probability': 0.24797648191452026}, {'value': ['get', 'activation', 'number'], 'probability': 0.1866316795349121}, {'value': ['get', 'creation', 'time'], 'probability': 0.1144406870007515}, {'value': ['get', 'recency'], 'probability': 0.10746238380670547}, {'value': ['last', 'modified'], 'probability': 0.09453578293323517}, {'value': ['get', 'estimated', 'time'], 'probability': 0.08695351332426071}, {'value': ['get', 'id'], 'probability': 0.05574197694659233}, {'value': ['get', 'last', 'accessed', 'time'], 'probability': 0.042785145342350006}, {'value': ['long', 'value'], 'probability': 0.03468535840511322}, {'value': ['get', 'view', 'id'], 'probability': 0.02878689207136631}]","[0.6599685, 0.7720787, 0.86103445, 0.7565452, 0.5872554, 0.8573883, 0.82231325, 0.84233767, 0.65947056, 0.8310107]",0.7463312038711902
1702,1702,"public long getNativeHeap() {return 0;}
","public long [MASK]() {return 0;}
",getNativeHeap,"[{'value': ['get'], 'probability': 0.24334383010864258}, {'value': ['start'], 'probability': 0.05304572358727455}, {'value': ['next'], 'probability': 0.04063818231225014}, {'value': ['end'], 'probability': 0.033272501081228256}, {'value': ['run'], 'probability': 0.02769497223198414}]","[1.0, 0.7199945, 0.6966621, 0.66437757, 0.65114945]",0.3499866105367747,"[{'value': ['get', 'pos'], 'probability': 0.24797648191452026}, {'value': ['get', 'activation', 'number'], 'probability': 0.1866316795349121}, {'value': ['get', 'creation', 'time'], 'probability': 0.1144406870007515}, {'value': ['get', 'recency'], 'probability': 0.10746238380670547}, {'value': ['last', 'modified'], 'probability': 0.09453578293323517}, {'value': ['get', 'estimated', 'time'], 'probability': 0.08695351332426071}, {'value': ['get', 'id'], 'probability': 0.05574197694659233}, {'value': ['get', 'last', 'accessed', 'time'], 'probability': 0.042785145342350006}, {'value': ['long', 'value'], 'probability': 0.03468535840511322}, {'value': ['get', 'view', 'id'], 'probability': 0.02878689207136631}]","[0.6599685, 0.7720787, 0.86103445, 0.7565452, 0.5872554, 0.8573883, 0.82231325, 0.84233767, 0.65947056, 0.8310107]",0.7463312038711902
1703,1703,"public Preferences getPreferences(String name) {Preferences pref = prefs.get(name);if (pref == null) {pref = new GwtPreferences(name);prefs.put(name, pref);}return pref;}
","public Preferences [MASK](String name) {Preferences pref = prefs.get(name);if (pref == null) {pref = new GwtPreferences(name);prefs.put(name, pref);}return pref;}
",getPreferences,"[{'value': ['put'], 'probability': 0.6192981004714966}, {'value': ['get'], 'probability': 0.22803224623203278}, {'value': ['add'], 'probability': 0.018170615658164024}, {'value': ['set'], 'probability': 0.009169292636215687}, {'value': ['create'], 'probability': 0.008815954439342022}]","[0.8176035, 1.0, 0.54842544, 0.65028083, 0.62328804]",0.7557952803640577,"[{'value': ['get', 'pref'], 'probability': 0.9622802734375}, {'value': ['create', 'preferences'], 'probability': 0.022115491330623627}, {'value': ['get', 'preference'], 'probability': 0.005792534910142422}, {'value': ['get'], 'probability': 0.004529491998255253}, {'value': ['get', 'preferences'], 'probability': 0.003641222370788455}, {'value': ['get', 'or', 'create'], 'probability': 0.0004953273455612361}, {'value': ['clear', 'preferences'], 'probability': 0.0004490941937547177}, {'value': ['get', 'instance'], 'probability': 0.0004378992598503828}, {'value': ['get', 'store'], 'probability': 0.00014931159967090935}, {'value': ['get', 'node'], 'probability': 0.00010933740122709423}]","[0.83124596, 0.5717645, 0.86803854, 1.0, 0.82820785, 0.8871916, 0.6005936, 0.9335536, 0.85502607, 0.74363744]",0.8264367155058484
1704,1704,"public Clipboard getClipboard() {return clipboard;}
","public Clipboard [MASK]() {return clipboard;}
",getClipboard,"[{'value': ['clip'], 'probability': 0.45662903785705566}, {'value': ['get'], 'probability': 0.053774986416101456}, {'value': ['show'], 'probability': 0.027606120333075523}, {'value': ['wrap'], 'probability': 0.022487560287117958}, {'value': ['pop'], 'probability': 0.017989616841077805}]","[0.2928718, 1.0, 0.6094576, 0.40682167, 0.38630247]",0.2204313764614768,"[{'value': ['get', 'clipboard'], 'probability': 0.9999992847442627}, {'value': ['get', 'contents'], 'probability': 1.6151547299614322e-07}, {'value': ['perform', 'selection', 'paste'], 'probability': 1.4640995971149096e-07}, {'value': ['set', 'clipboard'], 'probability': 1.1624139517607546e-07}, {'value': ['copy', 'to', 'clipboard'], 'probability': 1.0374755277098302e-07}, {'value': ['get', 'system', 'clipboard'], 'probability': 9.240391563025696e-08}, {'value': ['get', 'img'], 'probability': 8.792421368752912e-08}, {'value': ['get', 'clipboard', 'text'], 'probability': 3.579816265641966e-08}, {'value': ['get', 'clipboard', 'contents'], 'probability': 2.1412784434460264e-08}, {'value': ['can', 'paste'], 'probability': 1.6079980014183093e-08}]","[0.81569606, 0.8420657, 0.5078362, 0.5649734, 0.6577576, 0.80443877, 0.74922514, 0.7186994, 0.718577, 0.6411216]",0.8156960124740664
1705,1705,"public void postRunnable(Runnable runnable) {runnables.add(runnable);}
","public void [MASK](Runnable runnable) {runnables.add(runnable);}
",postRunnable,"[{'value': ['run'], 'probability': 0.6157737970352173}, {'value': ['add'], 'probability': 0.18324683606624603}, {'value': ['execute'], 'probability': 0.049333952367305756}, {'value': ['update'], 'probability': 0.02958706207573414}, {'value': ['perform'], 'probability': 0.01265761535614729}]","[0.5558538, 0.376335, 0.1260291, 0.42028293, 0.2741671]",0.4333651448959648,"[{'value': ['add'], 'probability': 0.372800350189209}, {'value': ['post', 'runnable'], 'probability': 0.3665001690387726}, {'value': ['execute'], 'probability': 0.12870077788829803}, {'value': ['invoke', 'later'], 'probability': 0.04725479707121849}, {'value': ['add', 'runnable'], 'probability': 0.04380360618233681}, {'value': ['add', 'request'], 'probability': 0.018508492037653923}, {'value': ['push'], 'probability': 0.010780866257846355}, {'value': ['enqueue'], 'probability': 0.007723143789917231}, {'value': ['post', 'refresh'], 'probability': 0.0020447985734790564}, {'value': ['async', 'exec'], 'probability': 0.0018829877953976393}]","[0.376335, 0.82201356, 0.1260291, 0.5642633, 0.1647587, 0.5005104, 0.46838307, 0.0, 0.7704553, 0.13945222]",0.5078184253482743
1706,1706,"public static AgentInfo agentInfo() {return agentInfo;}
","public static AgentInfo [MASK]() {return [MASK];}
",agentInfo,"[{'value': ['create'], 'probability': 0.2267087996006012}, {'value': ['get'], 'probability': 0.08996953070163727}, {'value': ['execute'], 'probability': 0.03450392931699753}, {'value': ['run'], 'probability': 0.026581885293126106}, {'value': ['build'], 'probability': 0.025490686297416687}]","[0.2580403, 0.43160307, 0.18317984, 0.32518715, 0.20377788]",0.1174900844134874,"[{'value': ['get', 'name'], 'probability': 0.9916377663612366}, {'value': ['name'], 'probability': 0.004348232876509428}, {'value': ['get', 'type', 'name'], 'probability': 0.0015772725455462933}, {'value': ['get', 'id'], 'probability': 0.000819348031654954}, {'value': ['get', 'title'], 'probability': 0.0006945299683138728}, {'value': ['is', 'exported'], 'probability': 0.00035880313953384757}, {'value': ['get', 'type'], 'probability': 0.00018824652943294495}, {'value': ['get', 'signature'], 'probability': 0.0001410205295542255}, {'value': ['get', 'source'], 'probability': 0.0001383834460284561}, {'value': ['get', 'source', 'name'], 'probability': 9.637440234655514e-05}]","[0.5106474, 0.44683245, 0.49554256, 0.43941262, 0.4097813, 0.33220422, 0.44874722, 0.44203997, 0.53051525, 0.55268896]",0.5101391089483608
1707,1707,"public String getBaseUrl() {return preloader.baseUrl;}
","public String [MASK]() {return preloader.baseUrl;}
",getBaseUrl,"[{'value': ['base'], 'probability': 0.3662439286708832}, {'value': ['build'], 'probability': 0.09877242892980576}, {'value': ['get'], 'probability': 0.03769093379378319}, {'value': ['name'], 'probability': 0.021536724641919136}, {'value': ['target'], 'probability': 0.016548898071050644}]","[0.4053497, 0.5626448, 1.0, 0.47842693, 0.48396432]",0.2600344179143379,"[{'value': ['get', 'type'], 'probability': 0.8053273558616638}, {'value': ['get', 'feature', 'type'], 'probability': 0.07649358361959457}, {'value': ['get', 'name'], 'probability': 0.07330165803432465}, {'value': ['get', 'type', 'name'], 'probability': 0.010076100938022137}, {'value': ['get', 'implementation', 'type'], 'probability': 0.00898282416164875}, {'value': ['to', 'string'], 'probability': 0.008517096750438213}, {'value': ['get', 'base', 'class'], 'probability': 0.005204529967159033}, {'value': ['get', 'object', 'type'], 'probability': 0.004623049404472113}, {'value': ['get', 'instance'], 'probability': 0.004281966481357813}, {'value': ['get', 'url'], 'probability': 0.0031918284948915243}]","[0.8542828, 0.7903998, 0.8655689, 0.7920693, 0.7685734, 0.68798715, 0.7946268, 0.7642858, 0.9335536, 0.7606252]",0.846724260649981
1708,1708,"public Preloader getPreloader() {return preloader;}
","public Preloader [MASK]() {return preloader;}
",getPreloader,"[{'value': ['get'], 'probability': 0.1599283069372177}, {'value': ['build'], 'probability': 0.10795707255601883}, {'value': ['load'], 'probability': 0.09964638948440552}, {'value': ['upgrade'], 'probability': 0.040684618055820465}, {'value': ['create'], 'probability': 0.03657666966319084}]","[1.0, 0.5626448, 0.46046397, 0.4226108, 0.62328804]",0.3065449215626048,"[{'value': ['initialize'], 'probability': 0.9707701206207275}, {'value': ['get', 'instance'], 'probability': 0.009490412659943104}, {'value': ['get', 'type'], 'probability': 0.004752967040985823}, {'value': ['create', 'component'], 'probability': 0.004340033046901226}, {'value': ['get', 'component'], 'probability': 0.0031557525508105755}, {'value': ['get', 'component', 'name'], 'probability': 0.0022873245179653168}, {'value': ['get', 'source'], 'probability': 0.0021589885000139475}, {'value': ['get', 'new', 'with', 'new'], 'probability': 0.0012589473044499755}, {'value': ['get', 'client', 'info'], 'probability': 0.0009452587692067027}, {'value': ['get', 'provider'], 'probability': 0.0008402159437537193}]","[-0.20395917, 0.9335536, 0.8542828, 0.53690314, 0.8372139, 0.8002335, 0.8607201, 0.8013699, 0.8054952, 0.79763234]",-0.1739759181068369
1709,1709,"public CanvasElement getCanvasElement() {return graphics.canvas;}
","public CanvasElement [MASK]() {return graphics.canvas;}
",getCanvasElement,"[{'value': ['paint'], 'probability': 0.43151718378067017}, {'value': ['graphics'], 'probability': 0.26207584142684937}, {'value': ['render'], 'probability': 0.07208776473999023}, {'value': ['get'], 'probability': 0.03109564818441868}, {'value': ['create'], 'probability': 0.019047947600483894}]","[0.41529104, 0.23172045, 0.2904214, 1.0, 0.62328804]",0.3038373871136846,"[{'value': ['canvas'], 'probability': 0.9994853734970093}, {'value': ['get', 'canvas'], 'probability': 0.00011050281318603083}, {'value': ['get', 'graphics'], 'probability': 9.31601389311254e-05}, {'value': ['get', 'drawing', 'area'], 'probability': 9.123235940933228e-05}, {'value': ['get', 'style'], 'probability': 6.298639345914125e-05}, {'value': ['get', 'r', 'brace'], 'probability': 5.3818726883037016e-05}, {'value': ['get', 'main', 'composite'], 'probability': 4.058772174175829e-05}, {'value': ['get', 'mode'], 'probability': 2.7715981559595093e-05}, {'value': ['create', 'canvas'], 'probability': 2.2149090000311844e-05}, {'value': ['get', 'target'], 'probability': 1.2347145457169972e-05}]","[0.24661459, 0.8195941, 0.7484811, 0.82840765, 0.82790756, 0.76478344, 0.6906353, 0.8390242, 0.5513897, 0.8772629]",0.24689118598516976
1710,1710,"public LoadingListener getLoadingListener() {return loadingListener;}
","public LoadingListener [MASK]() {return loadingListener;}
",getLoadingListener,"[{'value': ['load'], 'probability': 0.593996524810791}, {'value': ['loading'], 'probability': 0.2338278740644455}, {'value': ['loaded'], 'probability': 0.014371762052178383}, {'value': ['build'], 'probability': 0.012440629303455353}, {'value': ['get'], 'probability': 0.012418510392308235}]","[0.46046397, 0.29439852, 0.42990005, 0.5626448, 1.0]",0.3679491644893617,"[{'value': ['invoke', 'callback'], 'probability': 0.8880347609519958}, {'value': ['get', 'selected', 'item'], 'probability': 0.06271407008171082}, {'value': ['get', 'target', 'list'], 'probability': 0.03598331660032272}, {'value': ['skin', 'object', 'initial', 'show'], 'probability': 0.00785081461071968}, {'value': ['get', 'vertical', 'bar'], 'probability': 0.0018565836362540722}, {'value': ['do', 'scroll'], 'probability': 0.0009502525790594518}, {'value': ['get', 'data', 'display'], 'probability': 0.0008256693836301565}, {'value': ['get', 'selection', 'provider'], 'probability': 0.0006345859146676958}, {'value': ['get', 'current', 'user'], 'probability': 0.0006089741364121437}, {'value': ['get', 'transport', 'listener'], 'probability': 0.0005409576115198433}]","[0.13193074, 0.8008691, 0.8220239, 0.63492984, 0.76063174, 0.66364527, 0.7532516, 0.78167444, 0.8145059, 0.798379]",0.20603739240203295
1711,1711,"public void setLoadingListener(LoadingListener loadingListener) {this.loadingListener = loadingListener;}
","public void [MASK](LoadingListener loadingListener) {this.loadingListener = loadingListener;}
",setLoadingListener,"[{'value': ['load'], 'probability': 0.34743282198905945}, {'value': ['apply'], 'probability': 0.06976711004972458}, {'value': ['run'], 'probability': 0.054545462131500244}, {'value': ['execute'], 'probability': 0.0395381785929203}, {'value': ['setup'], 'probability': 0.03693974018096924}]","[0.3492521, 0.5010617, 0.67632943, 0.35167885, 0.35182503]",0.2200910373522422,"[{'value': ['invoke', 'callback'], 'probability': 0.9968728423118591}, {'value': ['skin', 'object', 'initial', 'show'], 'probability': 0.0017455206252634525}, {'value': ['set', 'target'], 'probability': 0.00031823659082874656}, {'value': ['open', 'book'], 'probability': 0.0003069471858907491}, {'value': ['add', 'listener'], 'probability': 0.00016998275532387197}, {'value': ['set', 'engine'], 'probability': 0.00015398986579384655}, {'value': ['set', 'onerror'], 'probability': 0.00014081587141845375}, {'value': ['handle', 'status'], 'probability': 0.00012209350825287402}, {'value': ['set', 'targetted', 'message', 'list'], 'probability': 9.404776938026771e-05}, {'value': ['set', 'progress', 'text'], 'probability': 7.551634189439937e-05}]","[0.092680335, 0.6021269, 0.8899701, 0.73684126, 0.43155232, 0.7722597, 1.0, 0.57892317, 0.78713965, 0.811874]",0.09449004003767601
1712,1712,"public void addLifecycleListener(LifecycleListener listener) {synchronized (lifecycleListeners) {lifecycleListeners.add(listener);}}
","public void [MASK](LifecycleListener listener) {synchronized (lifecycleListeners) {lifecycleListeners.add(listener);}}
",addLifecycleListener,"[{'value': ['add'], 'probability': 0.8163187503814697}, {'value': ['accept'], 'probability': 0.019045744091272354}, {'value': ['update'], 'probability': 0.012699753977358341}, {'value': ['remove'], 'probability': 0.010207653976976871}, {'value': ['put'], 'probability': 0.0057601951994001865}]","[1.0, 0.3790286, 0.5117927, 0.67838424, 0.60947514]",0.8404726808873855,"[{'value': ['add', 'lifecycle', 'listener'], 'probability': 0.6156995892524719}, {'value': ['add', 'life', 'cycle', 'listener'], 'probability': 0.3083738386631012}, {'value': ['remove', 'lifecycle', 'listener'], 'probability': 0.06989666819572449}, {'value': ['add', 'listener'], 'probability': 0.0048038470558822155}, {'value': ['register'], 'probability': 0.0003601305070333183}, {'value': ['add'], 'probability': 0.0003578510950319469}, {'value': ['remove', 'life', 'cycle', 'listener'], 'probability': 0.0002737842733040452}, {'value': ['register', 'listener'], 'probability': 9.096499707084149e-05}, {'value': ['wait'], 'probability': 8.269070531241596e-05}, {'value': ['add', 'click', 'listener'], 'probability': 6.055865378584713e-05}]","[0.6662303, 0.6916967, 0.4858027, 0.80472356, 0.284, 1.0, 0.570708, 0.26734373, 0.46764162, 0.73417693]",0.66204447599975
1713,1713,"public void removeLifecycleListener(LifecycleListener listener) {synchronized (lifecycleListeners) {lifecycleListeners.removeValue(listener, true);}}
","public void [MASK](LifecycleListener listener) {synchronized (lifecycleListeners) {lifecycleListeners.removeValue(listener, true);}}
",removeLifecycleListener,"[{'value': ['run'], 'probability': 0.0712069645524025}, {'value': ['accept'], 'probability': 0.0693691223859787}, {'value': ['add'], 'probability': 0.054306093603372574}, {'value': ['setup'], 'probability': 0.0353555865585804}, {'value': ['perform'], 'probability': 0.03028801828622818}]","[0.32723948, 0.48164433, 0.67838424, 0.16101128, 0.2985815]",0.1082894636845823,"[{'value': ['remove', 'lifecycle', 'listener'], 'probability': 0.9374762773513794}, {'value': ['remove', 'life', 'cycle', 'listener'], 'probability': 0.06042694300413132}, {'value': ['add', 'life', 'cycle', 'listener'], 'probability': 0.0013629308668896556}, {'value': ['remove', 'listener'], 'probability': 0.00018749962328001857}, {'value': ['add', 'lifecycle', 'listener'], 'probability': 0.00018680210632737726}, {'value': ['wait', 'until', 'finished'], 'probability': 0.0001558166550239548}, {'value': ['remove', 'selection', 'listener'], 'probability': 0.00012728062574751675}, {'value': ['remove', 'action', 'listener'], 'probability': 3.1925421353662387e-05}, {'value': ['find', 'lifecycle', 'listeners'], 'probability': 2.2387912395060994e-05}, {'value': ['is', 'busy'], 'probability': 2.1959498553769663e-05}]","[0.58688813, 0.61977464, 0.49090198, 0.764534, 0.39915678, 0.44756532, 0.7003028, 0.7548442, 0.32326147, 0.33703125]",0.5887293748217244
1714,1714,"private void onVisibilityChange(boolean visible) {if (visible) {for (LifecycleListener listener : lifecycleListeners) {listener.resume();}listener.resume();} else {for (LifecycleListener listener : lifecycleListeners) {listener.pause();}listener.pause();}}public String toString() {String s = """";s += ""["" + ex.x + "","" + ey.x + ""]\n"";s += ""["" + ex.y + "","" + ey.y + ""]"";return s;}
","private void [MASK](boolean visible) {if (visible) {for (LifecycleListener listener : lifecycleListeners) {listener.resume();}listener.resume();} else {for (LifecycleListener listener : lifecycleListeners) {listener.pause();}listener.pause();}}public String toString() {String s = """";s += ""["" + ex.x + "","" + ey.x + ""]\n"";s += ""["" + ex.y + "","" + ey.y + ""]"";return s;}
",onVisibilityChange,"[{'value': ['pause'], 'probability': 0.16361255943775177}, {'value': ['stop'], 'probability': 0.11717800796031952}, {'value': ['resume'], 'probability': 0.09163515269756317}, {'value': ['start'], 'probability': 0.05039297044277191}, {'value': ['wait'], 'probability': 0.04257112741470337}]","[0.24979624, 0.62595785, 0.52582735, 0.691581, 0.48986372]",0.2181074377243423,"[{'value': ['pause'], 'probability': 0.7573269605636597}, {'value': ['resume'], 'probability': 0.12287232279777527}, {'value': ['run'], 'probability': 0.032348766922950745}, {'value': ['sleep'], 'probability': 0.027714630588889122}, {'value': ['test', 'pause'], 'probability': 0.02440839819610119}, {'value': ['test', 'pause', 'resume'], 'probability': 0.015920424833893776}, {'value': ['toggle', 'pause'], 'probability': 0.007140426896512508}, {'value': ['do', 'resume'], 'probability': 0.005236578173935413}, {'value': ['is', 'paused'], 'probability': 0.003938920795917511}, {'value': ['do', 'pause'], 'probability': 0.003092543687671423}]","[0.24979624, 0.52582735, 0.6386636, 0.31979203, 0.506073, 0.5824037, 0.1454068, 0.6381504, 0.6255736, 0.5038594]",0.31333678178029484
1715,1715,"public final Mat22 set(final Mat22 m) {ex.x = m.ex.x;ex.y = m.ex.y;ey.x = m.ey.x;ey.y = m.ey.y;return this;}
","public final [MASK] set(final [MASK] m) {ex.x = m.ex.x;ex.y = m.ex.y;ey.x = m.ey.x;ey.y = m.ey.y;return this;}
",Mat22,"[{'value': ['void'], 'probability': 0.977706789970398}, {'value': ['double'], 'probability': 0.005676693748682737}, {'value': ['T'], 'probability': 0.002549328375607729}, {'value': ['String'], 'probability': 0.002523448783904314}, {'value': ['Point'], 'probability': 0.0008150458452291787}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set'], 'probability': 0.889682948589325}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.045411597937345505}, {'value': ['mul', 'trans'], 'probability': 0.038065820932388306}, {'value': ['set', 'to'], 'probability': 0.008024097420275211}, {'value': ['abs', 'local'], 'probability': 0.007267913781106472}, {'value': ['draw', 'line'], 'probability': 0.003086742712184787}, {'value': ['set', 'transform'], 'probability': 0.0029670170042663813}, {'value': ['invert', 'local'], 'probability': 0.002292770193889737}, {'value': ['clone'], 'probability': 0.0019476142479106784}, {'value': ['to', 'node'], 'probability': 0.001253538648597896}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1716,1716,"public final Mat22 set(final float exx, final float col2x, final float exy, final float col2y) {ex.x = exx;ex.y = exy;ey.x = col2x;ey.y = col2y;return this;}
","public final [MASK] set(final float exx, final float col2x, final float exy, final float col2y) {ex.x = exx;ex.y = exy;ey.x = col2x;ey.y = col2y;return this;}
",Mat22,"[{'value': ['void'], 'probability': 0.9359895586967468}, {'value': ['float'], 'probability': 0.024542730301618576}, {'value': ['double'], 'probability': 0.023277178406715393}, {'value': ['long'], 'probability': 0.002440408105030656}, {'value': ['empty'], 'probability': 0.0022663890849798918}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set'], 'probability': 0.9992014765739441}, {'value': ['set', 'all'], 'probability': 0.00019688291649799794}, {'value': ['set', 'row'], 'probability': 0.00015132693806663156}, {'value': ['move'], 'probability': 0.00012988429807592183}, {'value': ['set', 'data'], 'probability': 7.828772504581138e-05}, {'value': ['set', 'rotation'], 'probability': 6.775710062356666e-05}, {'value': ['add'], 'probability': 4.7828951210249215e-05}, {'value': ['set', 'file'], 'probability': 4.641217674361542e-05}, {'value': ['set', 'location'], 'probability': 4.010644624941051e-05}, {'value': ['update'], 'probability': 4.006905510323122e-05}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1717,1717,"public final Mat22 clone() {return new Mat22(ex, ey);}
","public final [MASK] clone() {return new [MASK](ex, ey);}
",Mat22,"[{'value': ['String'], 'probability': 0.3724237084388733}, {'value': ['clone'], 'probability': 0.16314376890659332}, {'value': ['Date'], 'probability': 0.0873468890786171}, {'value': ['Type'], 'probability': 0.03967941552400589}, {'value': ['T'], 'probability': 0.027685299515724182}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['to', 'node'], 'probability': 0.2980359196662903}, {'value': ['clone'], 'probability': 0.2967468798160553}, {'value': ['get', 'transform'], 'probability': 0.14562559127807617}, {'value': ['mul', 'trans'], 'probability': 0.11428158730268478}, {'value': ['build'], 'probability': 0.04964656010270119}, {'value': ['invert', 'local'], 'probability': 0.02956606075167656}, {'value': ['get', 'mat'], 'probability': 0.02051851898431778}, {'value': ['new', 'input', 'stream'], 'probability': 0.01857774890959263}, {'value': ['create', 'strategy'], 'probability': 0.013546091504395008}, {'value': ['item'], 'probability': 0.013455091044306755}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1718,1718,"public final void set(final float angle) {final float c = MathUtils.cos(angle), s = MathUtils.sin(angle);ex.x = c;ey.x = -s;ex.y = s;ey.y = c;}
","public final [MASK] set(final float angle) {final float c = MathUtils.cos(angle), s = MathUtils.sin(angle);ex.x = c;ey.x = -s;ex.y = s;ey.y = c;}
",void,"[{'value': ['void'], 'probability': 0.5665105581283569}, {'value': ['float'], 'probability': 0.3031025826931}, {'value': ['double'], 'probability': 0.10795743018388748}, {'value': ['Point'], 'probability': 0.003344835713505745}, {'value': ['Double'], 'probability': 0.0018874671077355742}]","[1.0, 0.22919214, 0.14729977, 0.0, 0.0]",0.6518813912660981,"[{'value': ['set'], 'probability': 0.9464154243469238}, {'value': ['rotate'], 'probability': 0.01820952259004116}, {'value': ['add'], 'probability': 0.011580108664929867}, {'value': ['move'], 'probability': 0.0077769639901816845}, {'value': ['link'], 'probability': 0.005650436505675316}, {'value': ['or'], 'probability': 0.002505076350644231}, {'value': ['set', 'angle'], 'probability': 0.002270026132464409}, {'value': ['visit'], 'probability': 0.0021505870390683413}, {'value': ['constrain'], 'probability': 0.002062853192910552}, {'value': ['equal'], 'probability': 0.0013790533412247896}]","[0.29215682, 0.16707228, 0.17481552, 0.36999685, 0.15955205, 0.31173503, 0.34639266, 0.07761565, 0.03710806, 0.3567892]",0.2876501403286595
1719,1719,"public final void setIdentity() {ex.x = 1.0f;ey.x = 0.0f;ex.y = 0.0f;ey.y = 1.0f;}
","public final [MASK] setIdentity() {ex.x = 1.0f;ey.x = 0.0f;ex.y = 0.0f;ey.y = 1.0f;}
",void,"[{'value': ['void'], 'probability': 0.9947007894515991}, {'value': ['String'], 'probability': 0.0017104157013818622}, {'value': ['T'], 'probability': 0.0005975881358608603}, {'value': ['double'], 'probability': 0.0005090116756036878}, {'value': ['long'], 'probability': 0.00027433678042143583}]","[1.0, 0.0, 0.0, 0.14729977, 0.23130237]",0.9948392214988812,"[{'value': ['set', 'identity'], 'probability': 0.5057286620140076}, {'value': ['set', 'zero'], 'probability': 0.42550817131996155}, {'value': ['abs', 'local'], 'probability': 0.024324102327227592}, {'value': ['clear'], 'probability': 0.017421210184693336}, {'value': ['transpose'], 'probability': 0.00910419225692749}, {'value': ['set', 'defaults'], 'probability': 0.005719719920307398}, {'value': ['use'], 'probability': 0.005054890178143978}, {'value': ['n'], 'probability': 0.0031305872835218906}, {'value': ['constrain'], 'probability': 0.002169431420043111}, {'value': ['rotl'], 'probability': 0.0018390753539279103}]","[0.37122715, 0.32565153, 0.024440244, 0.41927695, 0.2970241, 0.26215795, 0.19733766, 0.22929753, 0.03710806, 0.0]",0.3402058898405231
1720,1720,"public final void setZero() {ex.x = 0.0f;ey.x = 0.0f;ex.y = 0.0f;ey.y = 0.0f;}
","public final [MASK] setZero() {ex.x = 0.0f;ey.x = 0.0f;ex.y = 0.0f;ey.y = 0.0f;}
",void,"[{'value': ['void'], 'probability': 0.9943050742149353}, {'value': ['String'], 'probability': 0.0025382465682923794}, {'value': ['float'], 'probability': 0.0003222850791644305}, {'value': ['Color'], 'probability': 0.0003065945056732744}, {'value': ['T'], 'probability': 0.0003038333961740136}]","[1.0, 0.0, 0.22919214, 0.0, 0.0]",0.9943789394211836,"[{'value': ['set', 'identity'], 'probability': 0.5057286620140076}, {'value': ['set', 'zero'], 'probability': 0.42550817131996155}, {'value': ['abs', 'local'], 'probability': 0.024324102327227592}, {'value': ['clear'], 'probability': 0.017421210184693336}, {'value': ['transpose'], 'probability': 0.00910419225692749}, {'value': ['set', 'defaults'], 'probability': 0.005719719920307398}, {'value': ['use'], 'probability': 0.005054890178143978}, {'value': ['n'], 'probability': 0.0031305872835218906}, {'value': ['constrain'], 'probability': 0.002169431420043111}, {'value': ['rotl'], 'probability': 0.0018390753539279103}]","[0.37122715, 0.32565153, 0.024440244, 0.41927695, 0.2970241, 0.26215795, 0.19733766, 0.22929753, 0.03710806, 0.0]",0.3402058898405231
1721,1721,"public final float getAngle() {return MathUtils.atan2(ex.y, ex.x);}
","public final [MASK] getAngle() {return MathUtils.atan2(ex.y, ex.x);}
",float,"[{'value': ['String'], 'probability': 0.9471567869186401}, {'value': ['long'], 'probability': 0.028622448444366455}, {'value': ['Long'], 'probability': 0.00720400083810091}, {'value': ['double'], 'probability': 0.0034203261602669954}, {'value': ['Double'], 'probability': 0.002007983159273863}]","[0.0, 0.31141275, 0.0, 0.21689123, 0.0]",0.0096552341747293,"[{'value': ['get', 'angle'], 'probability': 0.9656548500061035}, {'value': ['get', 'alpha'], 'probability': 0.014568150974810123}, {'value': ['get', 'phase'], 'probability': 0.004670621361583471}, {'value': ['angle'], 'probability': 0.004345790483057499}, {'value': ['azimuth'], 'probability': 0.004186294507235289}, {'value': ['get', 'x'], 'probability': 0.003001855919137597}, {'value': ['get', 'yaw'], 'probability': 0.0015349140157923102}, {'value': ['get', 'rotation'], 'probability': 0.001378169166855514}, {'value': ['get', 'theta'], 'probability': 0.0003339112736284733}, {'value': ['float', 'value'], 'probability': 0.00032543856650590897}]","[0.28921732, 0.31555343, 0.2782874, 0.18494314, -0.003647545, 0.24697983, 0.29074755, 0.24729936, 0.28166318, 0.7827648]",0.2878466503605181
1722,1722,"public final void set(final Vec2 c1, final Vec2 c2) {ex.x = c1.x;ey.x = c2.x;ex.y = c1.y;ey.y = c2.y;}
","public final [MASK] set(final Vec2 c1, final Vec2 c2) {ex.x = c1.x;ey.x = c2.x;ex.y = c1.y;ey.y = c2.y;}
",void,"[{'value': ['void'], 'probability': 0.9955443739891052}, {'value': ['double'], 'probability': 0.0006285340059548616}, {'value': ['String'], 'probability': 0.0004429468826856464}, {'value': ['empty'], 'probability': 0.00032337254378944635}, {'value': ['Color'], 'probability': 0.00032287827343679965}]","[1.0, 0.14729977, 0.0, 0.48643255, 0.0]",0.9957942558332766,"[{'value': ['set'], 'probability': 0.8397231698036194}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.1301228255033493}, {'value': ['mul', 'trans'], 'probability': 0.022684572264552116}, {'value': ['copy'], 'probability': 0.0023217948619276285}, {'value': ['union'], 'probability': 0.0014334232546389103}, {'value': ['negate', 'local'], 'probability': 0.0009481616434641182}, {'value': ['put'], 'probability': 0.0008975986856967211}, {'value': ['clone'], 'probability': 0.0006795439403504133}, {'value': ['reflect'], 'probability': 0.0005997599801048636}, {'value': ['get', 'union'], 'probability': 0.0005890622269362211}]","[0.29215682, 0.3029888, 0.016056206, 0.19263868, 0.26121444, 0.25454596, 0.29601082, 0.03302879, 0.2471895, 0.33974132]",0.28682041353849214
1723,1723,"public final Mat22 invert() {final float a = ex.x, b = ey.x, c = ex.y, d = ey.y;final Mat22 B = new Mat22();float det = a * d - b * c;if (det != 0) {det = 1.0f / det;}B.ex.x = det * d;B.ey.x = -det * b;B.ex.y = -det * c;B.ey.y = det * a;return B;}
","public final [MASK] invert() {final float a = ex.x, b = ey.x, c = ex.y, d = ey.y;final [MASK] B = new [MASK]();float det = a * d - b * c;if (det != 0) {det = 1.0f / det;}B.ex.x = det * d;B.ey.x = -det * b;B.ex.y = -det * c;B.ey.y = det * a;return B;}
",Mat22,"[{'value': ['void'], 'probability': 0.7675698399543762}, {'value': ['float'], 'probability': 0.15095576643943787}, {'value': ['double'], 'probability': 0.06028583645820618}, {'value': ['long'], 'probability': 0.004429311025887728}, {'value': ['Double'], 'probability': 0.0024637363385409117}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['invert', 'local'], 'probability': 0.496063768863678}, {'value': ['get', 'transform'], 'probability': 0.445395290851593}, {'value': ['get'], 'probability': 0.02107628434896469}, {'value': ['mul', 'trans'], 'probability': 0.018587201833724976}, {'value': ['gray'], 'probability': 0.006332848686724901}, {'value': ['second'], 'probability': 0.003341460134834051}, {'value': ['lookup'], 'probability': 0.003157566301524639}, {'value': ['get', 'instance'], 'probability': 0.002175175817683339}, {'value': ['get', 'inverse'], 'probability': 0.002038551727309823}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.0018318442162126303}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1724,1724,"public final Mat22 invertLocal() {final float a = ex.x, b = ey.x, c = ex.y, d = ey.y;float det = a * d - b * c;if (det != 0) {det = 1.0f / det;}ex.x = det * d;ey.x = -det * b;ex.y = -det * c;ey.y = det * a;return this;}
","public final [MASK] invertLocal() {final float a = ex.x, b = ey.x, c = ex.y, d = ey.y;float det = a * d - b * c;if (det != 0) {det = 1.0f / det;}ex.x = det * d;ey.x = -det * b;ex.y = -det * c;ey.y = det * a;return this;}
",Mat22,"[{'value': ['void'], 'probability': 0.7585744261741638}, {'value': ['float'], 'probability': 0.1497817039489746}, {'value': ['double'], 'probability': 0.059830088168382645}, {'value': ['long'], 'probability': 0.015601420775055885}, {'value': ['String'], 'probability': 0.0019875008147209883}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['invert', 'local'], 'probability': 0.9521101117134094}, {'value': ['get', 'transform'], 'probability': 0.03128086030483246}, {'value': ['mul', 'trans'], 'probability': 0.00937855988740921}, {'value': ['gray'], 'probability': 0.0033776438795030117}, {'value': ['second'], 'probability': 0.0012763948179781437}, {'value': ['get', 'inverse'], 'probability': 0.000930027337744832}, {'value': ['invert', 'affine'], 'probability': 0.0006182604702189565}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.00036844401620328426}, {'value': ['get', 'b'], 'probability': 0.00033477312535978854}, {'value': ['sqr'], 'probability': 0.0003249386791139841}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1725,1725,"public final Mat22 abs() {return new Mat22(MathUtils.abs(ex.x), MathUtils.abs(ey.x), MathUtils.abs(ex.y), MathUtils.abs(ey.y));}
","public final [MASK] abs() {return new [MASK](MathUtils.abs(ex.x), MathUtils.abs(ey.x), MathUtils.abs(ex.y), MathUtils.abs(ey.y));}
",Mat22,"[{'value': ['String'], 'probability': 0.5780380368232727}, {'value': ['long'], 'probability': 0.12931345403194427}, {'value': ['void'], 'probability': 0.0936732366681099}, {'value': ['double'], 'probability': 0.06776584684848785}, {'value': ['List'], 'probability': 0.021432766690850258}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['abs'], 'probability': 0.9784844517707825}, {'value': ['abs', 'local'], 'probability': 0.015473480336368084}, {'value': ['negative'], 'probability': 0.004429245367646217}, {'value': ['set', 'to'], 'probability': 0.0003546609659679234}, {'value': ['diff'], 'probability': 0.0003489248047117144}, {'value': ['measure'], 'probability': 0.00019793750834651291}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.00018658545741345733}, {'value': ['get', 'inverse'], 'probability': 0.0001861157506937161}, {'value': ['get', 'paint'], 'probability': 0.00018500247097108513}, {'value': ['unit'], 'probability': 0.0001535621122457087}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1726,1726,"public final void absLocal() {ex.absLocal();ey.absLocal();}
","public final [MASK] absLocal() {ex.absLocal();ey.absLocal();}
",void,"[{'value': ['void'], 'probability': 0.7521104216575623}, {'value': ['String'], 'probability': 0.17210406064987183}, {'value': ['Date'], 'probability': 0.01597708836197853}, {'value': ['long'], 'probability': 0.015412476845085621}, {'value': ['double'], 'probability': 0.007876977324485779}]","[1.0, 0.0, 0.0, 0.23130237, 0.14729977]",0.7568356409334626,"[{'value': ['abs', 'local'], 'probability': 0.9965329170227051}, {'value': ['set', 'end'], 'probability': 0.0011656000278890133}, {'value': ['draw', 'line'], 'probability': 0.0006158845499157906}, {'value': ['truncate'], 'probability': 0.00044229417107999325}, {'value': ['pop', 'matrix'], 'probability': 0.00035832630237564445}, {'value': ['move', 'region'], 'probability': 0.0002354420576011762}, {'value': ['changed'], 'probability': 0.00018960909801535308}, {'value': ['set', 'build'], 'probability': 0.00017978025425691158}, {'value': ['print'], 'probability': 0.00014479222591035068}, {'value': ['load', 'game'], 'probability': 0.0001354935666313395}]","[0.024440244, 0.35360286, 0.27329707, 0.04028564, 0.32626754, 0.22981434, 0.31530824, 0.2806334, 0.14974634, 0.3240182]",0.02530064504096421
1727,1727,"public static final Mat22 abs(final Mat22 R) {return R.abs();}
","public static final [MASK] abs(final [MASK] R) {return R.abs();}
",Mat22,"[{'value': ['void'], 'probability': 0.12456098198890686}, {'value': ['double'], 'probability': 0.12111161649227142}, {'value': ['String'], 'probability': 0.07067565619945526}, {'value': ['R'], 'probability': 0.0591031014919281}, {'value': ['T'], 'probability': 0.05652860552072525}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['abs'], 'probability': 0.9280696511268616}, {'value': ['for', 'value'], 'probability': 0.014988179318606853}, {'value': ['absolute'], 'probability': 0.012609822675585747}, {'value': ['lookup'], 'probability': 0.012551573105156422}, {'value': ['mul', 'trans'], 'probability': 0.007666756398975849}, {'value': ['is', 'unit'], 'probability': 0.005604274570941925}, {'value': ['to', 'source'], 'probability': 0.0052105034701526165}, {'value': ['get', 'transform'], 'probability': 0.005130798555910587}, {'value': ['r'], 'probability': 0.005117174703627825}, {'value': ['evaluate'], 'probability': 0.003051358973607421}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1728,1728,"public static void absToOut(final Mat22 R, final Mat22 out) {out.ex.x = MathUtils.abs(R.ex.x);out.ex.y = MathUtils.abs(R.ex.y);out.ey.x = MathUtils.abs(R.ey.x);out.ey.y = MathUtils.abs(R.ey.y);}
","public static void [MASK](final Mat22 R, final Mat22 out) {out.ex.x = MathUtils.abs(R.ex.x);out.ex.y = MathUtils.abs(R.ex.y);out.ey.x = MathUtils.abs(R.ey.x);out.ey.y = MathUtils.abs(R.ey.y);}
",absToOut,"[{'value': ['run'], 'probability': 0.1594349592924118}, {'value': ['paint'], 'probability': 0.12825115025043488}, {'value': ['apply'], 'probability': 0.06717998534440994}, {'value': ['add'], 'probability': 0.03485078737139702}, {'value': ['start'], 'probability': 0.034200094640254974}]","[0.19987282, 0.07530514, 0.05097925, 0.057285257, 0.050215155]",0.0486632707512579,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9598396420478821}, {'value': ['set', 'to'], 'probability': 0.02529831975698471}, {'value': ['abs', 'local'], 'probability': 0.005103784147650003}, {'value': ['mul', 'to', 'out'], 'probability': 0.004386865999549627}, {'value': ['mul', 'trans'], 'probability': 0.0017358443001285195}, {'value': ['apply', 'inverse', 'to'], 'probability': 0.0014784205704927444}, {'value': ['set', 'min', 'size'], 'probability': 0.0006961667095310986}, {'value': ['doit'], 'probability': 0.0005129908095113933}, {'value': ['process', 'result'], 'probability': 0.0005020205280743539}, {'value': ['mul'], 'probability': 0.0004458539769984782}]","[0.18333384, 0.103497244, 0.77114826, 0.17591463, 0.19083996, 0.053202886, 0.1316651, -0.117812894, 0.024320085, 0.18821393]",0.183834155644158
1729,1729,"public final Vec2 mul(final Vec2 v) {return new Vec2(ex.x * v.x + ey.x * v.y, ex.y * v.x + ey.y * v.y);}
","public final [MASK] mul(final [MASK] v) {return new [MASK](ex.x * v.x + ey.x * v.y, ex.y * v.x + ey.y * v.y);}
",Vec2,"[{'value': ['String'], 'probability': 0.5910975933074951}, {'value': ['long'], 'probability': 0.09713886678218842}, {'value': ['double'], 'probability': 0.06158790737390518}, {'value': ['void'], 'probability': 0.03744165599346161}, {'value': ['Long'], 'probability': 0.02711472101509571}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul'], 'probability': 0.9990139007568359}, {'value': ['mul', 'trans'], 'probability': 0.0007154942722991109}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.00018623779760673642}, {'value': ['translate'], 'probability': 2.3749531465000473e-05}, {'value': ['mult'], 'probability': 1.6088413758552633e-05}, {'value': ['new', 'value'], 'probability': 1.2287628123885952e-05}, {'value': ['cast', 'vec'], 'probability': 9.685390978120267e-06}, {'value': ['rotate'], 'probability': 9.032513844431378e-06}, {'value': ['multiply'], 'probability': 7.408914370898856e-06}, {'value': ['negate', 'local'], 'probability': 6.179420324770035e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1730,1730,"public final void mulToOut(final Vec2 v, final Vec2 out) {final float tempy = ex.y * v.x + ey.y * v.y;out.x = ex.x * v.x + ey.x * v.y;out.y = tempy;}
","public final [MASK] mulToOut(final Vec2 v, final Vec2 out) {final float tempy = ex.y * v.x + ey.y * v.y;out.x = ex.x * v.x + ey.x * v.y;out.y = tempy;}
",void,"[{'value': ['void'], 'probability': 0.5814793109893799}, {'value': ['float'], 'probability': 0.23309054970741272}, {'value': ['double'], 'probability': 0.11205790191888809}, {'value': ['long'], 'probability': 0.017018524929881096}, {'value': ['String'], 'probability': 0.016844702884554863}]","[1.0, 0.22919214, 0.14729977, 0.23130237, 0.0]",0.6553443602267424,"[{'value': ['mul', 'to', 'out'], 'probability': 0.9285579323768616}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.07079050689935684}, {'value': ['mul', 'trans'], 'probability': 0.0005217589205130935}, {'value': ['cross', 'to', 'out'], 'probability': 7.49826431274414e-05}, {'value': ['inverse', 'transform'], 'probability': 2.5413748517166823e-05}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 6.732540441589663e-06}, {'value': ['center', 'on'], 'probability': 6.652905540249776e-06}, {'value': ['solve', 'to', 'out'], 'probability': 6.329693405859871e-06}, {'value': ['mul'], 'probability': 4.891879598289961e-06}, {'value': ['draw', 'line'], 'probability': 4.751937467517564e-06}]","[0.32547766, 0.3029888, 0.016056206, 0.3061188, 0.4078402, 0.37522304, 0.2668092, 0.36831948, -0.07154343, 0.27329707]",0.3237228708738312
1731,1731,"public final void mulToOutUnsafe(final Vec2 v, final Vec2 out) {assert (v != out);out.x = ex.x * v.x + ey.x * v.y;out.y = ex.y * v.x + ey.y * v.y;}
","public final [MASK] mulToOutUnsafe(final Vec2 v, final Vec2 out) {assert (v != out);out.x = ex.x * v.x + ey.x * v.y;out.y = ex.y * v.x + ey.y * v.y;}
",void,"[{'value': ['void'], 'probability': 0.9466729164123535}, {'value': ['String'], 'probability': 0.014236812479794025}, {'value': ['double'], 'probability': 0.004006382077932358}, {'value': ['long'], 'probability': 0.0035154533106833696}, {'value': ['Type'], 'probability': 0.0023191473446786404}]","[1.0, 0.0, 0.14729977, 0.23130237, 0.0]",0.9480761882242358,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9575956463813782}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 0.03766562417149544}, {'value': ['mul'], 'probability': 0.0021881493739783764}, {'value': ['mul', 'to', 'out'], 'probability': 0.00186394271440804}, {'value': ['mul', 'trans'], 'probability': 0.0004627223825082183}, {'value': ['write'], 'probability': 6.674042379017919e-05}, {'value': ['invert', 'local'], 'probability': 5.3596653742715716e-05}, {'value': ['is', 'in', 'content', 'area'], 'probability': 4.176536822342314e-05}, {'value': ['encode'], 'probability': 3.356430897838436e-05}, {'value': ['intersects', 'line'], 'probability': 2.8327211111900397e-05}]","[0.3029888, 0.37522304, -0.07154343, 0.32547766, 0.016056206, 0.23281288, 0.19010513, 0.3228194, 0.10453285, 0.18046084]",0.3047791495802322
1732,1732,"public final Mat22 mulLocal(final Mat22 R) {mulToOut(R, this);return this;}
","public final [MASK] mulLocal(final [MASK] R) {mulToOut(R, this);return this;}
",Mat22,"[{'value': ['void'], 'probability': 0.646399199962616}, {'value': ['String'], 'probability': 0.1455843597650528}, {'value': ['T'], 'probability': 0.02698577381670475}, {'value': ['double'], 'probability': 0.026458825916051865}, {'value': ['Value'], 'probability': 0.013243721798062325}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul', 'local'], 'probability': 0.9998980760574341}, {'value': ['mul', 'to', 'out'], 'probability': 8.122494909912348e-05}, {'value': ['test', 'point'], 'probability': 1.0726884283940308e-05}, {'value': ['country', 'code'], 'probability': 5.429861175798578e-06}, {'value': ['set', 'equation'], 'probability': 1.4647929447164643e-06}, {'value': ['add', 'material'], 'probability': 7.758236506560934e-07}, {'value': ['save', 'entity'], 'probability': 7.283783816092182e-07}, {'value': ['insert', 'view'], 'probability': 6.420307840926398e-07}, {'value': ['add', 'local'], 'probability': 4.949994831804361e-07}, {'value': ['toggle', 'mute'], 'probability': 4.3561703932937235e-07}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1733,1733,"public final void mulToOut(final Mat22 R, final Mat22 out) {final float tempy1 = this.ex.y * R.ex.x + this.ey.y * R.ex.y;final float tempx1 = this.ex.x * R.ex.x + this.ey.x * R.ex.y;out.ex.x = tempx1;out.ex.y = tempy1;final float tempy2 = this.ex.y * R.ey.x + this.ey.y * R.ey.y;final float tempx2 = this.ex.x * R.ey.x + this.ey.x * R.ey.y;out.ey.x = tempx2;out.ey.y = tempy2;}
","public final [MASK] mulToOut(final Mat22 R, final Mat22 out) {final float tempy1 = this.ex.y * R.ex.x + this.ey.y * R.ex.y;final float tempx1 = this.ex.x * R.ex.x + this.ey.x * R.ex.y;out.ex.x = tempx1;out.ex.y = tempy1;final float tempy2 = this.ex.y * R.ey.x + this.ey.y * R.ey.y;final float tempx2 = this.ex.x * R.ey.x + this.ey.x * R.ey.y;out.ey.x = tempx2;out.ey.y = tempy2;}
",void,"[{'value': ['void'], 'probability': 0.5702703595161438}, {'value': ['float'], 'probability': 0.18706320226192474}, {'value': ['double'], 'probability': 0.11307922005653381}, {'value': ['long'], 'probability': 0.057026300579309464}, {'value': ['String'], 'probability': 0.012412376701831818}]","[1.0, 0.22919214, 0.14729977, 0.23130237, 0.0]",0.6429906356747495,"[{'value': ['mul', 'to', 'out'], 'probability': 0.9966991543769836}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.002638384234160185}, {'value': ['cross', 'to', 'out'], 'probability': 0.0002620543527882546}, {'value': ['center', 'on'], 'probability': 0.00018325807468499988}, {'value': ['mul', 'trans'], 'probability': 0.00011246358189964667}, {'value': ['test', 'null', 'values'], 'probability': 5.4985968745313585e-05}, {'value': ['set', 'depth'], 'probability': 2.2726751922164112e-05}, {'value': ['draw', 'line'], 'probability': 1.0813686458277516e-05}, {'value': ['paint', 'components'], 'probability': 9.905807928589638e-06}, {'value': ['test', 'geometry', 'collection'], 'probability': 6.096671313571278e-06}]","[0.32547766, 0.3029888, 0.3061188, 0.2668092, 0.016056206, 0.5012616, 0.28788614, 0.27329707, 0.21312669, 0.27451897]",0.325374475070762
1734,1734,"public final void mulToOutUnsafe(final Mat22 R, final Mat22 out) {assert (out != R);assert (out != this);out.ex.x = this.ex.x * R.ex.x + this.ey.x * R.ex.y;out.ex.y = this.ex.y * R.ex.x + this.ey.y * R.ex.y;out.ey.x = this.ex.x * R.ey.x + this.ey.x * R.ey.y;out.ey.y = this.ex.y * R.ey.x + this.ey.y * R.ey.y;}
","public final [MASK] mulToOutUnsafe(final Mat22 R, final Mat22 out) {assert (out != R);assert (out != this);out.ex.x = this.ex.x * R.ex.x + this.ey.x * R.ex.y;out.ex.y = this.ex.y * R.ex.x + this.ey.y * R.ex.y;out.ey.x = this.ex.x * R.ey.x + this.ey.x * R.ey.y;out.ey.y = this.ex.y * R.ey.x + this.ey.y * R.ey.y;}
",void,"[{'value': ['void'], 'probability': 0.9299100637435913}, {'value': ['String'], 'probability': 0.015893226489424706}, {'value': ['long'], 'probability': 0.006798923946917057}, {'value': ['T'], 'probability': 0.004406442400068045}, {'value': ['Type'], 'probability': 0.0037970368284732103}]","[1.0, 0.0, 0.23130237, 0.0, 0.0]",0.9314826709364602,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9809173345565796}, {'value': ['mul', 'to', 'out'], 'probability': 0.007339972537010908}, {'value': ['mul', 'trans'], 'probability': 0.004749774932861328}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 0.00358721986413002}, {'value': ['invert', 'local'], 'probability': 0.0018733976176008582}, {'value': ['mul'], 'probability': 0.0012247436679899693}, {'value': ['apply', 'inverse', 'to'], 'probability': 0.00018951976380776614}, {'value': ['draw', 'line'], 'probability': 6.820375710958615e-05}, {'value': ['set', 'min', 'size'], 'probability': 3.053648833883926e-05}, {'value': ['negate', 'local'], 'probability': 1.9303784938529134e-05}]","[0.3029888, 0.32547766, 0.016056206, 0.37522304, 0.19010513, -0.07154343, 0.45565468, 0.27329707, 0.19520408, 0.25454596]",0.301402624226301
1735,1735,"public final Mat22 mulTrans(final Mat22 B) {/* * Vec2 c1 = new Vec2(Vec2.dot(this.ex, B.ex), Vec2.dot(this.ey, B.ex)); Vec2 c2 = new * Vec2(Vec2.dot(this.ex, B.ey), Vec2.dot(this.ey, B.ey)); Mat22 C = new Mat22(); C.set(c1, c2); * return C; */final Mat22 C = new Mat22();C.ex.x = Vec2.dot(this.ex, B.ex);C.ex.y = Vec2.dot(this.ey, B.ex);C.ey.x = Vec2.dot(this.ex, B.ey);C.ey.y = Vec2.dot(this.ey, B.ey);return C;}
","public final [MASK] mulTrans(final [MASK] B) {/* * Vec2 c1 = new Vec2(Vec2.dot(this.ex, B.ex), Vec2.dot(this.ey, B.ex)); Vec2 c2 = new * Vec2(Vec2.dot(this.ex, B.ey), Vec2.dot(this.ey, B.ey)); [MASK] C = new [MASK](); C.set(c1, c2); * return C; */final [MASK] C = new [MASK]();C.ex.x = Vec2.dot(this.ex, B.ex);C.ex.y = Vec2.dot(this.ey, B.ex);C.ey.x = Vec2.dot(this.ex, B.ey);C.ey.y = Vec2.dot(this.ey, B.ey);return C;}
",Mat22,"[{'value': ['void'], 'probability': 0.33528932929039}, {'value': ['String'], 'probability': 0.17663906514644623}, {'value': ['double'], 'probability': 0.0884610265493393}, {'value': ['long'], 'probability': 0.045275066047906876}, {'value': ['Type'], 'probability': 0.036385681480169296}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul', 'trans'], 'probability': 0.951069712638855}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.03287597373127937}, {'value': ['draw', 'line'], 'probability': 0.006756505463272333}, {'value': ['add', 'local'], 'probability': 0.004217404872179031}, {'value': ['mul', 't'], 'probability': 0.0020678367000073195}, {'value': ['unite'], 'probability': 0.0007577575161121786}, {'value': ['invert', 'local'], 'probability': 0.0006572583224624395}, {'value': ['get', 'union'], 'probability': 0.0005686057265847921}, {'value': ['set', 'to'], 'probability': 0.0005581441801041365}, {'value': ['set'], 'probability': 0.0004707186599262059}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1736,1736,"public final Mat22 mulTransLocal(final Mat22 B) {mulTransToOut(B, this);return this;}
","public final [MASK] mulTransLocal(final [MASK] B) {mulTransToOut(B, this);return this;}
",Mat22,"[{'value': ['void'], 'probability': 0.7161703705787659}, {'value': ['String'], 'probability': 0.07986947894096375}, {'value': ['T'], 'probability': 0.016334015876054764}, {'value': ['long'], 'probability': 0.014205917716026306}, {'value': ['Long'], 'probability': 0.013610083609819412}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['apply', 'offset'], 'probability': 0.9999483823776245}, {'value': ['engine', 'update'], 'probability': 1.2137576959503349e-05}, {'value': ['customize', 'renderer'], 'probability': 8.209875886677764e-06}, {'value': ['variant'], 'probability': 7.084810931701213e-06}, {'value': ['clean', 'string'], 'probability': 6.732592282787664e-06}, {'value': ['declare', 'namespace'], 'probability': 6.092729563533794e-06}, {'value': ['clear', 'position'], 'probability': 4.445674676389899e-06}, {'value': ['to', 'function'], 'probability': 3.2064783681562403e-06}, {'value': ['move', 'from', 'local', 'file'], 'probability': 2.227880713689956e-06}, {'value': ['fix', 'type'], 'probability': 1.6147945416378207e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1737,1737,"public final void mulTransToOut(final Mat22 B, final Mat22 out) {/* * out.ex.x = Vec2.dot(this.ex, B.ex); out.ex.y = Vec2.dot(this.ey, B.ex); out.ey.x = * Vec2.dot(this.ex, B.ey); out.ey.y = Vec2.dot(this.ey, B.ey); */final float x1 = this.ex.x * B.ex.x + this.ex.y * B.ex.y;final float y1 = this.ey.x * B.ex.x + this.ey.y * B.ex.y;final float x2 = this.ex.x * B.ey.x + this.ex.y * B.ey.y;final float y2 = this.ey.x * B.ey.x + this.ey.y * B.ey.y;out.ex.x = x1;out.ey.x = x2;out.ex.y = y1;out.ey.y = y2;}
","public final [MASK] mulTransToOut(final Mat22 B, final Mat22 out) {/* * out.ex.x = Vec2.dot(this.ex, B.ex); out.ex.y = Vec2.dot(this.ey, B.ex); out.ey.x = * Vec2.dot(this.ex, B.ey); out.ey.y = Vec2.dot(this.ey, B.ey); */final float x1 = this.ex.x * B.ex.x + this.ex.y * B.ex.y;final float y1 = this.ey.x * B.ex.x + this.ey.y * B.ex.y;final float x2 = this.ex.x * B.ey.x + this.ex.y * B.ey.y;final float y2 = this.ey.x * B.ey.x + this.ey.y * B.ey.y;out.ex.x = x1;out.ey.x = x2;out.ex.y = y1;out.ey.y = y2;}
",void,"[{'value': ['void'], 'probability': 0.3541358411312103}, {'value': ['double'], 'probability': 0.16988416016101837}, {'value': ['long'], 'probability': 0.1635209619998932}, {'value': ['float'], 'probability': 0.1463738977909088}, {'value': ['String'], 'probability': 0.04110259562730789}]","[1.0, 0.14729977, 0.23130237, 0.22919214, 0.0]",0.4505302701483891,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9945476055145264}, {'value': ['mul', 'trans'], 'probability': 0.002897233935073018}, {'value': ['mul', 'to', 'out'], 'probability': 0.0012988508678972721}, {'value': ['invert', 'local'], 'probability': 0.00046178055345080793}, {'value': ['set', 'to'], 'probability': 0.0003299227391835302}, {'value': ['mul'], 'probability': 0.00013060258061159402}, {'value': ['draw', 'line'], 'probability': 0.00012995551514904946}, {'value': ['set', 'point'], 'probability': 7.033704605419189e-05}, {'value': ['set', 'thread'], 'probability': 7.030009874142706e-05}, {'value': ['apply', 'inverse', 'to'], 'probability': 6.339043466141447e-05}]","[0.3029888, 0.016056206, 0.32547766, 0.19010513, 0.32537752, -0.07154343, 0.27329707, 0.30977896, 0.30124837, 0.45565468]",0.30209921093888636
1738,1738,"public final void mulTransToOutUnsafe(final Mat22 B, final Mat22 out) {assert (B != out);assert (this != out);out.ex.x = this.ex.x * B.ex.x + this.ex.y * B.ex.y;out.ey.x = this.ex.x * B.ey.x + this.ex.y * B.ey.y;out.ex.y = this.ey.x * B.ex.x + this.ey.y * B.ex.y;out.ey.y = this.ey.x * B.ey.x + this.ey.y * B.ey.y;}
","public final [MASK] mulTransToOutUnsafe(final Mat22 B, final Mat22 out) {assert (B != out);assert (this != out);out.ex.x = this.ex.x * B.ex.x + this.ex.y * B.ex.y;out.ey.x = this.ex.x * B.ey.x + this.ex.y * B.ey.y;out.ex.y = this.ey.x * B.ex.x + this.ey.y * B.ex.y;out.ey.y = this.ey.x * B.ey.x + this.ey.y * B.ey.y;}
",void,"[{'value': ['void'], 'probability': 0.9333639144897461}, {'value': ['String'], 'probability': 0.009981240145862103}, {'value': ['long'], 'probability': 0.005842050537467003}, {'value': ['T'], 'probability': 0.004694013390690088}, {'value': ['Long'], 'probability': 0.00430741161108017}]","[1.0, 0.0, 0.23130237, 0.0, 0.0]",0.9347151945993714,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9887308478355408}, {'value': ['mul', 'to', 'out'], 'probability': 0.003479935694485903}, {'value': ['mul', 'trans'], 'probability': 0.003389572724699974}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 0.0016417684964835644}, {'value': ['invert', 'local'], 'probability': 0.0016379401786252856}, {'value': ['mul'], 'probability': 0.000918004137929529}, {'value': ['apply', 'inverse', 'to'], 'probability': 8.0521494965069e-05}, {'value': ['draw', 'line'], 'probability': 7.773391553200781e-05}, {'value': ['read', 'ascii'], 'probability': 2.187545942433644e-05}, {'value': ['process', 'result'], 'probability': 2.1779871531180106e-05}]","[0.3029888, 0.32547766, 0.016056206, 0.37522304, 0.19010513, -0.07154343, 0.45565468, 0.27329707, 0.26612788, 0.41453838]",0.30169595585509723
1739,1739,"public final void mulTransToOut(final Vec2 v, final Vec2 out) {/* * out.x = Vec2.dot(v, ex); out.y = Vec2.dot(v, col2); */final float tempx = v.x * ex.x + v.y * ex.y;out.y = v.x * ey.x + v.y * ey.y;out.x = tempx;}
","public final [MASK] mulTransToOut(final Vec2 v, final Vec2 out) {/* * out.x = Vec2.dot(v, ex); out.y = Vec2.dot(v, col2); */final float tempx = v.x * ex.x + v.y * ex.y;out.y = v.x * ey.x + v.y * ey.y;out.x = tempx;}
",void,"[{'value': ['void'], 'probability': 0.492661714553833}, {'value': ['double'], 'probability': 0.18465743958950043}, {'value': ['float'], 'probability': 0.11067179590463638}, {'value': ['String'], 'probability': 0.09207850694656372}, {'value': ['long'], 'probability': 0.03377218171954155}]","[1.0, 0.14729977, 0.22919214, 0.0, 0.23130237]",0.5530384033090858,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9919204711914062}, {'value': ['mul', 'trans'], 'probability': 0.0060555534437298775}, {'value': ['mul', 'to', 'out'], 'probability': 0.0006625866517424583}, {'value': ['mul'], 'probability': 0.0005775987519882619}, {'value': ['translate'], 'probability': 0.0005345197860151529}, {'value': ['invert', 'local'], 'probability': 7.95907762949355e-05}, {'value': ['draw', 'line'], 'probability': 7.143199036363512e-05}, {'value': ['build', 'source'], 'probability': 4.382837505545467e-05}, {'value': ['move', 'region'], 'probability': 2.9263561373227276e-05}, {'value': ['correct', 'offset'], 'probability': 2.5148026907118037e-05}]","[0.3029888, 0.016056206, 0.32547766, -0.07154343, 0.16127631, 0.19010513, 0.27329707, 0.23506331, 0.22981434, 0.19668365]",0.30095518821426404
1740,1740,"public final Vec2 solve(final Vec2 b) {final float a11 = ex.x, a12 = ey.x, a21 = ex.y, a22 = ey.y;float det = a11 * a22 - a12 * a21;if (det != 0.0f) {det = 1.0f / det;}final Vec2 x = new Vec2(det * (a22 * b.x - a12 * b.y), det * (a11 * b.y - a21 * b.x));return x;}
","public final [MASK] solve(final [MASK] b) {final float a11 = ex.x, a12 = ey.x, a21 = ex.y, a22 = ey.y;float det = a11 * a22 - a12 * a21;if (det != 0.0f) {det = 1.0f / det;}final [MASK] x = new [MASK](det * (a22 * b.x - a12 * b.y), det * (a11 * b.y - a21 * b.x));return x;}
",Vec2,"[{'value': ['double'], 'probability': 0.3720461130142212}, {'value': ['float'], 'probability': 0.3482549488544464}, {'value': ['void'], 'probability': 0.17462879419326782}, {'value': ['long'], 'probability': 0.05296893045306206}, {'value': ['short'], 'probability': 0.011222782544791698}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul', 'trans'], 'probability': 0.41603851318359375}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.3463643193244934}, {'value': ['inverse', 'transform'], 'probability': 0.12482143193483353}, {'value': ['solve', 'to', 'out'], 'probability': 0.04191046580672264}, {'value': ['get', 'intersection'], 'probability': 0.026303647086024284}, {'value': ['get', 'translation'], 'probability': 0.011974477209150791}, {'value': ['add', 'local'], 'probability': 0.008995906449854374}, {'value': ['to', 'primitive'], 'probability': 0.008478431962430477}, {'value': ['angle', 'between'], 'probability': 0.0076529947109520435}, {'value': ['lines', 'intersect'], 'probability': 0.007459838408976793}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1741,1741,"public final void solveToOut(final Vec2 b, final Vec2 out) {final float a11 = ex.x, a12 = ey.x, a21 = ex.y, a22 = ey.y;float det = a11 * a22 - a12 * a21;if (det != 0.0f) {det = 1.0f / det;}final float tempy = det * (a11 * b.y - a21 * b.x);out.x = det * (a22 * b.x - a12 * b.y);out.y = tempy;}
","public final [MASK] solveToOut(final Vec2 b, final Vec2 out) {final float a11 = ex.x, a12 = ey.x, a21 = ex.y, a22 = ey.y;float det = a11 * a22 - a12 * a21;if (det != 0.0f) {det = 1.0f / det;}final float tempy = det * (a11 * b.y - a21 * b.x);out.x = det * (a22 * b.x - a12 * b.y);out.y = tempy;}
",void,"[{'value': ['void'], 'probability': 0.6641608476638794}, {'value': ['float'], 'probability': 0.1388985961675644}, {'value': ['double'], 'probability': 0.12578995525836945}, {'value': ['long'], 'probability': 0.018793417140841484}, {'value': ['String'], 'probability': 0.006816008593887091}]","[1.0, 0.22919214, 0.14729977, 0.23130237, 0.0]",0.7188711067318061,"[{'value': ['solve', 'to', 'out'], 'probability': 0.4700707495212555}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.23233024775981903}, {'value': ['mul', 'to', 'out'], 'probability': 0.12559600174427032}, {'value': ['inverse', 'transform'], 'probability': 0.08127545565366745}, {'value': ['cross', 'to', 'out'], 'probability': 0.07981967180967331}, {'value': ['mul', 'trans'], 'probability': 0.00871002022176981}, {'value': ['read', 'resource'], 'probability': 0.001392215141095221}, {'value': ['sub', 'local'], 'probability': 0.00033582092146389186}, {'value': ['center', 'on'], 'probability': 0.00025520415510982275}, {'value': ['is', 'parallel'], 'probability': 0.0002146146580344066}]","[0.36831948, 0.3029888, 0.32547766, 0.4078402, 0.3061188, 0.016056206, 0.24351782, 0.060056567, 0.2668092, 0.29260674]",0.34262000583071467
1742,1742,"public static final void mulToOut(final Mat22 R, final Vec2 v, final Vec2 out) {final float tempy = R.ex.y * v.x + R.ey.y * v.y;out.x = R.ex.x * v.x + R.ey.x * v.y;out.y = tempy;}
","public static final [MASK] mulToOut(final Mat22 R, final Vec2 v, final Vec2 out) {final float tempy = R.ex.y * v.x + R.ey.y * v.y;out.x = R.ex.x * v.x + R.ey.x * v.y;out.y = tempy;}
",void,"[{'value': ['float'], 'probability': 0.6128295660018921}, {'value': ['double'], 'probability': 0.19214843213558197}, {'value': ['void'], 'probability': 0.0882607102394104}, {'value': ['long'], 'probability': 0.04047916457056999}, {'value': ['String'], 'probability': 0.013149797916412354}]","[0.22919214, 0.14729977, 1.0, 0.23130237, 0.0]",0.2663827742481411,"[{'value': ['mul', 'to', 'out'], 'probability': 0.9906525611877441}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.009130488149821758}, {'value': ['mul', 'trans'], 'probability': 0.00010688057955121621}, {'value': ['cross', 'to', 'out'], 'probability': 4.179528696113266e-05}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 3.1994499295251444e-05}, {'value': ['inverse', 'transform'], 'probability': 1.7765078155207448e-05}, {'value': ['on', 'touch', 'down'], 'probability': 8.022988367883954e-06}, {'value': ['solve', 'to', 'out'], 'probability': 3.759398396141478e-06}, {'value': ['center', 'on'], 'probability': 3.548816494003404e-06}, {'value': ['to', 'ascii'], 'probability': 3.1279898848879384e-06}]","[0.32547766, 0.3029888, 0.016056206, 0.3061188, 0.37522304, 0.4078402, 0.31385472, 0.36831948, 0.2668092, 0.36131394]",0.32524145369800145
1743,1743,"public static final void mulToOutUnsafe(final Mat22 R, final Vec2 v, final Vec2 out) {assert (v != out);out.x = R.ex.x * v.x + R.ey.x * v.y;out.y = R.ex.y * v.x + R.ey.y * v.y;}
","public static final [MASK] mulToOutUnsafe(final Mat22 R, final Vec2 v, final Vec2 out) {assert (v != out);out.x = R.ex.x * v.x + R.ey.x * v.y;out.y = R.ex.y * v.x + R.ey.y * v.y;}
",void,"[{'value': ['void'], 'probability': 0.6595580577850342}, {'value': ['String'], 'probability': 0.07642500847578049}, {'value': ['double'], 'probability': 0.035280223935842514}, {'value': ['long'], 'probability': 0.029214462265372276}, {'value': ['T'], 'probability': 0.024697870016098022}]","[1.0, 0.0, 0.14729977, 0.23130237, 0.0]",0.6715122007677662,"[{'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 0.6470960378646851}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.33475375175476074}, {'value': ['mul', 'to', 'out'], 'probability': 0.01771772839128971}, {'value': ['mul', 'trans'], 'probability': 0.00015409835032187402}, {'value': ['invert', 'local'], 'probability': 8.347030961886048e-05}, {'value': ['mul'], 'probability': 7.873426511650905e-05}, {'value': ['intersects', 'line'], 'probability': 4.859048203798011e-05}, {'value': ['correct', 'offset'], 'probability': 3.592554639908485e-05}, {'value': ['vectorize'], 'probability': 1.7248428775928915e-05}, {'value': ['is', 'cross', 'or', 'touch', 'intersect'], 'probability': 1.4434463082579896e-05}]","[0.37522304, 0.3029888, 0.32547766, 0.016056206, 0.19010513, -0.07154343, 0.18046084, 0.19668365, 0.0, 0.3174516]",0.35003183115626024
1744,1744,"public static final void mulToOut(final Mat22 A, final Mat22 B, final Mat22 out) {final float tempy1 = A.ex.y * B.ex.x + A.ey.y * B.ex.y;final float tempx1 = A.ex.x * B.ex.x + A.ey.x * B.ex.y;final float tempy2 = A.ex.y * B.ey.x + A.ey.y * B.ey.y;final float tempx2 = A.ex.x * B.ey.x + A.ey.x * B.ey.y;out.ex.x = tempx1;out.ex.y = tempy1;out.ey.x = tempx2;out.ey.y = tempy2;}
","public static final [MASK] mulToOut(final Mat22 A, final Mat22 B, final Mat22 out) {final float tempy1 = A.ex.y * B.ex.x + A.ey.y * B.ex.y;final float tempx1 = A.ex.x * B.ex.x + A.ey.x * B.ex.y;final float tempy2 = A.ex.y * B.ey.x + A.ey.y * B.ey.y;final float tempx2 = A.ex.x * B.ey.x + A.ey.x * B.ey.y;out.ex.x = tempx1;out.ex.y = tempy1;out.ey.x = tempx2;out.ey.y = tempy2;}
",void,"[{'value': ['float'], 'probability': 0.678997278213501}, {'value': ['double'], 'probability': 0.22918812930583954}, {'value': ['long'], 'probability': 0.0299217589199543}, {'value': ['void'], 'probability': 0.029731206595897675}, {'value': ['Double'], 'probability': 0.01086858194321394}]","[0.22919214, 0.14729977, 0.23130237, 1.0, 0.0]",0.2260323758580137,"[{'value': ['mul', 'to', 'out'], 'probability': 0.9943495392799377}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.0046472628600895405}, {'value': ['cross', 'to', 'out'], 'probability': 0.0005365987890399992}, {'value': ['mul', 'trans'], 'probability': 0.00022428065130952746}, {'value': ['center', 'on'], 'probability': 0.00015325593994930387}, {'value': ['test', 'null', 'values'], 'probability': 4.209970938973129e-05}, {'value': ['set', 'depth'], 'probability': 1.6278845578199252e-05}, {'value': ['assert', 'byte', 'array', 'equals'], 'probability': 1.1471100151538849e-05}, {'value': ['draw', 'line'], 'probability': 9.776734259503428e-06}, {'value': ['to', 'ascii'], 'probability': 9.473063073528465e-06}]","[0.32547766, 0.3029888, 0.3061188, 0.016056206, 0.2668092, 0.5012616, 0.28788614, 0.3516798, 0.27329707, 0.36131394]",0.3252913023111128
1745,1745,"public static final void mulToOutUnsafe(final Mat22 A, final Mat22 B, final Mat22 out) {assert (out != A);assert (out != B);out.ex.x = A.ex.x * B.ex.x + A.ey.x * B.ex.y;out.ex.y = A.ex.y * B.ex.x + A.ey.y * B.ex.y;out.ey.x = A.ex.x * B.ey.x + A.ey.x * B.ey.y;out.ey.y = A.ex.y * B.ey.x + A.ey.y * B.ey.y;}
","public static final [MASK] mulToOutUnsafe(final Mat22 A, final Mat22 B, final Mat22 out) {assert (out != A);assert (out != B);out.ex.x = A.ex.x * B.ex.x + A.ey.x * B.ex.y;out.ex.y = A.ex.y * B.ex.x + A.ey.y * B.ex.y;out.ey.x = A.ex.x * B.ey.x + A.ey.x * B.ey.y;out.ey.y = A.ex.y * B.ey.x + A.ey.y * B.ey.y;}
",void,"[{'value': ['void'], 'probability': 0.698371410369873}, {'value': ['String'], 'probability': 0.026671823114156723}, {'value': ['Date'], 'probability': 0.01687835156917572}, {'value': ['Type'], 'probability': 0.014563597738742828}, {'value': ['Point'], 'probability': 0.012600990943610668}]","[1.0, 0.0, 0.0, 0.0, 0.0]",0.698371410369873,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9910796284675598}, {'value': ['mul', 'trans'], 'probability': 0.003956211265176535}, {'value': ['mul', 'to', 'out'], 'probability': 0.001935081323608756}, {'value': ['invert', 'local'], 'probability': 0.001555498456582427}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 0.0008636097190901637}, {'value': ['mul'], 'probability': 0.0005389939760789275}, {'value': ['apply', 'inverse', 'to'], 'probability': 2.8197640858707018e-05}, {'value': ['draw', 'line'], 'probability': 1.9944234736612998e-05}, {'value': ['read', 'ascii'], 'probability': 1.1964024452026933e-05}, {'value': ['set', 'min', 'size'], 'probability': 1.0873273822653573e-05}]","[0.3029888, 0.016056206, 0.32547766, 0.19010513, 0.37522304, -0.07154343, 0.45565468, 0.27329707, 0.26612788, 0.19520408]",0.30158417339649474
1746,1746,"public static final Vec2 mulTrans(final Mat22 R, final Vec2 v) {return new Vec2((v.x * R.ex.x + v.y * R.ex.y), (v.x * R.ey.x + v.y * R.ey.y));}
","public static final [MASK] mulTrans(final Mat22 R, final [MASK] v) {return new [MASK]((v.x * R.ex.x + v.y * R.ex.y), (v.x * R.ey.x + v.y * R.ey.y));}
",Vec2,"[{'value': ['String'], 'probability': 0.3669070303440094}, {'value': ['long'], 'probability': 0.09769823402166367}, {'value': ['T'], 'probability': 0.0883307009935379}, {'value': ['double'], 'probability': 0.0473913848400116}, {'value': ['void'], 'probability': 0.033152204006910324}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul', 'trans'], 'probability': 0.9972279667854309}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.0024197236634790897}, {'value': ['mul'], 'probability': 0.00025144676328636706}, {'value': ['mul', 'to', 'out'], 'probability': 4.7219411499099806e-05}, {'value': ['mul', 't'], 'probability': 2.0278470401535742e-05}, {'value': ['cast', 'vec'], 'probability': 1.0385773748566862e-05}, {'value': ['set', 'map'], 'probability': 7.223452939797426e-06}, {'value': ['cross'], 'probability': 6.816537734266603e-06}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 4.552847713057417e-06}, {'value': ['negate', 'local'], 'probability': 4.386451109894551e-06}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1747,1747,"public static final void mulTransToOut(final Mat22 R, final Vec2 v, final Vec2 out) {float outx = v.x * R.ex.x + v.y * R.ex.y;out.y = v.x * R.ey.x + v.y * R.ey.y;out.x = outx;}
","public static final [MASK] mulTransToOut(final Mat22 R, final Vec2 v, final Vec2 out) {float outx = v.x * R.ex.x + v.y * R.ex.y;out.y = v.x * R.ey.x + v.y * R.ey.y;out.x = outx;}
",void,"[{'value': ['float'], 'probability': 0.5853080749511719}, {'value': ['double'], 'probability': 0.11518257111310959}, {'value': ['long'], 'probability': 0.11213773488998413}, {'value': ['void'], 'probability': 0.08878865092992783}, {'value': ['String'], 'probability': 0.01655581220984459}]","[0.22919214, 0.14729977, 0.23130237, 1.0, 0.0]",0.2658407490460925,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9998219609260559}, {'value': ['mul', 'trans'], 'probability': 5.1430895837256685e-05}, {'value': ['inverse', 'transform'], 'probability': 4.06829385610763e-05}, {'value': ['transform'], 'probability': 2.7662719730869867e-05}, {'value': ['mul', 'to', 'out'], 'probability': 2.2002164769219235e-05}, {'value': ['to', 'buffered', 'image'], 'probability': 1.7435879271943122e-05}, {'value': ['curve', 'point'], 'probability': 5.182614131626906e-06}, {'value': ['four'], 'probability': 5.004790182283614e-06}, {'value': ['on', 'list'], 'probability': 4.6567456593038514e-06}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 3.881450538756326e-06}]","[0.3029888, 0.016056206, 0.4078402, 0.34175932, 0.32547766, 0.3483976, 0.27139574, 0.1482029, 0.2946965, 0.37522304]",0.30297994090150526
1748,1748,"public static final void mulTransToOutUnsafe(final Mat22 R, final Vec2 v, final Vec2 out) {assert (out != v);out.y = v.x * R.ey.x + v.y * R.ey.y;out.x = v.x * R.ex.x + v.y * R.ex.y;}
","public static final [MASK] mulTransToOutUnsafe(final Mat22 R, final Vec2 v, final Vec2 out) {assert (out != v);out.y = v.x * R.ey.x + v.y * R.ey.y;out.x = v.x * R.ex.x + v.y * R.ex.y;}
",void,"[{'value': ['void'], 'probability': 0.6348038911819458}, {'value': ['String'], 'probability': 0.08100026845932007}, {'value': ['double'], 'probability': 0.023773755878210068}, {'value': ['long'], 'probability': 0.01922149769961834}, {'value': ['T'], 'probability': 0.01659531705081463}]","[1.0, 0.0, 0.14729977, 0.23130237, 0.0]",0.6427517377620604,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.727327823638916}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 0.2707539498806}, {'value': ['mul', 'to', 'out'], 'probability': 0.0017006078269332647}, {'value': ['mul', 'trans'], 'probability': 0.00010590673628030345}, {'value': ['mul'], 'probability': 4.9415782996220514e-05}, {'value': ['cross'], 'probability': 1.6669613614794798e-05}, {'value': ['intersects', 'line'], 'probability': 1.317063743044855e-05}, {'value': ['evaluate', 'internal'], 'probability': 1.2163261089881416e-05}, {'value': ['successor'], 'probability': 1.148479714174755e-05}, {'value': ['is', 'in', 'content', 'area'], 'probability': 8.790612810116727e-06}]","[0.3029888, 0.37522304, 0.32547766, 0.016056206, -0.07154343, 0.092641465, 0.18046084, 0.27655512, 0.30065432, 0.3228194]",0.3225305552271025
1749,1749,"public static final Mat22 mulTrans(final Mat22 A, final Mat22 B) {final Mat22 C = new Mat22();C.ex.x = A.ex.x * B.ex.x + A.ex.y * B.ex.y;C.ex.y = A.ey.x * B.ex.x + A.ey.y * B.ex.y;C.ey.x = A.ex.x * B.ey.x + A.ex.y * B.ey.y;C.ey.y = A.ey.x * B.ey.x + A.ey.y * B.ey.y;return C;}
","public static final [MASK] mulTrans(final [MASK] A, final [MASK] B) {final [MASK] C = new [MASK]();C.ex.x = A.ex.x * B.ex.x + A.ex.y * B.ex.y;C.ex.y = A.ey.x * B.ex.x + A.ey.y * B.ex.y;C.ey.x = A.ex.x * B.ey.x + A.ex.y * B.ey.y;C.ey.y = A.ey.x * B.ey.x + A.ey.y * B.ey.y;return C;}
",Mat22,"[{'value': ['void'], 'probability': 0.449354350566864}, {'value': ['String'], 'probability': 0.0841013714671135}, {'value': ['double'], 'probability': 0.056037914007902145}, {'value': ['C'], 'probability': 0.030526762828230858}, {'value': ['long'], 'probability': 0.02761100046336651}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.6236411929130554}, {'value': ['mul', 'trans'], 'probability': 0.33070772886276245}, {'value': ['invert', 'local'], 'probability': 0.019240541383624077}, {'value': ['mul'], 'probability': 0.017764782533049583}, {'value': ['set', 'to'], 'probability': 0.003971577621996403}, {'value': ['draw', 'line'], 'probability': 0.0019788651261478662}, {'value': ['read', 'ascii'], 'probability': 0.0007531704613938928}, {'value': ['mul', 'to', 'out'], 'probability': 0.0006833207444287837}, {'value': ['set', 'thread'], 'probability': 0.0006395690143108368}, {'value': ['lca'], 'probability': 0.0006193059962242842}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1750,1750,"public static final void mulTransToOut(final Mat22 A, final Mat22 B, final Mat22 out) {final float x1 = A.ex.x * B.ex.x + A.ex.y * B.ex.y;final float y1 = A.ey.x * B.ex.x + A.ey.y * B.ex.y;final float x2 = A.ex.x * B.ey.x + A.ex.y * B.ey.y;final float y2 = A.ey.x * B.ey.x + A.ey.y * B.ey.y;out.ex.x = x1;out.ex.y = y1;out.ey.x = x2;out.ey.y = y2;}
","public static final [MASK] mulTransToOut(final Mat22 A, final Mat22 B, final Mat22 out) {final float x1 = A.ex.x * B.ex.x + A.ex.y * B.ex.y;final float y1 = A.ey.x * B.ex.x + A.ey.y * B.ex.y;final float x2 = A.ex.x * B.ey.x + A.ex.y * B.ey.y;final float y2 = A.ey.x * B.ey.x + A.ey.y * B.ey.y;out.ex.x = x1;out.ex.y = y1;out.ey.x = x2;out.ey.y = y2;}
",void,"[{'value': ['float'], 'probability': 0.5387334227561951}, {'value': ['double'], 'probability': 0.2141491323709488}, {'value': ['long'], 'probability': 0.10193616896867752}, {'value': ['void'], 'probability': 0.0675906389951706}, {'value': ['Double'], 'probability': 0.011127113364636898}]","[0.22919214, 0.14729977, 0.23130237, 1.0, 0.0]",0.2461862980488439,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.9943431615829468}, {'value': ['mul', 'trans'], 'probability': 0.0032653803937137127}, {'value': ['mul', 'to', 'out'], 'probability': 0.0011843873653560877}, {'value': ['invert', 'local'], 'probability': 0.00044024616363458335}, {'value': ['set', 'to'], 'probability': 0.0003618997579906136}, {'value': ['mul'], 'probability': 0.00017972802743315697}, {'value': ['draw', 'line'], 'probability': 8.007598080439493e-05}, {'value': ['set', 'thread'], 'probability': 6.071432289900258e-05}, {'value': ['apply', 'inverse', 'to'], 'probability': 4.4297496060607955e-05}, {'value': ['set', 'point'], 'probability': 4.0193026507040486e-05}]","[0.3029888, 0.016056206, 0.32547766, 0.19010513, 0.32537752, -0.07154343, 0.27329707, 0.30124837, 0.45565468, 0.30977896]",0.30197416124214943
1751,1751,"public static final void mulTransToOutUnsafe(final Mat22 A, final Mat22 B, final Mat22 out) {assert (A != out);assert (B != out);out.ex.x = A.ex.x * B.ex.x + A.ex.y * B.ex.y;out.ex.y = A.ey.x * B.ex.x + A.ey.y * B.ex.y;out.ey.x = A.ex.x * B.ey.x + A.ex.y * B.ey.y;out.ey.y = A.ey.x * B.ey.x + A.ey.y * B.ey.y;}
","public static final [MASK] mulTransToOutUnsafe(final Mat22 A, final Mat22 B, final Mat22 out) {assert (A != out);assert (B != out);out.ex.x = A.ex.x * B.ex.x + A.ex.y * B.ex.y;out.ex.y = A.ey.x * B.ex.x + A.ey.y * B.ex.y;out.ey.x = A.ex.x * B.ey.x + A.ex.y * B.ey.y;out.ey.y = A.ey.x * B.ey.x + A.ey.y * B.ey.y;}
",void,"[{'value': ['void'], 'probability': 0.7831965088844299}, {'value': ['String'], 'probability': 0.03649459779262543}, {'value': ['long'], 'probability': 0.010413236916065216}, {'value': ['Long'], 'probability': 0.007949650287628174}, {'value': ['Date'], 'probability': 0.007802286185324192}]","[1.0, 0.0, 0.23130237, 0.0, 0.0]",0.7856051152173008,"[{'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.98972088098526}, {'value': ['mul', 'trans'], 'probability': 0.004278988111764193}, {'value': ['mul', 'to', 'out'], 'probability': 0.0024857206735759974}, {'value': ['invert', 'local'], 'probability': 0.001282728393562138}, {'value': ['mul', 'to', 'out', 'unsafe'], 'probability': 0.001260509598068893}, {'value': ['mul'], 'probability': 0.0008442396065220237}, {'value': ['draw', 'line'], 'probability': 4.950966467731632e-05}, {'value': ['apply', 'inverse', 'to'], 'probability': 4.076109325978905e-05}, {'value': ['read', 'ascii'], 'probability': 1.9726290702237748e-05}, {'value': ['set', 'to'], 'probability': 1.688549127720762e-05}]","[0.3029888, 0.016056206, 0.32547766, 0.19010513, 0.37522304, -0.07154343, 0.27329707, 0.45565468, 0.26612788, 0.32537752]",0.30145136632606634
1752,1752,"public static final Mat22 createRotationalTransform(float angle) {Mat22 mat = new Mat22();final float c = MathUtils.cos(angle);final float s = MathUtils.sin(angle);mat.ex.x = c;mat.ey.x = -s;mat.ex.y = s;mat.ey.y = c;return mat;}
","public static final [MASK] createRotationalTransform(float angle) {[MASK] mat = new [MASK]();final float c = MathUtils.cos(angle);final float s = MathUtils.sin(angle);mat.ex.x = c;mat.ey.x = -s;mat.ex.y = s;mat.ey.y = c;return mat;}
",Mat22,"[{'value': ['float'], 'probability': 0.7086195945739746}, {'value': ['double'], 'probability': 0.1041124165058136}, {'value': ['Point'], 'probability': 0.058544695377349854}, {'value': ['void'], 'probability': 0.013923883438110352}, {'value': ['Method'], 'probability': 0.00872793048620224}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['set', 'angle'], 'probability': 0.8707566261291504}, {'value': ['rotate', 'x'], 'probability': 0.045416831970214844}, {'value': ['set', 'rotation'], 'probability': 0.016657961532473564}, {'value': ['rotate'], 'probability': 0.015811922028660774}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.013771307654678822}, {'value': ['shear', 'y'], 'probability': 0.011770879849791527}, {'value': ['rot', 'z'], 'probability': 0.006998580880463123}, {'value': ['rot'], 'probability': 0.0068059819750487804}, {'value': ['rotate', 'z'], 'probability': 0.006394774653017521}, {'value': ['set'], 'probability': 0.00561513053253293}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1753,1753,"public static final void createRotationalTransform(float angle, Mat22 out) {final float c = MathUtils.cos(angle);final float s = MathUtils.sin(angle);out.ex.x = c;out.ey.x = -s;out.ex.y = s;out.ey.y = c;}
","public static final [MASK] createRotationalTransform(float angle, Mat22 out) {final float c = MathUtils.cos(angle);final float s = MathUtils.sin(angle);out.ex.x = c;out.ey.x = -s;out.ex.y = s;out.ey.y = c;}
",void,"[{'value': ['float'], 'probability': 0.7657284736633301}, {'value': ['double'], 'probability': 0.11132101714611053}, {'value': ['void'], 'probability': 0.028694437816739082}, {'value': ['Point'], 'probability': 0.009042409248650074}, {'value': ['long'], 'probability': 0.008016022853553295}]","[0.22919214, 0.14729977, 1.0, 0.0, 0.23130237]",0.2224450684932256,"[{'value': ['set', 'angle'], 'probability': 0.41889140009880066}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.41677549481391907}, {'value': ['rotate', 'x'], 'probability': 0.036264944821596146}, {'value': ['set', 'rotation'], 'probability': 0.02976107969880104}, {'value': ['rot'], 'probability': 0.02650524117052555}, {'value': ['rotate'], 'probability': 0.02153806947171688}, {'value': ['set'], 'probability': 0.016853945329785347}, {'value': ['assert', 'equals'], 'probability': 0.015119899064302444}, {'value': ['shear', 'y'], 'probability': 0.012156064622104168}, {'value': ['rotate', 'ccw'], 'probability': 0.006133755668997765}]","[0.34639266, 0.3029888, 0.21013533, 0.36404485, 0.13418846, 0.16707228, 0.29215682, 0.32385373, 0.21599136, 0.06341874]",0.3098244699519425
1754,1754,"public static final Mat22 createScaleTransform(float scale) {Mat22 mat = new Mat22();mat.ex.x = scale;mat.ey.y = scale;return mat;}
","public static final [MASK] createScaleTransform(float scale) {[MASK] mat = new [MASK]();mat.ex.x = scale;mat.ey.y = scale;return mat;}
",Mat22,"[{'value': ['float'], 'probability': 0.3839125335216522}, {'value': ['String'], 'probability': 0.09890003502368927}, {'value': ['double'], 'probability': 0.07989578694105148}, {'value': ['void'], 'probability': 0.05890477076172829}, {'value': ['scale'], 'probability': 0.025856563821434975}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['scale'], 'probability': 0.6890949606895447}, {'value': ['set'], 'probability': 0.07578378170728683}, {'value': ['set', 'scale'], 'probability': 0.0757056251168251}, {'value': ['set', 'camera'], 'probability': 0.059302009642124176}, {'value': ['invert', 'local'], 'probability': 0.022077780216932297}, {'value': ['set', 'to'], 'probability': 0.02172090858221054}, {'value': ['mul'], 'probability': 0.018309129402041435}, {'value': ['create', 'scale'], 'probability': 0.017049426212906837}, {'value': ['get', 'transform'], 'probability': 0.011269873939454556}, {'value': ['set', 'scale', 'y'], 'probability': 0.009686456993222237}]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",0.0
1755,1755,"public static final void createScaleTransform(float scale, Mat22 out) {out.ex.x = scale;out.ey.y = scale;}
","public static final [MASK] createScaleTransform(float scale, Mat22 out) {out.ex.x = scale;out.ey.y = scale;}
",void,"[{'value': ['void'], 'probability': 0.31710150837898254}, {'value': ['float'], 'probability': 0.1431593894958496}, {'value': ['String'], 'probability': 0.10338383167982101}, {'value': ['double'], 'probability': 0.042597342282533646}, {'value': ['##ized'], 'probability': 0.014558901078999043}]","[1.0, 0.22919214, 0.0, 0.14729977, 0.0]",0.356187093465433,"[{'value': ['set'], 'probability': 0.2672744691371918}, {'value': ['set', 'camera'], 'probability': 0.24961520731449127}, {'value': ['set', 'scale'], 'probability': 0.23884230852127075}, {'value': ['scale'], 'probability': 0.08277661353349686}, {'value': ['move'], 'probability': 0.040370117872953415}, {'value': ['mul', 'trans', 'to', 'out'], 'probability': 0.030586978420615196}, {'value': ['multiply', 'local'], 'probability': 0.028509438037872314}, {'value': ['mul'], 'probability': 0.023387882858514786}, {'value': ['move', 'region'], 'probability': 0.02048642188310623}, {'value': ['set', 'to'], 'probability': 0.018150515854358673}]","[0.29215682, 0.23642178, 0.25410694, 0.15490808, 0.36999685, 0.3029888, 0.15314218, -0.07154343, 0.22981434, 0.32537752]",0.2481257048563306
1756,1756,"public int hashCode() {final int prime = 31;int result = 1;result = prime * result + ((ex == null) ? 0 : ex.hashCode());result = prime * result + ((ey == null) ? 0 : ey.hashCode());return result;}
","public int [MASK]() {final int prime = 31;int result = 1;result = prime * result + ((ex == null) ? 0 : ex.[MASK]());result = prime * result + ((ey == null) ? 0 : ey.[MASK]());return result;}
",hashCode,"[{'value': ['prime'], 'probability': 0.16971291601657867}, {'value': ['size'], 'probability': 0.0531051866710186}, {'value': ['result'], 'probability': 0.046314965933561325}, {'value': ['trim'], 'probability': 0.04327962175011635}, {'value': ['start'], 'probability': 0.0400652177631855}]","[0.100079164, 0.17934217, 0.10517674, 0.19691461, 0.08084206]",0.0431413278533068,"[{'value': ['hash', 'code'], 'probability': 0.9996165037155151}, {'value': ['compute', 'hash', 'code'], 'probability': 0.0002714454894885421}, {'value': ['build', 'hash', 'code'], 'probability': 4.202135460218415e-05}, {'value': ['get', 'hash', 'code'], 'probability': 1.678485750744585e-05}, {'value': ['calculate', 'hash', 'code'], 'probability': 1.3113114619045518e-05}, {'value': ['internal', 'hash', 'code'], 'probability': 1.1026028005289845e-05}, {'value': ['compute', 'hash'], 'probability': 9.48273009271361e-06}, {'value': ['calc', 'hash', 'code'], 'probability': 8.566809810872655e-06}, {'value': ['size'], 'probability': 5.914343546464806e-06}, {'value': ['as', 'byte', 'array'], 'probability': 5.195592166273855e-06}]","[0.75676125, 0.72207135, 0.5894193, 0.6153521, 0.72110593, 0.6279878, 0.84505117, 0.70661014, 0.17934217, 0.25267398]",0.7567349551029381
1757,1757,"public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;Mat22 other = (Mat22) obj;if (ex == null) {if (other.ex != null)return false;} else if (!ex.equals(other.ex))return false;if (ey == null) {if (other.ey != null)return false;} else if (!ey.equals(other.ey))return false;return true;}public void setColor(Color tint) {color = tint.toFloatBits();}
","public boolean [MASK](Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;Mat22 other = (Mat22) obj;if (ex == null) {if (other.ex != null)return false;} else if (!ex.[MASK](other.ex))return false;if (ey == null) {if (other.ey != null)return false;} else if (!ey.[MASK](other.ey))return false;return true;}public void setColor(Color tint) {color = tint.toFloatBits();}
",equals,"[{'value': ['equals'], 'probability': 0.9528993964195251}, {'value': ['matches'], 'probability': 0.009012160822749138}, {'value': ['accepts'], 'probability': 0.004731584805995226}, {'value': ['accept'], 'probability': 0.0038520374801009893}, {'value': ['is'], 'probability': 0.0037407218478620052}]","[1.0, 0.21920882, 0.1823474, 0.21464747, 0.3373858]",0.9578266303235956,"[{'value': ['equals'], 'probability': 0.9999772310256958}, {'value': ['deep', 'equals'], 'probability': 1.9637645891634747e-05}, {'value': ['is', 'identical'], 'probability': 1.0723861123551615e-06}, {'value': ['equal'], 'probability': 8.063574341576896e-07}, {'value': ['are', 'equal'], 'probability': 4.395962776015949e-07}, {'value': ['is', 'same'], 'probability': 2.9198929496487835e-07}, {'value': ['eql'], 'probability': 1.637252466935024e-07}, {'value': ['content', 'equals'], 'probability': 1.4567136474852305e-07}, {'value': ['set', 'property'], 'probability': 1.1370882191386045e-07}, {'value': ['equals', 'ignore', 'case'], 'probability': 1.0938951788830309e-07}]","[1.0, 0.67461926, 0.31409773, 0.6404468, 0.4776952, 0.33838725, 0.0, 0.68361425, 0.22461168, 0.5611027]",0.9999918275235077
1758,1758,"public void setColor(float r, float g, float b, float a) {int intBits = (int) (255 * a) << 24 | (int) (255 * b) << 16 | (int) (255 * g) << 8 | (int) (255 * r);color = NumberUtils.intToFloatColor(intBits);}
","public void [MASK](float r, float g, float b, float a) {int intBits = (int) (255 * a) << 24 | (int) (255 * b) << 16 | (int) (255 * g) << 8 | (int) (255 * r);color = NumberUtils.intToFloatColor(intBits);}
",setColor,"[{'value': ['paint'], 'probability': 0.900637686252594}, {'value': ['color'], 'probability': 0.04179055616259575}, {'value': ['fill'], 'probability': 0.006243653129786253}, {'value': ['float'], 'probability': 0.003782949410378933}, {'value': ['draw'], 'probability': 0.0034961814526468515}]","[0.3280287, 0.36214757, 0.48556754, 0.37543058, 0.6315808]",0.317229436952574,"[{'value': ['set', 'color'], 'probability': 0.9999967813491821}, {'value': ['get', 'color'], 'probability': 2.343840606044978e-06}, {'value': ['set', 'parameter'], 'probability': 2.639716569774464e-07}, {'value': ['color'], 'probability': 1.8970781923144386e-07}, {'value': ['set', 'text', 'color'], 'probability': 1.238683751125791e-07}, {'value': ['set', 'label', 'color'], 'probability': 6.96069477612582e-08}, {'value': ['put'], 'probability': 5.751795484343347e-08}, {'value': ['get', 'int'], 'probability': 5.438268857460571e-08}, {'value': ['get', 'byte'], 'probability': 4.853605162224994e-08}, {'value': ['add', 'parameter'], 'probability': 4.4551676126047823e-08}]","[0.80587685, 0.6114065, 0.7397232, 0.36214757, 0.7492868, 0.74437463, 0.7944568, 0.46852243, 0.5367033, 0.4712502]",0.8058762160174533
1759,1759,"public void setColor(float color) {this.color = color;}
","public void [MASK](float color) {this.color = color;}
",setColor,"[{'value': ['paint'], 'probability': 0.4558369219303131}, {'value': ['set'], 'probability': 0.08362750709056854}, {'value': ['float'], 'probability': 0.03727142512798309}, {'value': ['fill'], 'probability': 0.02566089853644371}, {'value': ['cast'], 'probability': 0.025564342737197876}]","[0.3280287, 1.0, 0.37543058, 0.48556754, 0.512155]",0.2727009421052423,"[{'value': ['set', 'color'], 'probability': 0.9964770674705505}, {'value': ['init', 'color'], 'probability': 0.003154266159981489}, {'value': ['color'], 'probability': 0.0001740382722346112}, {'value': ['update', 'color'], 'probability': 7.070636638673022e-05}, {'value': ['set', 'background'], 'probability': 4.3775067751994357e-05}, {'value': ['set', 'sky', 'color'], 'probability': 2.254233004350681e-05}, {'value': ['set', 'gray'], 'probability': 2.1600530089926906e-05}, {'value': ['set', 'value'], 'probability': 2.0356636014184915e-05}, {'value': ['set', 'stroke', 'color'], 'probability': 7.918702976894565e-06}, {'value': ['set', 'colors'], 'probability': 7.65506956668105e-06}]","[0.80587685, 0.18827227, 0.36214757, 0.4736661, 0.849517, 0.73336285, 0.82611066, 0.8399167, 0.7652809, 0.7984208]",0.8038290135039763
1760,1760,"public Color getColor() {int intBits = NumberUtils.floatToIntColor(color);Color color = this.tempColor;color.r = (intBits & 0xff) / 255f;color.g = ((intBits >>> 8) & 0xff) / 255f;color.b = ((intBits >>> 16) & 0xff) / 255f;color.a = ((intBits >>> 24) & 0xff) / 255f;return color;}
","public Color [MASK]() {int intBits = NumberUtils.floatToIntColor(color);Color color = this.tempColor;color.r = (intBits & 0xff) / 255f;color.g = ((intBits >>> 8) & 0xff) / 255f;color.b = ((intBits >>> 16) & 0xff) / 255f;color.a = ((intBits >>> 24) & 0xff) / 255f;return color;}
",getColor,"[{'value': ['color'], 'probability': 0.07604801654815674}, {'value': ['get'], 'probability': 0.06528253853321075}, {'value': ['paint'], 'probability': 0.04455726221203804}, {'value': ['transform'], 'probability': 0.04420457035303116}, {'value': ['expand'], 'probability': 0.03793886676430702}]","[0.3648547, 1.0, 0.41529104, 0.33052462, 0.47652406]",0.1442227277107545,"[{'value': ['get', 'color'], 'probability': 0.9975848197937012}, {'value': ['set', 'color'], 'probability': 0.0005738481413573027}, {'value': ['get', 'selected', 'color'], 'probability': 0.0004726571496576071}, {'value': ['get', 'random', 'color'], 'probability': 0.0003540680045261979}, {'value': ['color'], 'probability': 0.0003303897974546999}, {'value': ['get', 'background', 'color'], 'probability': 0.0002983602462336421}, {'value': ['get', 'foreground', 'color'], 'probability': 0.00017110999033320695}, {'value': ['get', 'foreground'], 'probability': 0.00010408686648588628}, {'value': ['get', 'text', 'color'], 'probability': 6.747273437213153e-05}, {'value': ['get', 'outline', 'paint'], 'probability': 4.321455708122812e-05}]","[0.82306665, 0.60621387, 0.78717196, 0.753865, 0.3648547, 0.74083126, 0.6899964, 0.8121255, 0.73159015, 0.7718583]",0.8226925459979869
1761,1761,"public void beginCache() {if (currentCache != null)throw new IllegalStateException(""endCache must be called before begin."");int verticesPerImage = mesh.getNumIndices() > 0 ? 4 : 6;currentCache = new Cache(caches.size, mesh.getVerticesBuffer().limit());caches.add(currentCache);mesh.getVerticesBuffer().compact();}
","public void [MASK]() {if (currentCache != null)throw new IllegalStateException(""endCache must be called before begin."");int verticesPerImage = mesh.getNumIndices() > 0 ? 4 : 6;currentCache = new Cache(caches.size, mesh.getVerticesBuffer().limit());caches.add(currentCache);mesh.getVerticesBuffer().compact();}
",beginCache,"[{'value': ['close'], 'probability': 0.149131178855896}, {'value': ['clear'], 'probability': 0.13167761266231537}, {'value': ['flush'], 'probability': 0.08644741773605347}, {'value': ['start'], 'probability': 0.058250702917575836}, {'value': ['run'], 'probability': 0.04837067052721977}]","[0.50823593, 0.5213623, 0.16839841, 0.825834, 0.51075274]",0.2318140369003194,"[{'value': ['statement', 'executing'], 'probability': 0.17054179310798645}, {'value': ['lookup'], 'probability': 0.15607167780399323}, {'value': ['format', 'title'], 'probability': 0.14152291417121887}, {'value': ['update', 'later'], 'probability': 0.09221366792917252}, {'value': ['run', 'activity'], 'probability': 0.08197704702615738}, {'value': ['on', 'load'], 'probability': 0.07875269651412964}, {'value': ['handle', 'about'], 'probability': 0.07268299907445908}, {'value': ['add', 'gap'], 'probability': 0.07134778052568436}, {'value': ['execute'], 'probability': 0.06946396082639694}, {'value': ['start', 'scroll'], 'probability': 0.06542546302080154}]","[0.49577793, -0.10108219, 0.3960772, 0.5839627, 0.6098943, 0.57485354, 0.6151288, 0.5170079, 0.36831948, 0.62185764]",0.4218137584862018
1762,1762,"public void beginCache(int cacheID) {if (currentCache != null)throw new IllegalStateException(""endCache must be called before begin."");if (cacheID == caches.size - 1) {Cache oldCache = caches.removeIndex(cacheID);mesh.getVerticesBuffer().limit(oldCache.offset);beginCache();return;}currentCache = caches.get(cacheID);mesh.getVerticesBuffer().position(currentCache.offset);}
","public void [MASK](int cacheID) {if (currentCache != null)throw new IllegalStateException(""endCache must be called before begin."");if (cacheID == caches.size - 1) {Cache oldCache = caches.removeIndex(cacheID);mesh.getVerticesBuffer().limit(oldCache.offset);[MASK]();return;}currentCache = caches.get(cacheID);mesh.getVerticesBuffer().position(currentCache.offset);}
",beginCache,"[{'value': ['close'], 'probability': 0.12321089953184128}, {'value': ['execute'], 'probability': 0.09969580918550491}, {'value': ['start'], 'probability': 0.07772184908390045}, {'value': ['write'], 'probability': 0.0581727959215641}, {'value': ['save'], 'probability': 0.03962506353855133}]","[0.50823593, 0.36831948, 0.825834, 0.46936047, 0.41289955]",0.2071906406449637,"[{'value': ['set', 'metadata'], 'probability': 0.3952493965625763}, {'value': ['on', 'load'], 'probability': 0.22031401097774506}, {'value': ['update'], 'probability': 0.12915624678134918}, {'value': ['inject', 'dependencies'], 'probability': 0.06884117424488068}, {'value': ['do', 'with'], 'probability': 0.05815829709172249}, {'value': ['set', 'selected'], 'probability': 0.04157674312591553}, {'value': ['log', 'fine'], 'probability': 0.024762148037552834}, {'value': ['restore'], 'probability': 0.0226424690335989}, {'value': ['on', 'update'], 'probability': 0.02017592079937458}, {'value': ['property', 'change'], 'probability': 0.01912357658147812}]","[0.39284474, 0.57485354, 0.42249745, 0.14369124, 0.63921815, 0.6223122, 0.3788055, 0.40614936, 0.6280114, 0.5173816]",0.45057070480678335
1763,1763,"public void clear() {caches.clear();mesh.getVerticesBuffer().clear().flip();}
","public void [MASK]() {caches.[MASK]();mesh.getVerticesBuffer().[MASK]().flip();}
",clear,"[{'value': ['flip'], 'probability': 0.2615058720111847}, {'value': ['close'], 'probability': 0.1117376908659935}, {'value': ['run'], 'probability': 0.08738823980093002}, {'value': ['start'], 'probability': 0.06289958208799362}, {'value': ['clear'], 'probability': 0.034839093685150146}]","[0.2764631, 0.6670826, 0.5174217, 0.59196377, 1.0]",0.2641249328552191,"[{'value': ['clear'], 'probability': 0.8250038623809814}, {'value': ['reset'], 'probability': 0.0807175263762474}, {'value': ['clear', 'cache'], 'probability': 0.029326938092708588}, {'value': ['refresh'], 'probability': 0.016103647649288177}, {'value': ['dispose'], 'probability': 0.014592955820262432}, {'value': ['remove', 'all'], 'probability': 0.010953597724437714}, {'value': ['flush'], 'probability': 0.006950369570404291}, {'value': ['destroy'], 'probability': 0.006693539675325155}, {'value': ['flush', 'all'], 'probability': 0.006467401050031185}, {'value': ['invalidate', 'cache'], 'probability': 0.0031901844777166843}]","[1.0, 0.10589813, 0.7424508, 0.017778037, 0.20622805, 0.71209234, 0.2904938, 0.42411005, 0.6332971, 0.24392806]",0.8761530457867437
1764,1764,"public void add(TextureRegion region, float x, float y) {add(region, x, y, region.getRegionWidth(), region.getRegionHeight());}
","public void [MASK](TextureRegion region, float x, float y) {[MASK](region, x, y, region.getRegionWidth(), region.getRegionHeight());}
",add,"[{'value': ['paint'], 'probability': 0.09122727811336517}, {'value': ['update'], 'probability': 0.05445050448179245}, {'value': ['evaluate'], 'probability': 0.05416069179773331}, {'value': ['draw'], 'probability': 0.04667995125055313}, {'value': ['visit'], 'probability': 0.04310418292880058}]","[0.4643906, 0.5117927, 0.33404627, 0.44779792, 0.25063396]",0.1200311971331316,"[{'value': ['add'], 'probability': 0.9787443280220032}, {'value': ['translate'], 'probability': 0.010471922345459461}, {'value': ['insert'], 'probability': 0.0034569937270134687}, {'value': ['add', 'button'], 'probability': 0.0017976119415834546}, {'value': ['add', 'node'], 'probability': 0.0015403719153255224}, {'value': ['vertex'], 'probability': 0.0011935958173125982}, {'value': ['add', 'string'], 'probability': 0.0008461271063424647}, {'value': ['set'], 'probability': 0.0007256604731082916}, {'value': ['line'], 'probability': 0.0006252577877603471}, {'value': ['push'], 'probability': 0.0005982290604151785}]","[1.0, 0.40724388, 0.4981244, 0.82542634, 0.7639855, 0.14606886, 0.8257271, 0.5084879, 0.3699922, 0.50270826]",0.9891656673153708
1765,1765,"public void end() {if (!drawing)throw new IllegalStateException(""begin must be called before end."");drawing = false;shader.end();GL20 gl = Gdx.gl20;gl.glDepthMask(true);if (customShader != null)mesh.unbind(customShader);elsemesh.unbind(shader);}
","public void [MASK]() {if (!drawing)throw new IllegalStateException(""begin must be called before [MASK]."");drawing = false;shader.[MASK]();GL20 gl = Gdx.gl20;gl.glDepthMask(true);if (customShader != null)mesh.unbind(customShader);elsemesh.unbind(shader);}
",end,"[{'value': ['draw'], 'probability': 0.7645843625068665}, {'value': ['paint'], 'probability': 0.08813141286373138}, {'value': ['flush'], 'probability': 0.011418758891522884}, {'value': ['fill'], 'probability': 0.01132411789149046}, {'value': ['start'], 'probability': 0.007625133264809847}]","[0.5273739, 0.26669464, 0.3185762, 0.4706933, 0.82135457]",0.4419568887560388,"[{'value': ['end'], 'probability': 0.9475392699241638}, {'value': ['release'], 'probability': 0.014347231015563011}, {'value': ['stop'], 'probability': 0.0120635274797678}, {'value': ['dispose'], 'probability': 0.008009965531527996}, {'value': ['unbind'], 'probability': 0.007107659243047237}, {'value': ['kill'], 'probability': 0.004533414728939533}, {'value': ['begin'], 'probability': 0.0016849791863933206}, {'value': ['resume'], 'probability': 0.0015969243831932545}, {'value': ['remove', 'all'], 'probability': 0.0015690537402406335}, {'value': ['pause'], 'probability': 0.0015480341389775276}]","[1.0, 0.5607009, 0.69646525, 0.16161, 0.0, 0.40725294, 0.71073085, 0.61560965, 0.69052064, 0.44104823]",0.971073210415199
1766,1766,"public void dispose() {mesh.dispose();if (shader != null)shader.dispose();}
","public void [MASK]() {mesh.[MASK]();if (shader != null)shader.[MASK]();}
",dispose,"[{'value': ['run'], 'probability': 0.18551120162010193}, {'value': ['clear'], 'probability': 0.1085599884390831}, {'value': ['paint'], 'probability': 0.0718989148736}, {'value': ['green'], 'probability': 0.022165536880493164}, {'value': ['apply'], 'probability': 0.018673960119485855}]","[0.13288948, 0.20622805, 0.259296, -0.04422033, 0.22930512]",0.0689855698178082,"[{'value': ['dispose'], 'probability': 0.9904014468193054}, {'value': ['close'], 'probability': 0.0033161479514092207}, {'value': ['destroy'], 'probability': 0.0015514041297137737}, {'value': ['do', 'dispose'], 'probability': 0.0012677075574174523}, {'value': ['stop'], 'probability': 0.0010851792758330703}, {'value': ['close', 'window'], 'probability': 0.000522224756423384}, {'value': ['dispose', 'internal'], 'probability': 0.0005202284664846957}, {'value': ['tear', 'down'], 'probability': 0.0005132270161993802}, {'value': ['disconnect'], 'probability': 0.0004214087675791234}, {'value': ['dispose', 'color'], 'probability': 0.0004009760159533471}]","[0.99999994, 0.17637412, 0.5099461, 0.72280186, 0.22849083, 0.107879795, 0.6983693, 0.28730714, 0.1299079, 0.5827117]",0.993797158071075
1767,1767,"public Matrix4 getProjectionMatrix() {return projectionMatrix;}
","public Matrix4 [MASK]() {return projectionMatrix;}
",getProjectionMatrix,"[{'value': ['##2'], 'probability': 0.17844359576702118}, {'value': ['##4'], 'probability': 0.10333680361509323}, {'value': ['##3'], 'probability': 0.08154424279928207}, {'value': ['##1'], 'probability': 0.03711283951997757}, {'value': ['##D'], 'probability': 0.030485186725854874}]","[0.0, 0.0, 0.0, 0.0, 0.0]",0.0,"[{'value': ['get', 'projection', 'matrix'], 'probability': 0.9999997615814209}, {'value': ['set', 'projection', 'matrix'], 'probability': 1.9793864680650586e-07}, {'value': ['get', 'image', 'matrix'], 'probability': 8.678126661720853e-09}, {'value': ['get', 'matrix'], 'probability': 7.539471269524256e-09}, {'value': ['get', 'translation'], 'probability': 4.761365079986035e-09}, {'value': ['get', 'u'], 'probability': 3.487677480151774e-09}, {'value': ['load', 'matrix'], 'probability': 2.3086861311583107e-09}, {'value': ['get', 'inverse', 'matrix'], 'probability': 1.7240641136950785e-09}, {'value': ['get', 'size'], 'probability': 1.620946599167894e-09}, {'value': ['get', 'transform'], 'probability': 1.091517765061667e-09}]","[0.5902986, 0.38085112, 0.70646435, 0.73254496, 0.8056732, 0.80781287, 0.3488567, 0.51237065, 0.83762157, 0.8550423]",0.5902985569340798
1768,1768,"public void setProjectionMatrix(Matrix4 projection) {if (drawing)throw new IllegalStateException(""Can't set the matrix within begin/end."");projectionMatrix.set(projection);}
","public void [MASK](Matrix4 projection) {if (drawing)throw new IllegalStateException(""Can't set the matrix within begin/end."");projectionMatrix.set(projection);}
",setProjectionMatrix,"[{'value': ['set'], 'probability': 0.329746812582016}, {'value': ['draw'], 'probability': 0.20390655100345612}, {'value': ['paint'], 'probability': 0.16775231063365936}, {'value': ['fill'], 'probability': 0.08724746853113174}, {'value': ['put'], 'probability': 0.02361929789185524}]","[1.0, 0.6315808, 0.3280287, 0.48556754, 0.7944568]",0.574686905075612,"[{'value': ['set', 'projection', 'matrix'], 'probability': 0.9989797472953796}, {'value': ['get', 'projection', 'matrix'], 'probability': 0.0009762334520928562}, {'value': ['set', 'projection'], 'probability': 3.247551285312511e-05}, {'value': ['load'], 'probability': 3.169163392158225e-06}, {'value': ['add', 'term'], 'probability': 2.7554815460462123e-06}, {'value': ['init'], 'probability': 1.5033905356176547e-06}, {'value': ['on', 'bounds', 'change'], 'probability': 1.2482661304602516e-06}, {'value': ['update'], 'probability': 1.019638148136437e-06}, {'value': ['set', 'bounds'], 'probability': 9.558000328979688e-07}, {'value': ['initialize'], 'probability': 9.077137974600191e-07}]","[0.67465353, 0.57497877, 0.80272853, 0.3492521, 0.60866153, -0.2256778, 0.7198471, 0.41854778, 0.83062565, -0.15549803]",0.6745570182446152
1769,1769,"public Matrix4 getTransformMatrix() {return transformMatrix;}
","public Matrix4 [MASK]() {return transformMatrix;}
",getTransformMatrix,"[{'value': ['transform'], 'probability': 0.13739238679409027}, {'value': ['##4'], 'probability': 0.06265262514352798}, {'value': ['##2'], 'probability': 0.05784901604056358}, {'value': ['##x'], 'probability': 0.02494971826672554}, {'value': ['##1'], 'probability': 0.02130703069269657}]","[0.33052462, 0.0, 0.0, 0.0, 0.0]",0.0454115669023211,"[{'value': ['get', 'transform', 'matrix'], 'probability': 0.9999617338180542}, {'value': ['get', 'transform'], 'probability': 3.3993375836871564e-05}, {'value': ['get', 'matrix'], 'probability': 8.988807280729816e-07}, {'value': ['last', 'updated'], 'probability': 7.89776549936505e-07}, {'value': ['sqr'], 'probability': 6.550938564942044e-07}, {'value': ['get', 'min', 'point'], 'probability': 5.551952426685602e-07}, {'value': ['get', 'update', 'statement'], 'probability': 5.140556709193334e-07}, {'value': ['get', 'scaling'], 'probability': 3.0679834139846207e-07}, {'value': ['get', 'derivative'], 'probability': 2.781502530524449e-07}, {'value': ['get', 'latency'], 'probability': 2.7319939022163453e-07}]","[0.6747574, 0.8550423, 0.73254496, 0.5653039, 0.0, 0.75799686, 0.7611609, 0.82488775, 0.775778, 0.7118268]",0.6747632257621494
1770,1770,"public void setTransformMatrix(Matrix4 transform) {if (drawing)throw new IllegalStateException(""Can't set the matrix within begin/end."");transformMatrix.set(transform);}
","public void [MASK](Matrix4 transform) {if (drawing)throw new IllegalStateException(""Can't set the matrix within begin/end."");transformMatrix.set(transform);}
",setTransformMatrix,"[{'value': ['set'], 'probability': 0.3251326382160187}, {'value': ['paint'], 'probability': 0.21316924691200256}, {'value': ['draw'], 'probability': 0.13369210064411163}, {'value': ['transform'], 'probability': 0.04540085420012474}, {'value': ['apply'], 'probability': 0.028025204315781593}]","[1.0, 0.3280287, 0.6315808, 0.40315592, 0.5010617]",0.5118416180267422,"[{'value': ['get', 'transform', 'matrix'], 'probability': 0.7046608328819275}, {'value': ['transform'], 'probability': 0.20569516718387604}, {'value': ['set', 'transform'], 'probability': 0.08007680624723434}, {'value': ['update'], 'probability': 0.0037763880100101233}, {'value': ['debug'], 'probability': 0.0018181900959461927}, {'value': ['set', 'translation'], 'probability': 0.0011184698669239879}, {'value': ['add', 'transform'], 'probability': 0.0009766359580680728}, {'value': ['write'], 'probability': 0.0007782664033584297}, {'value': ['set', 'scale'], 'probability': 0.0005613105022348464}, {'value': ['save'], 'probability': 0.0005378364003263414}]","[0.5933911, 0.40315592, 0.85847646, 0.41854778, -0.00078043964, 0.81722164, 0.56202745, 0.46259418, 0.8679152, 0.5413879]",0.5739912276427466
1771,1771,public void setShader(ShaderProgram shader) {customShader = shader;},public void [MASK](ShaderProgram shader) {customShader = shader;},setShader,"[{'value': ['paint'], 'probability': 0.5651611685752869}, {'value': ['render'], 'probability': 0.0638604685664177}, {'value': ['apply'], 'probability': 0.034189771860837936}, {'value': ['set'], 'probability': 0.02522195875644684}, {'value': ['fill'], 'probability': 0.023232100531458855}]","[0.3280287, 0.23491256, 0.5010617, 1.0, 0.48556754]",0.2540246115635171,"[{'value': ['set', 'shader'], 'probability': 0.9999862909317017}, {'value': ['create', 'shader'], 'probability': 1.0533606655371841e-05}, {'value': ['visit', 'break', 'statement'], 'probability': 1.7877566733659478e-06}, {'value': ['set', 'repeat'], 'probability': 2.6886630166700343e-07}, {'value': ['set', 'protocol', 'version'], 'probability': 2.3600672705015313e-07}, {'value': ['begin', 'tx'], 'probability': 2.2886820261192042e-07}, {'value': ['set', 'shader', 'program'], 'probability': 2.145769428807398e-07}, {'value': ['from', 'version', 'string'], 'probability': 1.1633149199496984e-07}, {'value': ['set', 'shaders'], 'probability': 1.1151550438626145e-07}, {'value': ['set', 'mac', 'address'], 'probability': 1.0517013748767567e-07}]","[0.70121807, 0.43371588, 0.7076048, 0.8907019, 0.78115577, 0.37496462, 0.7537759, 0.70339775, 0.65949047, 0.763447]",0.7012151976319669
